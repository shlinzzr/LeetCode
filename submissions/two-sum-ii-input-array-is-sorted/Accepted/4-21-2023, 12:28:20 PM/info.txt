{"id":937235587,"question_id":167,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682051300,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/937235587/","is_pending":"Not Pending","title":"Two Sum II - Input Array Is Sorted","memory":"45.7 MB","code":"class Solution {\n    public int[] twoSum(int[] numbers, int target) {\n        int len = numbers.length;\n        for(int i=0; i<len; i++){\n            \n            int n = numbers[i];\n            \n            int st =i+1, ed=len-1;\n            \n            while(st<=ed){\n                \n                int mid = st+(ed-st)/2;\n                if(numbers[mid]==target-n){\n                    return new int[]{i+1, mid+1};\n                }else if(numbers[mid]>target-n){\n                    ed = mid-1;\n                }else{\n                    st = mid+1;\n                }\n            }\n        }\n        return new int[2];\n    }\n}\n\n/*  hashMap\nclass Solution {   \n          HashMap<Integer, Integer> map = new HashMap<>();\n\n        for(int i=0; i<numbers.length; i++){\n            int comp = target - numbers[i];\n            if(map.containsKey(comp)){\n                return new int[]{map.get(comp)+1, i+1};\n            }else{\n                map.put(numbers[i], i);\n            }\n            \n        }\n        \n        return new int[2];\n    }\n}*/","compare_result":"11111111111111111111111","title_slug":"two-sum-ii-input-array-is-sorted","has_notes":false,"flag_type":1}