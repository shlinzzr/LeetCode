{"id":678862519,"question_id":167,"lang":"java","lang_name":"Java","time":"2 years, 2 months","timestamp":1649751349,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/678862519/","is_pending":"Not Pending","title":"Two Sum II - Input Array Is Sorted","memory":"49.8 MB","code":"class Solution {\n//     public int[] twoSum(int[] numbers, int target) {\n//         HashMap<Integer, Integer>map = new HashMap<>();\n        \n//         for(int i=0; i<numbers.length; i++){\n//             int comp = target - numbers[i];\n//             if(map.containsKey(comp))\n//                 return new int[]{ map.get(comp), i+1};\n//             else\n//                 map.put(numbers[i], i+1);\n//         }\n        \n//         return new int[2];\n//         // throws new Exception(\"fail\");\n//     }\n    \n    public int[] twoSum(int[] numbers, int target) {\n        \n        \n        int lo=0;\n        int hi = numbers.length-1;\n        \n        while(lo<hi){\n          \n            if(numbers[lo]+numbers[hi]==target)\n                return new int[]{lo+1, hi+1}; \n            \n            else if(numbers[lo]+numbers[hi]>target)\n                hi--;\n                \n            else\n                lo++;\n        }\n        \n        return new int[2];\n        // throws new Exception(\"fail\");\n    }\n}","compare_result":"111111111111111111111","title_slug":"two-sum-ii-input-array-is-sorted","has_notes":false,"flag_type":1}