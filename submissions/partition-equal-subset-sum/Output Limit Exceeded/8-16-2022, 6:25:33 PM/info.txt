{"id":775062430,"question_id":416,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660645533,"status":13,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/775062430/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n        \n        int sum=0;\n        for(int n:nums) \n            sum+=n;\n        \n        if(sum%2==1) \n            return false;\n        \n        sum/=2;\n        \n        boolean[] dp=new boolean [sum+1];\n        dp[0]=true;\n        for(int k:nums){\n            for(int j=sum;j>=k;j--){\n                \n                System.out.println(\"dp[\" +j + \"]=\" + \"dp[\"+ j + \"] || dp[\" + j + \"-\" + k + \"]\");\n                System.out.println((dp[j]||dp[j-k]) + \" = \" + dp[j] +\" || \"+ dp[j-k]);\n                \n                dp[j]=dp[j]||dp[j-k];\n            }\n        }\n        return dp[sum];\n    }\n}","compare_result":"1111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}