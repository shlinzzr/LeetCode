{"id":1271951981,"question_id":416,"lang":"java","lang_name":"Java","time":"2 weeks","timestamp":1717037596,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/1271951981/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"45.4 MB","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n\n        // ref 322. Coin Change\n        // ref 518. Coin Change II\n        // ref 416. Partition Equal Subset Sum\n        // ref 377. Combination Sum IV, \n\n        int sum = 0;\n        for(int n : nums){\n            sum += n;\n        }\n\n        if(sum%2!=0) return false;\n        int target = sum/2;\n\n        int len = nums.length;\n        boolean[][] dp = new boolean[target+1][len+1];\n        Arrays.fill(dp[0], true);\n\n        for(int i=1; i<=len; i++){\n            int c = nums[i-1];\n\n            for(int j=1; j<=target; j++){\n                dp[j][i] = dp[j][i-1];\n\n                if(j-c>=0 && dp[j-c][i-1]){\n                    dp[j][i] = true;\n                }\n            }\n        }\n\n        return dp[target][len];\n        \n    }\n\n/*  // backtrack 我們就不看了\n\n    private boolean helper(int[] nums, boolean[]seen, int left, int right, int target){\n        if(left==target && right==target) return true;\n\n        if(left>target|| right>target) return false;\n\n\n        int len = nums.length;\n        for(int i=0; i<len; i++){\n            if(seen[i]) continue;\n            for(int j=0; j<len; j++){\n\n                if(seen[j] || i==j) continue;\n\n                seen[i] = true;\n                seen[j] = true;\n                helper(nums, seen, left+nums[i], right)\n\n            }\n            \n\n        }\n    }   */\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}