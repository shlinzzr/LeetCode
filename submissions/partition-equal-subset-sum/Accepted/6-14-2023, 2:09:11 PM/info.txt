{"id":970870184,"question_id":416,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686722951,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/970870184/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"46.3 MB","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n        int len = nums.length;\n        \n        int sum =0;\n        \n        for(int n : nums){\n            sum+=n;\n        }\n        \n        if(sum%2==1)\n            return false;\n        \n        sum/=2;\n        \n        boolean[][] dp = new boolean[len+1][sum+1];\n        dp[0][0] = true;\n        \n        for(int i=1; i<=len; i++){\n            \n            for(int s=0; s<=sum; s++){\n                dp[i][s] = dp[i-1][s] || (s-nums[i-1]>=0 && dp[i-1][s-nums[i-1]]); \n            }\n        }\n        \n        return dp[len][sum];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}