{"id":888472096,"question_id":416,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675131979,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/888472096/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"41.8 MB","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n        \n        int sum=0;\n        for(int n:nums) \n            sum+=n;\n        \n        if(sum%2==1) \n            return false;\n        \n        sum/=2;\n        \n        boolean[] dp = new boolean[sum+1];\n        \n        Arrays.fill(dp, false);\n        dp[0] = true; // 組成sum=0的兩個subset為true; (兩個空集合)\n\n        for (int num : nums) {\n            for (int i = sum; i>=num; i--) {\n                dp[i] = dp[i] || dp[i-num];\n            }\n        }\n        \n        return dp[sum];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}