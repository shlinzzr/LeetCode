{"id":1077319492,"question_id":416,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1697525778,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1077319492/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n        int len = nums.length;\n\n        int sum = 0;\n        for(int n : nums){\n            sum+=n;\n        }\n\n        if(sum%2==1)\n            return false;\n        else\n            sum/=2;\n        \n        boolean[][] dp = new boolean[len+1][sum+1];\n        dp[0][0] = true; //組成0個num之sum=0 的result=true;\n\n        for(int i=1; i<=len; i++){\n            for(int j=0; j<=sum; j++){\n\n                dp[i][j] = dp[i-1][j];\n                if(j-nums[i-1]>=0 && dp[i][j-nums[i-1]]){\n                    dp[i][j] = dp[i][j-nums[i-1]];\n                }\n            }\n        }\n\n        return dp[len][sum];\n    }\n}","compare_result":"111111000001111111111011111100111110001111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111100110110110","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}