{"id":1029197412,"question_id":2084,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692763664,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1029197412/","is_pending":"Not Pending","title":"Maximum Number of Weeks for Which You Can Work","memory":"N/A","code":"class Solution {\n    public long numberOfWeeks(int[] m) {\n        \n        // follow 767 TLE:\n        \n        int len = m.length;\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>( (a,b)-> b[1]-a[1]); // idx, cnt\n        \n        int total=0;\n        int max = 0;\n        for(int i=0; i<len; i++){\n            \n            total+=m[i];\n            max = Math.max(max, m[i]);\n            \n            pq.offer(new int[]{i, m[i]});\n        }\n        \n        if(max>total/2){\n            int dis = max-total/2;\n            return total-dis;\n        }else{\n            return total;\n        }\n        \n        \n        \n//         long res=0;\n//         Integer prev = null;\n        \n//         while(!pq.isEmpty()){\n            \n//             int[] first = pq.poll();\n            \n//             if(prev==null || prev!=first[0]){\n                \n//                 res++;\n//                 prev = first[0];\n//                 if(--first[1]>0)\n//                     pq.offer(first);\n//             }else{\n               \n//                 if(pq.isEmpty())\n//                     break;\n                \n//                 int[] second = pq.poll();\n//                 res++;\n//                 prev = second[0];\n//                 if(--second[1]>0)\n//                     pq.offer(second);\n                \n//                 pq.offer(first);\n//             }\n//         }\n        \n//         return res;\n        \n    }\n}","compare_result":"11001111111111001001111111111100100111111111110010010000000100100000110010","title_slug":"maximum-number-of-weeks-for-which-you-can-work","has_notes":false,"flag_type":1}