{"id":1114775266,"question_id":2084,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702004293,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1114775266/","is_pending":"Not Pending","title":"Maximum Number of Weeks for Which You Can Work","memory":"N/A","code":"class Solution {\n    public long numberOfWeeks(int[] milestones) {\n\n        \n\n        PriorityQueue<Map.Entry<Integer, Integer>> pq = new PriorityQueue<>(\n            (a,b) -> (b.getValue()-a.getValue())\n        );\n\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for(int i=0; i<milestones.length; i++){\n            map.put(i, milestones[i]);\n        }        \n\n        pq.addAll(map.entrySet());\n\n        Queue<Map.Entry<Integer, Integer>> q = new LinkedList<>();\n\n        long res= 0 ;\n\n        while(!pq.isEmpty()){\n\n            Map.Entry<Integer, Integer> en = pq.poll();\n            en.setValue(en.getValue()-1);\n            q.offer(en);\n            res++;\n            if(q.size()<2)\n                continue;\n\n            Map.Entry<Integer, Integer> p = q.poll();\n            if(p.getValue()>0){\n                pq.offer(p);\n            }\n        }\n\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111110000000000000000000000","title_slug":"maximum-number-of-weeks-for-which-you-can-work","has_notes":false,"flag_type":1}