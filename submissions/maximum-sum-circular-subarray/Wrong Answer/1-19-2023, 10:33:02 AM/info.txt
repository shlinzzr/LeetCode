{"id":880917356,"question_id":954,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1674095582,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/880917356/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n        int len = nums.length;\n        \n        int max = Integer.MIN_VALUE;\n        \n        int sum=0;\n        int st=0;\n        for(int i=0; i<2*len; i++){\n            int idx = i%len;\n            \n            if(sum<0){\n                sum=0;\n                st=idx;\n            }\n            \n            sum+=nums[idx];\n            \n            \n          \n            \n            if((idx+1)%len==st){\n                sum-=nums[st];\n                st++;\n            }\n            \n              max = Math.max(max, sum);\n        }\n        \n        return max;\n    }\n}","compare_result":"111111111110111111111111111111111011111110111111111111111111111110111111111111110111111111111101100111110111111","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}