{"id":1252257106,"question_id":954,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715135009,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1252257106/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n\n        int len = nums.length;\n        int[] copy = new int[len+len];\n        System.arraycopy(nums, 0, copy, 0, len);\n        System.arraycopy(nums, 0, copy, len, len);\n\n        for(int n : copy){\n            System.out.print(n + \",\");\n        }\n\n        return maxSubArray(copy);\n        \n    }\n\n     public int maxSubArray(int[] nums) {\n        // kadane's algo\n        \n        int len = nums.length;\n        \n        int cur = 0;\n        int max = nums[0];\n        for(int n : nums){\n            if(cur<0) cur=0;\n            cur+=n;\n            max = Math.max(max, cur);\n        }\n        \n        return max;\n       \n        \n        \n        \n    }\n}","compare_result":"1010111000111100100010110000010010111011101011010011110101111110001110101000110101110010101101011000101101101110","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}