{"id":880916402,"question_id":954,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1674095435,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/880916402/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n        int len = nums.length;\n        \n        int max = Integer.MIN_VALUE;\n        \n        int sum=0;\n        int st=0;\n        for(int i=0; i<2*len; i++){\n            int idx = i%len;\n            \n            if(sum<0){\n                sum=0;\n                st=idx;\n            }\n            \n            sum+=nums[idx];\n            \n            \n            max = Math.max(max, sum);\n            \n            if(idx==st-1){\n                sum-=nums[st];\n                st++;\n            }\n            \n            \n        }\n        \n        return max;\n    }\n}","compare_result":"101011110011111010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}