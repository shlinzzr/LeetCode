{"id":1252252567,"question_id":954,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715134439,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1252252567/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n\n        int len = nums.length;\n\n        \n        int max = Integer.MIN_VALUE;\n        for(int i=0; i<len; i++){\n            int sum = 0;\n            for(int j=i; j<i+len; j++){\n                sum += nums[j%len];\n                max = Math.max(max, sum);\n                if(sum<0){\n                    sum=0;\n                    i=j;\n                    break;\n                }\n            }\n\n            // i==0, max = 5\n            // i==1, \n            // i==2, \n        }\n\n        return max;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}