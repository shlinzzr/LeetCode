{"id":880942838,"question_id":954,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1674099407,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/880942838/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"47.4 MB","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n        int len = nums.length;\n        \n        int total=0, curMax=0, curMin=0, maxSum=nums[0], minSum=nums[0];\n        \n        for(int i=0; i<len; i++){\n            curMax = Math.max(curMax+nums[i], nums[i]);\n            maxSum = Math.max(maxSum, curMax);\n            curMin = Math.min(curMin+nums[i], nums[i]);\n            minSum = Math.min(minSum, curMin);\n            total+=nums[i];\n        }\n        \n        \n        return maxSum>0? Math.max(maxSum, total-minSum) : maxSum;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}