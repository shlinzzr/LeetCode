{"id":1226291535,"question_id":255,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712541591,"status":10,"status_display":"Accepted","runtime":"509 ms","url":"/submissions/detail/1226291535/","is_pending":"Not Pending","title":"Verify Preorder Sequence in Binary Search Tree","memory":"256.6 MB","code":"class Solution {\n    public boolean verifyPreorder(int[] preorder) {\n\n        int len = preorder.length;\n\n        if(len==1 || len==0) return true;\n\n        int root = preorder[0];\n        int i= 1;\n        for(; i<len; i++){\n            if(preorder[i]>root){\n                break;\n            }\n        }\n\n        for(int j=i; j<len; j++){\n            if(preorder[j]<root)\n                return false;\n        }\n\n\n        boolean left = (i-1<1) ? true :  verifyPreorder(Arrays.copyOfRange(preorder, 1, i)) ;\n        boolean right = i+1>len ? true : verifyPreorder(Arrays.copyOfRange(preorder, i, len));\n        return left && right;\n\n        \n    }\n}\n\n//      int len = preorder.length;\n\n//         if(len<2) return true;\n\n//         int root = preorder[0];\n\n\n//         int i=1;\n//         while(i<len && preorder[i]<root){\n//             i++;\n//         }\n\n//         for(int j=i; j<len; j++){\n//             if(preorder[j]<root)\n//                 return false;\n//         }\n\n//         boolean left = (i-1<1) ? true : verifyPreorder(Arrays.copyOfRange(preorder, 1, i));  // [1, i)\n//         boolean right = i+1>len ? true :  verifyPreorder(Arrays.copyOfRange(preorder, i, len)); // [i, len-1)\n\n//         return left && right;\n// }","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"verify-preorder-sequence-in-binary-search-tree","has_notes":false,"flag_type":1}