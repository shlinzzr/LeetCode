{"id":1251343759,"question_id":1116,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715047326,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1251343759/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"46.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxLevelSum(TreeNode root) {\n        \n        List<Integer> list = new ArrayList<>();\n        \n        helper(root, list, 0);\n        int max = Integer.MIN_VALUE;\n        int res = 0;\n        for(int i=0; i<list.size(); i++){\n            if(list.get(i)>max){\n                max = list.get(i);\n                res= i;\n            }\n        }\n        \n        return res+1;\n        \n    }\n    \n    private void helper(TreeNode node, List<Integer> list, int lv){\n        \n        if(node==null) return; \n        \n        if(list.size()<lv+1){\n            list.add(node.val);\n        }else{\n            int val = list.get(lv);\n            list.set(lv, val+node.val);\n        }\n        \n        helper(node.left, list, lv+1);\n        helper(node.right, list, lv+1);\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}