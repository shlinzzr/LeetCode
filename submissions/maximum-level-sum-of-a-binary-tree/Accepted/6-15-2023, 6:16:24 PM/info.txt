{"id":971796230,"question_id":1116,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686824184,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/971796230/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"45.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxLevelSum(TreeNode root) {\n        \n        List<List<Integer>> res = new ArrayList<>();\n        helper(root, res, 1);\n        \n        int max = Integer.MIN_VALUE, lv=0;\n        \n        for(int i=0; i<res.size(); i++){\n            \n            \n            List<Integer> list = res.get(i);\n            \n            int sum = 0;\n            for(int s : list){\n                sum+=s;\n            }\n            \n            if(sum>max){\n                max = sum;\n                lv = i+1;\n            }\n            \n        }\n        \n        return lv;\n        \n        \n        \n    }\n    \n    private void helper(TreeNode root, List<List<Integer>>  res, int lv){\n        \n        if(root==null)\n            return;\n        \n        if(res.size()<lv)\n            res.add(new ArrayList<>());\n        \n        res.get(lv-1).add(root.val);\n        \n        helper(root.left, res, lv+1);\n        helper(root.right, res, lv+1);\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}