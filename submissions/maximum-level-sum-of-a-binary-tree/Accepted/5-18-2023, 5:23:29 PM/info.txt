{"id":952617481,"question_id":1116,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684401809,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/952617481/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"44.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxLevelSum(TreeNode root) {\n        \n        \n        List<List<Long>> list =new ArrayList<>();\n        helper(root, 1, list);\n        \n        int lv = 0;\n        long max = Long.MIN_VALUE;\n        for(int i=0; i<list.size(); i++){\n            \n            List<Long> row = list.get(i);\n            \n            int sum = 0;\n            for(long r : row){\n                sum+=r;\n            }\n            \n            if(sum>max){\n                lv =i+1;\n                max = Math.max(max, sum);\n                \n            }\n            \n            \n            \n        }\n        \n        return lv;\n        \n        \n    }\n    /*\n    -100\n  -200 -300\n-20  -5 -10 null\n    */\n    \n    private void helper(TreeNode root, int lv, List<List<Long>> list){\n        \n        if(root==null)\n            return;\n        \n        if(list.size()<lv)\n            list.add(new ArrayList<>());\n        \n        list.get(lv-1).add((long)root.val);\n        \n        helper(root.left, lv+1, list);\n        helper(root.right, lv+1, list);\n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}