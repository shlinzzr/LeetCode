{"id":981521011,"question_id":1351,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1687947070,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/981521011/","is_pending":"Not Pending","title":"Replace the Substring for Balanced String","memory":"N/A","code":"class Solution {\n    \n    int[] arr = new int[4];\n    \n    public int balancedString(String s) {\n        \n        // solution 2 sliding window\n        int min = Integer.MAX_VALUE;\n        \n        int len = s.length();\n        \n        for(char ch : s.toCharArray()){\n            arr[ getIdx(ch) ]++;\n        }\n        \n        boolean flag = true;\n        for(int a: arr){\n            if(a!=len/4)\n                flag=false;\n        }\n        if(flag) return 0;\n        \n        \n        int[] cur = new int[4];\n        \n        int st = 0;\n        for(int ed=0; ed<len; ed++){\n            \n            char ch = s.charAt(ed);\n            int idx = getIdx(ch);\n            cur[idx]++;\n            \n            while(st<ed && isOK(arr, cur, len)){\n                min = Math.min(min ,ed-st+1);\n                int stIdx = getIdx(s.charAt(st));\n                cur[stIdx]--;\n                st++;\n            }\n            \n            \n        }\n        \n        return min;\n      \n    }\n    \n    private int getIdx(char ch ){\n        int idx =-1;\n        \n        if(ch=='Q')\n                idx=0;\n            else if(ch=='W')\n                idx=1;\n            else if(ch=='E')\n                idx=2;\n            else \n                idx=3;\n        \n        return idx;\n    }\n        \n    private boolean isOK(int[] arr, int[] cur, int len){\n        for(int i=0; i<4; i++){\n            if(arr[i]-cur[i]>len/4)\n                return false;\n        }\n        return true;\n    }\n        \n        \n        \n        \n//         // solution 1 binarySearch 5.98% \n           // T(nlgn) \n           // S(n)\n//         //  Q Q  [ W E R ] W E R 外面的字母數量如果比滑窗裡面的少,滑窗內可以補  \n//         //                       但如果比滑窗內的還大,那這個滑窗就沒救了 一定要擴大\n        \n//         int len = s.length();\n        \n//         for(char ch : s.toCharArray()){\n//             map.put(ch, map.getOrDefault(ch, 0)+1);\n//         }\n        \n//         boolean flag = true;\n//         for(Map.Entry<Character, Integer> en : map.entrySet()){\n//             if(en.getValue()!=len/4)\n//                 flag=false;\n//         }\n//         if(flag)\n//             return 0;\n        \n//         int left = 1, right=len;\n//         while(left<right){\n            \n//             int mid = left + (right-left)/2;\n            \n//             if(isOK(mid, s)){\n//                 right = mid;\n//             }else\n//                 left = mid+1;\n//         }\n//         return left;\n//     }\n    \n    \n//     private boolean isOK(int k, String s){\n        \n//         int len = s.length();\n//         HashMap<Character, Integer> curr = new HashMap<>();\n        \n//         for(int i=0; i<len; i++){\n            \n//             char ch = s.charAt(i);\n//             curr.put(ch, curr.getOrDefault(ch, 0)+1);\n//             if(i>=k){\n//                 curr.put(s.charAt(i-k), curr.getOrDefault(s.charAt(i-k), 0)-1);\n//             }\n            \n            \n//             boolean ok = true;\n//             for(char chh : map.keySet()){\n//                 if(map.get(chh) - curr.getOrDefault(chh,0)>len/4){\n//                     ok = false;\n//                     break;\n//                 }\n//             }\n//             if(ok)\n//                 return true;\n//         }\n        \n//         return false;\n    // }\n}","compare_result":"1011111111111111111111111111111111111111","title_slug":"replace-the-substring-for-balanced-string","has_notes":false,"flag_type":1}