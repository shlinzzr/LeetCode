{"id":962044576,"question_id":2206,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685676014,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/962044576/","is_pending":"Not Pending","title":"Detonate the Maximum Bombs","memory":"43.6 MB","code":"class Solution {\n    public int maximumDetonation(int[][] bombs) {\n        int ans = 0;\n        for (int i = 0; i < bombs.length; i++) \n            ans = Math.max(ans, dfs(i, new boolean[bombs.length], bombs));\n        return ans;\n    }\n\n    private int dfs(int idx, boolean[] v, int[][] bombs) {\n        int count = 0;\n        v[idx] = true;\n        for (int i = 0; i < bombs.length; i++)\n            if (!v[i] && inRange(bombs[idx], bombs[i]))\n                count += dfs(i, v, bombs);\n        return 1 + count;\n    }\n\n    private boolean inRange(int[] a, int[] b) {\n        long dx = a[0] - b[0], dy = a[1] - b[1], r = a[2];\n        return dx * dx + dy * dy <= r * r;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"detonate-the-maximum-bombs","has_notes":false,"flag_type":1}