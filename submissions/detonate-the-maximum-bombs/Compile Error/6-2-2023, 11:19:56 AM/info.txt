{"id":962044448,"question_id":2206,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685675996,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/962044448/","is_pending":"Not Pending","title":"Detonate the Maximum Bombs","memory":"N/A","code":"class Solution {\n    public int maximumDetonation(int[][] bombs) {\n        \n        /*\n        \n        https://leetcode.com/problems/detonate-the-maximum-bombs/discuss/1625917/Union-Find-146-160-test-cases-passed.-Why\n        \n        [[1,1,5], [5,1,1], [9,1,5]]\n        \n        The problem is directed, where union find does not work.\n        For example, first bomb at [1,1,5], 2nd at [5,1,1], and 3rd at [9,1,5]. Running union-find over bomb 1, it can reach 2, so 1 and 2 are unioned. Bomb 2 cannot reach any other two, no change. For bomb 3, it can detonate bomb 2, therefore, it will be unioned with 2 and 1, i.e. all three bombs unioned. However, in reality, since bomb 2 has only a radius of 1, detonation stops after bomb 2, and the correct maximum should be 2 instead of 3.\n*/\n        \n        int len = bombs.length;\n        \n        UnionFind uf = new UnionFind(len);a\n        \n        for(int i=0; i<len; i++){\n            \n            for(int j=0; j<len; j++){\n                \n                int[] a = bombs[i];\n                int[] b = bombs[j];\n                \n                boolean ir = inRange(a, b);\n                \n                if(ir){\n                    uf.union(i, j);\n                }\n            }\n        }\n        \n//         for(int i=0; i<len; i++){\n//             System.out.println(\"i=\"+i + \" \" + uf.parent[i] + \" \" + uf.weight[i] );\n//         }\n        \n        \n        return uf.max;\n        \n    }\n    \n    \n    private boolean inRange(int[] a, int[] b){\n        \n        int ax = a[0];\n        int ay = a[1];\n        int ar = a[2];\n        \n        int bx = b[0];\n        int by = b[1];\n        int br = b[2];\n        \n        \n        double dis = Math.sqrt((ax-bx)*(ax-bx) + (ay-by)*(ay-by));\n        \n        return dis <=ar ;\n    }\n    \n    \n    class UnionFind{\n        \n        int[] parent;\n        int[] weight;\n        int max = 1;\n        \n        public UnionFind(int n){\n            \n            parent = new int[n];\n            weight = new int[n];\n            \n            for(int i=0; i<n; i++){\n                parent[i] = i;\n                weight[i] = 1;\n            }\n            \n        }\n        \n        private int find(int x){\n            \n            if(parent[x]!=x){\n                parent[x] = find(parent[x]);\n            }\n            \n            return parent[x];\n        }\n        \n        private void union(int a, int b){\n            \n            a = find(a);\n            b = find(b);\n            if(a==b)\n                return ;\n            \n            if(weight[a]>=weight[b]){\n                weight[a]+=weight[b];\n                parent[b] = a;\n                \n                max = Math.max(max, weight[a]);\n            }else{\n                weight[b]+=weight[a];\n                parent[a] = b;\n                max = Math.max(max, weight[b] );\n            }\n            \n        }\n        \n        \n    }\n}","compare_result":null,"title_slug":"detonate-the-maximum-bombs","has_notes":false,"flag_type":1}