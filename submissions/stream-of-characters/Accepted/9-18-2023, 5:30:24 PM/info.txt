{"id":1052492453,"question_id":1097,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695029424,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/1052492453/","is_pending":"Not Pending","title":"Stream of Characters","memory":"74.5 MB","code":"class StreamChecker {\n\n    class TrieNode {\n        \n        TrieNode[] arr;\n        boolean isWord;\n        public TrieNode(){\n            arr = new TrieNode[26];\n        }        \n    }\n    \n    TrieNode root;\n    StringBuilder sb;\n    \n  \n    public StreamChecker(String[] words) {\n        \n        root = new TrieNode();        \n        sb = new StringBuilder();\n        \n        for(String w : words){\n            \n            TrieNode node = root;\n            \n            for(int i=w.length()-1; i>=0; i--){\n                \n                char ch = w.charAt(i);\n                if(node.arr[ch-'a']==null){\n                    node.arr[ch-'a'] = new TrieNode();\n                }                \n                node = node.arr[ch-'a'];\n            }\n            node.isWord=true;\n        }\n    }\n    \n//     public boolean query(char letter) {\n        \n//         sb.insert(0, letter);\n//         // sb.append(letter);\n        \n//         TrieNode node = root;\n//         for(int i=sb.length()-1; i>=0; i--){\n//             char ch = sb.charAt(i);\n//             if(node!=null && node.isWord){\n//                 return true;\n//             }   \n//             if(node==null)\n//                 return false;\n\n//             node = node.arr[ch-'a'];\n\n//         }\n//         return false;\n//     }\n    \n      \n    public boolean query(char letter) {\n        sb.append(letter);\n        TrieNode node = root;\n        for (int i = sb.length() - 1; i >= 0 && node != null; i--) {\n            char c = sb.charAt(i);\n            node = node.arr[c - 'a'];\n            if (node != null && node.isWord) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    \n}\n\n/**\n * Your StreamChecker object will be instantiated and called as such:\n * StreamChecker obj = new StreamChecker(words);\n * boolean param_1 = obj.query(letter);\n */","compare_result":"111111111111111111","title_slug":"stream-of-characters","has_notes":false,"flag_type":1}