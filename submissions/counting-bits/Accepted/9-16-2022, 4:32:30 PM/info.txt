{"id":801132877,"question_id":338,"lang":"java","lang_name":"Java","time":"1Â year, 9Â months","timestamp":1663317150,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/801132877/","is_pending":"Not Pending","title":"Counting Bits","memory":"48.1 MB","code":"// class Solution {\n    \n//     //https://leetcode.com/problems/counting-bits/discuss/270693/Intermediate-processsolution-for-the-most-voted-solution-i.e.-no-simplificationtrick-hidden\n    \n    \n//     // dp => 9ms\n//     public int[] countBits(int num) {\n//         int[] res = new int[num + 1];\n//         res[0] = 0;\n        \n//         for(int i = 1; i <= num; i++){\n//             if((i & 1) == 0){\n//                 res[i] = res[i >> 1]; // f(n) = f(n/2) + n%2\n//                                       //       when n%2==0 /. n%2==1\n//                                       // f(n) =\n//             }else{\n//                 res[i] = res[i - 1] + 1;\n//             }\n//         }\n//         return res;\n//     }\n// }\n\n// formula 1ms\nclass Solution {\n  public int[] countBits(int n) {\n    // let f(i) := i's # of 1's in bitmask\n    // f(i) = f(i / 2) + i % 2\n    int[] ans = new int[n + 1];\n\n    for (int i = 1; i <= n; ++i)\n      ans[i] = ans[i / 2] + (i % 2 == 0 ? 0 : 1);\n\n    return ans;\n  }\n}","compare_result":"111111111111111","title_slug":"counting-bits","has_notes":false,"flag_type":1}