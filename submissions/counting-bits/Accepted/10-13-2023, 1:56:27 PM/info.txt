{"id":1074039744,"question_id":338,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697176587,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1074039744/","is_pending":"Not Pending","title":"Counting Bits","memory":"46.1 MB","code":"class Solution {\n    public int[] countBits(int n) {\n        \n        // recur Time O(nlgn)\n\n        int[] res = new int[n+1];\n        for(int i=0; i<=n; i++){\n            res[i] = getCnt(i);\n        }\n        return res;\n\n        // dp: Time : O(n)\n        // int[] dp = new int[n+1];\n        \n        // // 0 ->   0 \n        // // 1 ->   1 -> dp[n-1] +1 =1\n        // // 2 ->  10 -> dp[n-2] +1 =1\n        // // 3 ->  11 -> dp[n-2] +1 =2\n        // // 4 -> 100 -> dp[n-4] +1 =1\n        // //.     ....\n        // // dp[i] = dp[i-offset]  +1;\n        // int offset = 1;\n        // for(int i=1; i<=n; i++){\n            \n        //     if(offset*2==i){\n        //         offset*=2;    \n        //     }\n        //     dp[i] = dp[i-offset]+1;\n        // }\n        \n        // return dp;\n    }\n\n\n    private int getCnt(int i){\n        \n        if(i==0) return 0;\n        if(i==1) return 1;\n\n        if(i%2==0)  return getCnt(i/2);\n        \n        return 1+getCnt(i/2);\n    }\n\n\n\n}","compare_result":"111111111111111","title_slug":"counting-bits","has_notes":false,"flag_type":1}