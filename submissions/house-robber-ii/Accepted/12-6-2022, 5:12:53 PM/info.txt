{"id":855486395,"question_id":213,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670317973,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/855486395/","is_pending":"Not Pending","title":"House Robber II","memory":"42 MB","code":"class Solution {\n\n    public int rob(int[] nums) {\n        \n        int len = nums.length;\n        if(nums.length==1)\n            return nums[0];\n        \n        return Math.max(helper(nums, 0, len-2), helper(nums, 1, len-1));\n        \n    }\n    \n    private int helper(int[]nums, int st, int ed){\n        \n        int[] dp = new int[nums.length+1];\n        \n        if(st==0){\n            dp[0]=0;\n            dp[1]=nums[0];\n        }else{\n            dp[0]=0;    \n            dp[1]=0;\n            dp[2]=nums[1];\n        }\n        \n        for(int i=st+1; i<=ed; i++){\n            dp[i+1] = Math.max(dp[i], dp[i-1]+nums[i]);\n        }\n        return dp[ed+1];\n        \n    }\n    \n    // public int houseRob_1(int[] nums) {\n    //     int len = nums.length;\n    //     int[] dp = new int[len+1];\n    //     dp[0]=0;\n    //     dp[1]=nums[0];\n    //     // dp[i+1] = max(nums[i]+dp[i-1], dp[i])\n    //     for(int i=1; i<len; i++){\n    //         dp[i+1] = Math.max(dp[i], dp[i-1]+nums[i]);\n    //     }\n    //     return dp[len];\n    // }\n    \n    \n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-ii","has_notes":false,"flag_type":1}