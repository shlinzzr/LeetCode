{"id":1111236769,"question_id":3223,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701575859,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1111236769/","is_pending":"Not Pending","title":"Count Complete Substrings","memory":"N/A","code":"class Solution {\n    public int countCompleteSubstrings(String word, int k) {\n        \n        List<String> list = buildList(word, k);\n        \n        System.out.println(list.size());\n        int res = 0;\n        for(String w : list){\n            int[] arr = new int[26];\n            int len = w.length();\n            int st =0;\n            for(int i=0; i<len; i++){\n                \n                arr[w.charAt(i)-'a']++;\n                if(isKtimes(arr, k)==-1){\n                    continue;\n                }\n                \n                while(st<len && isKtimes(arr, k)==1){\n                    arr[w.charAt(st)-'a']--;\n                    st++;\n                }\n                \n                if( isKtimes(arr, k) ==0){\n                         System.out.println(w.substring(st, i+1));\n                    res++;\n                }\n            }\n            \n            while(st<len-1){\n                   arr[w.charAt(st)-'a']--;\n                 st++;\n                    if( isKtimes(arr, k) ==0){\n                  \n                         System.out.println(w.substring(st, len));\n                        res++;\n                    }\n               \n            }\n        }\n        \n        \n      \n        return res;\n    }\n    \n    private List<String> buildList(String word, int k){\n         List<String> list = new ArrayList<>();\n        int len = word.length();\n        \n        int st=0;\n        for(int i=0; i<len-1;i++){\n            \n            if(word.charAt(i+1)-word.charAt(i)>2){\n                list.add(word.substring(st, i+1));\n                st=i+1;\n            }\n        }\n        \n        if(st==len-1)\n            list.add(word.substring(len-1, len));\n        else if (st==0)\n            list.add(word);\n        \n        return list;\n    }\n    \n    \n    private int isKtimes(int[] arr, int k){\n        \n        for(int i=0; i<26; i++){\n            if(arr[i]!=0 && arr[i]>k)\n                return 1;\n            if(arr[i]!=0 && arr[i]<k)\n                return -1;\n        }\n        \n        return 0;\n    }\n    \n}","compare_resulttitle_slug":"count-complete-substrings","has_notes":false,"flag_type":1}