{"id":1272898926,"question_id":424,"lang":"java","lang_name":"Java","time":"1 week, 5 days","timestamp":1717126462,"status":10,"status_display":"Accepted","runtime":"135 ms","url":"/submissions/detail/1272898926/","is_pending":"Not Pending","title":"Longest Repeating Character Replacement","memory":"45.2 MB","code":"class Solution {\n    public int characterReplacement(String s, int k) {\n\n        int len = s.length();\n\n        Map<Character, Integer> map = new HashMap<>();\n        int max=0;\n        int st=0;\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n            map.put(ch, map.getOrDefault(ch, 0)+1);\n\n            while(getDiff(map)>k){\n                char chst = s.charAt(st);\n                map.put(chst, map.get(chst)-1);\n                if(map.get(chst)==0)\n                    map.remove(chst);\n                st++;\n            }\n\n            max = Math.max(max, i-st+1);\n        }\n\n        return max;\n        \n    }\n\n    private int getDiff(Map<Character, Integer> map){\n\n        if(map.size()==1) return 0;\n\n        int max = 0 ;\n        char ch = 'a';\n        for(char key : map.keySet()){\n            \n            if(map.get(key)>max){\n                max = map.get(key);\n                ch = key;\n            }\n            \n        }\n        int diff = 0 ;\n        for(char key : map.keySet()){\n            if(key!=ch){\n                diff += map.get(key);\n            }\n        }\n\n        return diff;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"longest-repeating-character-replacement","has_notes":false,"flag_type":1}