{"id":1076482244,"question_id":322,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697441281,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1076482244/","is_pending":"Not Pending","title":"Coin Change","memory":"43.1 MB","code":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int len = coins.length;\n        int[] dp = new int[amount+1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n\n        dp[0] = 0;\n\n        for(int i=0; i<=amount; i++){\n            for(int coin : coins){\n                if(i-coin>=0 && dp[i-coin]!=Integer.MAX_VALUE)\n                    dp[i] = Math.min(dp[i], dp[i-coin]+1);\n            }\n        }\n\n        return dp[amount]==Integer.MAX_VALUE? -1: dp[amount];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false,"flag_type":1}