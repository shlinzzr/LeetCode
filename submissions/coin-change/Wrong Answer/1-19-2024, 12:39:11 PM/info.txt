{"id":1150374047,"question_id":322,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705639151,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1150374047/","is_pending":"Not Pending","title":"Coin Change","memory":"N/A","code":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        \n        int len = coins.length;\n        int[] dp = new int[amount+1]; //湊成amount 的組合數\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        \n        dp[0] = 0;\n        \n        for(int i=1; i<=amount; i++){\n            \n            for(int c : coins){\n                if(i-c>=0 && dp[i-c]!=Integer.MAX_VALUE){\n                    \n                    dp[i] = Math.min(dp[i], dp[i-c]+1);\n                    \n                }\n            }\n        }\n        \n        return dp[amount];\n        \n        \n        \n        \n        \n    }\n}","compare_result":"101110100111111111111111111111111111111111110111101111101111101110111011111111111111111111111111111111110111111100111111111111111111111111111111111111111111111111111111011111111111111001001","title_slug":"coin-change","has_notes":false,"flag_type":1}