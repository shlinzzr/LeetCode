{"id":1092594843,"question_id":1766,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699252903,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1092594843/","is_pending":"Not Pending","title":"Minimum Number of Removals to Make Mountain Array","memory":"N/A","code":"class Solution {\n    public int minimumMountainRemovals(int[] nums) {\n        int len = nums.length;\n\n        int[] left = new int[len];\n        ArrayList<Integer> list = new ArrayList<>();\n\n        for(int i=0; i<len; i++){\n            if(list.isEmpty() || nums[i]>list.get(list.size()-1)){\n                list.add(nums[i]);\n            }else{\n                int idx = ceiling(list, nums[i]);\n                list.set(idx, nums[i]);\n            }\n\n            left[i] = list.size();\n        }\n\n        int[] right = new int[len];\n        list = new ArrayList<>();\n        for(int i=len-1; i>=0; i--){\n            if(list.isEmpty() || nums[i]>list.get(list.size()-1)){\n                list.add(nums[i]);\n            }else{\n                int idx = ceiling(list, nums[i]);\n                list.set(idx, nums[i]);\n            }\n            right[i] = list.size();\n        }\n\n        // for(int i=0; i<len; i++){\n        //     System.out.print(left[i] + \",\");\n        // }\n        // System.out.println();\n\n        // for(int i=0; i<len; i++){\n        //     System.out.print(right[i] + \",\");\n        // }\n        // System.out.println();\n\n\n        int max= 0 ;\n        for(int i=1; i<len-1; i++){\n            max = Math.max(max, left[i]+right[i]-1);\n        }\n\n        return len-max;\n\n\n    }\n\n\n    private int ceiling(List<Integer> list, int num){\n\n        int st=0, ed=list.size()-1;\n\n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            if(num == list.get(mid)){\n                return mid;\n\n            }else if(list.get(mid) > num){\n                ed = mid;\n            }else{\n                st = mid+1;\n            }\n        }\n\n        return st;\n\n    }\n\n\n}","compare_result":"111111111110110001111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-removals-to-make-mountain-array","has_notes":false,"flag_type":1}