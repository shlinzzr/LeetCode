{"id":1196497326,"question_id":908,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1709797038,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1196497326/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"40.8 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode middleNode(ListNode head) {\n\n        ListNode fast = head, slow = head;\n\n        // 1 2 3 4 5\n        //   s f\n        //     s   f\n\n        // 1 2 3 4 5 6 \n        //   s f\n        //     s.  f\n\n        while(fast.next!=null){\n            slow = slow.next;\n            fast = fast.next;\n\n            if(fast.next!=null) \n                fast = fast.next;\n        }\n\n        return slow;\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}