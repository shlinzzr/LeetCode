{"id":783606641,"question_id":11,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661485065,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/783606641/","is_pending":"Not Pending","title":"Container With Most Water","memory":"81.2 MB","code":"class Solution {\n//.    public int maxArea(int[] height) {\n//         int max = 0;\n//         for(int i=0; i<height.length-1; i++){\n//             for(int j=i+1; j<height.length; j++){\n//                 int vol = Math.min(height[i], height[j])*(j-i);\n//                 max = Math.max(max, vol);\n//             }\n//         }\n        \n//         return max;\n//     }\n    \n    public int maxArea(int[] height) {\n        int left = 0, right = height.length - 1;\n        int maxArea = 0;\n\n        while (left < right) {\n            maxArea = Math.max(maxArea, Math.min(height[left], height[right])\n                    * (right - left));\n            if (height[left] < height[right])\n                left++;\n            else\n                right--;\n        }\n\n        return maxArea;\n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"container-with-most-water","has_notes":false,"flag_type":1}