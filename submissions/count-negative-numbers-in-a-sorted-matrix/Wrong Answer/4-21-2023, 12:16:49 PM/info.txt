{"id":937231648,"question_id":1476,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682050609,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/937231648/","is_pending":"Not Pending","title":"Count Negative Numbers in a Sorted Matrix","memory":"N/A","code":"class Solution {\n    public int countNegatives(int[][] grid) {\n        \n        int h= grid.length;\n        int w = grid[0].length;\n        \n        int h_st = find(grid, 0, h-1);\n        // System.out.println(h_st);\n        if(h_st==-1)\n            return 0;\n        \n        \n        int res =0 ;\n        for(int i=h_st; i<h; i++){\n            \n            int[] row = grid[i];\n            \n            int st=0, ed=w-1;\n            \n            while(st<ed){\n                \n                int mid = st+(ed-st)/2;\n                \n                if(row[mid]>0)\n                    st = mid+1;\n                else ed = mid;\n            }\n            \n            res += (w-st);\n        }        \n        \n        \n        return res;\n        \n        \n        \n        \n    }\n    \n    private int find(int[][] grid, int st , int ed){\n        \n        int h= grid.length;\n        int w = grid[0].length;\n         \n        while(st<ed){\n            \n            int mid = st+(ed-st)/2;\n            // System.out.println(mid + \" \" + (grid[mid][w-1]<0));\n            if(grid[mid][w-1]<0){\n                ed = mid;\n            }else{\n                st = mid+1;\n            }\n            \n        }\n        return grid[st][w-1] <0 ? st : -1;\n    }\n    \n    /*[[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]*/\n    \n    \n}","compare_result":"11111111110101111110111100001000000000011000","title_slug":"count-negative-numbers-in-a-sorted-matrix","has_notes":false,"flag_type":1}