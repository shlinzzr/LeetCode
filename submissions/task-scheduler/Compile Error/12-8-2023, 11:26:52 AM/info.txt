{"id":1114786673,"question_id":621,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702006012,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1114786673/","is_pending":"Not Pending","title":"Task Scheduler","memory":"N/A","code":"class Solution {\n    public int leastInterval(char[] tasks, int n) {\n        int len = tasks.length;\n        HashMap<Character, Integer> map = new HashMap<>();\n\n        int max= 0 ;\n        int maxCnt = 0;\n        for(char ch : tasks){\n            map.put(ch, map.getOrDefault(ch,0)+1);\n            if(map.get(ch)>max){\n                max = map.get(ch);\n                maxCnt=1;\n            }else if(map.get(ch)==max){\n                maxCnt++;\n            }\n        }\n\n\n        //先問 總共執行幾次: max次\n        //會有幾個cooldown period : max-1\n        //每個cooldown period多長 : n + 1個max task 執行時間\n        // => (max-1)*(n+1) + maxCnt;\n\n        int res = (max-1)*(n+1) + maxCnt;\n        // 要執行完max次task 共需要max-1個idle, 所以max-1; \n        // n個 cooldown period加上1個task執行時間 所以要n+1; \n        // A ... -> A ... -> A B C 共有max-1個 (1 + n ) (1 + n ) + maxCnt \n\n\n        // 還有一個edge case: 最高次數都跑完了 還有多餘的task沒做 => no idle\n        if(tasks.length>=ans)\n            return tasks.length;\n        \n\n        return res;\n\n    }\n}","compare_result":null,"title_slug":"task-scheduler","has_notes":false,"flag_type":1}