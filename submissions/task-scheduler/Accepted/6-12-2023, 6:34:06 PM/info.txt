{"id":969515444,"question_id":621,"lang":"java","lang_name":"Java","time":"1 year","timestamp":1686566046,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/969515444/","is_pending":"Not Pending","title":"Task Scheduler","memory":"43.7 MB","code":"class Solution {\n    public int leastInterval(char[] tasks, int n) {\n        int len = tasks.length;\n        \n        HashMap<Character, Integer> map = new HashMap<>();\n        \n        \n        int max = 0;\n        int maxCnt=0;\n        \n        \n        for(char c: tasks){\n            map.put(c, map.getOrDefault(c, 0)+1);\n            \n            max= Math.max(max, map.get(c));\n        }\n        \n        for(char k : map.keySet()){\n            if(map.get(k)==max)\n                maxCnt++;\n        }\n        int ans = (max-1) * (n+1) +maxCnt; // 要執行完max個task 共需要max-1個idle, 所以max-1; n個 cooldown idle加上1個task執行時間 所以要n+1; \n        /* A ... -> A ... -> A B C \n共有max-1個 (1 + n ) (1 + n ) + maxCnt\n*/\n        \n        \n                                   //最後加上最後一次的最高次數task : maxCnt\n        \n         // edge case: 最高次數都跑完了 還有多餘的task沒做 => no idle\n        if(tasks.length>=ans)\n            return tasks.length;\n        \n        \n        return ans;\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"task-scheduler","has_notes":false,"flag_type":1}