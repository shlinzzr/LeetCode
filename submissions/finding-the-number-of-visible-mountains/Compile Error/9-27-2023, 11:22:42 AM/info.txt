{"id":1060187022,"question_id":2485,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1695784962,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1060187022/","is_pending":"Not Pending","title":"Finding the Number of Visible Mountains","memory":"N/A","code":"class Solution {\n    public int visibleMountains(int[][] peaks) {\n        \n        Arrays.sort(peaks, (a,b)-> a[0]!=b[0] ? a[0]-b[0] : b[1]-a[1]);\n        int len = peaks.length;\n\n        int res =0;\n        for(int i=0; i<len; i++){\n            \n        }\n\n\n\n    }\n\n    private boolean isContain(int[] p1, int[] p2){\n\n        int h1 = p1[1];\n        int x1 = p1[0];\n        int l1 = p1[0]-h1;\n        int r1 = p1[0]+h1;\n\n        int h2 = p2[1];\n        int x2 = p2[0];\n        int l2 = p2[0]-h2;\n        int r2 = p2[0]+h2;\n\n        return l1<=l2 && r1>=r2;\n    }\n}","compare_result":null,"title_slug":"finding-the-number-of-visible-mountains","has_notes":false,"flag_type":1}