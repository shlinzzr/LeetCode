{"id":867943467,"question_id":813,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672384960,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/867943467/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"44 MB","code":"class Solution {\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n         List<List<Integer>> res = new ArrayList<>();\n        \n        List<Integer> curr = new ArrayList<>();\n        curr.add(0);\n        helper(graph, res, curr, graph[0]);\n        \n        \n        return res;\n        \n    }\n    \n    private void helper(int[][] graph,  List<List<Integer>> res, List<Integer> curr, int[] tar){\n        \n        if(curr.get(curr.size()-1)==graph.length-1){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n        \n        \n        for(int dst : tar){\n            curr.add(dst);\n            helper(graph, res, curr, graph[dst]);\n            curr.remove(curr.size()-1);\n        }\n        \n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false,"flag_type":1}