{"id":762846706,"question_id":813,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659407670,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/762846706/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"55.4 MB","code":"class Solution {\n    \n    List<List<Integer>> list = new ArrayList<>();\n    \n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        \n        \n        List<Integer> curr= new ArrayList<>();\n        curr.add(0);\n        helper(graph, 0, curr);\n        return list;\n    }\n    \n    \n    private void helper(int[][] graph, int idx, List<Integer> curr){\n        \n        \n        if(idx == graph.length-1)\n            list.add(curr);\n        \n        \n        \n        for(int i :graph[idx]){\n            ArrayList<Integer> newList = new ArrayList<>(curr);\n            newList.add(i);\n            helper(graph, i, newList);\n        }\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false,"flag_type":1}