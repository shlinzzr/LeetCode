{"id":940451129,"question_id":813,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682576854,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/940451129/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"44.7 MB","code":"class Solution {\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        List<List<Integer>> res= new ArrayList<>();\n        \n        List<Integer> list = new ArrayList<>();\n        list.add(0);\n        helper(graph, list, 0, res);\n        \n        return res;\n    }\n    \n    \n    private void helper(int[][] graph, List<Integer> list, int curr, List<List<Integer>> res){\n        \n        if(curr==graph.length-1){\n            res.add(new ArrayList<>(list));\n            return;\n        }\n        \n        for(int next : graph[curr]){\n            list.add(next);\n            helper(graph, list, next, res);\n            list.remove(list.size()-1);\n        }\n    }\n    \n    \n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false,"flag_type":1}