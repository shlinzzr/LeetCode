{"id":1278236586,"question_id":744,"lang":"java","lang_name":"Java","time":"1Â week","timestamp":1717573990,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/1278236586/","is_pending":"Not Pending","title":"Network Delay Time","memory":"47.8 MB","code":"class Solution {\n    public int networkDelayTime(int[][] times, int n, int k) {\n\n        int[] arr = new int[n+1];\n        Arrays.fill(arr, Integer.MAX_VALUE);\n        arr[k] = 0;\n\n        // int[] indegree = new int[n];\n        Map<Integer, Map<Integer, Integer>> map = new HashMap<>();\n        for(int[] t: times){\n            map.putIfAbsent(t[0], new HashMap<>());\n\n            if(!map.get(t[0]).containsKey(t[1])){\n                // indegree[t[1]]++;\n                map.get(t[0]).put(t[1], t[2]);\n            }\n            if(map.get(t[0]).get(t[1])<t[2])\n                map.get(t[0]).put(t[1], t[2]);\n           \n        }\n\n        // for(int src=1; src<=n; src++){\n\n        //     if(arr[src]==Integer.MAX_VALUE) continue;\n        //     for(int dst=1; dst<=n; dst++){\n        //         if(src==dst) continue;\n\n        //         for(int mid : map.getOrDefault(src, new HashMap<>()).keySet()){\n\n        //             if(map.getOrDefault(mid, new HashMap<>()).containsKey(dst)){\n        //                 arr[dst] = Math.min(arr[dst], arr[mid]+map.get(mid).get(dst));\n        //             }\n        //         }\n        //     }\n        // }\n        // int res = Integer.MIN_VALUE;\n        // for(int i=1; i<arr.length; i++){\n\n        //     if(arr[i]==Integer.MAX_VALUE) return -1;\n        //     res = Math.max(res, arr[i]);\n        // }\n\n        // return res;\n\n        Queue<Integer> q = new LinkedList<>();\n        q.offer(k);\n\n        while(!q.isEmpty()){\n            int curr = q.poll();\n\n            for(int next : map.getOrDefault(curr, new HashMap<>()).keySet()){\n                int w = map.get(curr).get(next);\n                if(arr[curr]+w < arr[next]){\n                    arr[next] = arr[curr]+w;\n                    q.offer(next);\n                }\n            }\n        }\n\n\n         int res = Integer.MIN_VALUE;\n        for(int i=1; i<arr.length; i++){\n\n            if(arr[i]==Integer.MAX_VALUE) return -1;\n            res = Math.max(res, arr[i]);\n        }\n\n        return res;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}