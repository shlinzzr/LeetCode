{"id":932992880,"question_id":2465,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681379178,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/932992880/","is_pending":"Not Pending","title":"Shifting Letters II","memory":"N/A","code":"class Solution {\n    public String shiftingLetters(String s, int[][] shifts) {\n        int len = s.length();\n        \n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        \n        for(int[] sh: shifts){\n            \n            if(sh[2]==1){\n                map.put(sh[0], map.getOrDefault(sh[0], 0)+1);\n                map.put(sh[1]+1, map.getOrDefault(sh[1]+1, 0)-1);    \n            }else{\n                map.put(sh[0], map.getOrDefault(sh[0], 0)-1);\n                map.put(sh[1]+1, map.getOrDefault(sh[1]+1, 0)+1);    \n            }\n        }\n        \n        int curr=0;\n        TreeMap<Integer, Integer> new_map = new TreeMap<>();\n        \n        for(Map.Entry<Integer, Integer> en : map.entrySet()){\n            curr+=en.getValue();\n            new_map.put(en.getKey(), curr);\n        }        \n        \n        char[] arr = s.toCharArray();\n        for(Map.Entry<Integer, Integer> en : new_map.entrySet()){\n            \n           \n            int idx = en.getKey();\n            \n             if(idx>=s.length())\n                continue;\n            \n            int offset = en.getValue();\n            int val = (arr[idx]-'a'+offset)%26;\n            if(val<0) val+=26;\n            arr[idx] = (char)(val+'a');\n        }\n        \n        return new String(arr);\n        \n        \n    }\n}\n","compare_result":"111110000000000000000000000000000001101","title_slug":"shifting-letters-ii","has_notes":false,"flag_type":1}