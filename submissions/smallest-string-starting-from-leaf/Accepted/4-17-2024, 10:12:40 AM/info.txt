{"id":1234463021,"question_id":1030,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713319960,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1234463021/","is_pending":"Not Pending","title":"Smallest String Starting From Leaf","memory":"45 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    String res = null;\n    public String smallestFromLeaf(TreeNode root) {\n\n        helper(root, \"\");\n\n        return res;\n        \n    }\n\n    private void helper(TreeNode root, String cur){\n        if(root==null) return ;\n\n        cur = (char)(root.val+'a') + cur;\n\n        if(root.left==null && root.right==null){\n            \n\n            if(res==null) \n                res= cur;\n            else if(res.compareTo(cur)>0){\n                res = cur;   \n            }\n            return;\n        }\n\n        helper(root.left, cur);\n        helper(root.right, cur);\n\n        \n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-string-starting-from-leaf","has_notes":false,"flag_type":1}