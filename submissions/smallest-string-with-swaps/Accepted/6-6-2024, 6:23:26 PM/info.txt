{"id":1279402420,"question_id":1308,"lang":"java","lang_name":"Java","time":"6 days, 16 hours","timestamp":1717669406,"status":10,"status_display":"Accepted","runtime":"249 ms","url":"/submissions/detail/1279402420/","is_pending":"Not Pending","title":"Smallest String With Swaps","memory":"86.3 MB","code":"class Solution {\n    int[] parent;\n    public String smallestStringWithSwaps(String s, List<List<Integer>> pairs) {\n        \n        int len = s.length();\n        parent = new int[len];\n        for(int i=0; i<len;i++){\n            parent[i] = i;\n        }\n\n        \n        for(List<Integer> p : pairs){\n            int a = find(p.get(0));\n            int b = find(p.get(1));\n            union(a,b);\n        }\n\n        Map<Integer, List<Character>> map = new HashMap<>();\n        for(int i=0; i<s.length(); i++){\n            char ch = s.charAt(i);\n            int root = find(i);\n            map.putIfAbsent(root, new ArrayList<>());\n            map.get(root).add(ch);\n        }\n\n        // sorting\n        for(List<Character> list : map.values())\n            Collections.sort(list);\n\n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<len; i++){\n            int root = find(i);\n            sb.append(map.get(root).remove(0));\n        }\n\n        return sb.toString();\n\n\n\n\n\n\n    }\n\n    private boolean union(int a, int b){\n        a = find(a);\n        b = find(b);\n\n        if(a==b) return false;\n        if(a<b){\n            parent[b] = a;\n        }else{\n            parent[a] = b;\n        }\n\n        return true;\n        \n    }\n\n\n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n\n}","compare_result":"111111111111111111111111111111111111","title_slug":"smallest-string-with-swaps","has_notes":false,"flag_type":1}