{"id":1002394368,"question_id":1929,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690181362,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1002394368/","is_pending":"Not Pending","title":"Maximum Value at a Given Index in a Bounded Array","memory":"39.4 MB","code":"class Solution {\n    public int maxValue(int n, int index, int maxSum) {\n        \n        int st =1, ed=maxSum;\n        \n        while(st<ed){\n            int mid = st + (ed-st+1)/2;\n            \n            if(getSum(mid, n, index)<=maxSum){\n                st = mid;\n            }else{\n                ed = mid-1;\n            }\n        }\n        \n        if(getSum(st, n, index)<=maxSum){\n            return st;\n        }else{\n            if(getSum(st-1, n, index)<=maxSum)\n                return st-1;\n        }\n        \n        \n        return -1;\n    }\n    \n    private long getSum(long h, long n, long index){\n         // return n * mid /2;\n        \n        long sum = 0;\n        if (h > index)\n        {\n            sum += (h-index + h)*(index+1)/2;\n        }\n        else\n        {\n            sum += (1+h)*h/2;\n            sum += index+1-h;\n        }\n        if (h > n-index)\n        {\n            sum += (h + h-(n-index)+1)*(n-index)/2;\n        }\n        else\n        {\n            sum += (h + 1)*h/2;\n            sum += (n - (index+h));\n        }\n        return sum-h;\n       \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-value-at-a-given-index-in-a-bounded-array","has_notes":false,"flag_type":1}