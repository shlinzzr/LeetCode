{"id":1046406920,"question_id":736,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694426255,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1046406920/","is_pending":"Not Pending","title":"Parse Lisp Expression","memory":"41.5 MB","code":"class Solution {\n\n// https://www.youtube.com/watch?v=XS6CXH2UORM\n\n    public int evaluate(String expression) {\n        return helper(expression, new HashMap<>());\n    }\n\n    private int helper(String exp, Map<String, Integer> map){\n        if(isNumberic(exp))\n            return Integer.valueOf(exp);\n        else if(isVariable(exp))\n            return map.get(exp);\n        \n\n        int res = 0;\n\n        List<String> list = parse(exp);\n        if(\"add\".equals(list.get(0))){\n            res =  helper(list.get(1), map) + helper(list.get(2), map);\n\n        }else if(\"mult\".equals(list.get(0))){\n            res = helper(list.get(1), map) * helper(list.get(2), map);\n        \n        }else{\n            Map<String, Integer> newMap = new HashMap<>(map);\n            for(int i=1; i<list.size()-1; i+=2){\n                newMap.put(list.get(i) , helper(list.get(i+1), newMap));\n            }\n\n            res = helper(list.get(list.size()-1), newMap);\n        }\n\n        return res;\n    }\n\n    private boolean isNumberic(String exp){\n        char ch = exp.charAt(0);\n        if((ch>='0' &&ch<='9' )|| ch=='-') \n            return true;\n        return false;\n    }\n\n    private boolean isVariable(String exp){\n        char ch = exp.charAt(0);\n        if(ch>='a' && ch<='z')\n            return true;\n        return false;\n    }\n\n    private List<String> parse(String exp){\n        List<String> res = new ArrayList<>();\n        exp = exp.substring(1, exp.length()-1);\n        int startIndex=0;\n\n        while(startIndex<exp.length()){\n            int endIndex = next(exp, startIndex);\n            res.add(exp.substring(startIndex, endIndex));\n            startIndex = endIndex+1;\n        }\n        return res;\n    }\n\n    private int next(String exp, int startIndex){\n        int idx = startIndex;\n        if(exp.charAt(idx)=='('){\n            int cnt=1;\n            idx++;\n            while(idx<exp.length() && cnt>0){\n                if(exp.charAt(idx)=='('){\n                    cnt++;\n\n                } else if(exp.charAt(idx)==')'){\n                    cnt--;\n                }\n                idx++;\n            }\n        }else{\n            while(idx<exp.length() && exp.charAt(idx)!=' '){\n                idx++;\n            }\n        }\n\n        return idx;\n\n            \n\n    }\n\n        \n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"parse-lisp-expression","has_notes":false,"flag_type":1}