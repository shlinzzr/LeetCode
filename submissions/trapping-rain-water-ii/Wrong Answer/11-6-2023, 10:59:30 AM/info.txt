{"id":1092472492,"question_id":407,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699239570,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1092472492/","is_pending":"Not Pending","title":"Trapping Rain Water II","memory":"N/A","code":"class Solution {\n    public int trapRainWater(int[][] heightMap) {\n        int h = heightMap.length;\n        int w = heightMap[0].length;\n\n\n        int[][] mat = new int[h][w];\n        for(int i=0; i<h; i++){\n\n            // mat[i] = trap(heightMap[i]);\n\n            // for(int j=0; j<w; j++){\n            //     System.out.print(mat[i] + \",\");\n            // }\n            // System.out.println();\n\n            int[] leftMax = new int[w];\n            int[] rightMax = new int[w];\n\n            for(int j=0; j<w; j++){\n                leftMax[j] = j==0 ? heightMap[i][j] : Math.max(heightMap[i][j] , leftMax[j-1]);\n            }\n\n            for(int j=w-1; j>=0; j--){\n                rightMax[j] = j==w-1 ? heightMap[i][j] : Math.max(heightMap[i][j], rightMax[j+1]);\n            }\n\n            for(int j=0; j<w; j++){\n                mat[i][j] = Math.min(rightMax[j], leftMax[j]) - heightMap[i][j];\n                if(mat[i][j]<0)\n                    mat[i][j] = 0;\n            }\n        }\n\n        int res = 0;\n\n\n        for(int j=0; j<w; j++){\n            int[] topMax = new int[h];\n            int[] downMax = new int[h];\n\n            for(int i=0; i<h; i++){\n                topMax[i] = i==0? heightMap[i][j] : Math.max(heightMap[i][j], topMax[i-1]);\n            }\n\n            for(int i=h-1; i>=0; i--){\n                downMax[i] = i==h-1 ? heightMap[i][j] : Math.max(heightMap[i][j], downMax[i+1]);\n            }\n\n            for(int i=0; i<h; i++){\n                int tmp = Math.min(topMax[i], downMax[i]) - heightMap[i][j];\n                mat[i][j] = Math.min(mat[i][j], tmp);\n                if(mat[i][j]<0)\n                    mat[i][j]=0;\n                else \n                    res += mat[i][j];\n            }\n        }\n\n        return res;\n\n\n    }\n\n\n\n     public int[] trap(int[] height) {\n        int len = height.length;\n\n        int[] res = new int[len];\n        \n        int[] left = new int[len];\n        int[] right = new int[len];\n\n        left[0] = height[0];\n        for(int i=1; i<len; i++){\n            left[i] = Math.max(left[i-1], height[i]);\n        }\n\n        right[len-1] = height[len-1];\n        for(int i=len-2; i>=0; i--){\n            right[i] = Math.max(right[i+1], height[i]);\n        }\n\n\n        // int res = 0;\n        for(int i=0; i<len; i++){\n            int val = Math.min(left[i], right[i])-height[i];\n            // res += val;\n            res[i] = val;\n\n            System.out.print(val + \",\");\n        }\n\n        return res;\n\n\n    }\n}","compare_result":"111011111101110111101000000000000000000011","title_slug":"trapping-rain-water-ii","has_notes":false,"flag_type":1}