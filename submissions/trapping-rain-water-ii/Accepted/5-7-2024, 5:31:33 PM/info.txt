{"id":1251635650,"question_id":407,"lang":"java","lang_name":"Java","time":"1 month","timestamp":1715074293,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1251635650/","is_pending":"Not Pending","title":"Trapping Rain Water II","memory":"45.9 MB","code":"class Solution {\n    public int trapRainWater(int[][] heightMap) {\n        /*\n        [[1,4,3,1,3,2]\n        ,[3,2,1,3,2,4]\n        ,[2,3,3,2,3,1]]\n        */\n        //從外面一圈開始 用pq從最矮的牆流進去 找trap water\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>( // r, c, height\n            (a,b) -> a[2]-b[2] // sort by height asc\n        );\n            \n        int h = heightMap.length;\n        int w = heightMap[0].length;\n        \n        boolean[][] visited = new boolean[h][w];\n        \n        // deal edge first\n        for(int i=0; i<h; i++){\n            visited[i][0]=true;\n            visited[i][w-1]=true;\n            pq.offer(new int[]{i, 0, heightMap[i][0]});\n            pq.offer(new int[]{i, w-1, heightMap[i][w-1]});\n        }\n        \n         // deal edge first\n        for(int j=0; j<w; j++){\n            visited[0][j]=true;\n            visited[h-1][j]=true;\n            pq.offer(new int[]{0, j, heightMap[0][j]});\n            pq.offer(new int[]{h-1, j, heightMap[h-1][j]});\n        }\n        \n        int[][] dirs = new int[][]{{0,1}, {0,-1}, {1,0}, {-1,0}};\n        \n        int res = 0;\n        while(!pq.isEmpty()){\n            \n            int[] cell = pq.poll();\n            \n            for(int[] d : dirs){\n                \n                int r = cell[0] + d[0];\n                int c = cell[1] + d[1];\n                \n                // 只看edge裡面一圈\n                if(r>0 && c>0 && r<h-1 && c<w-1 && visited[r][c]==false ){\n                    visited[r][c]=true;\n                    pq.offer(new int[]{r, c, Math.max(cell[2], heightMap[r][c])});\n                    int val  = Math.max(0, cell[2]-heightMap[r][c]);\n                    res += val;\n                }\n            }\n        }\n        return res;\n        \n    }\n      /*\n\n    [ 0 0 0 0]\n    [ 0 8 0 0]\n    [ 0 4 2 0]\n    [ 0 0 0 0]\n    [ 0 0 0 0]\n\n    */\n\n// 高度最小的先 \n\n        /*\n    [[12,13,1,12]\n    ,[13,\"4\",13,12].  水位會流成8\n    ,[13,8,10,12]\n    ,[12,13,12,12]\n    ,[13,13,13,13]]\n\n\n    [ 0 0 0 0]\n    [ 0 9 0 0]\n    [ 0 5 2 0]\n    [ 0 0 0 0]\n    [ 0 0 0 0]\n\n    */\n\n}","compare_result":"111111111111111111111111111111111111111111","title_slug":"trapping-rain-water-ii","has_notes":false,"flag_type":1}