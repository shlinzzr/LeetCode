{"id":859583233,"question_id":104,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671005833,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/859583233/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"42.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        \n        return getDepth(root);\n    }\n    \n    private int getDepth(TreeNode root){\n        \n        if(root==null)\n            return 0;\n        \n        return Math.max(getDepth(root.left), getDepth(root.right))+1;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}