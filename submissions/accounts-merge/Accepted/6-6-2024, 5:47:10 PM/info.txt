{"id":1279371202,"question_id":721,"lang":"java","lang_name":"Java","time":"6 days, 17 hours","timestamp":1717667230,"status":10,"status_display":"Accepted","runtime":"741 ms","url":"/submissions/detail/1279371202/","is_pending":"Not Pending","title":"Accounts Merge","memory":"48.1 MB","code":"class Solution {\n\n    Map<String, String> parent = new HashMap<>();\n\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n\n        Map<String, List<String>> map = new HashMap<>(); // root, emails\n        Map<String, String> nameMap = new HashMap<>();\n        // init\n        for(List<String> list : accounts){\n            for(int i=1; i<list.size(); i++){\n                parent.put(list.get(i), list.get(i));\n            }\n        }\n        \n        //merge\n        for(List<String> list : accounts){\n            String root = list.get(1);\n            for(int i=1;i<list.size(); i++){\n                parent.put(find( list.get(i)) , find(root));\n            }\n        }\n\n\n        for(List<String> list : accounts){\n            for(int i=1; i<list.size(); i++){\n                String org = list.get(i);\n                String root = find(org);\n                map.putIfAbsent(root, new ArrayList<>());\n\n                if(!map.get(root).contains(org))\n                    map.get(root).add(org);\n            }\n\n\n            String name = list.get(0);\n            nameMap.put(find(list.get(1)), name);\n        }\n\n        // List<List<String>> res = new ArrayList<>(map.values());\n        List<List<String>> res= new ArrayList<>();\n        for(String k : map.keySet()){\n\n            List<String> list =  new ArrayList( new HashSet<>(map.get(k)));\n            Collections.sort(list);\n            list.add(0, nameMap.get(find(list.get(0))));\n            res.add(list);\n        }\n\n        // for(List<String> sub : res){\n        //     Collections.sort(sub);\n        //     sub.add(0, nameMap.get(find(sub.get(0))));\n        // }\n\n        return res;\n\n\n\n        \n    }\n\n    private String find(String x){\n        if(!parent.get(x).equals(x)) parent.put(x, find(parent.get(x)));\n        return parent.get(x);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"accounts-merge","has_notes":false,"flag_type":1}