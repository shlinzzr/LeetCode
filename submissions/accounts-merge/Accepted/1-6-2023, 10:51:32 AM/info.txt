{"id":872335840,"question_id":721,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672973492,"status":10,"status_display":"Accepted","runtime":"158 ms","url":"/submissions/detail/872335840/","is_pending":"Not Pending","title":"Accounts Merge","memory":"63.6 MB","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> acts) {\n        Map<String, String> owner = new HashMap<>();\n        Map<String, String> parents = new HashMap<>();\n        \n        for (List<String> a : acts) {\n            for (int i = 1; i < a.size(); i++) {\n                parents.put(a.get(i), a.get(i));\n                owner.put(a.get(i), a.get(0));\n            }\n        }\n        // /**/\n        // for(Map.Entry<String, String>en : parents.entrySet()){\n        //     System.out.println(en.getKey()+ \", \" + en.getValue());\n        // }\n        // System.out.println();\n        //  for(Map.Entry<String, String>en : owner.entrySet()){\n        //     System.out.println(en.getKey()+ \", \" + en.getValue());\n        // }\n        \n        \n        for (List<String> a : acts) {\n            String p = find(a.get(1), parents);\n            for (int i = 2; i < a.size(); i++)\n                parents.put(find(a.get(i), parents), p);\n        }\n        \n        // /**/\n        // System.out.println();\n        // for(Map.Entry<String, String>en : parents.entrySet()){\n        //     System.out.println(en.getKey()+ \", \" + en.getValue());\n        // }\n        \n        \n        Map<String, TreeSet<String>> unions = new HashMap<>();\n        for(List<String> a : acts) {\n            String p = find(a.get(1), parents);\n            if (!unions.containsKey(p)) unions.put(p, new TreeSet<>());\n            for (int i = 1; i < a.size(); i++)\n                unions.get(p).add(a.get(i));\n        }\n        \n        // System.out.println();\n        // for(Map.Entry<String, TreeSet<String>>en : unions.entrySet()){\n        //     System.out.println(en.getKey()+ \", \" + en.getValue().toString());\n        // }\n        \n        \n        List<List<String>> res = new ArrayList<>();\n        for (String p : unions.keySet()) {\n            List<String> emails = new ArrayList(unions.get(p));\n            emails.add(0, owner.get(p));\n            res.add(emails);\n        }\n        return res;\n    }\n    \n// David4@m.co, David3@m.co\n// David3@m.co, David2@m.co\n// David0@m.co, David0@m.co\n// David2@m.co, David0@m.co\n// David1@m.co, David0@m.co\n// David5@m.co, David3@m.co\n    \n    \n    private String find(String s, Map<String, String> p) {\n        \n//         System.out.println(\"\\ncall find( \" + s   +\"== p.get(s)=\" + p.get(s) );\n        \n//         if(p.get(s) == s )\n//             System.out.println(\"return s=\"+s);\n        \n        return p.get(s) == s ? s : find(p.get(s), p);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"accounts-merge","has_notes":false,"flag_type":1}