{"id":951957041,"question_id":721,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684313281,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/951957041/","is_pending":"Not Pending","title":"Accounts Merge","memory":"47 MB","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n        List<List<String>> res = new ArrayList<>();\n        \n        HashMap<String, String> nameMap = new HashMap<>();\n        \n        UnionFind uf = new UnionFind();\n        \n        for(List<String> list : accounts){\n            \n            String name = list.get(0);\n            \n            for(int i=1; i<list.size(); i++){\n                uf.parent.put(list.get(i), list.get(i));\n                nameMap.put(list.get(i), name);\n            }\n        }\n        \n        \n        for(List<String> list : accounts){\n            \n            String root = list.get(1);\n            \n            for(int i=2; i<list.size(); i++){\n                \n                if(!root.equals(uf.find(list.get(i)))){\n                    uf.union(root, uf.find(list.get(i)));\n                }\n            }\n        }\n        \n        HashSet<String> set = new HashSet<>();\n        for(Map.Entry<String, String> en : uf.parent.entrySet()){\n            \n            if(en.getKey().equals(en.getValue())){ // is root\n                   set.add(en.getKey());\n            }\n         }\n        \n        for(String s : set){\n            for(Map.Entry<String, String> en : uf.parent.entrySet()){\n                if(s.equals(uf.find(en.getValue()))){\n                    uf.parent.put(en.getKey(), s);\n                }\n            }\n        }\n        \n            \n            \n        \n        \n        \n        \n        HashMap<String, List<String>> map = new HashMap<>();\n        \n        \n        for(Map.Entry<String, String> en : uf.parent.entrySet()){\n            \n            if(en.getKey().equals(en.getValue())){ // is root\n                \n            }\n            \n            \n            map.putIfAbsent(en.getValue(), new ArrayList<>());\n            map.get(en.getValue()).add(en.getKey());\n        }\n        \n        for(Map.Entry<String, List<String>> en : map.entrySet()){\n            List<String> list = en.getValue();\n            Collections.sort(list);\n            list.add(0, nameMap.get(en.getKey()));\n            \n            res.add(list);\n        \n        }\n        \n        return res;\n        \n        \n        \n    }\n    \n     class UnionFind{\n        \n         \n         HashMap<String, String> parent;\n         \n        \n        public UnionFind(){\n            \n            parent = new HashMap<>();\n        }\n        \n         public String find(String a){\n             \n             if(a.equals(parent.get(a))){\n                 return a;\n             }\n             \n             parent.put( a, find(parent.get(a)) );\n             return parent.get(a);\n         }\n        \n        public boolean union(String a, String b){\n            \n             a = find(a);\n             b = find(b);\n            \n            if(a!=null && a.equals(b)){\n                return false;\n            }\n            \n            parent.put(b, a);\n            return true;\n        }\n         \n         \n        \n//         public void union(int a, int b){\n            \n//             a = find(a);\n//             b = find(b);\n            \n//             if(a==b)\n//                 return ;\n            \n//             if(weight[a]>= weight[b]){\n//                 weight[a]+=weight[b];\n//                 parent[b] = a;\n//             }else{\n//                 weight[b]+=weight[a];\n//                 parent[a] = b;\n//             }\n            \n            \n//         }\n        \n//         public int find(int x){\n//             if(parent[x] ==x)\n//                 return x;\n            \n//             parent[x] = find(parent[x]);\n//             return parent[x];\n//         }\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"accounts-merge","has_notes":false,"flag_type":1}