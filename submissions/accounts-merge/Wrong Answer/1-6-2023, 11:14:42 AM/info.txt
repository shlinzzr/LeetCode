{"id":872346416,"question_id":721,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672974882,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/872346416/","is_pending":"Not Pending","title":"Accounts Merge","memory":"N/A","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n     \n        \n        HashMap<String, String> parentMap = new HashMap<>(); // email, parent\n        HashMap<String, String> userMap = new HashMap<>(); // email, user\n        \n        \n       for (List<String> list : accounts) {\n            String user = list.get(0);\n            for(int i=1; i<list.size();i++){\n                userMap.put(list.get(i), user);\n                parentMap.put(list.get(i), list.get(i)); //initialize : parent is self\n            }\n        }\n\n        // union find\n        for(List<String> list : accounts){\n            String p = list.get(1);\n            for(int i=2; i<list.size(); i++){\n                parentMap.put(find(list.get(i), parentMap), p);\n            }\n        }\n        \n        // // /**/\n        // System.out.println();\n        // for(Map.Entry<String, String>en : parentMap.entrySet()){\n        //     System.out.println(en.getKey()+ \", \" + en.getValue());\n        // }\n        HashMap<String, TreeSet<String>> unions = new HashMap<>();\n        for(List<String> list : accounts){\n            String p = list.get(1);\n            \n            if(!unions.containsKey(p)){\n                unions.put(p, new TreeSet<>());\n            }\n            \n            for(int i=1; i<list.size(); i++){\n                unions.get(p).add(list.get(i));    \n            }\n        }\n        \n        \n        \n        List<List<String>> res = new ArrayList<>();\n        for(String p : unions.keySet()){\n            \n            List<String> list = new ArrayList<>(unions.get(p));\n            list.add(0, userMap.get(p));\n            res.add(list);\n        }\n        \n        \n        \n//         for(Map.Entry<String, HashSet<String>> en : map.entrySet()){\n//             List<String> list = new ArrayList<>();\n            \n//             list.addAll(new ArrayList<>(en.getValue()));\n//             Collections.sort(list);\n//             list.add(0, emailUser.get(en.getKey()));\n//             res.add(list);\n//         }\n        \n        return res;\n        \n        \n        \n         \n        \n    }\n    \n    \n    private String find(String s, Map<String, String> map){\n        \n        return s.equals(map.get(s))? s : find(map.get(s), map);\n        \n    }\n    \n}","compare_result":"11010000000000000000000000000000000000000000000000","title_slug":"accounts-merge","has_notes":false,"flag_type":1}