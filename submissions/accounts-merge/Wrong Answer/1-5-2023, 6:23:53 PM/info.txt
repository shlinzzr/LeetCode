{"id":871849790,"question_id":721,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672914233,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/871849790/","is_pending":"Not Pending","title":"Accounts Merge","memory":"N/A","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n        List<List<String>> res = new ArrayList<>();\n        \n        HashMap<String, List<String>> emailGroup = new HashMap<>(); // mainEmail, sameEmail\n        HashMap<String, String> emailUser = new HashMap<>(); // mainEmail, user\n         \n        int len = accounts.size();\n        for(int i=0; i<len; i++){\n            \n            List<String> list = accounts.get(i);\n            String user = list.get(0);\n            \n            boolean hasMainEmail=false;\n            String mainEmail = null;\n            for(int j=1; j<list.size();j++){\n                String m = list.get(j);\n                if(emailGroup.containsKey(m)){\n                    mainEmail = m;\n                    break;\n                }\n            }\n            \n            if(mainEmail==null){\n                mainEmail=list.get(1);\n                emailGroup.put(mainEmail, new ArrayList<>());\n                emailUser.put(mainEmail, user);\n            }\n            \n            emailGroup.get(mainEmail).addAll(list);\n            emailGroup.get(mainEmail).remove(user);\n            \n        }\n        \n        \n        \n        HashMap<String, HashSet<String>> map = new HashMap<>();\n        \n        Iterator<Map.Entry<String,  List<String>>> itt = emailGroup.entrySet().iterator();\n        while (itt.hasNext()) {\n            Map.Entry<String,  List<String>> en = itt.next();\n            System.out.println(en.getKey() + \" \" + en.getValue());\n        }\n        \n        \n        \n        \n        boolean redo = true;\n        while(redo){\n            redo=false;\n            \n            \n            Iterator<Map.Entry<String,  List<String>>> it = emailGroup.entrySet().iterator();\n            while (it.hasNext()) {\n                Map.Entry<String,  List<String>> en = it.next();\n                List<String> list = en.getValue();\n                for(String s : list){\n                    if(emailGroup.containsKey(s) && !map.containsKey(s)){\n                        emailGroup.get(s).addAll(new HashSet<>(list));\n                        \n                        map.put(s, new HashSet<>());\n                        map.get(s).addAll( new HashSet<>(emailGroup.get(s))  );\n                        redo=true;\n                        // it.remove();\n                        break;\n                    }\n                    \n                    if(s.equals(list.get(list.size()-1))){\n                        map.put(en.getKey(), new HashSet<>(en.getValue()));\n                    }\n                }\n            }\n        }\n        \n        System.out.println(map.size());\n        \n        for(Map.Entry<String, HashSet<String>> en : map.entrySet()){\n            List<String> list = new ArrayList<>();\n            \n            list.addAll(new ArrayList<>(en.getValue()));\n            Collections.sort(list);\n            list.add(0, emailUser.get(en.getKey()));\n            res.add(list);\n        }\n        \n        return res;\n        \n        \n        \n         \n        \n    }\n}","compare_result":"11011100000011000000000000000000000000000000000000","title_slug":"accounts-merge","has_notes":false,"flag_type":1}