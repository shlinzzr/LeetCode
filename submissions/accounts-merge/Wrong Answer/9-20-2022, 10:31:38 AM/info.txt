{"id":804122025,"question_id":721,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663641098,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/804122025/","is_pending":"Not Pending","title":"Accounts Merge","memory":"N/A","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n        List<List<String>> res = new ArrayList<>();\n        Map<String, List<List<String>>> map = new HashMap();\n        for(List<String> ac : accounts){\n            String name = ac.get(0);\n            List<List<String>> list = map.getOrDefault(name , new ArrayList<>());\n            \n            \n            ac.remove(0);\n            \n            \n            if(list.size()==0){\n                \n                List<String> emailList = new ArrayList<>(new HashSet<>(ac));\n                Collections.sort(emailList);\n                list.add(emailList);\n                map.put(name, list);\n            }else{\n                \n                boolean isContain=false;\n                for(int q=0; q<list.size(); q++){\n                    List<String> emailList = list.get(q);\n                    \n                    HashSet<String> emailSet = new HashSet<>(emailList);\n                    \n                    for(int i=0; i<ac.size(); i++){\n                        String email = ac.get(i);\n                        if(emailSet.contains(email)){\n                            // emailList.addAll(ac);\n                            emailSet.addAll(new HashSet<>(ac));\n                            emailList = new ArrayList<>(emailSet);\n                            Collections.sort(emailList);\n                            list.set(q, emailList);\n                            isContain=true;\n                            break;\n                        }\n                    }\n                    \n                }\n                if(isContain==false){\n                    \n                    List<String> emailList = new ArrayList<>(new HashSet<>(ac));\n                    Collections.sort(emailList);\n                    \n                    list.add(emailList);\n                    map.put(name, list);\n                }\n            }\n        }\n        \n        for(Map.Entry<String, List<List<String>>> en : map.entrySet()){\n            String name = en.getKey();\n            List<List<String>> list = en.getValue();\n            for(List<String> emailList : list){\n                emailList.add(0, name);\n                res.add(emailList);\n            }\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"11111110111011110001111110101010110000000000000000","title_slug":"accounts-merge","has_notes":false,"flag_type":1}