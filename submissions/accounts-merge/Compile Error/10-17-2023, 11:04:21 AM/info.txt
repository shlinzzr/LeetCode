{"id":1077173464,"question_id":721,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697511861,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1077173464/","is_pending":"Not Pending","title":"Accounts Merge","memory":"N/A","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n        \n        List<List<String>> res= new ArrayList<>();\n\n        Map<String, String> map = new HashMap<>();\n        Map<String, String> emailToName = new HashMap<>();\n\n        // init\n        for(List<String> list : accounts){\n            String name = list.get(0);\n            for(int i=1; i<list.size(); i++){\n                map.put(list.get(i), list.get(i));\n                emailToName.put(list.get(i), name);\n            }\n        }\n\n        // union\n        for(List<String> list : accounts){\n            String root= list.get(1);\n            for(int i=2; i<list.size(); i++){\n                if(!root.equals(find(map, list.get(i)))){\n                    union(map, root, list.get(i));\n                }\n            }\n        }\n\n        // chg email's parent to root;\n        TreeSet<String> set = new TreeSet<>();\n        for(Map.Entry<String, String> en : map.entrySet()){\n            if(en.getKey().equals(en.getValue()))\n                set.add(en.getKey());\n        }\n        for(String r : set){\n            for(Map.Entry<String, String> en : map.entrySet()){\n                if(r.equals(find(map, en.getValue())))\n                    map.put(en.getKey(), p);\n            }\n        }\n\n//      // this is wrong way to chg email's parent to root;\n        // to check whether the email is root : map.get(x)==x\n        // for(List<String> list : accounts){\n        //     for(int i=1; i<list.size(); i++){\n        //         String root = find(map, list.get(i));\n        //         map.put(list.get(i), root);\n        //         set.add(root);\n        //     }\n        // }\n\n        for(String root : set){\n            String name = emailToName.get(root);\n            List<String> list = new ArrayList<>();\n\n            for(Map.Entry<String, String> en : map.entrySet()){\n                String email = en.getKey();\n                String parent = en.getValue();\n\n                if(root.equals(parent)){\n                    list.add(email);\n                }\n            }\n\n            Collections.sort(list);\n            list.add(0, name);\n            res.add(list);\n        }\n\n        return res;\n\n    }\n\n    private String find(Map<String, String> map, String x){\n        if(map.get(x)!=x){\n            map.put(x, find(map, map.get(x)));\n        }\n\n        return map.get(x);\n    }\n\n    private void union(Map<String, String> map, String a, String b){\n        a = find(map, a);\n        b = find(map, b);\n        \n        if(a.equals(b))\n            return ;\n        \n        map.put(b, a);\n    }\n}","compare_result":null,"title_slug":"accounts-merge","has_notes":false,"flag_type":1}