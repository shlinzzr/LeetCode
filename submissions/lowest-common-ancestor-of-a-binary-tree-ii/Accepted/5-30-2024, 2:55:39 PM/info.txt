{"id":1272116463,"question_id":1780,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717052139,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1272116463/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree II","memory":"47.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n\n    boolean pFound=false, qFound=false;\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n\n        find(root, p, q);\n\n        if(pFound && qFound){\n            return helper(root, p, q);\n        }\n\n        return null;\n    }\n\n    private TreeNode helper(TreeNode node, TreeNode p, TreeNode q){\n\n        if(node==null || p==null || q==null) return null;\n\n        if(node.val==p.val || node.val==q.val) return node;\n\n        TreeNode left = helper(node.left, p, q);\n        TreeNode right = helper(node.right, p, q);\n\n        if(left!=null && right!=null) return node;\n\n\n        return left!=null ? left : right;\n    }\n\n    private void find(TreeNode node ,TreeNode p, TreeNode q){\n        if(node==null) return;\n\n        if(node.val==p.val) pFound=true;\n        if(node.val==q.val) qFound=true;\n\n        if(pFound && qFound) return;\n        find(node.left, p, q);\n        find(node.right, p, q);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree-ii","has_notes":false,"flag_type":1}