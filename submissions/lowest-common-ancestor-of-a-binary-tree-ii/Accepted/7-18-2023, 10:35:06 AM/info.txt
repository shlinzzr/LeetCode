{"id":997175472,"question_id":1780,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689647706,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/997175472/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree II","memory":"45.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    \n    boolean pFound, qFound;\n    \n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        TreeNode LCA = LCA(root, p, q);\n        return pFound && qFound ? LCA : null;\n        \n//         if(root==p || root==q || root==null)\n//             return root;\n        \n//         TreeNode left = lowestCommonAncestor(root.left, p, q);\n//         TreeNode right = lowestCommonAncestor(root.right, p, q);\n        \n//         if(left!=null && right!=null)\n//             return root;\n        \n//         if(left==null && right==null)\n//             return null;\n        \n//         return left==null? right : left;    \n        \n//     }\n        \n        \n    }\n    \n    \n    public TreeNode LCA(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null) \n            return root;\n        \n        TreeNode left = LCA(root.left, p, q);     \n        TreeNode right = LCA(root.right, p, q);\n        \n        if(left!=null && right!=null)\n            return root;\n        \n        if (root == p) {\n            pFound = true;\n            return root;\n        }\n        if (root == q) {\n            qFound = true;\n            return root;\n        }\n        \n        return left==null? right : left;    \n    }\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree-ii","has_notes":false,"flag_type":1}