{"id":997173232,"question_id":1780,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689647421,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/997173232/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n      \n        if(root==p || root==q || root==null)\n            return root;\n        \n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n        \n        if(left!=null && right!=null)\n            return root;\n        \n        if(left==null && right==null)\n            return null;\n        \n        return left==null? right : left;    \n        \n    }\n}","compare_result":"11011010101111101111111111101010111111111111111111111101110111111101110111111010","title_slug":"lowest-common-ancestor-of-a-binary-tree-ii","has_notes":false,"flag_type":1}