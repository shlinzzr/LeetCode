{"id":982910385,"question_id":1918,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1688112342,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/982910385/","is_pending":"Not Pending","title":"Maximum Score of a Good Subarray","memory":"N/A","code":"class Solution {\n    public int maximumScore(int[] nums, int k) {\n       \n        int max = nums[k];\n        \n        int min = nums[k];\n        \n        int len = nums.length;\n        \n        int st=k, ed=k;\n        \n        while(st>0 || ed<len-1){\n            \n            \n            if(st>0 && nums[st]>=nums[ed] || ed==len-1){\n                st--;\n                min = Math.min(min, nums[st]);\n                \n            }else{\n                ed++;\n                min = Math.min(min, nums[ed]);\n            }\n            \n            max = Math.max(max, min*(ed-st+1));\n            \n        }\n                           \n                           return max;\n        \n        \n    }\n}","compare_result":"110000000000000000001000001000000000000000000000010000010000001000110101","title_slug":"maximum-score-of-a-good-subarray","has_notes":false,"flag_type":1}