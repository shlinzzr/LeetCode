{"id":856582133,"question_id":673,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670495771,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/856582133/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"44.2 MB","code":"class Solution {\n//     public int findNumberOfLIS(int[] nums) {\n        \n//         int max=0;\n        \n//         int len = nums.length;\n        \n//         int[] dp = new int[len];\n//         int[] cnt = new int[len];\n//         Arrays.fill(dp, 1);\n        \n//         for(int i=0; i<len; i++){\n//             for(int j=0; j<i; j++){\n                \n//                 if(nums[i]>nums[j]){\n//                     dp[i] = Math.max(dp[i], dp[j]+1);\n//                 }\n//             }\n            \n//             max = Math.max(max,dp[i]);\n            \n//         }\n        \n        \n//         int cnt =0; \n//         for(int d : dp){\n//             System.out.println(d);\n//             if(d==max)\n//                 cnt++;\n//         }\n        \n//         return cnt;\n        \n//     }\n    public int findNumberOfLIS(int[] nums) {\n        int len = nums.length;\n        int res = 0;\n        int max = 0;\n        int[] dp =  new int[len];\n        int[] cnt = new int[len];\n        \n        Arrays.fill(dp, 1);\n        Arrays.fill(cnt, 1);\n        \n        for(int i = 0; i<len; i++){\n            for(int j = 0; j <i ; j++){\n                if(nums[i] > nums[j]){\n                    if(dp[i] == dp[j] + 1)\n                        cnt[i] += cnt[j];\n                    \n                    if(dp[i] < dp[j] + 1){\n                        dp[i] = dp[j] + 1;\n                        cnt[i] = cnt[j];\n                    }\n                }\n            }\n            if(max == dp[i])\n                res += cnt[i];\n            \n            if(max < dp[i]){\n                max = dp[i];\n                res = cnt[i];\n            }\n        }\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-longest-increasing-subsequence","has_notes":false,"flag_type":1}