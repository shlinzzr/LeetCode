{"id":684709983,"question_id":1036,"lang":"java","lang_name":"Java","time":"2 years, 1 month","timestamp":1650534060,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/684709983/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"N/A","code":"class Solution {\n    public int orangesRotting(int[][] grid) {\n        Queue<int[]> queue = new LinkedList<int[]>();\n        \n        int h = grid.length;\n        int w = grid.length;\n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                if(grid[j][i]==2)\n                    queue.offer(new int[]{j,i});\n            }\n        }\n        \n        \n        int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n        \n        int c=0;\n        \n        while(!queue.isEmpty()){\n            int[] curr = queue.poll();\n            \n            \n            boolean hasRotten = false;\n            for(int[] d : dirs){\n                int x = curr[0] + d[0];\n                int y = curr[1] + d[1];\n                \n                if(x<0 || x>=w || y<0 || y>=h || grid[y][x]!=1)\n                    continue;\n                queue.offer(new int[]{x,y});\n                hasRotten=true;\n                grid[y][x]=2;\n            }\n            \n            if(hasRotten) c++;\n        }\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                if(grid[j][i]==1)\n                    return -1;\n            }\n        }\n        \n        return c;\n    }\n}","compare_result":"111111010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}