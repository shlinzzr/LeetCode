{"id":860461979,"question_id":1036,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671160249,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/860461979/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"41.6 MB","code":"class Solution {\n    public int orangesRotting(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        Queue<int[]> queue = new LinkedList<>();\n        \n        int f=0;\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(grid[i][j]==1)\n                    f++;\n                \n                if(grid[i][j]==2){\n                    queue.add(new int[]{i, j});\n                }\n            }\n        }\n        \n        if(f==0)\n            return 0;\n        \n        \n        int step = bfs(grid, queue, f);\n        \n//         for(int i=0; i<h; i++){\n//             for(int j=0; j<w; j++){\n                \n//                 if(grid[i][j]==1){\n//                     return -1;\n//                 }\n//             }\n//         }\n        \n        return step;\n        \n        \n    }\n    \n    int[][] dirs = new int[][]{{0,1},{0,-1}, {1,0}, {-1,0}};\n    \n    private int bfs(int[][] grid, Queue<int[]> queue, int f){\n        \n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int step=0;\n        \n        while(!queue.isEmpty()){\n            System.out.println(queue.size());\n            for(int i=queue.size(); i>0; i--){\n                \n                int[] p = queue.poll();\n                \n                for(int[] d : dirs){\n                    \n                    int r = p[0]+d[0];\n                    int c = p[1]+d[1];\n                    if(r<0 || r>=h || c<0 || c>=w)\n                        continue;\n                    \n                    if(grid[r][c]==1){\n                        f--;\n                        grid[r][c]=2;\n                        queue.offer(new int[]{r, c});\n                    }\n                        \n                }\n            }\n            \n            step++;\n        }\n        \n        \n        \n        return f>0? -1 : step-1;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}