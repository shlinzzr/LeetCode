{"id":914268477,"question_id":282,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678697228,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/914268477/","is_pending":"Not Pending","title":"Expression Add Operators","memory":"43.1 MB","code":"class Solution {\n    public List<String> addOperators(String s, int target) {\n        List<String> res = new ArrayList<String>();\n        \n        if(s == null || s.length() == 0) \n            return res;\n        \n        helper(res, \"\", s, target, 0, 0, 0);\n        \n        return res;\n    }\n    \n    public void helper(List<String> res, String path, String s, int target, int pos, long curr, long multed){\n        if(pos == s.length()){\n            if(target == curr)\n                res.add(path);\n            return;\n        }\n        \n        for(int i = pos; i < s.length(); i++){\n            if(i != pos && s.charAt(pos) == '0') \n                break;\n            \n            long num = Long.parseLong(s.substring(pos, i + 1));\n            \n            if(pos == 0){ // path is \"num\" when pos==0\n                helper(res, path+num, s, target, i + 1, num, num);\n            }\n            \n            else{\n                helper(res, path+\"+\"+num, s, target, i + 1, curr+num , num);\n                \n                helper(res, path+\"-\"+num, s, target, i + 1, curr-num, -num);\n                \n                helper(res, path+\"*\"+num, s, target, i + 1, curr-multed + multed*num, multed*num );\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111","title_slug":"expression-add-operators","has_notes":false,"flag_type":1}