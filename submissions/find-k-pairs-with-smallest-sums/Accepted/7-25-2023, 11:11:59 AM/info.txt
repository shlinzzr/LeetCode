{"id":1003165006,"question_id":373,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690254719,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/1003165006/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"57.5 MB","code":"class Solution {\n    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> a[0] - b[0]  // val, i, j\n        );\n        \n        for(int i=0; i<nums1.length; i++){\n            pq.offer(new int[]{nums1[i]+nums2[0], i, 0});\n        }\n        \n\n        while(!pq.isEmpty() && k>0){\n            \n            int[] p = pq.poll();\n            int val = p[0];\n            int i = p[1];\n            int j = p[2];\n            \n            List<Integer> list = new ArrayList<>();\n            list.add(nums1[i]);\n            list.add(nums2[j]);\n            res.add(list);\n            \n            if(j+1<nums2.length){\n                pq.offer(new int[]{nums1[i]+nums2[j+1], i, j+1});\n            }\n            \n            k--;\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false,"flag_type":1}