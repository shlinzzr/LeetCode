{"id":980478397,"question_id":373,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1687833940,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/980478397/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"57 MB","code":"class Solution {\n    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {\n        List<List<Integer>>  res = new ArrayList<>();\n        \n        PriorityQueue<Tuple> pq =new PriorityQueue<>(\n            (a,b) -> a.val-b.val\n        );\n        \n        \n        for(int i=0; i<nums1.length; i++){\n            pq.offer(new Tuple(i, 0, nums1[i] + nums2[0]));\n        }\n        \n        \n        while(!pq.isEmpty() && k>0){\n            \n            Tuple p = pq.poll();\n            \n            List<Integer> list = new ArrayList<>();\n            list.add(nums1[p.i]);\n            list.add(nums2[p.j]);\n            res.add(list);\n            k--;\n            if(p.j+1==nums2.length)\n                continue;\n        \n            pq.offer(new Tuple(p.i, p.j+1, nums1[p.i] + nums2[p.j+1]));\n            \n        }\n        \n        return res;\n        \n        \n            \n            \n            \n            \n        \n        \n        \n    }\n    \n    \n    class Tuple{\n        \n        int i;\n        int j;\n        int val;\n        public Tuple(int i, int j, int val){\n            this.i=i;\n            this.j=j;\n            this.val=val;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false,"flag_type":1}