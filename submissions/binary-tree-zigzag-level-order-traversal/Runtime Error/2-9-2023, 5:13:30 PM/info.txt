{"id":894600955,"question_id":103,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675934010,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/894600955/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        Queue<TreeNode> q = new LinkedList<>();\n        q.offer(root);\n        boolean front = false;\n        int lv =1;\n        while(!q.isEmpty()){\n            \n            int siz = q.size();\n            for(int i=0; i<siz; i++){\n                \n                if(res.size()<lv)\n                    res.add(new ArrayList<>());\n                \n                TreeNode p = q.poll();\n                if(front){\n                    res.get(lv-1).add(0, p.val);    \n                }else{\n                    res.get(lv-1).add(p.val);\n                }\n                \n                \n                if(p.left!=null)\n                    q.offer(p.left);\n                \n                if(p.right!=null)\n                    q.offer(p.right);\n            }\n            lv++;\n            front=!front;\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"110000000000000000000000000000000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}