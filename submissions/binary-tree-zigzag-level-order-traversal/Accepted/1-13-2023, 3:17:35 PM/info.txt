{"id":877286155,"question_id":103,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673594255,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/877286155/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"41.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        List<List<Integer>> res = new ArrayList<>();\n        helper(root, res, 0);\n        return res;\n    }\n    \n    private void helper(TreeNode curr, List<List<Integer>> res, int lv){\n        \n        if(curr==null)\n            return;\n        \n        if(res.size()<lv+1){\n            res.add(new ArrayList<>());\n        }\n        \n        if(lv%2==0)\n            res.get(lv).add(curr.val);\n        else{\n            res.get(lv).add(0, curr.val);\n        }\n        \n        helper(curr.left, res, lv+1);\n        helper(curr.right, res, lv+1);\n        \n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}