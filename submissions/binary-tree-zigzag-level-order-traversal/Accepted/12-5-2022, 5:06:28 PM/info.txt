{"id":854931288,"question_id":103,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670231188,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/854931288/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"40.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        \n        helper(res, 0, root);\n        \n        return res;\n        \n    }\n    \n    private void helper(List<List<Integer>> res, int level, TreeNode root){\n        if(root==null)\n            return; \n        \n        if(res.size()<level+1){\n            res.add(new ArrayList<>());\n        }\n        \n        List<Integer> list = res.get(level);\n        \n        if(level%2==0){\n            list.add(root.val);\n        }else{\n            list.add(0, root.val);\n        }\n        \n        \n        helper(res,  level+1, root.left);\n        helper(res,  level+1, root.right);        \n        \n        \n        \n        \n    }\n    \n}\n","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}