{"id":819961226,"question_id":103,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665472506,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/819961226/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"42.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        \n        List<List<Integer>>  res = new ArrayList<>();\n        helper(root, 1, res);\n        return res;\n        \n        \n    }\n    \n    private void helper(TreeNode root, int level, List<List<Integer>> res){\n        if(root==null)\n            return;\n        \n        if(res.size()<level){\n            res.add(new ArrayList<>());\n        }\n        \n        \n        helper(root.left, level+1, res);\n        \n        if(level%2==1)\n            res.get(level-1).add(root.val);\n        else \n            res.get(level-1).add(0, root.val);\n        \n        helper(root.right, level+1, res);\n    }\n    \n}","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}