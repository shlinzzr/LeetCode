{"id":954999495,"question_id":81,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684746369,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/954999495/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"N/A","code":"class Solution {\n    public boolean search(int[] nums, int target) {\n     \n        int len = nums.length;\n        if(len==1 && nums[0]==target)\n            return true;\n        \n        \n        // find min \n        int st = 0, ed=len-1;\n        \n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            \n            if(nums[mid]>nums[ed]){\n                st=mid+1;\n            }else{\n                ed=mid;\n            }\n        }\n        \n        int fidx = st;\n        // System.out.println()\n        \n        st=0;\n        ed=len-1;\n        while(st<ed){\n            \n            int left = (st+fidx)%len;\n            int right = (ed+fidx)%len;\n            \n            int mid = st+(ed-st)/2;\n            int tran = (mid+fidx)%len;\n            \n            if(nums[tran]==target)\n                return true;\n            else if(nums[tran]<target){\n                st = mid+1;\n            }else{\n                ed=mid-1;\n            }\n        }\n        \n        return false;\n        \n        \n        \n        \n    }\n}","compare_result":"1111100101111111011110111011110111101111011011101101110110111011110111111111011110111101111111110111101111010101101010011011111110111111110111111011110110111101011111111101111111011111111101110111011011101111111110110011111111111110111111111111111111111110111101111111111110111111","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false,"flag_type":1}