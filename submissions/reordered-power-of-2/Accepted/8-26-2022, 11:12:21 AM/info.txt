{"id":783591720,"question_id":900,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661483541,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/783591720/","is_pending":"Not Pending","title":"Reordered Power of 2","memory":"41.1 MB","code":"class Solution {\n    \n    \n    \n    public boolean reorderedPowerOf2(int n) {\n        int[] inputFreq = freqCount(n);\n        \n        for(int i=0; i<31; i++){\n            int powerOf2 = (int)Math.pow(2, i);\n            int[] power2Freq = freqCount(powerOf2);\n            \n            if(compareArr(inputFreq, power2Freq)){\n                return true;\n            }\n        }\n        \n        return false;\n        \n        \n    }\n    \n    private boolean compareArr(int[] arr1, int[] arr2){\n        for(int i=0; i<10; i++){\n            if(arr1[i]!= arr2[i])\n                return false;\n        }\n        return true;\n    }\n    \n    \n    \n    private int[] freqCount(int n){\n        int[] freq = new int[10];\n        while(n>0){\n            freq[n%10]++;\n            n/=10;\n        }\n        return freq;\n    }\n    \n    \n//     private boolean isPowerOf2(int n){\n        \n//         if(n==1)\n//             return true;\n        \n//         while(n>1){\n            \n//             if(n%2==1)\n//                 return false;\n            \n//             n /=2;\n//         }\n        \n//         return true;\n        \n//     }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reordered-power-of-2","has_notes":false,"flag_type":1}