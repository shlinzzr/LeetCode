{"id":985070568,"question_id":532,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1688366300,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/985070568/","is_pending":"Not Pending","title":"K-diff Pairs in an Array","memory":"44.1 MB","code":"class Solution {\n    public int findPairs(int[] nums, int k) {\n        int len = nums.length;\n        \n        // Arrays.sort(nums);\n        \n        HashMap<Integer, Integer> map = new HashMap<>();        \n        \n        int res=0;\n        for(int i=0; i<len; i++){\n            map.put(nums[i], map.getOrDefault(nums[i], 0)+1);\n        }\n        \n        for (Map.Entry <Integer, Integer> entry: map.entrySet()) {\n            int key = entry.getKey();\n            int val = entry.getValue();\n            if (k > 0 && map.containsKey(key + k)) {\n                res++;\n            } else if (k == 0 && val > 1) {\n                res++;\n            }\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"k-diff-pairs-in-an-array","has_notes":false,"flag_type":1}