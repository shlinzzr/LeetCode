{"id":992338936,"question_id":532,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689134438,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/992338936/","is_pending":"Not Pending","title":"K-diff Pairs in an Array","memory":"44.3 MB","code":"class Solution {\n    public int findPairs(int[] nums, int k) {\n        int len = nums.length;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();        \n        \n        int res=0;\n        for(int i=0; i<len; i++){\n            map.put(nums[i], map.getOrDefault(nums[i], 0)+1);\n        }\n        \n        for (Map.Entry <Integer, Integer> entry: map.entrySet()) {\n            int key = entry.getKey();\n            int val = entry.getValue();\n            \n            if(k==0 ){  // k=0, ex: 1,1,1\n                if(val>=2)\n                    res+=2;\n                \n            }else{ //k>0\n                int n1 = key+k;\n                int n2 = key-k;\n                \n                if(map.containsKey(n1)) res++;\n                if(map.containsKey(n2)) res++;\n            }\n            \n        }\n        \n        return res/2;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"k-diff-pairs-in-an-array","has_notes":false,"flag_type":1}