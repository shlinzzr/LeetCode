{"id":1043707043,"question_id":690,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1694157816,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1043707043/","is_pending":"Not Pending","title":"Employee Importance","memory":"45.3 MB","code":"/*\n// Definition for Employee.\nclass Employee {\n    public int id;\n    public int importance;\n    public List<Integer> subordinates;\n};\n*/\n\n// class Solution {\n    \n//     public int getImportance(List<Employee> employees, int id) {\n        \n//         HashMap<Integer, Employee> map = new HashMap<>();\n//         for(Employee e : employees){\n//             map.put(e.id, e);\n//         }\n        \n//         return helper(id, map);\n        \n//     }\n    \n//     private int helper(int id, HashMap<Integer, Employee> map){\n        \n//         int res = 0;\n        \n//         Employee e = map.get(id);\n//         res += e.importance;\n//         List<Integer> sub = e.subordinates;\n//         if(sub!=null && !sub.isEmpty){\n//             for(int s: sub){\n//                 res += helper(s, map);\n//             }\n//         }\n        \n//         return res;\n//     }\n    \n// }\n\n\nclass Solution {\n    public int getImportance(List<Employee> employees, int id) {\n        Map<Integer, Employee> map = new HashMap<>();\n        for (Employee employee : employees) {\n            map.put(employee.id, employee);\n        }\n        return getImportanceHelper(map, id);\n    }\n    \n    private int getImportanceHelper(Map<Integer, Employee> map, int rootId) {\n        Employee root = map.get(rootId);\n        int total = root.importance;\n        for (int subordinate : root.subordinates) {\n            total += getImportanceHelper(map, subordinate);\n        }\n        return total;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"employee-importance","has_notes":false,"flag_type":1}