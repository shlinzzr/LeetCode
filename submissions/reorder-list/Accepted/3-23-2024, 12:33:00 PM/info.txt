{"id":1211360106,"question_id":143,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1711168380,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1211360106/","is_pending":"Not Pending","title":"Reorder List","memory":"48 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n\n        while(slow!=null && fast!=null && fast.next!=null){\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n\n        ListNode l2 = genRev(slow.next);\n        slow.next = null;\n\n        ListNode l1 = head;\n\n        while(l1!=null && l2!=null){\n            ListNode n1 = l1.next;\n            l1.next = l2;\n            ListNode n2 = l2.next;\n            l2.next = n1;\n            l1=n1;\n            l2=n2;\n        }\n\n        \n        \n    }\n\n    private ListNode genRev(ListNode node){\n\n        ListNode prev = null;\n        ListNode curr = node;\n        while(curr!=null){\n            ListNode rev = new ListNode(curr.val);\n            rev.next = prev;\n            prev = rev;\n            curr = curr.next;\n        }\n\n        return prev;\n\n\n    }\n}","compare_result":"111111111111","title_slug":"reorder-list","has_notes":false,"flag_type":1}