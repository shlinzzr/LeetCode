{"id":965817085,"question_id":143,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686133948,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/965817085/","is_pending":"Not Pending","title":"Reorder List","memory":"46 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        \n        if(head==null)\n            return ;\n        \n        ListNode slow=head, fast=head;\n        while(fast!=null && fast.next!=null){\n            slow=slow.next;\n            fast=fast.next.next;\n        }\n        \n        ListNode l2 = getRev(slow.next);  // 1 2 3 4 5 6 => 1 2 3 / 6 5 4 => 1 6 2 5 3 4\n        slow.next = null; \n        \n       \n        ListNode l1 = head;\n        \n        \n        while(l1!=null && l2!=null){\n            ListNode n1 = l1.next;\n            l1.next = l2;\n            ListNode n2= l2.next;\n            l2.next = n1;\n            l1=n1;\n            l2=n2;\n        }\n        \n        \n        \n    }\n    \n    \n    private ListNode getRev(ListNode head){\n        \n        ListNode rev=null;\n        \n        ListNode curr = head;\n        ListNode prev= null;\n        \n        while(curr!=null){\n            rev = new ListNode(curr.val);\n            rev.next=prev;\n            prev=rev;\n            curr=curr.next;\n        }\n        \n        return rev;\n        \n    }\n}","compare_result":"111111111111","title_slug":"reorder-list","has_notes":false,"flag_type":1}