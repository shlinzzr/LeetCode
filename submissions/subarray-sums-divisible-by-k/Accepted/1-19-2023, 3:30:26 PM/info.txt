{"id":881057860,"question_id":1016,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1674113426,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/881057860/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"47.7 MB","code":"class Solution {\n    public int subarraysDivByK(int[] nums, int k) {\n        \n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, 1);\n        int len = nums.length;\n        \n        \n        int sum=0;\n        int res = 0;\n        for(int i=0; i<len; i++){\n            sum = (sum + nums[i]) % k;\n            if(sum < 0) \n                sum += k; \n            \n            res+=map.getOrDefault(sum, 0);\n            \n            map.put(sum, map.getOrDefault(sum, 0)+1);\n            \n            \n            \n        }\n        \n        return res;\n        \n    }\n}\n\n\n// class Solution {\n//     public int subarraysDivByK(int[] A, int K) {\n//         Map<Integer, Integer> map = new HashMap<>();\n//         map.put(0, 1);\n//         int count = 0, sum = 0;\n//         for(int a : A) {\n//             sum = (sum + a) % K;\n//             if(sum < 0) sum += K;  // Because -1 % 5 = -1, but we need the positive mod 4\n//             count += map.getOrDefault(sum, 0);\n//             map.put(sum, map.getOrDefault(sum, 0) + 1);\n//         }\n//         return count;\n//     }\n// }","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k","has_notes":false,"flag_type":1}