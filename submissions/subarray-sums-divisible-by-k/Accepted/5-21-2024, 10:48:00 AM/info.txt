{"id":1263591168,"question_id":1016,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1716259680,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1263591168/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"47.2 MB","code":"class Solution {\n    public int subarraysDivByK(int[] nums, int k) {\n\n        int len = nums.length;\n        Map<Integer,Integer>map = new HashMap<>();\n        map.put(0, 1);\n        int sum = 0;\n        int res = 0;\n        for(int i=0; i<len; i++){\n            sum+= nums[i];\n            sum%=k;\n            if(sum<0) sum+=k;\n\n            if(map.containsKey(sum)){\n                res+= map.get(sum);\n            }\n\n            map.put(sum, map.getOrDefault(sum,0)+1);\n        }\n\n        return res;\n\n\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k","has_notes":false,"flag_type":1}