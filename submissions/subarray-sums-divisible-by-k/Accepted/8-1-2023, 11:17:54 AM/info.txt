{"id":1009007168,"question_id":1016,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690859874,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1009007168/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"44.8 MB","code":"class Solution {\n    public int subarraysDivByK(int[] nums, int k) {\n        int len = nums.length;\n        \n        int cur=0, res= 0 ;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0,1);\n        \n        for(int i=0; i<len; i++){\n            \n            cur = (cur+nums[i])%k;\n            if(cur<0) cur+=k;\n            \n            \n            if(map.containsKey(cur)){\n                res += map.get(cur);\n            }\n            \n            map.put(cur, map.getOrDefault(cur,0)+1);\n        }\n        \n        \n//         for(int i=0; i<len; i++){\n//             sum = (sum + nums[i]) % k;\n//             if(sum < 0) \n//                 sum += k; \n            \n//             res+=map.getOrDefault(sum, 0);\n            \n//             map.put(sum, map.getOrDefault(sum, 0)+1);\n//          }\n        \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k","has_notes":false,"flag_type":1}