{"id":999962238,"question_id":1675,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1689922405,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/999962238/","is_pending":"Not Pending","title":"Magnetic Force Between Two Balls","memory":"57.6 MB","code":"class Solution {\n    public int maxDistance(int[] P, int m) {\n        int n = P.length;\n        \n        Arrays.sort(P);\n        \n        int st = 1, ed = (P[n-1]-P[0])/(m-1);\n        \n        while(st<ed){\n            int d = st + (ed-st+1)/2;\n            \n            \n            boolean bool = isOk(P, d, m);\n            \n            // System.out.println(st + \" \" + ed + \" d=\" + d +  \" \" + bool); \n            \n            if(bool){\n                st = d;\n            }else{\n                ed = d-1;\n            }\n        }\n        \n        if(isOk(P, st, m))\n            return st;\n        else if(isOk(P, st-1, m))\n            return st-1;\n        \n        return -1;\n        \n    }\n    \n    \n    private boolean isOk(int[] P, int d, int m){\n        \n        int len = P.length;\n        \n        m--;\n        int prev = P[0];\n        \n        for(int i=1;i<len;i++){\n            \n            if(P[i]-prev>=d){\n                m--;\n                prev = P[i];\n            }\n        }\n        \n        return m<=0;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"magnetic-force-between-two-balls","has_notes":false,"flag_type":1}