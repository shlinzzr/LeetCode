{"id":1094334351,"question_id":770,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699437483,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1094334351/","is_pending":"Not Pending","title":"Couples Holding Hands","memory":"39.9 MB","code":"class Solution {\n\n    int[] parent;\n\n    public int minSwapsCouples(int[] row) {\n        int len = row.length;\n        parent = new int[len];\n        \n        for(int i=0; i<len; i+=2){\n            parent[row[i]]=row[i];\n            parent[row[i+1]]=row[i];\n        }\n        int cnt= 0;\n        for(int i=0; i<len; i+=2){\n            if(union(i, i+1))\n                cnt++;\n        }\n\n        return cnt;\n\n\n        // Map<Integer, Integer> map =new HashMap<>();\n\n        // for(int i=0; i<len; i++){  \n        //     map.put(parent[i], map.getOrDefault(parent[i],0)+1);\n        // }\n\n        // int res = 0;\n        // for(int v: map.values()){\n        //     res+=v/2-1;\n        // }\n\n        // return res;\n\n    }\n\n    private int find(int x){\n        if(parent[x]!=x){\n            parent[x] = find(parent[x]);\n        }\n        return parent[x];\n    }\n\n    private boolean union(int a, int b){\n        a = find(a);\n        b = find(b);\n\n        if(a==b) return false;\n\n        if(a<b)\n            parent[b] = a;\n        else\n            parent[a] = b;\n\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"couples-holding-hands","has_notes":false,"flag_type":1}