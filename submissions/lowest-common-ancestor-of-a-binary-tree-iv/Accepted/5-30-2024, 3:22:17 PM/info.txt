{"id":1272136713,"question_id":1816,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717053737,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1272136713/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree IV","memory":"45.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode[] nodes) {\n\n        Set<Integer> set = new HashSet<>();\n        for(TreeNode nd: nodes){\n            set.add(nd.val);\n        }\n\n        return helper(root, set);\n    }\n\n    private TreeNode helper(TreeNode node, Set<Integer> set){\n        if(node==null) return null;\n\n        for(int v: set){\n            if(node.val==v) return node;\n        }\n\n        TreeNode left = helper(node.left, set);\n        TreeNode right = helper(node.right, set);\n\n        if(left!=null && right!=null) return node;\n\n        return left!=null ? left : right;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree-iv","has_notes":false,"flag_type":1}