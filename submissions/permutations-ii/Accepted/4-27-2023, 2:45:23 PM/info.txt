{"id":940458755,"question_id":47,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682577923,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/940458755/","is_pending":"Not Pending","title":"Permutations II","memory":"43.2 MB","code":"class Solution {\n    public List<List<Integer>> permuteUnique(int[] nums) {\n        Set<List<Integer>> res= new HashSet<>();\n        int len = nums.length;\n        \n         boolean[] seen = new boolean[nums.length];\n        \n        \n        helper(nums, new ArrayList<>(), seen,  res);\n            \n        return new ArrayList<>(res);\n        \n    }\n    \n    private void helper(int[] nums, List<Integer> list, boolean[] seen ,  Set<List<Integer>> res){\n        \n        if(list.size()==nums.length){\n            res.add(new ArrayList<>(list));\n            return;\n        }\n        \n        \n        for(int i=0; i<nums.length; i++){\n            \n            if(!seen[i]){\n                list.add(nums[i]);\n                seen[i]=true;\n                helper(nums, list, seen, res);\n                list.remove(list.size()-1);\n                seen[i]=false;\n            }\n            \n        }\n        \n        \n    }\n        \n        \n}","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii","has_notes":false,"flag_type":1}