{"id":940457995,"question_id":47,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682577816,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/940457995/","is_pending":"Not Pending","title":"Permutations II","memory":"43.5 MB","code":"class Solution {\n    public List<List<Integer>> permuteUnique(int[] nums) {\n        Set<List<Integer>> res= new HashSet<>();\n        int len = nums.length;\n        helper(nums, new ArrayList<>(), new HashSet<>(),  res);\n            \n        return new ArrayList<>(res);\n        \n    }\n    \n    private void helper(int[] nums, List<Integer> list, Set<Integer> set,  Set<List<Integer>> res){\n        \n        if(list.size()==nums.length){\n            res.add(new ArrayList<>(list));\n            return;\n        }\n        \n        \n        for(int i=0; i<nums.length; i++){\n            \n            if(!set.contains(i)){\n                list.add(nums[i]);\n                set.add(i);\n                helper(nums, list, set, res);\n                list.remove(list.size()-1);\n                set.remove(i);\n            }\n            \n        }\n        \n        \n    }\n        \n        \n}","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii","has_notes":false,"flag_type":1}