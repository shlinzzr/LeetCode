{"id":1128756483,"question_id":2803,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703583299,"status":10,"status_display":"Accepted","runtime":"327 ms","url":"/submissions/detail/1128756483/","is_pending":"Not Pending","title":"Modify Graph Edge Weights","memory":"49 MB","code":"class Solution {\n    public int[][] modifiedGraphEdges(int n, int[][] edges, int src, int dest, int target) {\n        \n        int[][] g = new int[n][n];\n        for(int i=0; i<n;i++){\n            Arrays.fill(g[i], Integer.MAX_VALUE/2);\n            g[i][i]=0;\n        }\n\n        Set<int[]> set = new HashSet<>();\n        for(int[] e : edges){\n            int a = e[0];\n            int b = e[1];\n            int w = e[2];\n            if(w!=-1){\n                g[a][b]=Math.min(g[a][b], w);\n                g[b][a]=Math.min(g[b][a], w);\n            }\n            // set.add(new int[]{a,b});\n            // set.add(new int[]{b,a});\n        }\n\n        // List<int[]> list = new ArrayList<>();\n        for(int k=0;k<n; k++){\n            for(int i=0; i<n;i++){\n                if(g[i][k]<Integer.MAX_VALUE/2){\n                    for(int j=0; j<n; j++){\n                        if(g[k][j]<Integer.MAX_VALUE/2){\n                            g[i][j]=Math.min(g[i][j], g[i][k]+g[k][j]);\n                            // list.add(new int[]{i, j, g[i][j]});\n                        }\n                    }\n                }\n            }\n        }\n\n        if(g[src][dest]==target){\n            return fill(edges);\n        }else if(g[src][dest]<target)\n            return new int[0][0];\n        else{\n            for (int[] e : edges) {\n                if (e[2] == -1) {\n                    e[2] = 1;\n                    int a = e[0];\n                    int b = e[1];\n\n                    g[a][b] = 1;\n                    g[b][a] = 1;\n                    for(int i=0; i<n; i++){\n                        for(int j=0; j<n; j++){\n                            if(g[i][a]<Integer.MAX_VALUE/2 && g[b][j]<Integer.MAX_VALUE/2){\n                                g[i][j] = Math.min(g[i][j], g[i][a]+ e[2] +g[b][j] );\n                            }\n\n                            if(g[i][b]<Integer.MAX_VALUE/2 && g[a][j]<Integer.MAX_VALUE/2){\n                                g[i][j] = Math.min(g[i][j], g[i][b]+ e[2] +g[a][j] );\n                            }\n                        }\n                    }\n                    if(g[src][dest]==target){\n                        return fill(edges);\n                    }else if(g[src][dest]<target){\n                        e[2] +=target-g[src][dest];\n                        g[a][b] = e[2];\n                        g[b][a] = e[2];\n                        return fill(edges);\n                    }\n                \n                }\n            }\n        }\n        System.out.println(\"hello\");\n         return new int[0][0];\n\n        // for(int[] p : set){\n\n        //     int a = p[0];\n        //     int b = p[1];\n\n        //     if(g[a][b]==Integer.MAX_VALUE) \n\n        //         if(g[src][a]<Integer.MAX_VALUE && g[b][dest]<Integer.MAX_VALUE && g[src][a]+g[b][dest]<target){\n        //         g[a][b] = target - g[src][a] - g[b][dest];\n        //         list.add(new int[]{a,b,g[a][b]});\n        //     }\n\n\n\n        //      if(g[b][a]==Integer.MAX_VALUE) \n\n        //         if(g[src][b]<Integer.MAX_VALUE && g[a][dest]<Integer.MAX_VALUE && g[src][b]+g[a][dest]<target){\n        //         g[b][a] = target - g[src][b] - g[a][dest];\n        //         list.add(new int[]{b,a,g[b][a]});\n        //     }\n        // }\n\n        // int[][] res= new int[list.size()][];\n        // for(int i=0; i<list.size(); i++){\n        //     res[i] = list.get(i);\n        // }\n        // return res;\n\n\n\n    }\n\n    private int[][] fill(int[][] edges) {\n        for (int[] edge : edges) {\n            if (edge[2] == -1) {\n                edge[2] = (int) (2 * 1e9);\n            }\n        }\n        return edges;\n    }\n}","compare_resulttitle_slug":"modify-graph-edge-weights","has_notes":false,"flag_type":1}