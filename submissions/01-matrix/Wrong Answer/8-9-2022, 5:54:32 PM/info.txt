{"id":769212328,"question_id":542,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660038872,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/769212328/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\n    public int[][] updateMatrix(int[][] mat) {\n        \n        int h = mat.length;\n        int w = mat[0].length;\n        int max = h * w;\n        \n        int[][] res = new int[h][w];\n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(mat[i][j]==0){\n                    res[i][j]=0;\n                }else{\n                    int upCell = (i>0)? res[i-1][j]+1 : max;\n                    int leftCell = (j>0)? res[i][j-1]+1 : max;\n                    res[i][j] = Math.min(upCell, leftCell) +1;\n                }\n            }\n        }\n        \n        for(int i=h-1; i>=0; i--){\n            for(int j=w-1; j>=0; j--){\n                \n                if(mat[i][j]==0){\n                    res[i][j]=0;\n                }else{\n                    int downCell =(i<h-1)? res[i+1][j] : max;\n                    int rightCell = (j<w-1)? res[i][j+1] : max;\n                    res[i][j] = Math.min(res[i][j] , Math.min(downCell, rightCell)+1);\n                    \n                }\n            }\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"10110110000000000000000000000000000000000010100011","title_slug":"01-matrix","has_notes":false,"flag_type":1}