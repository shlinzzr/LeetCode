{"id":860075763,"question_id":542,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671091081,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/860075763/","is_pending":"Not Pending","title":"01 Matrix","memory":"45.6 MB","code":"class Solution {\n    public int[][] updateMatrix(int[][] mat) {\n     \n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int[][] res = new int[h][w];\n        for(int[] r : res){\n            Arrays.fill(r, Integer.MAX_VALUE);    \n        }\n        \n        boolean[][] bool = new boolean[h][w];\n        Queue<int[]> q = new LinkedList<>();\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(mat[i][j]==0){\n                    q.offer(new int[]{i,j});\n                    bool[i][j]=true;\n                }\n            }\n        }\n        \n        bfs(q, mat, bool, res);\n        \n        return res;\n    }\n    \n    int[][] dirs = new int[][]{{0,1},{0,-1}, {1,0}, {-1,0}};\n    private void bfs( Queue<int[]> q, int[][] mat, boolean[][]bool, int[][] res){\n        \n        int h = mat.length;\n        int w = mat[0].length;\n        \n        // Queue<int[]> q = new LinkedList<>();\n        // q.add(new int[]{i, j});\n        // bool[i][j] = true;\n        int step=0;\n        \n        while(!q.isEmpty()){\n            for(int ss=q.size(); ss>0; ss--){\n                int[] p = q.poll();\n                \n                \n                // if(mat[p[0]][p[1]]==1){\n                    res[p[0]][p[1]]=Math.min(res[p[0]][p[1]], step);\n                    // return;\n                // }\n                    \n                \n                \n                for(int[] d : dirs){\n                    int r = p[0] + d[0];\n                    int c = p[1] + d[1];\n                    \n                    if(r>=0 && r<h && c>=0 && c<w && bool[r][c]==false){\n                        \n                        bool[r][c]=true;\n                        q.offer(new int[]{r,c});\n                    }\n                }\n            }\n            step++;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false,"flag_type":1}