{"id":840662723,"question_id":542,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668074731,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/840662723/","is_pending":"Not Pending","title":"01 Matrix","memory":"72.5 MB","code":"class Solution {\n    \n     int[][] dirs = new int[][]{{0,1}, {0,-1}, {1,0}, {-1,0}};\n    \n    \n    public int[][] updateMatrix(int[][] mat) {\n        \n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int[][] res = new int[h][w];\n        boolean[][] visited = new boolean[h][w];\n        \n        \n          \n        Queue<int[]> q = new LinkedList<>();\n        \n        \n        for(int i=0;i<h;i++){\n            for(int j=0; j<w; j++){\n                \n                if(mat[i][j]==0){\n                    q.offer(new int[]{i,j});\n                    visited[i][j]=true;\n                    \n                }\n            }\n        }\n        int cnt=1;\n        while(!q.isEmpty()){\n            \n            int siz = q.size();\n            for(int i=0; i<siz; i++){\n                int[] p = q.poll();\n            \n                for(int[] d : dirs){\n\n                    int r = p[0]+d[0];\n                    int c = p[1]+d[1];\n                    \n                    if(r<0 || r>=h || c<0 || c>=w || visited[r][c]==true)\n                        continue;\n                    \n                    visited[r][c]=true;\n                    q.offer(new int[]{r,c});\n                    res[r][c] = cnt;\n                }\n            }\n            \n            cnt++;\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false,"flag_type":1}