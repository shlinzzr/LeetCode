{"id":959319710,"question_id":542,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685330884,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/959319710/","is_pending":"Not Pending","title":"01 Matrix","memory":"45.9 MB","code":"class Solution {\n    public int[][] updateMatrix(int[][] mat) {\n        int h = mat.length;\n        int w = mat[0].length;\n\n        boolean[][] bool = new boolean[h][w];\n        \n        Queue<int[]> q = new LinkedList<>();\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(mat[i][j]==0){\n                    q.offer(new int[]{i, j});\n                    bool[i][j]=true;\n                }\n            }\n        }\n        \n        int[][] dirs = new int[][]{{0,1}, {1,0}, {-1,0}, {0,-1}};\n        \n        int[][] res = new int[h][w];\n\n        int step=0;\n        \n        while(!q.isEmpty()){\n            \n            int siz = q.size(); \n            for(int i=0; i<siz; i++){\n                int[] p = q.poll();\n                \n                res[p[0]][p[1]] = step;\n                \n                for(int[] d : dirs ){\n\n                    int r = d[0]+p[0];\n                    int c = d[1]+p[1];\n\n                    if(r<0 || c<0 || r>=h || c>=w || bool[r][c] || mat[r][c]==0) \n                        continue;\n                    \n                    bool[r][c] = true;\n                    q.offer(new int[]{r,c});\n\n                }\n            }\n            step++;\n            \n        }\n        \n        return res;\n            \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false,"flag_type":1}