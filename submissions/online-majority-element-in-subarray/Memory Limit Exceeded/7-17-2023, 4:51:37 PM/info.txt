{"id":996533037,"question_id":1262,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689583897,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/996533037/","is_pending":"Not Pending","title":"Online Majority Element In Subarray","memory":"N/A","code":"class MajorityChecker {\n    \n    int[] arr;\n    \n   \n    List<Map<Integer, Integer>> list = new ArrayList<>();  // Mem Exceed\n    \n    \n    public MajorityChecker(int[] arr) {\n        this.arr = arr;\n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        for(int a : arr){\n            map.put(a, map.getOrDefault(a, 0)+1);\n            list.add(new HashMap<>(map));\n        }\n    }\n    \n    public int query(int left, int right, int threshold) {\n        Map<Integer, Integer> lmap = left==0 ? new HashMap<>() : list.get(left-1);\n        Map<Integer, Integer> rmap = list.get(right);\n        // System.out.println(left + \" \" + right + \" \" + threshold);\n        \n        int maj = -1;\n        int max = 0;\n        \n        for(int k : rmap.keySet()){\n            \n            int val = rmap.get(k);\n            \n            if(lmap.containsKey(k)){\n                val -= lmap.get(k);\n            }\n            \n            if(val>max){\n                maj = k;\n                max = val;\n            }\n        }\n        \n        \n        return max>=threshold ? maj : -1;\n        \n        \n    }\n}\n\n/**\n * Your MajorityChecker object will be instantiated and called as such:\n * MajorityChecker obj = new MajorityChecker(arr);\n * int param_1 = obj.query(left,right,threshold);\n */","compare_result":"111111111111111111111110000000000000","title_slug":"online-majority-element-in-subarray","has_notes":false,"flag_type":1}