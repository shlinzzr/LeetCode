{"id":897052895,"question_id":42,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1676277832,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/897052895/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"42.7 MB","code":"class Solution {\n    public int trap(int[] height) {\n        int len  = height.length;\n        int[] left = new int[len];\n        int[] right = new int[len];\n        \n        int max=0;\n        for(int i=0; i<len;i++){\n            max = Math.max(max, height[i]);\n            left[i]=max;\n        }\n        \n        max=0;\n        for(int i=len-1; i>=0;i--){\n            max = Math.max(max, height[i]);\n            right[i]=max;\n        }\n        \n        \n        int cnt=0;\n        for(int i=0; i<len;i++){\n            \n            // System.out.println(left[i]+\" \" + right[i]+ \" \"+height[i]);\n            \n            int cur =  Math.min(left[i], right[i]) - height[i];\n            // System.out.println(cur);\n            cnt+=cur;\n            \n        }\n        \n        return cnt;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}