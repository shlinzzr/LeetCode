{"id":1232919777,"question_id":42,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1713173111,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1232919777/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"45.9 MB","code":"class Solution {\n    public int trap(int[] height) {\n        int len = height.length;\n        \n        int[] leftMax = new int[len];\n        leftMax[0] = height[0];\n        for(int i=1; i<len; i++){\n            leftMax[i] = Math.max(leftMax[i-1], height[i]);\n        }\n        \n        int[] rightMax = new int[len];\n        rightMax[len-1] = height[len-1];\n        for(int i=len-2; i>=0; i--){\n            rightMax[i] = Math.max(rightMax[i+1], height[i]);\n        }\n        \n        int res =0 ;\n        for(int i=1; i<len-1; i++){\n            int bar =  Math.min(leftMax[i-1], rightMax[i+1]);\n            \n            if(bar-height[i]>0)\n                res+=bar-height[i];\n            // System.out.println(i + \" val=\"+val);\n                    \n            \n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}