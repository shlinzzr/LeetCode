{"id":797770640,"question_id":728,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1662969909,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/797770640/","is_pending":"Not Pending","title":"Self Dividing Numbers","memory":"42.1 MB","code":"class Solution {\n    public List<Integer> selfDividingNumbers(int left, int right) {\n        \n        List<Integer> list = new ArrayList<>();\n        \n        for(int i=left; i<=right; i++){\n            \n            int cur = i;\n            \n            boolean sd = true;\n            while(cur>0){\n                int d = cur %10;\n                if(d==0 || i%d!=0){\n                    sd = false;\n                    break;\n                }\n                cur/=10;\n            }\n            \n            if(sd)\n                list.add(i);\n        }\n        \n        return list;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"self-dividing-numbers","has_notes":false,"flag_type":1}