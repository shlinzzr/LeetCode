{"id":797771631,"question_id":728,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1662970033,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/797771631/","is_pending":"Not Pending","title":"Self Dividing Numbers","memory":"44.8 MB","code":"class Solution {\n   \n    public List<Integer> selfDividingNumbers(int left, int right) {\n        List<Integer> list = new ArrayList<>();\n        for(int i = left; i <= right; i++)\n            if(isSelfDividing(i))\n                list.add(i);\n        \n        return list;\n    }\n    \n    \n     private boolean isSelfDividing(int n){\n        for(char c: String.valueOf(n).toCharArray())\n            if(c == '0' || (n % (c - '0') > 0))\n                return false;\n        return true;\n    }\n    \n}","compare_result":"1111111111111111111111111111111","title_slug":"self-dividing-numbers","has_notes":false,"flag_type":1}