{"id":1119527052,"question_id":2140,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702550482,"status":10,"status_display":"Accepted","runtime":"783 ms","url":"/submissions/detail/1119527052/","is_pending":"Not Pending","title":"Longest Subsequence Repeated k Times","memory":"44.9 MB","code":"class Solution {\n    public String longestSubsequenceRepeatedK(String s, int k) {\n        int N = 26;\n        Queue<String> q = new LinkedList<>();\n        q.offer(\"\");\n\n        String res = \"\";\n        while(!q.isEmpty()){\n            int siz = q.size();\n\n            while(siz-->0){\n                String p = q.poll();\n                for(char ch='a'; ch<='z'; ch++){\n                    if(isSub(s, p+ch, k)){\n                        if( (p.length()+1)*k > res.length())\n                            res = p+ch;\n                        q.offer(p+ch);\n                    }\n                }\n\n            }\n        }\n\n        return res;\n\n    }\n\n\n    private boolean isSub(String s, String p, int k){\n\n        int j=0;\n        for(int i=0; i<s.length(); i++){\n            if(p.charAt(j)==s.charAt(i)){\n                j++;\n                if(j==p.length()){\n                    k--;\n\n                    if(k==0) return true;\n                    j=0;\n                }\n            }\n        }\n\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subsequence-repeated-k-times","has_notes":false,"flag_type":1}