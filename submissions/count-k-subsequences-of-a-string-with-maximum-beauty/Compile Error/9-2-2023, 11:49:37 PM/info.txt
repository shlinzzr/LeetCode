{"id":1038634319,"question_id":3057,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693669777,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1038634319/","is_pending":"Not Pending","title":"Count K-Subsequences of a String With Maximum Beauty","memory":"N/A","code":"class Solution {\n    public int countKSubsequencesWithMaxBeauty(String s, int k) {\n        \n        int len = s.length();\n        int M = (int) 1e9+7;\n        \n        HashMap<Character, Integer> map = new HashMap<>();\n        for(char ch : s.toCharArray()){\n            map.put(ch, map.getOrDefault(ch,0)+1);\n        }\n        \n        \n        s = \"#\"+s;\n        \n        int[][] dp = new int[len+1][k+1][26]; // 當走到地i個char的時候長度是k的max 26看用過了沒\n        \n        for(int i=1; i<=len; i++){\n            dp[i][1] = Math.max(dp[i][1], dp[i-1][1]);\n            \n            for(int j=1; j<=k && j<=i; k++){\n                \n                char ch = s.charAt(i);\n                \n                if(j==1){\n                    \n                    for(int c=0; c<26; c++){\n                       dp[i][1][c] = Math.max(dp[i-1][1][c], map.get(ch)); \n                    }\n                    dp[i][1][ch-'a'] = map.get(ch);\n                    continue;\n                }\n                \n                \n                if(dp[i-1][j-1][ch-'a']==0){ // 這個char還沒用過\n                    \n                    dp[i][j][ch-'a'] = dp[i][j-1][ch-'a']+map.get(ch);\n                    \n                    \n                }\n                \n                \n                if()\n                \n                \n                dp[i][j] = \n                \n                \n            }\n        }\n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":null,"title_slug":"count-k-subsequences-of-a-string-with-maximum-beauty","has_notes":false,"flag_type":1}