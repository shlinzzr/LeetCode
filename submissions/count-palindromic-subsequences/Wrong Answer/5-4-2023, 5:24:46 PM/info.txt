{"id":944275567,"question_id":2577,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683192286,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/944275567/","is_pending":"Not Pending","title":"Count Palindromic Subsequences","memory":"N/A","code":"class Solution {\n    \n    long res = 0;\n    \n    public int countPalindromes(String s) {\n        \n        int n = s.length();\n        \n        int M = (int)1e9+7;\n        \n        int[][][] dp1 = new int[n+1][10][10];\n        int[][] pre = new int[n+1][10];\n        \n        int[][][] dp2 = new int[n+1][10][10];\n        int[][] post = new int[n+1][10];\n        \n        \n        for (int j=0; j<=9; j++)\n        {\n            int sum = 0;\n            for (int i=1; i<=n; i++)\n            {\n               if(s.charAt(i-1)-'0'==j)\n                    sum++;\n               pre[i][j] = sum;\n            }\n        }\n        \n        \n        \n        for (int j=0; j<=9; j++)\n        {\n            int sum = 0;\n            for (int i=n; i>=1; i--)\n            {\n                if(s.charAt(i-1)-'0'==j)\n                    sum++;\n                post[i][j] = sum;\n            }\n        }        \n        \n        \n        \n        for (int i=2; i<=n; i++)            \n            for (int j=0; j<=9; j++)            \n                for (int k=0; k<=9; k++)\n                {\n                    dp1[i][j][k] = dp1[i-1][j][k];                    \n                    if(s.charAt(i-1)-'0'==k)             \n                        dp1[i][j][k] = (dp1[i][j][k] + pre[i-1][j]) % M;\n                }       \n        \n        for (int i=n-1; i>=1; i--)\n            for (int j=0; j<=9; j++)            \n                for (int k=0; k<=9; k++)         \n                {\n                    dp2[i][j][k] = dp2[i+1][j][k];\n                    if(s.charAt(i-1)-'0'==k)                        \n                        dp2[i][j][k] = (dp2[i][j][k] + post[i+1][j]) % M;                    \n                }\n        \n        \n        int ret =0;\n        for (int i=3; i<=n-2; i++){\n            for (int j=0; j<=9; j++){\n                for (int k=0; k<=9; k++){\n                    ret += dp1[i-1][j][k] * dp2[i+1][j][k] % M;\n                    ret %= M;\n                }\n            }\n        }\n        \n        return ret;\n        \n        \n        /*\n        a. dp[i][j][k]  += dp[i-1][j][k]\n        b. if(s[i]==k){\n            dp[i][j][k]  += pre[i-1][j]\n        }\n        \n        \n        \n        */\n        \n    }\n      \n}","compare_result":"111111111111111111111101111111111101111111111111111111111111000","title_slug":"count-palindromic-subsequences","has_notes":false,"flag_type":1}