{"id":936273111,"question_id":1028,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1681896118,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/936273111/","is_pending":"Not Pending","title":"Interval List Intersections","memory":"43.4 MB","code":"class Solution {\n    public int[][] intervalIntersection(int[][] F, int[][] S) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        int len1 = F.length;\n        int len2 = S.length;\n        if(len1==0 || len2==0)\n            return new int[0][0];\n        \n        \n        int idx1 = 0, idx2=0;\n        \n        while(idx1<len1 && idx2<len2 ){\n            \n            int[] f = F[idx1];\n            int[] s = S[idx2];\n            \n            if(f[1]<s[0] || s[1]<f[0]){\n                \n                if(f[1]<s[0])\n                    idx1++;\n                else \n                    idx2++;\n                \n                continue;\n            }else{\n                \n                int st = Math.max(f[0], s[0]);\n                int ed = Math.min(f[1], s[1]);\n                res.add(Arrays.asList(st, ed));\n                \n                if(f[1]==s[1]){\n                    idx1++;\n                    idx2++;\n                }else if(f[1]<s[1])\n                    idx1++;\n                else \n                    idx2++;\n            }\n        }\n        \n        \n        int[][] ret = new int[res.size()][2];\n        for(int i=0; i<res.size(); i++){\n            ret[i][0] = res.get(i).get(0);\n            ret[i][1] = res.get(i).get(1);\n        }\n        \n        return ret;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interval-list-intersections","has_notes":false,"flag_type":1}