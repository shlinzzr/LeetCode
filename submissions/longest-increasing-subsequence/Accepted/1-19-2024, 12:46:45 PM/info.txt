{"id":1150379158,"question_id":300,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705639605,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1150379158/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"43.6 MB","code":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        \n        int len = nums.length;\n        List<Integer> list = new ArrayList<>();\n        \n        for(int i=0; i<len; i++){\n            \n            if(list.isEmpty() || list.get(list.size()-1)<nums[i]){\n                list.add(nums[i]);\n            }else{\n                \n                int idx = binarySearch(list, nums[i]);\n                list.set(idx, nums[i]);\n            }\n        }\n        \n        return list.size();\n        \n    }\n    \n    private int binarySearch(List<Integer> list , int x){\n        \n        // find the first number greater than x int list\n        \n        int st=0, ed=list.size()-1;\n        \n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            \n            if(list.get(mid)==x){\n                return mid;\n            }else if(list.get(mid)<x){\n                st = mid+1;\n            }else{\n                ed = mid;\n            }\n        }\n        \n        return st;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}