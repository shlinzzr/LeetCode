{"id":835937833,"question_id":257,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667463840,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/835937833/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"43.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<String> binaryTreePaths(TreeNode root) {\n        List<String> res = new ArrayList<>();\n        \n        helper(root, res, \"\");\n        return res;\n    }\n    \n    private void helper(TreeNode root, List<String> res, String curr){\n        \n        if(root==null)\n            return;\n        \n        if(!curr.isEmpty())\n            curr += \"->\";\n        curr += root.val;\n        \n        if(root.left==null && root.right==null){\n            res.add(curr);\n            return;\n        }\n        \n            helper(root.left, res , curr);\n            helper(root.right, res , curr);\n            \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false,"flag_type":1}