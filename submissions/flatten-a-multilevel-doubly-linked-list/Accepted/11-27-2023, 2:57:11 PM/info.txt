{"id":1107258586,"question_id":766,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701068231,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1107258586/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"40.5 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node prev;\n    public Node next;\n    public Node child;\n};\n*/\n\nclass Solution {\n    public Node flatten(Node head) {\n        \n        helper(head);\n        return head;\n    }\n\n    private Node helper(Node node){\n\n        Node prev = null;\n        Node curr = node;\n        while(curr!=null){\n            Node next = curr.next; // 4, 9 \n\n            if(curr.child!=null){\n                curr.next = curr.child; // 3->7, 8->11\n                curr.child.prev = curr; // 7->3 11->8\n                \n                Node last = helper(curr.child); //helper(7, 4)\n                curr.child = null;\n                last.next = next;\n\n                if(next!=null)\n                    next.prev = last;\n                \n                prev = last;\n            }else{\n                prev = curr;\n            }\n            curr = next;\n        }\n\n        return prev;\n\n\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list","has_notes":false,"flag_type":1}