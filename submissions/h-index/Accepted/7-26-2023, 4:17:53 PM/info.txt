{"id":1004277549,"question_id":274,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690359473,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1004277549/","is_pending":"Not Pending","title":"H-Index","memory":"40.7 MB","code":"class Solution {\n    public int hIndex(int[] ci) {\n        \n        //研究者有n 篇论文每篇 至少被引用了 n 次, find max n\n        \n        Arrays.sort(ci);\n        \n         int len = ci.length; //總共有len篇論文 被引用次數從小排到大\n          \n        if(ci[len-1]==0) // 若最後一篇都無引用次數 那全部都是0;\n            return 0;\n        \n        int st=0, ed=len-1;\n        \n        while(st<ed){\n            \n            int mid = st + (ed-st)/2;\n            \n            // System.out.println(st + \" \" + ed + \" mid=\" + mid  + \" ci[mid]=\"+ci[mid] + \" len=\"+(len-mid) );\n            \n            if(ci[mid]==len-mid){ // 從後面數到mid 至少有(len-mid)篇論文 被引用 ci[mid]次\n                return len-mid;\n                \n            }else if(ci[mid]<(len-mid)){ // 當引用次數 比篇數少 => 往後面找引用次數多的\n                st = mid+1;\n            }else{\n                ed = mid;  //當引用次數 比篇數多 => 可以往前找更多篇 是有達到最低引用次數的要求\n            }\n        }\n      \n        \n        return len-st;\n        \n        // 1, 1, 3\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"h-index","has_notes":false,"flag_type":1}