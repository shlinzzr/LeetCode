{"id":1114890206,"question_id":2412,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702017662,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1114890206/","is_pending":"Not Pending","title":"Minimum Amount of Time to Fill Cups","memory":"40.2 MB","code":"class Solution {\n    public int fillCups(int[] amount) {\n        int len = amount.length;\n        HashMap<String, Integer> map = new HashMap<>();\n        if(amount[0]!=0) map.put(\"cold\", amount[0]);\n        if(amount[1]!=0) map.put(\"warm\", amount[1]);\n        if(amount[2]!=0) map.put(\"hot\", amount[2]);\n\n        PriorityQueue<Map.Entry<String, Integer>> pq = new PriorityQueue<>(\n            (a,b)-> b.getValue()-a.getValue()\n        );\n\n        pq.addAll(map.entrySet());\n\n        int res= 0;\n\n        while(!pq.isEmpty()){\n\n            if(pq.size()==1){\n                res+=pq.peek().getValue();\n                return res;\n            }else{\n                Map.Entry<String, Integer> x = pq.poll();\n                Map.Entry<String, Integer> y = pq.poll();\n\n                // int k = x.getValue()==y.getValue() ? 1 : 2;\n                x.setValue(x.getValue()-1);\n                y.setValue(y.getValue()-1);\n                res++;\n                if(x.getValue()>0) pq.offer(x);\n                if(y.getValue()>0) pq.offer(y);\n            }\n        }\n\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-amount-of-time-to-fill-cups","has_notes":false,"flag_type":1}