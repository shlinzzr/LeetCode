{"id":1128555604,"question_id":1263,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703562278,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1128555604/","is_pending":"Not Pending","title":"Number of Dice Rolls With Target Sum","memory":"41.8 MB","code":"class Solution {\n\n    int M = (int) 1e9+7;\n    // dp top down\n    int[][] dp ;\n\n\n    public int numRollsToTarget(int n, int k, int target) {\n        dp = new int[n+1][target+1];\n        for(int[] d : dp){\n            Arrays.fill(d, -1);\n        }\n\n        return recur(n, k, target);\n    }\n\n    private int recur(int n, int k, int target) {\n        if( n==0 && target==0) return 1;\n        if( n==0 || target<=0) return 0;\n\n        if(dp[n][target]!=-1) return dp[n][target]%M;\n        int sum = 0; \n        for(int i=1; i<=k; i++){\n            sum += recur(n-1, k, target-i);\n            sum %= M;\n        }\n\n        dp[n][target] = sum;\n        return sum;\n    }\n\n\n    // recur + memo : 65ms\n    // HashMap<String, Integer> memo = new HashMap<>();\n\n    // public int numRollsToTarget(int n, int k, int target) {\n\n    //     if(target<n || target >n*k ) return 0;\n    //     if(n ==1) return (target <= k) ? 1 : 0;\n\n    //     String key = \"\" + n + \"_\" + k + \"_\" +target;\n    //     if(memo.containsKey(key)) return memo.get(key);\n    //     int sum = 0 ;\n    //     for(int i=1; i<=k; i++){\n    //         sum += numRollsToTarget(n-1, k, target-i);\n    //         sum %= M;\n    //     }\n    //     memo.put(key, sum);\n       \n    //     return sum;\n    // }\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-dice-rolls-with-target-sum","has_notes":false,"flag_type":1}