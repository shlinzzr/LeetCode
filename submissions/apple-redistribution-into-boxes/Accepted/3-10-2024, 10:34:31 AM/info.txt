{"id":1199052023,"question_id":3334,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710038071,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1199052023/","is_pending":"Not Pending","title":"Apple Redistribution into Boxes","memory":"42.3 MB","code":"class Solution {\n    public int minimumBoxes(int[] apple, int[] capacity) {\n        \n        Arrays.sort(capacity);\n        \n        int sum = 0;\n        \n        for(int a : apple){\n            sum+=a;\n        }\n        \n        int m = capacity.length;\n        \n        int idx=m-1;\n        int cnt=  0;\n        while(sum>0){\n            sum-= capacity[idx--];\n            cnt++;\n        }\n        return cnt;\n        \n    }\n}","compare_resulttitle_slug":"apple-redistribution-into-boxes","has_notes":false,"flag_type":1}