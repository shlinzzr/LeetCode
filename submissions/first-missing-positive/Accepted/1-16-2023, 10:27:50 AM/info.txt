{"id":878935201,"question_id":41,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1673836070,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/878935201/","is_pending":"Not Pending","title":"First Missing Positive","memory":"50.3 MB","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        int len =  nums.length;\n        \n        \n        for(int i=0; i<len; i++){\n            \n            while( nums[i]-1!=i && nums[i]-1>=0 && nums[i]-1<len && nums[i]!=nums[nums[i]-1]){\n              \n                \n                swap(nums, i, nums[i]-1);\n                \n            }\n            \n        }\n        \n        for(int i=0; i<len;i++){\n            if(nums[i]-1!=i)\n                return i+1;\n        }\n        \n        return len+1;\n    }\n    \n     private void swap(int[] nums, int a, int b){\n        int temp = nums[a];\n        nums[a] = nums[b];\n        nums[b] = temp;    \n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}