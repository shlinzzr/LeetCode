{"id":825833848,"question_id":41,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666174206,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/825833848/","is_pending":"Not Pending","title":"First Missing Positive","memory":"57.5 MB","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        \n        //quickSelect? => xx , ans is index sorting \n        \n        for (int i = 0; i < nums.length; i++) {\n            while (nums[i] != i+1 && nums[i] > 0 && nums[i] <= nums.length && nums[nums[i]-1] != nums[i]) {\n                swap(nums, i, nums[i]-1);\n            }\n        }\n        \n        for(int i = 0; i < nums.length; i++) {\n            if (nums[i] != i+1)    return i+1;\n        }\n        return nums.length+1;\n        \n        \n            \n        \n        \n        \n        \n//         int st=0, ed=nums.length-1;\n//         quickSelect(nums, st, ed);\n        \n    }\n    \n    \n    private void swap(int[] nums, int a, int b){\n        int temp = nums[a];\n        nums[a] = nums[b];\n        nums[b] = temp;    \n    }\n    \n    \n    \n//     private int quickSelect(int nums[], int st, ed){\n        \n//         int pivot = st;\n        \n//         int pivotIdx = helper(nums, st, ed);\n//         if(nums[pivotIdx]<=0){\n//             if(pivotIdx+1 < nums.length && nums[pivotIdx+1]>0){\n//                 int k=1;\n//                 while(pivot+1<nums.length){\n//                     nums[pivot]!=\n//                 }\n//             }\n            \n            \n//         }\n//             quickSelect(nums, pivotIdx+1, ed);\n//         else if()\n        \n        \n        \n//     }\n    \n//     private int helper(int nums[], int st, int ed){\n//         int pivot = st;\n        \n//         while(st<ed){\n//             while(nums[st]<=nums[pivot]){\n//                 st++;\n//             }\n//             while(nums[ed]>nums[pivot]){\n//                 ed--;\n//             }\n\n//             int temp = nums[st];\n//             nums[st] = nums[ed];\n//             nums[st] = temp;    \n//         }\n        \n        \n//         int temp = nums[pivot];\n//         nums[pivot] = nums[ed];\n//         nums[ed] = temp;    \n        \n//         return ed;\n        \n//     }\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}