{"id":965572439,"question_id":41,"lang":"java","lang_name":"Java","time":"1 year","timestamp":1686106146,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/965572439/","is_pending":"Not Pending","title":"First Missing Positive","memory":"59.1 MB","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        int len = nums.length;\n        \n        for(int i=0; i<len; i++){\n            \n            // 我的數值是: nums[i]\n            // 目的是  把nums[i] 換到 nums[i]-1的位置上\n            // 限制: nums[i]-1 要在範圍內\n            // 終止條件: 直到目前的nums[i]=i+1, 做下一輪\n              \n            while(nums[i]-1!=i && nums[i]-1>=0 && nums[i]-1<len && nums[i]!=nums[nums[i]-1] ){\n                swap(i, nums[i]-1, nums);\n            }\n            \n        }        \n        \n        for(int i=0; i<len;i++){\n            if(nums[i]-1!=i)\n                return i+1;\n        }\n        \n        return len+1;\n            \n    }\n    \n    \n    private void swap(int a, int b, int[] nums){\n        \n        int tmp = nums[a];\n        nums[a] = nums[b];\n        nums[b] = tmp;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}