{"id":970945519,"question_id":41,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686730113,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/970945519/","is_pending":"Not Pending","title":"First Missing Positive","memory":"59.8 MB","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        // index sorting;\n        \n        int len = nums.length;\n        \n        \n        // nums[2]==2\n        \n        // [3,4,-1,1]\n        \n        // swap nums[0] (3) to nums[2]; && check nums[2]!=3\n        \n        // => check \n        \n        \n        for(int i=0; i<len; i++){\n            \n            while(nums[i]!=i+1 && nums[i]-1>=0 && nums[i]-1<len && nums[nums[i]-1]!=nums[i]){\n                swap(nums, i, nums[i]-1);\n            }\n        }\n        \n        for(int i=0; i<len; i++){\n            \n            if(nums[i]!=i+1)\n                return i+1;\n        }\n        \n        return len+1;\n        \n        \n    }\n    \n    private void swap(int[] nums, int a, int b){\n        \n        int tmp=nums[a];\n        nums[a] = nums[b];\n        nums[b] = tmp;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}