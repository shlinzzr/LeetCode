{"id":1153369654,"question_id":41,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705909700,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1153369654/","is_pending":"Not Pending","title":"First Missing Positive","memory":"54.9 MB","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        \n        int len = nums.length;\n        \n        int res = len+1;\n        \n        for(int i=0; i<len; i++){\n            \n            int val = nums[i]; // val should be at index val-1;\n            \n            while((nums[i]-1<len && nums[i]-1>=0) && nums[nums[i]-1]!=nums[i]){\n                swap(nums, nums[i]-1, i);\n            }\n        } \n        \n        for(int i=0;i<len; i++){\n            if(nums[i]!=i+1) return i+1;\n        }\n        \n        return res;\n            \n        \n        \n    }\n    \n    private void swap(int[] nums, int a, int b){\n        int t= nums[a];\n        nums[a] = nums[b];\n        nums[b] = t;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}