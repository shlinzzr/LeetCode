{"id":1273972491,"question_id":41,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1717228402,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1273972491/","is_pending":"Not Pending","title":"First Missing Positive","memory":"N/A","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n\n        int len = nums.length;\n\n        for(int i=0; i<len ; i++){\n            int val = nums[i];\n            // val should be @ idx val-1 => swap (i, val-1)\n\n            while(nums[i]-1<len && nums[i]-1>=0 && nums[nums[i]-1]!=nums[i]){\n                swap(nums, i, nums[i]-1);\n            }\n        }\n\n        for(int i=0; i<len; i++){\n            if(nums[i]!=i+1)return i+1;\n        }\n\n        return len;\n        \n    }\n\n    private void swap(int[] nums, int i, int j){\n        int t= nums[i];\n        nums[i] = nums[j];\n        nums[j] = t;\n    }\n}","compare_result":"111101111111101111110111011011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110101001011011","title_slug":"first-missing-positive","has_notes":false,"flag_type":1}