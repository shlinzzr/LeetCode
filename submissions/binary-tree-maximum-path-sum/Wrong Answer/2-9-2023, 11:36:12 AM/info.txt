{"id":894447974,"question_id":124,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675913772,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/894447974/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int max=0;\n    \n    public int maxPathSum(TreeNode root) {\n        if(root==null)\n            return 0;\n        \n        helper(root);\n        \n        return max;\n    }\n    \n    \n    private int helper(TreeNode root){\n        \n        if(root==null)\n            return 0;\n        \n        int left = Math.max(0, helper(root.left));\n        int right = Math.max(0, helper(root.right));\n        \n        max = Math.max(max, left+right+root.val);\n        \n        return root.val + Math.max(left, right);\n        \n    }\n}","compare_result":"1111011100111101111111111111111111111111111111111111111111111111111111101111111101111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}