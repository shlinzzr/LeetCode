{"id":831276389,"question_id":124,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666858215,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/831276389/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    // 先想看看遞迴有沒有辦法解\n    int max;\n    public int maxPathSum(TreeNode root) {\n        max = Integer.MIN_VALUE;\n        helper(root);\n        return max;\n    }\n    \n    private int helper(TreeNode root){\n        \n        if(root==null)\n            return 0;\n        \n        int left = helper(root.left);\n        int right = helper(root.right);\n        \n        int sum = root.val;\n        if(left>0)\n            sum+=left;\n        if(right>0)\n            sum+=right;\n        \n        max = Math.max(max,sum);\n        \n        return root.val + Math.max(left, right);\n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111110111111111111111111111111111111101111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}