{"id":1143864667,"question_id":122,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1705031257,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1143864667/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock II","memory":"45.7 MB","code":"class Solution {\n    public int maxProfit(int[] prices) {\n        \n        int len = prices.length;\n        // int min = Integer.MAX_VALUE;\n        // int max= 0;\n        // for(int i =0; i<len; i++){\n        //     max= Math.max(max, prices[i]-min);\n        //     min = Math.min(min, prices[i]);\n        // }\n        \n//         int[][] dp = new int[len][2]; // the max profit on day i with/without stock\n//         dp[0][1] = -prices[0];\n        \n//         int max= 0 ;\n//         for(int i=1; i<len; i++){\n//             int p = prices[i-1];\n            \n//             dp[i][1] = Math.max(dp[i-1][1], dp[i-1][0]-p);\n//             dp[i][0] = Math.max(dp[i-1][0], dp[i-1][1]+p);\n            \n            \n//             max = Math.max(max, dp[i][0]);\n//         }\n        \n        \n//         return max;\n        \n        \n        int[] hold = new int[len];\n        int[] sold = new int[len];\n        hold[0] = -prices[0];\n\n        int max= 0;\n        for(int i=1; i<len; i++){\n\n            hold[i] = Math.max(hold[i-1], sold[i-1]-prices[i]);\n            sold[i] = Math.max(sold[i-1], hold[i-1]+prices[i]);\n            max = Math.max(max, sold[i]);\n        }\n\n        return max;\n\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-ii","has_notes":false,"flag_type":1}