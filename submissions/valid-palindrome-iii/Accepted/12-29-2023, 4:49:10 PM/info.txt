{"id":1131245613,"question_id":1178,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703839750,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1131245613/","is_pending":"Not Pending","title":"Valid Palindrome III","memory":"45.8 MB","code":"class Solution {\n    public boolean isValidPalindrome(String s, int k) {\n\n        int n = s.length();\n\n        int subseq = longestPalindromeSubseq(s);\n\n        return n-subseq<=k;\n    }\n\n    int[][] memo;\n     // lc 516\n    public int longestPalindromeSubseq(String s) {\n        int n = s.length();\n        memo = new int[n][n];\n        return helper(0, s.length()-1, s);\n    }\n\n    private int helper(int left, int right, String s){\n\n        if(left==right) return 1; \n        if(left>right) return 0;\n\n        if(memo[left][right]!=0)\n            return memo[left][right];\n\n        if(s.charAt(left)==s.charAt(right))\n            return 2 + helper(left+1, right-1, s);\n        \n        int max = Math.max(helper(left+1, right, s), helper(left, right-1, s));\n        memo[left][right]=max;\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome-iii","has_notes":false,"flag_type":1}