{"id":1241312890,"question_id":2444,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714015713,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1241312890/","is_pending":"Not Pending","title":"Longest Ideal Subsequence","memory":"N/A","code":"class Solution {\n    public int longestIdealString(String s, int k) {\n\n        // s =  acfgbd, k=2\n\n        // t = bcdfg\n\n        // find the longest with distance < k\n\n        char[] arr = s.toCharArray();\n\n        int[] dp = new int[arr.length+1];\n        dp[1] = 1;\n\n\n        for(int i=2; i<=arr.length; i++){\n\n            dp[i] = dp[i-1];\n            for(int j=i-1; j>0; j--){ // j=1\n\n                if(Math.abs(s.charAt(j-1)-s.charAt(i-1))<=k)\n                    dp[i] = Math.max(dp[i], dp[j]+1);\n            }\n        }\n\n        return dp[arr.length];\n        \n    }\n}","compare_result":"1111111111111111111111101001101001101010000010000000000000011000000000000000000000000","title_slug":"longest-ideal-subsequence","has_notes":false,"flag_type":1}