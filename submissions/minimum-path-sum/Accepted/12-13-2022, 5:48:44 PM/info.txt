{"id":859091966,"question_id":64,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670924924,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/859091966/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"46.5 MB","code":"class Solution {\n    public int minPathSum(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int[][] dp = new int[h+1][w+1];\n\n\n        \n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(i==0 || j==0){\n                    \n                    if(i==0&&j==0)\n                        dp[0][0] = grid[0][0];\n                    \n                    else if(i==0)\n                        dp[i][j]=dp[i][j-1]+grid[i][j];\n                    \n                    else if(j==0)\n                        dp[i][j]=dp[i-1][j]+grid[i][j];\n                }else{\n                    \n                    dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i][j-1]);\n                }\n            }\n            \n        }\n        \n        return dp[h-1][w-1];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}