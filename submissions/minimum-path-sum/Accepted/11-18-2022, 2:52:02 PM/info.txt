{"id":845666008,"question_id":64,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668754322,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/845666008/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"45 MB","code":"class Solution {\n    public int minPathSum(int[][] grid) {\n        int h= grid.length;\n        int w= grid[0].length;\n        \n        \n        \n        int[][] dp = new int [h][w];\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(i>0 && j>0)\n                    dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i][j-1]);\n                else if(i>0)\n                    dp[i][j] = grid[i][j] + dp[i-1][j];\n                else if(j>0)\n                    dp[i][j] = grid[i][j] + dp[i][j-1];\n                else \n                    dp[i][j] = grid[i][j];\n            }\n        }\n        \n//         for(int i=0; i<h; i++){\n//             for(int j=0; j<w; j++){\n//                 System.out.print(dp[i][j] + \", \");\n//             }\n            \n//             System.out.println();\n//         }\n                \n        \n        \n        return dp[h-1][w-1];\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}