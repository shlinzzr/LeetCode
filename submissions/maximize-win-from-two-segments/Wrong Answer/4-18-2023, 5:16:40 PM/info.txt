{"id":935709785,"question_id":2673,"lang":"java","lang_name":"Java","time":"1Â year, 1Â month","timestamp":1681809400,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/935709785/","is_pending":"Not Pending","title":"Maximize Win From Two Segments","memory":"N/A","code":"class Solution {\n    public int maximizeWin(int[] P, int k) {\n        int len = P.length;\n\n        boolean first=false;\n        boolean sec = false;\n        \n        \n        int cnt = 0;\n        \n        for(int i=len-1; i>=k; i--){\n            \n            if(first==false)\n                first=true;\n            else if(sec==false)\n                sec=true;\n            else \n                break;\n            \n            \n            int ed = P[i]; \n            int st = P[i-k];\n            \n            \n            // System.out.println(st + \" \" + ed);\n            \n            while(i>=0 && P[i]>=st && P[i]<=ed ){\n                \n                // System.out.println(i);\n                \n                i--;\n                cnt++;\n            }\n            i++;\n        }\n        \n        return cnt;\n    }\n}","compare_result":"111000000000000000000000010000000000000010000000000100001000011001110001","title_slug":"maximize-win-from-two-segments","has_notes":false,"flag_type":1}