{"id":791772692,"question_id":933,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1662347022,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/791772692/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"41.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode increasingBST(TreeNode root) {\n        List<TreeNode> list = new ArrayList<>();\n        helper(list, root);\n        // list.sort((o1, o2) -> (o1.val-o2.val));\n        \n        TreeNode head = null;\n        TreeNode curr = head;\n        \n        for(TreeNode n : list){\n            \n            if(head==null){\n                head = n;\n                curr = n;\n                \n            }else{\n                curr.right = n;\n                curr = curr.right;\n                \n                \n            }\n            \n            curr.left=null;\n            curr.right=null;\n            \n            \n        }\n        \n        return head;\n        \n        \n        \n    }\n    \n    private void helper(List<TreeNode> list, TreeNode root){\n        \n        if(root==null)\n            return;\n        \n      \n        \n        helper(list, root.left);\n          list.add(root);\n        helper(list, root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"increasing-order-search-tree","has_notes":false,"flag_type":1}