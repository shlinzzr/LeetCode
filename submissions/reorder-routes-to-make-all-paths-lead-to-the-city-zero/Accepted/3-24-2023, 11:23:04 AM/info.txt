{"id":921066239,"question_id":1576,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679628184,"status":10,"status_display":"Accepted","runtime":"286 ms","url":"/submissions/detail/921066239/","is_pending":"Not Pending","title":"Reorder Routes to Make All Paths Lead to the City Zero","memory":"96.6 MB","code":"class Solution {\n     public int minReorder(int n, int[][] cs) {\n        Set<String> st = new HashSet<>();\n        Map<Integer, Set<Integer>> map = new HashMap<>();\n        for (int[] c : cs) {\n            st.add(c[0] + \",\" + c[1]);\n            map.computeIfAbsent(c[0], k -> new HashSet<>());\n            map.computeIfAbsent(c[1], k -> new HashSet<>());\n            map.get(c[0]).add(c[1]);\n            map.get(c[1]).add(c[0]);\n        }\n        \n        Queue<Integer> q = new LinkedList<>();\n        q.add(0);\n        int res = 0;\n        boolean[] vs = new boolean[n];\n        vs[0] = true;\n        while (!q.isEmpty()) {\n            int c = q.poll();\n            for (int next : map.getOrDefault(c, new HashSet<>())) {\n                if (vs[next]) continue;\n                vs[next] = true;\n                if (!st.contains(next + \",\" + c)) res++;\n                q.offer(next);\n            }\n        }\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorder-routes-to-make-all-paths-lead-to-the-city-zero","has_notes":false,"flag_type":1}