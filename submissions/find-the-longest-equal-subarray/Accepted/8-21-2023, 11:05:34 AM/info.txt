{"id":1027233580,"question_id":2832,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692587134,"status":10,"status_display":"Accepted","runtime":"113 ms","url":"/submissions/detail/1027233580/","is_pending":"Not Pending","title":"Find the Longest Equal Subarray","memory":"69.8 MB","code":"class Solution {\n    \n    // public int longestEqualSubarray(List<Integer> A, int k) {\n    //     int maxf = 0, i = 0, n = A.size();\n    //     Map<Integer, Integer> count = new HashMap<>();\n    //     for (int j = 0; j < n; j++) {\n    //         count.put(A.get(j), count.getOrDefault(A.get(j), 0) + 1);\n    //         maxf = Math.max(maxf, count.get(A.get(j)));\n    //         if (j - i + 1 - maxf > k) {\n    //             count.put(A.get(i), count.get(A.get(i)) - 1);\n    //             i++;\n    //         }\n    //     }\n    //     return maxf;\n    // }\n    \n    \n    public int longestEqualSubarray(List<Integer> nums, int k) {\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for(int i=0; i<nums.size(); i++){\n            int n = nums.get(i);\n            map.putIfAbsent(n, new ArrayList<>());\n            map.get(n).add(i);\n        }\n        \n        int res = 0; \n        \n        for(Map.Entry<Integer, List<Integer>> en : map.entrySet()){\n            \n            int key = en.getKey();\n            List<Integer> pos = en.getValue();\n            \n            \n            int j=0;\n            for(int i=0; i<pos.size(); i++){\n                \n                while(j<pos.size() && (pos.get(j)-pos.get(i)+1) - (j-i+1) <=k){\n                    res = Math.max(res, (j-i+1));\n                    j++;\n                }\n            }\n        }\n        \n        return res;\n        \n    }\n    \n    \n  \n    \n}","compare_resulttitle_slug":"find-the-longest-equal-subarray","has_notes":false,"flag_type":1}