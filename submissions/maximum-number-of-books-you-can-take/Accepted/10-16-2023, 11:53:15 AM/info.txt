{"id":1076353658,"question_id":2490,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697428395,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1076353658/","is_pending":"Not Pending","title":"Maximum Number of Books You Can Take","memory":"57.9 MB","code":"class Solution {\n    public long maximumBooks(int[] books) {\n\t\t\tint len = books.length;\n\t\t\tlong[] dp = new long[len];\n\t\t\tlong res = dp[0] = books[0];\n\t\t\tDeque<Integer> dq = new ArrayDeque<>();\n\t\t\tdq.push(0);\n\n\t\t\tfor (int i = 1; i < len; i++) {\n\t\t\t\twhile (!dq.isEmpty()) {\n\t\t\t\t\tint j = dq.peek();\n\t\t\t\t\tif (books[j] <= books[i] - i + j) {\n\t\t\t\t\t\t break;\n\t\t\t\t\t}\n\t\t\t\t\tdq.pop();\n\t\t\t\t}\n\t\t\t\tint j = dq.isEmpty() ? -1 : dq.peek();\n\t\t\t\tlong max = (j >= 0 ? dp[j] : 0) + \n\t\t\t\t\ttriangularNumber(books[i]) - triangularNumber(books[i] - i + j);\n\t\t\t\tres = Math.max(res, max);\n\t\t\t\tdp[i] = max;\n\t\t\t\tdq.push(i);\n\t\t\t}\n\t\t\treturn res;\n    }\n\n\t\tprivate long triangularNumber(int n) {\n\t\t\tif (n <= 0) return 0;\n\t\t\treturn n * (n + 1L) / 2;\n\t\t}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-books-you-can-take","has_notes":false,"flag_type":1}