{"id":1076334277,"question_id":2490,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697426116,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1076334277/","is_pending":"Not Pending","title":"Maximum Number of Books You Can Take","memory":"58 MB","code":"class Solution {\n    public long maximumBooks(int[] books) {\n\t\t\tint len = books.length;\n\t\t\tlong[] maxEndingAt = new long[len];\n\t\t\tlong res = maxEndingAt[0] = books[0];\n\t\t\tvar candidateIndexes = new ArrayDeque<Integer>();\n\t\t\tcandidateIndexes.push(0);\n\t\t\tfor (int i = 1; i < len; i++) {\n\t\t\t\twhile (!candidateIndexes.isEmpty()) {\n\t\t\t\t\tint j = candidateIndexes.peek();\n\t\t\t\t\tif (books[j] <= books[i] - i + j) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcandidateIndexes.pop();\n\t\t\t\t}\n\t\t\t\tint j = candidateIndexes.isEmpty() ? -1 : candidateIndexes.peek();\n\t\t\t\tlong maxEndingAti = (j >= 0 ? maxEndingAt[j] : 0) + \n\t\t\t\t\ttriangularNumber(books[i]) - triangularNumber(books[i] - i + j);\n\t\t\t\tres = Math.max(res, maxEndingAti);\n\t\t\t\tmaxEndingAt[i] = maxEndingAti;\n\t\t\t\tcandidateIndexes.push(i);\n\t\t\t}\n\t\t\treturn res;\n    }\n\n\t\tprivate long triangularNumber(int n) {\n\t\t\tif (n <= 0) return 0;\n\t\t\treturn n * (n + 1L) / 2;\n\t\t}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-books-you-can-take","has_notes":false,"flag_type":1}