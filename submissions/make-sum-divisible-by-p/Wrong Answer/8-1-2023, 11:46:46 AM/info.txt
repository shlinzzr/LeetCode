{"id":1009022616,"question_id":1694,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690861606,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1009022616/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"N/A","code":"class Solution {\n    public int minSubarray(int[] nums, int p) {\n        int len = nums.length;\n        \n        long total = 0;\n        for(int n: nums) total +=n; //10\n        long target = total%p; // 4\n        if(target==0)\n            return 0;\n        \n        int min = len; //4\n        \n        long presum = 0;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0,-1);\n        for(int i=0; i<len; i++){\n            \n            presum += nums[i]; //3, 4, 8\n            \n            int mod = (int)(presum-target+p)%p; //3-4+6==5, 4-4+6, 8-4+6==4\n            \n            if(map.containsKey(mod)){\n                min = Math.min(min, i-map.get(mod)); //1--1==2, 1, \n            }\n            \n            // System.out.println(i + \" presum=\"+ presum + \" mod=\"+mod + \" min=\"+ min + \" bool=\"+(map.containsKey(mod))  );\n            \n            // System.out.println(\"map.put(\" +(presum%p) + \", \"+ i + \")\");\n            map.put((int) (presum%p), i); //[3,0] [4,1]\n        }\n        \n        return min==len? -1 : min;\n        \n    }\n    \n    \n    \n    \n    \n     // X x x [x x x] x x x\n        //.    i      j.     k\n        \n        // (p[k] - (p[j]-p[i]) )%p ==0\n          // find min j-i==mod p        \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111","title_slug":"make-sum-divisible-by-p","has_notes":false,"flag_type":1}