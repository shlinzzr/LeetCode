{"id":1264499762,"question_id":1694,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716346514,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/1264499762/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"62 MB","code":"class Solution {\n    public int minSubarray(int[] nums, int p) {\n\n        // pre-condition\n\n        long sum = 0 ;\n        for(int n : nums)\n            sum += n;\n        long target = sum%p;\n        if(target==0) return 0;\n\n\n\n\n        int len = nums.length;\n        Map<Long, Integer> map = new HashMap<>(); // sum, idx\n        map.put(0L, -1);\n        int res = len;\n\n        long[] presum = new long[len];\n        for(int i=0; i<len; i++){\n            presum[i] = i==0 ? nums[i] : presum[i-1] + nums[i];\n\n            // 這裡我們要找的是target跟presum[i] diff的 mod\n\n            long mod =  (presum[i]-target+p)%p;\n            if(map.containsKey(mod)){\n                res = Math.min(res, i-map.get(mod));\n            }\n\n            map.put(presum[i]%p, i);\n        }\n        return res == len ? -1 : res;\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-sum-divisible-by-p","has_notes":false,"flag_type":1}