{"id":1024621140,"question_id":1738,"lang":"java","lang_name":"Java","time":"9 months, 4 weeks","timestamp":1692341098,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1024621140/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"44.1 MB","code":"class Solution {\n    public int maximalNetworkRank(int n, int[][] roads) {\n        int len = roads.length;\n        \n        HashMap<Integer, Set<Integer>> map = new HashMap<>();\n        \n        for(int i=0; i<len; i++){\n            \n            int c0 = roads[i][0];\n            int c1 = roads[i][1];\n            \n            map.putIfAbsent(c0, new HashSet<>());\n            map.putIfAbsent(c1, new HashSet<>());\n            \n            map.get(c0).add(c1);\n            map.get(c1).add(c0);\n        }\n        \n        int max = 0;\n        \n        for(int i=0; i<n ; i++){\n            for(int j=i+1; j<n; j++){\n                \n                if(map.getOrDefault(i, new HashSet<>()).contains(j)){\n                    max = Math.max(max, map.get(i).size() + map.get(j).size()-1);\n                }else{\n                    max = Math.max(max, map.getOrDefault(i, new HashSet<>()).size() + map.getOrDefault(j, new HashSet<>()).size());\n                }\n            }\n        }\n        \n        return max;\n        \n            \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-network-rank","has_notes":false,"flag_type":1}