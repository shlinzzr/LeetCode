{"id":1266278147,"question_id":1668,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1716518996,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1266278147/","is_pending":"Not Pending","title":"Find Longest Awesome Substring","memory":"N/A","code":"class Solution {\n    public int longestAwesome(String s) {\n\n        int len = s.length();\n\n        int state = 0;\n\n        Map<Integer, Integer> map = new HashMap<>(); // state, idx\n        map.put(0, -1);\n        int max = 0;\n\n\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n            state ^= 1<<(ch-'0');\n\n            if(map.containsKey(state)){\n                    max = Math.max(max, i-map.get(state));\n            }\n\n            for(int j=0; j<10; j++){\n                int v = state^(1<<j);\n\n                if(map.containsKey(v)){\n                    max = Math.max(max, i-map.get(v));\n                }\n            }\n\n            \n        }        \n\n        return max;\n    }\n}","compare_result":"111101010010110101011101001011010000101000001001011010100001001100000000000000010010000000101000000100000010000000010000000010000010000010001000011000010","title_slug":"find-longest-awesome-substring","has_notes":false,"flag_type":1}