{"id":1276130867,"question_id":1668,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1717403511,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/1276130867/","is_pending":"Not Pending","title":"Find Longest Awesome Substring","memory":"45.3 MB","code":"class Solution {\n    public int longestAwesome(String s) {\n\n        int state=0;\n        int len = s.length();\n\n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        int max= 1;\n\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n\n            state ^= 1<<(ch-'0');\n\n            for(int j=0; j<=9; j++){\n                int tmp = state ^ (1<<j);\n                if(map.containsKey(tmp)){\n                    max = Math.max(max, i-map.get(tmp));\n                }\n            }\n\n\n\n            if(map.containsKey(state)){\n                max = Math.max(max, i-map.get(state));\n            }else{\n                map.put(state, i);\n            }\n        }\n\n        return max;\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-longest-awesome-substring","has_notes":false,"flag_type":1}