{"id":1266280158,"question_id":1668,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1716519268,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/1266280158/","is_pending":"Not Pending","title":"Find Longest Awesome Substring","memory":"45.2 MB","code":"class Solution {\n    public int longestAwesome(String s) {\n\n        int len = s.length();\n\n        long state = 0;\n\n        Map<Long, Integer> map = new HashMap<>(); // state, idx\n        map.put(0L, -1);\n        int max = 0;\n\n\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n            state ^= 1<<(ch-'0');\n\n           \n\n            for(int j=0; j<10; j++){\n                long v = state^(1<<j);\n\n                if(map.containsKey(v)){\n                    max = Math.max(max, i-map.get(v));\n                }\n            }\n            \n            if(map.containsKey(state)){\n                max = Math.max(max, i-map.get(state));\n            }else\n                map.put(state, i);\n\n            \n        }        \n\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-longest-awesome-substring","has_notes":false,"flag_type":1}