{"id":1245408628,"question_id":1668,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714448079,"status":10,"status_display":"Accepted","runtime":"127 ms","url":"/submissions/detail/1245408628/","is_pending":"Not Pending","title":"Find Longest Awesome Substring","memory":"45.4 MB","code":"class Solution {\n    public int longestAwesome(String s) {\n\n        int len = s.length();\n\n        Map<Long, Integer> map = new HashMap<>(); //state, idx\n        map.put(0L, -1);\n\n        long state = 0L;\n        int max = 0;\n\n        for(int i=0; i<len; i++){\n\n            char ch = s.charAt(i);\n            int idx = ch-'0';\n\n            state ^= (1<<idx); \n\n            // with one filp\n            for(long d=0; d<10; d++){\n                long code = state^(1<<d);\n\n                if(map.containsKey(code)){\n                    max = Math.max(max, i-map.get(code));\n                }\n            }\n\n            if(map.containsKey(state)){\n                max = Math.max(max, i-map.get(state));\n            }else{\n                map.put(state, i);\n            }\n\n\n        }\n\n        return max;\n\n\n\n\n        \n    }\n\n    private boolean isSwapPal(String s){\n        \n        Map<Character, Integer> map = new HashMap<>();\n\n        for(char ch : s.toCharArray()){\n            map.put(ch, map.getOrDefault(ch,0)+1);\n        }\n\n        int odd = 0;\n        for(int val : map.values()){\n            if(val%2==0)\n                continue;\n            else \n                odd++;\n        }\n\n        return odd<=1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-longest-awesome-substring","has_notes":false,"flag_type":1}