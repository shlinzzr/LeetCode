{"id":1009251960,"question_id":1668,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690882988,"status":10,"status_display":"Accepted","runtime":"138 ms","url":"/submissions/detail/1009251960/","is_pending":"Not Pending","title":"Find Longest Awesome Substring","memory":"45.6 MB","code":"class Solution {\n    public int longestAwesome(String s) {\n        \n        int[] arr = new int[10];\n        \n        int len = s.length();\n        s=\"#\"+s;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, 0);\n        \n        int ret = 0;\n        \n        for (int i=1; i<=len; i++)\n        {            \n            arr[s.charAt(i)-'0']++;\n            \n            int key = makeKey(arr);\n            \n            if(map.containsKey(key)){\n                ret = Math.max(ret, i-map.get(key));\n            }\n            \n            // flip 1 digit to gen 10 newKey\n            for (int k=0; k<10; k++)\n            {\n                int newKey = key;\n                \n                if (((key>>k)&1)==0)\n                    newKey += (1<<k);\n                else\n                    newKey -= (1<<k);\n                \n                if(map.containsKey(newKey))\n                    ret = Math.max(ret, i-map.get(newKey));\n            }\n            \n            if(!map.containsKey(key))\n                map.put(key, i);\n        }\n        \n        return ret;\n    }\n    \n    private int makeKey(int[] arr){\n        \n        int key=0;\n        for (int i=0; i<10; i++)\n        {\n            key = key*2 + arr[i]%2;\n            \n            // if (arr[i]%2==0)\n            //     key+=(0<<i);\n            // else\n            //     key+=(1<<i);\n        }\n        return key;\n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-longest-awesome-substring","has_notes":false,"flag_type":1}