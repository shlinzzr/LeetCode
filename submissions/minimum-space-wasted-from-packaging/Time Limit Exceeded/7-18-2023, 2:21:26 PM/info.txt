{"id":997309825,"question_id":2018,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689661286,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/997309825/","is_pending":"Not Pending","title":"Minimum Space Wasted From Packaging","memory":"N/A","code":"class Solution {\n    public int minWastedSpace(int[] packages, int[][] boxes) {\n        int len = packages.length;\n        \n        int bLen = boxes.length;\n        \n        long min = Integer.MAX_VALUE;\n        \n        for(int[] arr : boxes){\n            \n            TreeSet<Integer> set = new TreeSet<>();\n            for(int a : arr){\n                set.add(a);\n            }\n            \n            long sum = 0;\n            boolean nofit = false;\n            for(int p  : packages){\n                // System.out.println(p + \" \" +set.ceiling(p));\n                \n                if(set.ceiling(p)==null){\n                    \n                    nofit = true;\n                    continue;\n                }\n                sum += set.ceiling(p)-p;\n            }\n            \n            if(nofit==false)\n                min = Math.min(min, sum);\n            \n            System.out.println(min);\n            \n        }\n        \n        return min==Integer.MAX_VALUE? -1 : (int)min;\n        \n    }\n}","compare_result":"111111111111111111111111111111100000000000","title_slug":"minimum-space-wasted-from-packaging","has_notes":false,"flag_type":1}