{"id":775694570,"question_id":78,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660705984,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/775694570/","is_pending":"Not Pending","title":"Subsets","memory":"43.3 MB","code":"class Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        List<List<Integer>> res =new ArrayList<>();\n        backtrack(res, new ArrayList<>(), nums, 0);\n        return res;\n    }\n    \n    private void backtrack(List<List<Integer>> res, List<Integer> list, int[] nums, int start){\n        \n        res.add(new ArrayList<>(list));\n        \n        for(int i=start; i<nums.length; i++){\n            list.add(nums[i]);\n            backtrack(res, list, nums, i+1);\n            list.remove(list.size()-1);\n        }\n        \n    }\n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}