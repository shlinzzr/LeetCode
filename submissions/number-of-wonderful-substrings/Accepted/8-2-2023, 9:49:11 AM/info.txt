{"id":1009859662,"question_id":2044,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690940951,"status":10,"status_display":"Accepted","runtime":"397 ms","url":"/submissions/detail/1009859662/","is_pending":"Not Pending","title":"Number of Wonderful Substrings","memory":"45.4 MB","code":"class Solution {\n    public long wonderfulSubstrings(String word) {\n        int len = word.length();\n//         int[] cnt= new int[1<<10]; // a~j\n        \n//         int state = 0;\n//         cnt[0] = 1;\n        \n//         long ret = 0;\n//         for (int i=0; i<len; i++)\n//         {\n//             int idx = word.charAt(i)-'a';\n//             state ^= (1<<idx);\n            \n//             ret += cnt[state];\n            \n//             for (int j=0; j<10; j++)            \n//                 ret += cnt[state ^ (1<<j)];                                \n\n//             cnt[state]++;\n            \n//              System.out.println(i + \" \" + ret );\n//         }\n//         return ret;\n        \n        int[] arr = new int[10];\n        \n        HashMap<Long, Long> map = new HashMap<>();\n        map.put(0L, 1L);\n        long res = 0;\n        \n        for(int i=0; i<len; i++){\n            \n            char ch = word.charAt(i);\n            arr[ch-'a']= arr[ch-'a']^1;\n            long key = genKey(arr);\n            \n            if(map.containsKey(key)){\n                res += map.get(key);\n            }\n            \n            for(int j=0; j<10; j++){\n                \n                \n                \n                long newkey = key;\n                if(arr[j]==1)\n                    newkey -= (1<<j);\n                else \n                    newkey += (1<<j);\n                \n                if(map.containsKey(newkey))\n                    res += map.get(newkey);\n            }\n            \n            \n            map.put(key, map.getOrDefault(key, 0L)+1);\n            \n        }\n        \n        return res;\n    }\n    \n    \n    private long genKey(int[] arr){\n        long key = 0L;\n        for(int i=9; i>=0; i--){\n            key = key*2 + arr[i];\n        }\n        return key;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-wonderful-substrings","has_notes":false,"flag_type":1}