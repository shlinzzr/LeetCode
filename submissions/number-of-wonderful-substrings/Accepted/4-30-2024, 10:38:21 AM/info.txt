{"id":1245382120,"question_id":2044,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714444701,"status":10,"status_display":"Accepted","runtime":"325 ms","url":"/submissions/detail/1245382120/","is_pending":"Not Pending","title":"Number of Wonderful Substrings","memory":"46.1 MB","code":"class Solution {\r\n    public long wonderfulSubstrings(String word) {\r\n\r\n        int oddCnt;\r\n\r\n\r\n        // word : consist of 'a'~'j'\r\n        // return  # of wonderful substring\r\n\r\n        int len = word.length();\r\n\r\n        long state = 0; \r\n        //  abcdefghij\r\n        //k 0123456789\r\n        //  0100010100\r\n\r\n        long res = 0L;\r\n\r\n        // int[] arr = new int[1<<10]; // 'a'~'j'\r\n        // using arr to record history of state\r\n        // maybe using map will be lot smaller\r\n\r\n        HashMap<Long, Long> map = new HashMap<>();\r\n        map.put(0L, 1L); //init 組成state==0的排列方式為1種\r\n\r\n        for(int i=0; i<len; i++){\r\n            char ch = word.charAt(i);\r\n            int idx = ch-'a';\r\n            state ^= (1<<idx);\r\n\r\n            res += map.getOrDefault(state, 0L); // with all letters are even\r\n\r\n            for(int k=0; k<10; k++){\r\n                res += map.getOrDefault(state^(1<<k), 0L); // with 'a'~'j' filp one char\r\n            }\r\n\r\n            map.put(state, map.getOrDefault(state,0L)+1);\r\n        }\r\n\r\n        return res;\r\n        \r\n    }\r\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-wonderful-substrings","has_notes":false,"flag_type":1}