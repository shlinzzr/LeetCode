{"id":894430995,"question_id":2390,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675911111,"status":10,"status_display":"Accepted","runtime":"182 ms","url":"/submissions/detail/894430995/","is_pending":"Not Pending","title":"Naming a Company","memory":"53.3 MB","code":"class Solution {\n    public long distinctNames(String[] ideas) {\n        // Group idea by their initials.\n        HashSet<String>[] initialGroup = new HashSet[26];\n        for (int i = 0; i < 26; ++i) {\n            initialGroup[i] = new HashSet<>();\n        }\n        for (String idea : ideas) {\n            initialGroup[idea.charAt(0) - 'a'].add(idea.substring(1));\n        }\n        \n        // Calculate number of valid names from every pair of groups.\n        long answer = 0;\n        for (int i = 0; i < 25; ++i) {\n            for (int j = i + 1; j < 26; ++j) {\n                // Get the number of mutual suffixes.\n                long numOfMutual = 0;\n                for (String ideaA : initialGroup[i]) {\n                    if (initialGroup[j].contains(ideaA)) {\n                        numOfMutual++;\n                    }\n                }\n\n                // Valid names are only from distinct suffixes in both groups.\n                // Since we can swap a with b and swap b with a to create two valid names, multiple answer by 2.\n                answer += 2 * (initialGroup[i].size() - numOfMutual) * (initialGroup[j].size() - numOfMutual);\n            }\n        }\n        \n        return answer;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"naming-a-company","has_notes":false,"flag_type":1}