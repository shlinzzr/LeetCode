{"id":902097006,"question_id":244,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676964299,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/902097006/","is_pending":"Not Pending","title":"Shortest Word Distance II","memory":"48.9 MB","code":"class WordDistance {\n    HashMap<String, List<Integer>> map = new HashMap<>();\n    public WordDistance(String[] wordsDict) {\n        \n        for(int i=0; i<wordsDict.length; i++){\n            String w = wordsDict[i];\n            map.putIfAbsent(w, new ArrayList<>());\n            map.get(w).add(i);\n        }\n        \n    }\n    \n    public int shortest(String word1, String word2) {\n        \n        List<Integer> list1 = map.get(word1);\n        List<Integer> list2 = map.get(word2);\n        \n        int i1=0, i2=0, min=Integer.MAX_VALUE;\n        while(i1<list1.size() && i2<list2.size()){\n            \n            int val1 = list1.get(i1);\n            int val2 = list2.get(i2);\n            \n            \n            \n            min = Math.min(min, Math.abs(val1-val2));\n            \n            if(val1<val2 && i1<list1.size()){\n                i1++;\n            }else{\n                i2++;\n            }\n        }\n        \n        return min;\n        \n    }\n}\n\n/**\n * Your WordDistance object will be instantiated and called as such:\n * WordDistance obj = new WordDistance(wordsDict);\n * int param_1 = obj.shortest(word1,word2);\n */\n","compare_result":"111111111111","title_slug":"shortest-word-distance-ii","has_notes":false,"flag_type":1}