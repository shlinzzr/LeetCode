{"id":916154316,"question_id":34,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1678956463,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/916154316/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"class Solution {\n    public int[] searchRange(int[] nums, int target) {\n//         Set<Integer> set = new TreeSet<>();\n//         for(int n : nums){\n//             set.add(n);\n//         }\n        \n//         if(!set.contains(target)){\n//             return new int[]{-1, -1};\n//         }\n        \n        \n        int len = nums.length;\n        \n        if(len==1 && nums[0]==target)\n            return new int[]{0,0};\n        \n        int st=0, ed=len-1;\n        \n        int left = -1;\n        while(st<ed){\n            \n            int mid = st+(ed-st)/2;\n            \n            if(nums[mid]<target){\n                st = mid+1;\n            }else{\n                \n                if(nums[mid]==target)\n                    left=mid;\n                ed = mid;\n            }\n        }\n        \n        ed=len-1;\n        \n        int right = -1;\n        while(st<ed){\n            \n            int mid = (st+ed)/2+1;\n            if(nums[mid]<=target){\n                if(nums[mid]==target)\n                    right=mid;\n                st = mid ;\n                \n            }else{\n                ed = mid-1;\n            }\n        }\n        \n        return new int[]{left, right};\n        \n        \n        \n        \n    }\n}","compare_result":"1111111100100001101111111111001101011111111110111111111110100011010111011110101111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}