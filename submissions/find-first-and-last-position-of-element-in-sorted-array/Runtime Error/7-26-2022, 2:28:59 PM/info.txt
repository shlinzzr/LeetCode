{"id":756986076,"question_id":34,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658816939,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/756986076/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"\nclass Solution {\n    public int[] searchRange(int[] nums, int target) {\n        int st=0, ed= nums.length-1;\n        int mid = 0;\n        int idx1=-1, idx2=-1;\n        while(st<ed){\n            \n            \n              mid = (st + ed )/2;\n            if(nums[mid]==target && (mid==0 || nums[mid-1]!=target)){\n                idx1 = mid;\n                break;\n            \n            }else if(nums[mid]<target){  // 1,2,2,4,5,6 tar==2\n                st = mid+1;\n            }else{\n                ed = mid; \n            }\n               \n            \n        }\n        \n        mid = (st+ed)/2;\n         if(nums[mid]==target && (mid==0 || nums[mid-1]!=target))\n                idx1 = mid;\n        \n        st=0; ed= nums.length-1;\n       \n        while(st<ed){\n            \n             mid = (st + ed )/2;\n             // System.out.println(\"st=\"+st + \", ed=\"+ed +\",  idx2=\"+idx2);    \n            \n            if(nums[mid]==target && (mid==nums.length-1 || nums[mid+1]!=target)){\n                idx2 = mid;\n                break;\n            \n            }else if(nums[mid]>target){  // 1,2,2,4,5,6 tar==2\n                ed = mid;\n            }else{\n                st = mid+1; \n            }\n               \n            \n            \n        }\n        \n        mid = (st+ed)/2;\n        if(nums[mid]==target && (mid==nums.length-1 || nums[mid+1]!=target))\n                idx2 = mid;\n        \n        \n        \n        \n        return new int[] {idx1, idx2};\n    }\n}\n\n/*class Solution {\n    public int[] searchRange(int[] nums, int target) {\n        \n        if(nums.length==0)\n            return new int[]{-1, -1};\n        \n        \n        int st=0, ed = nums.length-1, mid=(st+ed)/2;\n        \n        while(st<=ed){\n            \n            mid = (st+ed)/2;\n            \n            if(nums[mid]==target)\n                break;\n            else if(nums[mid] < target)\n                st = mid+1;\n            else{\n                ed = mid;\n            }\n        }\n        \n        if(nums[mid]!=target)\n            return new int[]{-1, -1};\n        \n        \n        \n        \n        \n        int first = mid, last = mid;\n        while(first>0 && nums[mid]==nums[first-1]){\n            first--;\n        }\n        \n        while(last<nums.length-1 && nums[mid]==nums[last+1]){\n            last++;\n        }\n        \n        return new int[]{first, last};\n        \n    }\n}*/","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}