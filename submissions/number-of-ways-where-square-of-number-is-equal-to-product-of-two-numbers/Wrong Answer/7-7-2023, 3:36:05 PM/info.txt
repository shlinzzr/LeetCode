{"id":988401286,"question_id":1699,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688715365,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/988401286/","is_pending":"Not Pending","title":"Number of Ways Where Square of Number Is Equal to Product of Two Numbers","memory":"N/A","code":"class Solution {\n    public int numTriplets(int[] nums1, int[] nums2) {\n        \n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n        TreeMap<Integer, Integer> map1 = new TreeMap<>(); \n        TreeMap<Integer, Integer> map2 = new TreeMap<>(); \n        \n        for(int i=0; i<nums1.length; i++){\n            map1.put(nums1[i], map1.getOrDefault(nums1[i], 0)+1);\n        }\n        \n        for(int j=0; j<nums2.length; j++){\n            map2.put(nums2[j], map2.getOrDefault(nums2[j], 0)+1);\n        }\n        \n        List<Integer> list1 = new ArrayList<>(map1.keySet());\n        List<Integer> list2 = new ArrayList<>(map2.keySet());\n        \n        long res = 0L;\n        // type1\n        for(int i=0; i<list1.size(); i++){\n            \n            int j=0, k=list2.size()-1;\n            \n            while(j<=k){\n                \n                int tar = list1.get(i)*list1.get(i);\n                int val = list2.get(j)*list2.get(k);\n                \n                if(val==tar){\n                    \n                    if(list2.get(j)==list2.get(k)){\n                        int cnt = map2.get( list2.get(j) );\n                        \n                        \n                        res += map1.get(list1.get(i)) * (cnt) * (cnt-1)/2;\n                    }else{\n                        res += map1.get(list1.get(i)) * map2.get( list2.get(j)) * map2.get(list2.get(k));\n                    }\n                    j++;\n                    k--;\n                    \n                    \n                }else if(val<tar){\n                    j++;\n                }else{\n                    k--;\n                }\n            }\n        }\n        \n        \n          // type2\n        for(int i=0; i<list2.size(); i++){\n            \n            int j=0, k=list1.size()-1;\n            \n            while(j<=k){\n                \n                int tar = list2.get(i)*list2.get(i);\n                int val = list1.get(j)*list1.get(k);\n                \n                if(val==tar){\n                    \n                    if(list1.get(j)==list1.get(k)){\n                        int cnt = map1.get( list1.get(j) );\n                        \n                        // res += cnt * (cnt-1);\n                         res += map2.get( list2.get(i)) * (cnt) * (cnt-1)/2;\n                    }else{\n                        res += map2.get(list2.get(i)) * map1.get( list1.get(j)) * map1.get(list1.get(k));\n                    }\n                    j++;\n                    k--;\n                    \n                    \n                }else if(val<tar){\n                    j++;\n                }else{\n                    k--;\n                }\n            }\n        }\n        \n        return (int)res;\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers","has_notes":false,"flag_type":1}