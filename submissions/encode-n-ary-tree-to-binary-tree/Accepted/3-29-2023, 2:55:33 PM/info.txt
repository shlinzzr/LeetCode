{"id":924076377,"question_id":771,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680072933,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/924076377/","is_pending":"Not Pending","title":"Encode N-ary Tree to Binary Tree","memory":"44.3 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Codec {\n    // Encodes an n-ary tree to a binary tree.\n    public TreeNode encode(Node root) {\n        if (root == null) {\n            return null;\n        }\n        TreeNode result = new TreeNode(root.val);\n        if (root.children.size() > 0) {\n            result.left = encode(root.children.get(0));\n        }\n        TreeNode cur = result.left;\n        for (int i = 1; i < root.children.size(); i++) {\n            cur.right = encode(root.children.get(i));\n            cur = cur.right;\n        }\n        return result;\n    }\n\n    // Decodes your binary tree to an n-ary tree.\n    public Node decode(TreeNode root) {\n        if (root == null) {\n            return null;\n        }\n        Node result = new Node(root.val, new LinkedList<>());\n        TreeNode cur = root.left;\n        while (cur != null) {\n            result.children.add(decode(cur));\n            cur = cur.right;\n        }\n        return result;\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec codec = new Codec();\n// codec.decode(codec.encode(root));","compare_result":"11111111111111111111111111111111111111","title_slug":"encode-n-ary-tree-to-binary-tree","has_notes":false,"flag_type":1}