{"id":1252448965,"question_id":261,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715153161,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1252448965/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"N/A","code":"class Solution {\n    int[] parent;\n    \n    public boolean validTree(int n, int[][] edges) {\n        parent = new int[n];\n        for(int i=0; i<n; i++){\n            parent[i] = i;\n        }\n        \n        for(int[] e : edges){\n            \n            int a = e[0];\n            int b = e[1];\n            \n            if(find(a)==find(b)) return false;\n            \n            union(a,b);\n            \n        }\n        \n        return true;\n    }\n    \n    private int find(int x){\n        // if(parent[x]!=x) parent[x] = find(parent[x]);\n        // return parent[x];\n        \n        return (x==parent[x] ? x : (parent[x] = find(parent[x])));\n    }\n    \n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n        if(a==b) return ;\n        \n        if(a<b){\n            parent[b] = a;\n            \n        }else \n            parent[a] = b;\n    }\n}","compare_result":"111100111111011001111111011111111011111111111","title_slug":"graph-valid-tree","has_notes":false,"flag_type":1}