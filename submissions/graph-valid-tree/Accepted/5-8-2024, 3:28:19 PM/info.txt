{"id":1252450501,"question_id":261,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715153299,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1252450501/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"44.5 MB","code":"class Solution {\n    int[] parent;\n    \n    public boolean validTree(int n, int[][] edges) {\n        parent = new int[n];\n        for(int i=0; i<n; i++){\n            parent[i] = i;\n        }\n        \n        for(int[] e : edges){\n            int a = e[0];\n            int b = e[1];\n            if(union(a,b)==false)return false;\n        }\n        \n        for(int i = 0; i<n; i++){\n            if(find(i)!=0) return false;\n        }\n        \n        return true;\n    }\n    \n    private int find(int x){\n        // if(parent[x]!=x) parent[x] = find(parent[x]);\n        // return parent[x];\n        \n        return (x==parent[x] ? x : (parent[x] = find(parent[x])));\n    }\n    \n    private boolean union(int a, int b){\n        a = find(a);\n        b = find(b);\n        if(a==b) return false;\n        \n        if(a<b){\n            parent[b] = a;\n            \n        }else \n            parent[a] = b;\n        \n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"graph-valid-tree","has_notes":false,"flag_type":1}