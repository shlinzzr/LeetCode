{"id":903349676,"question_id":261,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1677133229,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/903349676/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"47 MB","code":"class Solution {\n    int[] uf;\n    \n    public boolean validTree(int n, int[][] edges) {\n        uf = new int[n];\n        for(int i=0; i<n; i++){\n            uf[i]=i;\n        }\n        \n        for(int[] e : edges){\n            \n            int root = find(e[0]);\n            int node = find(e[1]);\n            \n            if (root == node) return false;\n            \n            uf[node] = root;\n        }\n        \n         return edges.length == n - 1;\n        // return true;\n        \n        \n    }\n    \n    private int find(int x){\n        if(uf[x]==x)\n            return x;\n        \n        uf[x] = find(uf[x]);\n        \n        return uf[x];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"graph-valid-tree","has_notes":false,"flag_type":1}