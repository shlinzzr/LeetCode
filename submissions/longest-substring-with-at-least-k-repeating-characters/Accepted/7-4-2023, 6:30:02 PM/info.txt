{"id":986031637,"question_id":395,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1688466602,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/986031637/","is_pending":"Not Pending","title":"Longest Substring with At Least K Repeating Characters","memory":"40.4 MB","code":"public class Solution {\n    public int longestSubstring(String s, int k) {\n        \n        int len = s.length();\n        \n        if (s == null || len == 0) \n            return 0;\n        \n        char[] arr = new char[26];\n        // record the frequency of each character\n        for (int i = 0; i <len;  i++) \n            arr[s.charAt(i) - 'a']++;\n        \n        \n        // check init edge case\n        boolean flag = true;\n        for (int i = 0; i < 26; i++) {\n            if (arr[i] < k && arr[i] > 0) flag = false;\n        }\n        if (flag) \n            return len;\n        \n        \n        int result = 0;\n        int start = 0, ed = 0;\n        // otherwise we use all the infrequent elements as splits\n        while (ed < len) {\n            if (arr[s.charAt(ed) - 'a'] < k) {\n                result = Math.max(result, longestSubstring( s.substring(start, ed), k));\n                start = ed + 1;\n            }\n            ed++;\n        }\n        result = Math.max(result, longestSubstring(s.substring(start), k));\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"longest-substring-with-at-least-k-repeating-characters","has_notes":false,"flag_type":1}