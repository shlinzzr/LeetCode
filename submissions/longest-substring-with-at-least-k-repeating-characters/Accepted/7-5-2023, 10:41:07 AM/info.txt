{"id":986580737,"question_id":395,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1688524867,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/986580737/","is_pending":"Not Pending","title":"Longest Substring with At Least K Repeating Characters","memory":"44.3 MB","code":"class Solution {\n    public int longestSubstring(String s, int k) {\n        \n        int len = s.length();\n        \n        int max= 0 ;\n        \n        for(int i=1; i<=26;i++){\n            max = Math.max(max, helper(s, i, k));\n        }\n        return max;\n        \n    }\n    \n    \n    private int helper(String s, int t, int k){\n        \n        int max = 0;\n        \n        HashMap<Character, Integer> map= new HashMap<>();\n\n        int cnt = 0; // char with numbers>=k\n        \n        int ed=0;\n        for(int st=0; st<s.length(); st++){\n            \n            while(ed<s.length() && map.size()<=t){\n                char ch = s.charAt(ed);\n                map.put(ch, map.getOrDefault(ch, 0)+1);\n            \n                if(map.get(ch)==k)\n                    cnt++;\n\n                if(map.size()==t && cnt==t){\n                    max= Math.max(max, ed-st+1);\n                }\n                ed++;\n            }\n            \n            char chh = s.charAt(st);\n            \n            map.put(chh, map.get(chh)-1);\n            if(map.get(chh)==k-1)\n                cnt--;\n            \n            if(map.get(chh)==0)\n                map.remove(chh);\n            \n            \n        }\n        \n        return max;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"longest-substring-with-at-least-k-repeating-characters","has_notes":false,"flag_type":1}