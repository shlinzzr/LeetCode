{"id":1240432516,"question_id":1196,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1713931490,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1240432516/","is_pending":"Not Pending","title":"Filling Bookcase Shelves","memory":"42 MB","code":"class Solution {\n    public int minHeightShelves(int[][] books, int shelfWidth) {\n        \n        // int[][] dp // let dp be the min height of total shelf with checking the first i book with using j book\n        int len = books.length;        \n\n        int[] dp = new int[len+1];\n\n        for(int i=1; i<=len; i++){\n            int width = books[i-1][0];\n            int height = books[i-1][1];\n            dp[i] = dp[i-1] + height;\n            for(int j=i-1; j>0 && width+books[j-1][0] <= shelfWidth; j--){\n                height = Math.max(height, books[j-1][1]);\n                width += books[j-1][0];\n                dp[i] = Math.min(dp[i], dp[j-1]+height);\n            }\n        }\n\n        return dp[len];\n        \n    }\n    \n    \n    \n//     public int minHeightShelves(int[][] books, int shelfWidth) {\n//         int len = books.length;\n        \n//         Arrays.sort(books, (a,b)-> a[1]-b[1]);\n        \n//         int res = 0;\n        \n//         for(int i=0; i<len; i++){\n            \n//             int w = 0;\n//             int h = 0;\n//             while(w<shelfWidth && i<len){\n//                 int[] b = books[i];\n//                 int thick = b[0];\n//                 int height = b[1];    \n                \n//                 if(w+thick<=shelfWidth){\n//                     w+= thick;\n//                     h = Math.max(h, height);\n//                 }\n//                 i++;\n//             }\n//             i--;            \n//             res+=h;\n//             System.out.println(h + \" \" + i);\n//         }\n        \n//         return res;\n//     }\n}","compare_result":"11111111111111111111","title_slug":"filling-bookcase-shelves","has_notes":false,"flag_type":1}