{"id":1009037109,"question_id":1776,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690863124,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/1009037109/","is_pending":"Not Pending","title":"Minimum Operations to Reduce X to Zero","memory":"60.3 MB","code":"class Solution {\n    public int minOperations(int[] nums, int x) {\n        int len = nums.length;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        \n        int presum = 0;\n        \n        for (int i=0; i<len; i++){\n            presum += nums[i];\n            if(!map.containsKey(presum)){\n                map.put(presum, i);\n            }\n        }\n        \n        int ret = Integer.MAX_VALUE;\n        \n        if(map.containsKey(x)){\n            ret = map.get(x)+1;\n        }\n        \n        int sufsum = 0;\n        for (int b = len-1; b>=0; b--)\n        {\n            sufsum += nums[b];\n            int pre = x-sufsum;\n            \n            if(map.containsKey(pre)){\n                int a = map.get(pre);\n                if (a<b){ // a>=b : overlap is not allow\n                    ret = Math.min(ret, a+1 + len-b); // head + tail\n                }\n            }\n        }\n        \n        return ret== Integer.MAX_VALUE ? -1: ret;      \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-reduce-x-to-zero","has_notes":false,"flag_type":1}