{"id":1054277501,"question_id":1776,"lang":"java","lang_name":"Java","time":"8Â months, 3Â weeks","timestamp":1695192905,"status":10,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/1054277501/","is_pending":"Not Pending","title":"Minimum Operations to Reduce X to Zero","memory":"60 MB","code":"class Solution {\n    public int minOperations(int[] nums, int x) {\n        \n        //huifeng hashmap + prefix https://www.youtube.com/watch?v=RwmNMRdnLl0\n        // presum[a] + sufsum[b] = x\n        // => two sum\n\n        int len = nums.length;\n\n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, 0);\n\n\n        int presum = 0;\n        for(int i=0;i<len;i++){\n            presum += nums[i];\n            int a = i+1;\n            map.put(presum, a);\n        }\n\n        int min = Integer.MAX_VALUE;\n\n        if(map.containsKey(x)){\n            min = map.get(x);\n        }\n\n        int sufsum = 0;\n        for(int i=len-1; i>=0; i--){\n            sufsum += nums[i];\n            int b = len-i;\n\n            if(map.containsKey(x-sufsum)){\n                int a = map.get(x-sufsum);\n                if(a<i){ // overlap is not allow\n                    min = Math.min(min, a+b);\n                }\n            }\n        }\n\n        return min==Integer.MAX_VALUE? -1 : min;\n\n\n\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-reduce-x-to-zero","has_notes":false,"flag_type":1}