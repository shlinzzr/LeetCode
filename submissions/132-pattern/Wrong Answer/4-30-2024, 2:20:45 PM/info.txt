{"id":1245502053,"question_id":456,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714458045,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1245502053/","is_pending":"Not Pending","title":"132 Pattern","memory":"N/A","code":"class Solution {\n    public boolean find132pattern(int[] nums) {\n\n        //    x x x x x\n        //    1 2 3 4\n        // ng 2 3 4 x\n        // pv x x x x \n\n        //     3 1 4 2\n        // ns  1 x 2 x\n        // pv  x x 1 1\n\n        int len = nums.length;\n\n        Integer[] nextSmaller = new Integer[len];\n\n        Stack<Integer> st = new Stack<>();\n\n        for(int i=0; i<len; i++){\n\n            while(!st.isEmpty() && nums[st.peek()]> nums[i]){\n                nextSmaller[st.pop()] = i;\n            }\n            st.push(i);\n        }\n\n        st.clear();\n\n        Integer[] prevSmaller = new Integer[len];\n        for(int i=len-1; i>=0; i--){\n            while(!st.isEmpty() && nums[st.peek()]> nums[i]){\n                prevSmaller[st.pop()] = i;\n            }\n            st.push(i);\n        }\n\n        for(int i=0; i<len; i++){\n            if(prevSmaller[i]!=null && nextSmaller[i]!=null){\n\n                Integer idx = prevSmaller[i];\n                int next = nums[nextSmaller[i]];\n\n                System.out.println(i + \" \" + nums[idx] + \" \" + next);\n\n                if(nums[idx]<next) return true;\n\n                while(idx!=null && nums[idx]>next){\n                    idx = prevSmaller[idx];\n                    if(idx!=null && nums[idx]<next) return true;\n                }\n\n            }\n\n        }\n\n        return false;\n        \n    }\n}","compare_result":"11101111111111011100111111111111111101111111111111101011111111111111111111111000101001111110111110111111000","title_slug":"132-pattern","has_notes":false,"flag_type":1}