{"id":1246144202,"question_id":456,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714529697,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1246144202/","is_pending":"Not Pending","title":"132 Pattern","memory":"67.3 MB","code":"class Solution {\n    public boolean find132pattern(int[] nums) {\n        int len = nums.length;\n        \n        int[] leftMin = new int[len];\n\n        int min = Integer.MAX_VALUE;\n        for(int i=0; i<len; i++){\n            min = Math.min(min, nums[i]);\n            leftMin[i] = min;\n        }\n\n        Stack<Integer> st = new Stack<>();\n        int[] prevGreater = new int[len];\n\n        for(int i=len-1; i>=0; i--){\n            while(!st.isEmpty() && nums[i] > nums[st.peek()]){\n\n\n                int p = st.pop();\n                prevGreater[p] = i;\n\n                if(leftMin[i] < nums[p]) return true;\n            }\n            st.push(i);\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"132-pattern","has_notes":false,"flag_type":1}