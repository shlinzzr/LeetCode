{"id":1266299399,"question_id":2915,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1716521711,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1266299399/","is_pending":"Not Pending","title":"Count of Interesting Subarrays","memory":"N/A","code":"class Solution {\n    public long countInterestingSubarrays(List<Integer> nums, int modulo, int k) {\n        // [ x x x x x x ]\n        //     l     r\n        //     i          cnt : 有幾個nums[i]%modulo==k , 同時 cnt%modulo===k\n\n        int len = nums.size();\n        int[] arr = new int[nums.size()];\n        for(int i=0; i<nums.size(); i++){\n            arr[i] = (nums.get(i)%modulo==0 ? 1 : 0);\n        }\n\n        Map<Integer, Integer> map = new HashMap<>(); // state , cnt\n        map.put(0, 1);\n        int state = 0;\n        int ans = 0;\n        for(int i=0; i<len;i++){\n\n            int a = arr[i];\n            state = (state+a)%modulo;\n            \n            int key = (state-k + modulo)%modulo;\n\n            if(map.containsKey(key)){\n                ans += map.get(key);\n            }\n\n            map.put(state, map.getOrDefault(state,0)+1);\n\n\n        }\n\n        return ans;\n\n\n\n     }\n}","compare_resulttitle_slug":"count-of-interesting-subarrays","has_notes":false,"flag_type":1}