{"id":1243102324,"question_id":514,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714208550,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1243102324/","is_pending":"Not Pending","title":"Freedom Trail","memory":"44.4 MB","code":"class Solution {\n    public int findRotateSteps(String ring, String key) {\n          char[] r=ring.toCharArray();\n        List<Integer>[] p=new List[26];\n        for(int i=0;i<r.length;i++) {\n            int c=r[i]-'a';\n            List<Integer> l=p[c];\n            if(l==null) p[c]=l=new ArrayList<>();\n            l.add(i);\n        }\n        return helper(0,0,p,key.toCharArray(),ring,new int[key.length()][r.length]);\n    }\n    int helper(int in, int pos, List<Integer>[] p, char[] k, String r, int[][] memo) {\n        if(in==k.length) return 0;\n        if(memo[in][pos]>0) return memo[in][pos]-1;\n        int min=Integer.MAX_VALUE;\n        for(int i: p[k[in]-'a']) {\n            int m;\n            if(i>=pos) m=Math.min(i-pos,pos+r.length()-i);\n            else m=Math.min(pos-i,i+r.length()-pos);\n            min=Math.min(min,m+helper(in+1,i,p,k,r,memo));\n        }\n        return (memo[in][pos]=min+2)-1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"freedom-trail","has_notes":false,"flag_type":1}