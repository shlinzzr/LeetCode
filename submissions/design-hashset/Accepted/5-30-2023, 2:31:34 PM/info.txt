{"id":960057451,"question_id":816,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685428294,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/960057451/","is_pending":"Not Pending","title":"Design HashSet","memory":"48.6 MB","code":"\nclass MyHashSet {\n  private Bucket[] bucketArray;\n  private int keyRange;\n\n  /** Initialize your data structure here. */\n  public MyHashSet() {\n    this.keyRange = 769;\n    this.bucketArray = new Bucket[this.keyRange];\n    for (int i = 0; i < this.keyRange; ++i)\n      this.bucketArray[i] = new Bucket();\n  }\n\n  protected int _hash(int key) {\n    return (key % this.keyRange);\n  }\n\n  public void add(int key) {\n    int bucketIndex = this._hash(key);\n    this.bucketArray[bucketIndex].insert(key);\n  }\n\n  public void remove(int key) {\n    int bucketIndex = this._hash(key);\n    this.bucketArray[bucketIndex].delete(key);\n  }\n\n  /** Returns true if this set contains the specified element */\n  public boolean contains(int key) {\n    int bucketIndex = this._hash(key);\n    return this.bucketArray[bucketIndex].exists(key);\n  }\n}\n\n\nclass Bucket {\n  private LinkedList<Integer> container;\n\n  public Bucket() {\n    container = new LinkedList<Integer>();\n  }\n\n  public void insert(Integer key) {\n    int index = this.container.indexOf(key);\n    if (index == -1) {\n      this.container.addFirst(key);\n    }\n  }\n\n  public void delete(Integer key) {\n    this.container.remove(key);\n  }\n\n  public boolean exists(Integer key) {\n    int index = this.container.indexOf(key);\n    return (index != -1);\n  }\n}\n\n/**\n * Your MyHashSet object will be instantiated and called as such:\n * MyHashSet obj = new MyHashSet();\n * obj.add(key);\n * obj.remove(key);\n * boolean param_3 = obj.contains(key);\n */","compare_result":"111111111111111111111111111111111","title_slug":"design-hashset","has_notes":false,"flag_type":1}