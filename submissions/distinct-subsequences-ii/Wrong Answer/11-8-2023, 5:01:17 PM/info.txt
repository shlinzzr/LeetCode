{"id":1094304396,"question_id":977,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699434077,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1094304396/","is_pending":"Not Pending","title":"Distinct Subsequences II","memory":"N/A","code":"class Solution {\n    public int distinctSubseqII(String s) {\n        int M = (int) 1e9+7;\n        int N = s.length();\n\n        // int[][] dp = new int[N+1][26]; // 走到第i位數字時的以j為結尾的 distinct subseq cnt\n\n        // 因為dp[i] 完全依賴於 dp[i-1]於是可以把dp[i]省略 剩下dp[26]\n\n        long[] dp = new long[26];\n\n        for(int i=0; i<N; i++){\n            dp[s.charAt(i)-'a'] = 1L + sumUp(dp); \n        }\n\n        return (int) (sumUp(dp)%M);\n\n    }\n\n    private long sumUp(long[] dp){\n        long res = 0;\n        for(int i=0; i<26; i++){\n            res += dp[i];\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000","title_slug":"distinct-subsequences-ii","has_notes":false,"flag_type":1}