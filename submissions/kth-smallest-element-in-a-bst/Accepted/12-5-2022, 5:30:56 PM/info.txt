{"id":854940258,"question_id":230,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670232656,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/854940258/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"45.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int kthSmallest(TreeNode root, int k) {\n        PriorityQueue<TreeNode> pq =new PriorityQueue<>(\n            (a, b) -> b.val-a.val\n        );\n        \n        helper(root, pq, k);\n        \n        return pq.poll().val;\n        \n    }\n    \n    private void helper(TreeNode root,  PriorityQueue<TreeNode> pq, int k){\n        if(root==null)\n            return;\n        \n        pq.offer(root);\n        while(pq.size()>k)\n            pq.poll();\n        \n        helper(root.left, pq, k);\n        helper(root.right, pq, k);\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false,"flag_type":1}