{"id":931031307,"question_id":2722,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681095449,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/931031307/","is_pending":"Not Pending","title":"Prime In Diagonal","memory":"N/A","code":"class Solution {\n    \n    HashMap<Integer, Boolean> map = new HashMap<>();\n    \n    public int diagonalPrime(int[][] nums) {\n        int len = nums.length;\n        \n        int max = 0;\n        \n        for(int i=0; i<len; i++){\n            \n            if(isPrime(nums[i][i]))\n                max=Math.max(max, nums[i][i]);\n            \n            if(isPrime(nums[i][len-i-1]))\n                max = Math.max(max, nums[i][len-i-1]);  \n        }\n        \n        return max;\n        \n        \n        \n    }\n    \n    public boolean isPrime(int n) {\n        \n        if(map.containsKey(n))\n            return map.get(n);\n        \n        if (n < 3) {\n            map.put(n, n>1);\n            return n > 1;\n        }\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                map.put(n, false);\n                return false;\n                \n            }\n        }\n        \n        map.put(n, true);\n        \n        return true;\n    }\n    \n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111100000000","title_slug":"prime-in-diagonal","has_notes":false,"flag_type":1}