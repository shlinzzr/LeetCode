{"id":821441235,"question_id":435,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665642557,"status":10,"status_display":"Accepted","runtime":"1115 ms","url":"/submissions/detail/821441235/","is_pending":"Not Pending","title":"Non-overlapping Intervals","memory":"127.6 MB","code":"class Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n        \n        // Arrays.sort(intervals, (i1, i2) -> Integer.compare(i1[0], i2[0]));\n        Arrays.sort(intervals, new myComparator());\n        \n        for(int[] r : intervals){\n            System.out.print(\"[\" + r[0] + \",\" + r[1] + \"], \");\n        }\n        System.out.println();\n        \n        int end = intervals[0][1];\n        int cnt=1;\n        for (int i = 1; i < intervals.length; i++) {\n            if (intervals[i][0] >= end) {\n                end = intervals[i][1];\n                cnt++;\n            }\n        }\n        \n        \n        return intervals.length - cnt;\n\n    }\n    \n    class myComparator implements Comparator<int[]>{\n        public int compare(int[] a, int[] b){\n            return a[1]-b[1];\n        }\n    }\n    \n//      public int eraseOverlapIntervals(int[][] intervals) {\n//         if (intervals.length == 0)  return 0;\n\n//         Arrays.sort(intervals, new myComparator());\n         \n//         for(int[] r : intervals){\n//             System.out.print(\"[\" + r[0] + \",\" + r[1] + \"], \");\n//         }\n//         System.out.println();\n         \n//         int end = intervals[0][1];\n//         int count = 1;        \n\n//         for (int i = 1; i < intervals.length; i++) {\n//             if (intervals[i][0] >= end) {\n//                 end = intervals[i][1];\n//                 count++;\n//             }\n//         }\n//         return intervals.length - count;\n//     }\n    \n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"non-overlapping-intervals","has_notes":false,"flag_type":1}