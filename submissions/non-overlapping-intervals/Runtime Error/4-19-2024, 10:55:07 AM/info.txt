{"id":1236219509,"question_id":435,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713495307,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1236219509/","is_pending":"Not Pending","title":"Non-overlapping Intervals","memory":"N/A","code":"class Solution {\n    public int eraseOverlapIntervals(int[][] intervals) {\n\n        int len = intervals.length;\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        map.put(0, 0);\n\n        int[] curr = intervals[0];\n\n        for(int i=0; i<len; i++){\n            int[] p = intervals[i];\n            int st = p[0];\n            int ed = p[1];\n\n            // int stKey = map.floorKey(st);\n\n            map.put(st, map.floorEntry(st).getValue()+1);\n            map.put(ed, map.floorEntry(ed).getValue()-1);\n        }\n\n        int cnt = 0 ;\n        for(int k : map.keySet()){\n            int val = map.get(k);\n            cnt = Math.max(cnt, val);\n        }\n\n        return cnt-1;\n\n        \n    }\n}","compare_result":"11111111110000000000000000000000000000000000000000000000000","title_slug":"non-overlapping-intervals","has_notes":false,"flag_type":1}