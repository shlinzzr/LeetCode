{"id":1104553351,"question_id":624,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1700705829,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1104553351/","is_pending":"Not Pending","title":"Maximum Distance in Arrays","memory":"N/A","code":"class Solution {\n    public int maxDistance(List<List<Integer>> arrays) {\n        int m = arrays.size();\n        int res= 0;\n       /* for(List<Integer> list : arrays){\n            Collections.sort(list);\n        }\n\n        for(int i=0; i<m; i++){\n            for(int j=i+1; j<m; j++){\n                List<Integer> a = arrays.get(i);\n                List<Integer> b = arrays.get(j);\n\n                res = Math.max(res, Math.abs(a.get(a.size()-1)-b.get(0)));\n                res = Math.max(res, Math.abs(b.get(b.size()-1)-a.get(0)));\n            }\n        }\n\n        return res;*/\n\n\n        TreeMap<Integer, Integer> map =new TreeMap<>();\n        for(int i=0; i<m ;i++){\n            List<Integer> list= arrays.get(i);\n            for(int num: list){\n                map.put(num, map.getOrDefault(num ,0)+1);\n            }\n        }\n\n        for(int i=0; i<m; i++){\n            List<Integer> list = arrays.get(i);\n\n            if(list.size()==0)\n                continue;\n\n            Collections.sort(list);\n\n            TreeMap<Integer, Integer> tmp = new TreeMap<>(map);\n            while(list.size()>0 && tmp.lastKey()==list.get(list.size()-1)){\n                \n                int val = list.get(list.size()-1);\n                tmp.put(val, tmp.getOrDefault(val ,0)-1);\n                list.remove(list.size()-1);\n\n                if(tmp.get(val)==0)\n                    tmp.remove(val);\n            }\n\n            res = Math.max(res, tmp.lastKey()-tmp.firstKey());\n\n\n\n            tmp = new TreeMap<>(map);\n            while(list.size()>0 && tmp.firstKey()==list.get(0)){\n                \n                int val = list.get(0);\n                tmp.put(val, tmp.getOrDefault(val ,0)-1);\n                list.remove(0);\n\n                if(tmp.get(val)==0)\n                    tmp.remove(val);\n            }\n\n        }\n\n        return res;\n    }\n}\n\n","compare_result":"1110000111111100011111111111111111111101111011111111111110111111111111111101111101111111111111111111111110111110110111111111000000000000","title_slug":"maximum-distance-in-arrays","has_notes":false,"flag_type":1}