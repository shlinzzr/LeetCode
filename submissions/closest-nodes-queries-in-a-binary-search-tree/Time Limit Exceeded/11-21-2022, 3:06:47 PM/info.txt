{"id":847311596,"question_id":2567,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669014407,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/847311596/","is_pending":"Not Pending","title":"Closest Nodes Queries in a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> closestNodes(TreeNode root, List<Integer> queries) {\n            \n        List<List<Integer>> res = new ArrayList<>();\n        \n        \n        \n        for(int q : queries){\n            int[] arr = new int[2];\n            Arrays.fill(arr, -1);\n            if(root==null){\n                // do nothing\n            }else{\n                \n                if(root.val==q){\n                    arr[0] = root.val;\n                    arr[1] = root.val;\n                }else if(root.val<q){\n                    arr[0] = root.val;   \n                }else \n                    arr[1] = root.val;\n            }\n            helper(res, root, arr, q);\n            \n            List<Integer> list = new ArrayList<>();\n            list.add(arr[0]);\n            list.add(arr[1]);\n            res.add(list);\n            \n            \n        }\n        \n        return res;\n        \n    }\n    \n    private void helper(List<List<Integer>> res, TreeNode root, int[] arr, int q){\n        \n        if(root==null)\n            return ;\n        \n        if(root.val==q){\n            arr[0]=root.val;\n            arr[1]=root.val;\n            return;\n            \n        }else if(root.val<q ){\n            arr[0] = root.val;\n            \n            if( root.right==null)\n                return;\n            else\n                helper(res, root.right, arr, q);\n        }if(root.val>q){\n            \n            arr[1] = root.val;\n            if(root.left==null)\n                return;\n            \n            else \n                helper(res, root.left, arr, q);\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n    \n    \n}","compare_result":"1111111111111111111111111111111111110","title_slug":"closest-nodes-queries-in-a-binary-search-tree","has_notes":false,"flag_type":1}