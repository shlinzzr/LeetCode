{"id":1239500852,"question_id":753,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713837371,"status":10,"status_display":"Accepted","runtime":"95 ms","url":"/submissions/detail/1239500852/","is_pending":"Not Pending","title":"Open the Lock","memory":"47.7 MB","code":"class Solution {\n    public int openLock(String[] deadends, String target) {\n        Set<String> dead = new HashSet<>(Arrays.asList(deadends));\n\n        if(dead.contains(\"0000\")) return -1;\n        return bfs(target, dead);\n    }\n\n    private int bfs(String target, Set<String> seen){\n\n        Queue<String> q = new LinkedList<>();\n        q.offer(\"0000\");\n        seen.add(\"0000\");\n\n        int step = 0;\n        while(!q.isEmpty()){\n\n            int siz = q.size();\n            while(siz-->0){\n                \n                String p = q.poll();\n\n                if(target.equals(p)) return step;\n\n                char[] arr = p.toCharArray();\n                for(int i=0; i<4; i++){\n\n                    char ch = p.charAt(i);\n\n                    char plus =  (char) (((int)(ch-'0')+1)%10 + '0');\n                    arr[i] = plus;\n                    if(seen.add(new String(arr))){\n                        q.offer(new String(arr));\n                    }\n                    \n                    char minus = (char) (((int)(ch-'0')+9)%10 + '0');\n                    arr[i] = minus;\n                    if(seen.add(new String(arr))){\n                        q.offer(new String(arr));\n                    }\n\n                    arr[i] = ch;\n                }\n            }\n            step++;\n        }\n        return -1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"open-the-lock","has_notes":false,"flag_type":1}