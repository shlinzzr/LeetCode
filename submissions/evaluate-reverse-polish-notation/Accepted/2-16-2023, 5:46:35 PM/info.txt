{"id":899051071,"question_id":150,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676540795,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/899051071/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"42.2 MB","code":"class Solution {\n    public int evalRPN(String[] tokens) {\n        int len = tokens.length;\n        Stack<Integer> st = new Stack<>();\n        \n        for(String t : tokens){\n            \n            if(t.equals(\"+\")){\n                st.push(st.pop()+st.pop());\n            \n            }else if(t.equals(\"-\")){\n                st.push(-st.pop()+st.pop());\n            \n            }else if(t.equals(\"*\")){\n                st.push(st.pop()*st.pop());\n\n            }else if(t.equals(\"/\")){\n                int b = st.pop();\n                int a = st.pop();\n                st.push(a/b);\n            }else{\n                st.push(Integer.valueOf(t));\n            }\n        }\n        \n        int res =0;\n        for(int a : st){\n            res+=a;\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111","title_slug":"evaluate-reverse-polish-notation","has_notes":false,"flag_type":1}