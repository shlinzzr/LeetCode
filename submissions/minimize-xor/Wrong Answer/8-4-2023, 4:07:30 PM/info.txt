{"id":1011879813,"question_id":2509,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1691136450,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1011879813/","is_pending":"Not Pending","title":"Minimize XOR","memory":"N/A","code":"class Solution {\n    public int minimizeXor(int num1, int num2) {\n        /*\n           [3 : 0011, 5 : 0101],   [1: 0001, 12: 1100]\n           \n           x has the same number of set bits as num2, and\n           The value x XOR num1 is minimal.\n        */\n        \n        String bin = Integer.toBinaryString(num2);\n        int cnt = 0;\n        for(char ch : bin.toCharArray()){\n            if(ch=='1')\n                cnt++;\n        }\n        \n        bin = Integer.toBinaryString(num1);\n        \n        System.out.println(bin);\n        \n        StringBuilder sb = new StringBuilder();\n        for(char ch : bin.toCharArray()){\n            \n            if(ch=='1'){\n                \n                if(cnt>0){\n                    cnt--;\n                    sb.append('1');    \n                }else{\n                    sb.append('0');\n                }\n                \n            }else{\n               sb.append('0');\n            }\n        }\n        \n       \n        \n        while(cnt>0){\n            sb.insert(0, '1');\n            cnt--;\n        }\n        \n        \n        String val =sb.toString();\n        int res = Integer.parseInt(val, 2);\n        \n        return res;\n        \n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"1111101101101111011110110101101011000010100011111111110111001011001000101111110100100001110101011101100111010100100111011001110100011110111011110111100111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimize-xor","has_notes":false,"flag_type":1}