{"id":1231834266,"question_id":3364,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1713066475,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1231834266/","is_pending":"Not Pending","title":"Minimum Sum of Values by Dividing Array","memory":"N/A","code":"class Solution {\n    \n    int[] parent;\n    int[] weight;\n    \n    public int minimumValueSum(int[] nums, int[] andValues) {\n        int len = nums.length;\n        \n        weight = new int[len];\n        parent = new int[len];\n        for(int i=0; i<len; i++){\n            parent[i] = i;\n            weight[i] = nums[i];\n        }\n        \n        \n        int res= 0 ;\n        int m = andValues.length;\n        int k=0;\n        for(int i=0; i<len; i++){\n            \n            int j=i;\n            \n            while(k<m && j+1<len && weight[i]!=andValues[k]){\n                union(i, j+1);\n                j++;\n            }\n            \n            if(k==m-1 && weight[i]!=andValues[k]) return -1;\n            \n            res+= nums[j];\n            k++;\n             System.out.println(i+ \" \"+ j + \" \" + res + \" \" + k);\n            i=j;\n           \n            \n        }\n        \n        if(k<m) return -1;\n        return res;\n    }\n    \n    \n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n    \n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n        \n        if(a==b) return;\n        \n        if(a<b){\n            parent[b]=a;\n            weight[a] = weight[a] & weight[b];\n        }else{\n            parent[a] = b;\n            weight[b] = weight[a] & weight[b];\n        }\n    }\n}","compare_result":"11101111110111111111111111111111011101111001111111110010110111110101111000000000101011000100001100000000100010111101101010001001100100110100100111101000111101011001000010000000110010001010111111110000000000000000000000000000000001001000011111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001000000010000010000010100000000000000000000000000000000000000000000000000000000000000000000000000000000100000000","title_slug":"minimum-sum-of-values-by-dividing-array","has_notes":false,"flag_type":1}