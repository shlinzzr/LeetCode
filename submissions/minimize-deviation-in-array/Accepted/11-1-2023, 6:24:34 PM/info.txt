{"id":1089029396,"question_id":1794,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698834274,"status":10,"status_display":"Accepted","runtime":"519 ms","url":"/submissions/detail/1089029396/","is_pending":"Not Pending","title":"Minimize Deviation in Array","memory":"53.9 MB","code":"class Solution {\n    public int minimumDeviation(int[] nums) {\n        int len = nums.length;\n        Arrays.sort(nums);\n        \n        int dev = nums[len-1]-nums[0];\n        \n        \n        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());\n        int min = Integer.MAX_VALUE;\n        for (int n : nums) {\n            if (n % 2 == 0) {\n                pq.offer(n);\n                min = Math.min(min, n);\n            } else {\n                pq.offer(n * 2);\n                min = Math.min(min, n * 2);\n            }\n        }\n        \n        // System.out.println(pq+ \" min=\" + min);     \n        \n        while(!pq.isEmpty()){\n            int p = pq.poll();\n\n            dev = Math.min(dev, p-min);\n            \n            if(p%2==0){\n                pq.offer(p/2);\n                min = Math.min(min, p/2);\n            } else{\n                break;\n            }\n        }\n        \n        return dev;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimize-deviation-in-array","has_notes":false,"flag_type":1}