{"id":1148541869,"question_id":2,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705473079,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1148541869/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        int carry = 0;\n        \n        ListNode res = l1;\n        ListNode t1 = l1, t2=l2;\n        while(t1!=null && t2!=null){\n            \n            if(t1!=null && t2==null){\n                break;\n            }else if(t1==null && t2!=null){\n                return addTwoNumbers(l2, l1);\n            }\n            t1=t1.next;\n            t2=t2.next;\n        }\n        \n        \n        ListNode prev = null;\n        while(l1!=null && l2!=null){\n            l1.val += carry + l2.val;\n            carry = l1.val/10;\n            l1.val %=10;\n            \n            prev = l1;\n            l1=l1.next;\n            l2=l2.next;\n        }\n        \n        \n        while(l1!=null){\n            l1.val += carry;\n            carry = l1.val/10;\n            l1.val%=10;\n            prev =l1;\n            l1=l1.next;\n        }\n        \n        if(carry!=0){\n            ListNode t = new ListNode(carry);\n            prev.next = t;\n        }\n        \n        return res;\n    }\n}","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}