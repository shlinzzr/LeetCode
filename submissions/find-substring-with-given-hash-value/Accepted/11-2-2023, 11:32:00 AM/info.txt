{"id":1089592254,"question_id":2275,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1698895920,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1089592254/","is_pending":"Not Pending","title":"Find Substring With Given Hash Value","memory":"43.7 MB","code":"class Solution {\n\n    public String subStrHash(String s, int power, int mod, int k, int hashValue) {\n\t\tlong hash = 0;\n\t\tlong powerk = 1;\n\t\tint n = s.length();\n\t\tint res = 0;\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\thash = (hash * power + s.charAt(i) - 'a' + 1) % mod;\n\t\t\tif (i + k >= n) {\n\t\t\t\tpowerk = powerk * power % mod;\n\t\t\t} else {\n\t\t\t\thash = (hash - (((s.charAt(i + k) - 'a' + 1) * powerk) % mod) + mod) % mod;\n\t\t\t}\n\t\t\tif (hash == hashValue) {\n\t\t\t\tres = i;\n\t\t\t}\n\t\t}\n\t\treturn s.substring(res, res + k);\n\t}\n    \n    /*\n    public String subStrHash(String s, int power, int modulo, int k, int hashValue) {\n\n        int len = s.length();\n\n        String sub = s.substring(len-k, len);\n        long val = hash(sub, power, modulo);\n\n        for(int st = len-k-1; st>=0; st--){\n\n            int ed = st+k;\n\n            //remove st\n            // val += modulo;\n            val -= (s.charAt(ed)-'a'+1) * Math.pow(power, k-1)%modulo;\n            val = (val + modulo)%modulo;\n\n            val = val * power % modulo;\n            val = (val + (s.charAt(st)-'a'+1) )%modulo;\n\n            if(val==hashValue)\n                return s.substring(st, ed+1);\n\n        }\n\n        return \"not good\";\n        \n    }*/\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-substring-with-given-hash-value","has_notes":false,"flag_type":1}