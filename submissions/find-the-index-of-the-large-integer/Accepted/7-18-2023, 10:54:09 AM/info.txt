{"id":997184683,"question_id":1672,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689648849,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/997184683/","is_pending":"Not Pending","title":"Find the Index of the Large Integer","memory":"86.1 MB","code":"/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares the sum of arr[l..r] with the sum of arr[x..y] \n *     // return 1 if sum(arr[l..r]) > sum(arr[x..y])\n *     // return 0 if sum(arr[l..r]) == sum(arr[x..y])\n *     // return -1 if sum(arr[l..r]) < sum(arr[x..y])\n *     public int compareSub(int l, int r, int x, int y) {}\n *\n *     // Returns the length of the array\n *     public int length() {}\n * }\n */\n\nclass Solution {\n    public int getIndex(ArrayReader reader) {\n        \n        int st=0;\n        int ed = reader.length()-1;\n        \n        while(st<ed){\n            \n            int mid = st+(ed-st+1)/2;\n            \n            if((ed-st+1)%2==1){\n                int res = reader.compareSub(st, mid-1, mid+1, ed);\n                \n                if(res==0)\n                    return mid;\n                else if(res==1){\n                    ed=mid-1;\n                }else{\n                    st=mid+1;\n                }\n                \n            }else{\n                int res = reader.compareSub(st, mid-1, mid, ed);                \n                if(res==0)\n                    return -1;\n                else if(res==1){\n                    ed=mid-1;\n                    \n                }else{\n                    st= mid;\n                }\n            }\n        }\n        \n        return st;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-index-of-the-large-integer","has_notes":false,"flag_type":1}