{"id":1018231344,"question_id":2520,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1691738859,"status":10,"status_display":"Accepted","runtime":"149 ms","url":"/submissions/detail/1018231344/","is_pending":"Not Pending","title":"Using a Robot to Print the Lexicographically Smallest String","memory":"54.7 MB","code":"class Solution {\n    public String robotWithString(String s) {\n        \n        Stack<Character> stack = new Stack<>();\n        StringBuilder res = new StringBuilder();\n        \n        int[] freq = new int[26];\n        for (char c: s.toCharArray()){\n            freq[c -'a']++;\n        }\n        \n        for (char c: s.toCharArray()) {\n            stack.push(c);\n            freq[c - 'a']--; \n            while (!stack.isEmpty() && stack.peek() <= low(freq)) {\n                res.append(stack.pop());\n            }    \n        }\n        \n        while (stack.size() > 0) {\n             res.append(stack.pop());\n        }\n        return res.toString();\n    }\n    \n    private char low(int[] freq) {\n        for (int i = 0; i < 26; i++){\n            if (freq[i] != 0) {\n                return (char) ('a'+i);\n            }\n        } \n        return 'a'; \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"using-a-robot-to-print-the-lexicographically-smallest-string","has_notes":false,"flag_type":1}