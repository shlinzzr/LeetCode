{"id":1018229171,"question_id":2520,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1691738648,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1018229171/","is_pending":"Not Pending","title":"Using a Robot to Print the Lexicographically Smallest String","memory":"N/A","code":"class Solution {\n    public String robotWithString(String s) {\n        \n        int len = s.length();\n        \n        char[] nextSmallest = new char[len];\n        Arrays.fill(nextSmallest, Character.MAX_VALUE);\n        \n        char min = 'z'+1;        \n        for (int i=len-1; i>=0; i--){\n            \n            if(s.charAt(i)<min){\n                min = s.charAt(i);\n            }\n            nextSmallest[i] = min;\n            \n        }\n                \n        Stack<Character> st = new Stack<>();\n        String ret=\"\";\n        int i = 0;\n        while (i<len){\n            \n            if (st.isEmpty() || nextSmallest[i] < st.peek()){\n                st.push(s.charAt(i));                \n                i++;\n                \n            } else {\n                \n                \n                ret += st.pop();                \n            }            \n        }\n        \n        while (!st.isEmpty())\n        {\n            ret += st.pop();\n        }\n        \n        return ret;\n    }\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111000000000000","title_slug":"using-a-robot-to-print-the-lexicographically-smallest-string","has_notes":false,"flag_type":1}