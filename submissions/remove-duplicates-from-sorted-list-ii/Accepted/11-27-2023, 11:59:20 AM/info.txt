{"id":1107171096,"question_id":82,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701057560,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1107171096/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List II","memory":"43.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteDuplicates(ListNode head) {\n        Map<Integer, Integer> map = new HashMap<>();\n        ListNode curr = head;\n        while(curr!=null){\n            map.put(curr.val, map.getOrDefault(curr.val, 0)+1);\n            curr= curr.next;\n        }\n\n\n        HashSet<Integer> set = new HashSet<>();\n        for(Map.Entry<Integer, Integer> en : map.entrySet()){\n            if(en.getValue()>1){\n                set.add(en.getKey());\n            }\n        }\n\n        \n        while(head!=null && set.contains(head.val)){\n            head=head.next;\n        }\n\n        ListNode prev= new ListNode();\n        prev.next=head;\n        curr = head;\n        while(curr!=null){\n            ListNode next = curr.next;\n            while(next!=null && set.contains(next.val)){\n                next = next.next;\n            }\n            curr.next = next;\n            curr = curr.next;\n        }\n\n        return head;\n    \n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list-ii","has_notes":false,"flag_type":1}