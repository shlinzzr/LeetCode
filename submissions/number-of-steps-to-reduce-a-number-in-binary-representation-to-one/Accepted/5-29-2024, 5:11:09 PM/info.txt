{"id":1271246451,"question_id":1520,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1716973869,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1271246451/","is_pending":"Not Pending","title":"Number of Steps to Reduce a Number in Binary Representation to One","memory":"41.6 MB","code":"class Solution {\n    public int numSteps(String s) {\n      \n        int len = s.length();\n\n        int res= 0, carry=0;\n        \n\n        for(int i=len-1; i>0; i--){ // we just take care of i from [len-1, 1]\n            res++; // move\n            if(s.charAt(i)-'0'+ carry==1){//(d==1 && carry==0) || (d==0 && carry=1)\n                if(i==0) continue;\n                res++; // add one\n                carry = 1; // for carry, we need to add 1 to digit[i], so carry equal 1\n            }\n        }\n\n        return res+carry;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-steps-to-reduce-a-number-in-binary-representation-to-one","has_notes":false,"flag_type":1}