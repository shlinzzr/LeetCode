{"id":1110051401,"question_id":1622,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701414298,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1110051401/","is_pending":"Not Pending","title":"Max Value of Equation","memory":"97.2 MB","code":"class Solution {\n    public int findMaxValueOfEquation(int[][] points, int k) {\n        int len = points.length;\n\n\n        int max = Integer.MIN_VALUE;\n        Deque<int[]> dq = new ArrayDeque<>();\n\n        // PriorityQueue<int[]> pq = new PriorityQueue<>(\n        //     (a,b) -> Math.abs(a[0]-b[0]) + a[1] + b[]\n        // );\n\n         // val = xj + yj - xi + yi  where j>i\n        //  =>  xj -xi < k, \n        for(int j=0; j<len; j++){\n            int[] p = points[j];\n\n            \n\n            //poll over distance;\n            while(!dq.isEmpty() && p[0]-dq.peek()[0]>k){\n                dq.poll();\n            }\n\n            // cal max\n            if(!dq.isEmpty()){\n                max = Math.max(max, p[0] + p[1] - dq.peek()[0] + dq.peek()[1]);\n            }\n\n            int val = -p[0] + p[1];\n            while(!dq.isEmpty() && val> - dq.peekLast()[0] + dq.peekLast()[1]){\n                dq.pollLast();\n            }\n\n            dq.offer(p);\n\n        }\n\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-value-of-equation","has_notes":false,"flag_type":1}