{"id":1055969238,"question_id":1622,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695356531,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1055969238/","is_pending":"Not Pending","title":"Max Value of Equation","memory":"108.6 MB","code":"class Solution {\n    public int findMaxValueOfEquation(int[][] points, int k) {\n        ArrayDeque<Integer> dq = new ArrayDeque<>();\n\n        int len = points.length;\n\n        int res = Integer.MIN_VALUE;\n\n        // for point(i, j)\n        // find max yi + yj - xi + xj \n        // 固定j xj+yj find max of i :  yi-xi\n        // if i, j distance > k, pop i\n\n\n        // dq  head ======= last\n\n        for(int j=0; j<len; j++){\n\n            while(!dq.isEmpty() && points[j][0] - points[dq.peekFirst()][0] > k){\n                dq.pollFirst();\n            }\n\n            if(!dq.isEmpty()){\n\n                int[] f = points[dq.peekFirst()];\n                int val = -f[0] + f[1] +points[j][0] + points[j][1];\n                res = Math.max(res, val);\n            }\n\n            while(!dq.isEmpty() &&  -points[dq.peekLast()][0] + points[dq.peekLast()][1] < -points[j][0] + points[j][1]){\n                dq.pollLast();\n            }\n\n            dq.add(j);\n\n\n        }\n\n        return res;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-value-of-equation","has_notes":false,"flag_type":1}