{"id":1047046765,"question_id":2297,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694485515,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1047046765/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"N/A","code":"class Solution {\n    public int[] amountPainted(int[][] paint) {\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n\n        int len = paint.length;\n\n        int[] worklog = new int[len];\n\n        for(int i=0; i<len; i++){\n\n            int cnt=0;\n\n            int st = paint[i][0];\n            int ed = paint[i][1];\n\n            Integer floor  = map.floorKey(st);\n            if(floor!=null && map.get(floor)>st)\n                st = Math.max(st, map.get(floor));\n\n            System.out.println(st + \" \" + floor);\n\n            Integer ceiling = map.ceilingKey(st);\n\n            if(ceiling==null && ed-st>0){\n                map.put(st,ed);\n                cnt += ed-st;\n                worklog[i]=cnt;\n                continue;\n            }\n\n            if(ceiling!=null && ceiling>=ed){\n                map.put(st,ed);\n                cnt += ed-st;\n                worklog[i]=cnt;\n                continue;\n            }\n\n\n\n\n            while(ceiling!=null && ceiling<ed){\n                map.put(st,ceiling);\n                cnt += ceiling-st;\n                st=map.get(ceiling);\n                ceiling=map.ceilingKey(map.get(ceiling));\n            }\n\n            worklog[i] = cnt;\n        }\n\n        return worklog;\n    }\n}","compare_result":"111111111111111110000000000000000000000000000000000000000000000000000000000000","title_slug":"amount-of-new-area-painted-each-day","has_notes":false,"flag_type":1}