{"id":1084349375,"question_id":2297,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698296834,"status":10,"status_display":"Accepted","runtime":"473 ms","url":"/submissions/detail/1084349375/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"115 MB","code":"class Solution {\n    public int[] amountPainted(int[][] paint) {\n        \n        int len = paint.length;\n        TreeMap<Integer, List<int[]>> map = new TreeMap<>(); // x, List<p>,   p ={paint idx, isStart}\n\n        for(int i=0; i<len; i++){\n            int[] p = paint[i];\n            map.putIfAbsent(p[0], new ArrayList<>());\n            map.putIfAbsent(p[1], new ArrayList<>());\n            map.get(p[0]).add( new int[]{i, 1});   //  p ={paint idx, isStart}\n            map.get(p[1]).add( new int[]{i, -1});\n        }\n\n        TreeMap<Integer, Integer> cntMap = new TreeMap<>();\n\n        int[] res = new int[len];\n\n        List<Integer> keyList = new ArrayList<>(map.keySet());\n\n        for(int i=0; i<keyList.size()-1; i++){ // x from left to right, ignore the last point \n\n            int x = keyList.get(i);\n            List<int[]> list = map.get(x);\n            for(int[] p : list){\n                int idx = p[0];\n                int isStart = p[1];\n\n                if(isStart==1){\n                    cntMap.put(idx, cntMap.getOrDefault(idx,0)+1);\n                }else{\n                   cntMap.put(idx, cntMap.getOrDefault(idx,0)-1);\n                   if(cntMap.get(idx)<=0)\n                    cntMap.remove(idx);\n                }\n            }\n\n            if(!cntMap.isEmpty() ){ // add res when isStart\n                res[cntMap.firstKey()] += map.higherKey(x)-x;\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"amount-of-new-area-painted-each-day","has_notes":false,"flag_type":1}