{"id":1047091977,"question_id":2297,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694490311,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/1047091977/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"102.4 MB","code":"class Solution {\n    public int[] amountPainted(int[][] paint) {\n        int len = paint.length;\n\n        int[] worklog = new int[len];\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        map.put(paint[0][0], paint[0][1]); //st, ed\n\n        worklog[0] = paint[0][1]-paint[0][0];\n\n        for (int i = 1; i<len; i++){\n\n            int[] p = paint[i];\n            int st = p[0];\n            int ed = p[1];\n            int cnt = ed-st;\n            \n            Map.Entry<Integer, Integer> prevWork = map.lowerEntry(ed);\n            \n            while (prevWork != null) {\n                int prevStart = prevWork.getKey();\n                int prevEnd = prevWork.getValue();\n\n                if (prevEnd <= st)\n                    break;\n\n                cnt -= Math.min(ed, prevEnd) - Math.max(st, prevStart);\n                st = Math.min(st, prevStart);\n                ed = Math.max(ed, prevEnd);\n                map.remove(prevStart);\n\n                prevWork = map.lowerEntry(ed);\n            }\n            map.put(st, ed);\n            worklog[i] = cnt;\n        }\n        return worklog;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"amount-of-new-area-painted-each-day","has_notes":false,"flag_type":1}