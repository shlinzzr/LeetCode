{"id":1084335154,"question_id":2297,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698295389,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1084335154/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"N/A","code":"class Solution {\n    public int[] amountPainted(int[][] paint) {\n        \n        int len = paint.length;\n        TreeMap<Integer, List<int[]>> map = new TreeMap<>(); // x, List<p>\n\n        for(int i=0; i<len; i++){\n            int[] p = paint[i];\n            map.putIfAbsent(p[0], new ArrayList<>());\n            map.putIfAbsent(p[1], new ArrayList<>());\n            map.get(p[0]).add( new int[]{i, 1});\n            map.get(p[1]).add( new int[]{i, -1});\n        }\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> a[0]-b[0] // sort by paint index\n        );\n\n        int[] res = new int[len];\n\n        List<Integer> keyList = new ArrayList<>(map.keySet());\n\n        for(int x  : map.keySet()){ // x from left to right\n            List<int[]> list = map.get(x);\n            for(int[] p : list){\n                int idx = p[0];\n                int flag = p[1];\n                if(p[1]==1){\n                    pq.offer(p);\n                }else{\n                    pq.remove(p);\n                }\n            }\n\n            if(!pq.isEmpty()){\n                res[pq.peek()[0]] += map.higherKey(x)-x;\n            }\n        }\n        return res;\n    }\n}","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"amount-of-new-area-painted-each-day","has_notes":false,"flag_type":1}