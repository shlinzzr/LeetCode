{"id":903268155,"question_id":502,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1677122201,"status":10,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/903268155/","is_pending":"Not Pending","title":"IPO","memory":"90.5 MB","code":"class Solution {\n    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {\n        \n        int len = capital.length;\n        \n        PriorityQueue<int[]> cappq = new PriorityQueue<>(\n            (a, b) ->Integer.compare(a[1], b[1]) \n        );\n        PriorityQueue<int[]> propq = new PriorityQueue<>(\n            (a,b) -> Integer.compare(b[0],a[0])\n        );\n        \n        \n        \n        \n        \n        for(int i=0; i<len; i++){\n            cappq.offer(new int[]{profits[i], capital[i]});\n        }\n        \n        \n        for(int i=0; i<k; i++){\n            \n            while(!cappq.isEmpty() && cappq.peek()[1]<=w){\n                propq.offer(cappq.poll());\n            }\n            \n            if(propq.isEmpty())\n                break;\n            \n            w+=propq.poll()[0];\n        }\n        \n        return w;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"ipo","has_notes":false,"flag_type":1}