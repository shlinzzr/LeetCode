{"id":1114057314,"question_id":502,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701921082,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/1114057314/","is_pending":"Not Pending","title":"IPO","memory":"62.2 MB","code":"class Solution {\n    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {\n        int n = profits.length;\n        int[] earn = new int[n];\n        \n\n        PriorityQueue<int[]> task = new PriorityQueue<>( // idx, earn, capital\n            (a, b) -> a[2]-b[2]\n        );\n        for(int i=0; i<n; i++){\n            task.offer(new int[]{i, profits[i], capital[i]});\n        }\n\n\n        PriorityQueue<int[]> pool = new PriorityQueue<>( //  idx, earn, captial\n            (a,b)-> b[1]-a[1]\n        );\n\n        \n        while(k-->0){\n            \n            while(!task.isEmpty() && task.peek()[2]<=w){\n                pool.offer(task.poll());\n            }\n\n            if(pool.isEmpty())\n                return w;\n\n            else {\n                w += pool.poll()[1];\n            }\n        }\n\n        return w;\n\n\n    }\n\n\n}","compare_result":"11111111111111111111111111111111111","title_slug":"ipo","has_notes":false,"flag_type":1}