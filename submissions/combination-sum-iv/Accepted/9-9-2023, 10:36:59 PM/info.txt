{"id":1044783946,"question_id":377,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1694270219,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1044783946/","is_pending":"Not Pending","title":"Combination Sum IV","memory":"40.2 MB","code":"class Solution {\n    \n    HashMap<Integer, Integer> map = new HashMap<>();\n    \n    \n    public int combinationSum4(int[] nums, int target) {\n      \n       int res = dfs(nums, target);\n        return res;\n    }\n    \n    \n    private int dfs(int[] nums, int target) {\n        if(target<0)\n            return 0;\n\n        if(target==0)\n            return 1;\n\n        if(map.containsKey(target))\n            return map.get(target);\n        \n        \n        \n        int cnt=0; \n        for(int n: nums){\n            cnt+= dfs(nums, target-n);\n        }\n        map.put(target, cnt);\n        \n        return cnt;\n    }\n}","compare_result":"111111111111111","title_slug":"combination-sum-iv","has_notes":false,"flag_type":1}