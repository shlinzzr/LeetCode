{"id":1153382538,"question_id":287,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705910838,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1153382538/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"58.5 MB","code":"class Solution {\n    public int findDuplicate(int[] nums) {\n        \n        int len = nums.length;\n        \n        for(int i=0; i<len; i++){\n            int val = nums[i];\n            \n            while((nums[i]-1>=0 && nums[i]-1<len) && nums[nums[i]-1]!=nums[i]){\n                swap(nums, nums[i]-1, i);\n            }\n            \n        }\n        \n        for(int i=0; i<len; i++){\n            if(nums[i]!=i+1) return nums[i];\n        }\n        \n        return -1;\n        \n    }\n    \n    private void swap(int[] nums, int a, int b){\n        int t = nums[a];\n        nums[a] = nums[b];\n        nums[b] = t;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number","has_notes":false,"flag_type":1}