{"id":1278274699,"question_id":630,"lang":"java","lang_name":"Java","time":"1 week","timestamp":1717577151,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1278274699/","is_pending":"Not Pending","title":"Course Schedule III","memory":"54.9 MB","code":"class Solution {\n    public int scheduleCourse(int[][] courses) {\n        int len = courses.length;\n\n        int max = 0 ;\n        /*\n        又称摸鱼policy，如果sprint的story怎么也干不完，老板又只看完成的个数而不是具体难度，那就难的活就往后拖咯...\n        */\n\n        Arrays.sort(courses, (a,b)-> a[1]!=b[1] ? a[1]-b[1] : a[0]-b[0]); //sort by deadline asc\n        PriorityQueue<Integer> pq = new PriorityQueue<>( // sort pq by longest duration time\n            (a,b) -> b-a\n        );\n\n        int cur = 0;\n\n        for(int i=0; i<len; i++){\n\n            int[] c = courses[i];\n            int duration = c[0];\n            int lastDay = c[1];\n\n            cur += duration; // 當作做完了\n            pq.offer(duration); // 丟到待放棄的清單\n\n            if(cur>lastDay){ // 如果超過deadline了\n                cur-=pq.poll(); // 把難做的放棄\n            }\n        }\n\n        return pq.size();\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"course-schedule-iii","has_notes":false,"flag_type":1}