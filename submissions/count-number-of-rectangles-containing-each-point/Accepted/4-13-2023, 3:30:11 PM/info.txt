{"id":932939909,"question_id":2333,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681371011,"status":10,"status_display":"Accepted","runtime":"433 ms","url":"/submissions/detail/932939909/","is_pending":"Not Pending","title":"Count Number of Rectangles Containing Each Point","memory":"64.2 MB","code":"class Solution {\n    public int[] countRectangles(int[][] rectangles, int[][] points) {\n        int[] res = new int[points.length];\n        List<List<Integer>> group = new ArrayList<>(101);\n        for(int i = 0; i < 101; i++){\n            group.add(new ArrayList<>());\n        }\n        \n        for(int[] rec : rectangles){\n            int l = rec[0];\n            int h = rec[1];\n            group.get(h).add(l);\n        }\n        \n        for(int i = 0; i < 101; i++){\n            Collections.sort(group.get(i));   \n        }\n        \n        for(int i = 0; i < points.length; i++){\n            int count = 0;\n            int x = points[i][0];\n            int y = points[i][1];\n            for(int j = y; j < 101; j++){\n                List<Integer> cur = group.get(j);\n                int index = binarySearch(cur, x);\n                count += cur.size() - index;\n            }\n            res[i] = count;\n        }\n\n        return res;\n    }\n    \n    private int binarySearch(List<Integer> list, int x){\n        int left = 0;\n        int right = list.size();\n        while(left < right){\n            int mid = left + (right - left) / 2;\n            if(list.get(mid) >= x){\n                right = mid;\n            } else{\n                left = mid + 1;\n            }\n        }\n        return left;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"count-number-of-rectangles-containing-each-point","has_notes":false,"flag_type":1}