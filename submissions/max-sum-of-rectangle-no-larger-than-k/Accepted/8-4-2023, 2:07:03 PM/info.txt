{"id":1011799463,"question_id":363,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1691129223,"status":10,"status_display":"Accepted","runtime":"288 ms","url":"/submissions/detail/1011799463/","is_pending":"Not Pending","title":"Max Sum of Rectangle No Larger Than K","memory":"44.4 MB","code":"class Solution {\n    \n    //ref huifeng : https://www.youtube.com/watch?v=RZVPX3elY9I\n    \n    public int maxSumSubmatrix(int[][] matrix, int k) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        if(h==0)\n            return 0;\n        \n        if (h>w){\n            int[][] mat = new int[w][h];\n            for (int i=0; i<h; i++)\n                for (int j=0; j<w; j++)\n                    mat[j][i]=matrix[i][j];\n            return maxSumSubmatrix(mat, k);\n        }\n        \n        \n        int result = Integer.MIN_VALUE;\n        \n        for (int i=0; i<h; i++)        \n        {\n            int[] row = new int[w];\n            \n            for (int r=i; r<h; r++)\n            {\n                // compress cols to one col\n                for (int j=0; j<w; j++)\n                    row[j]+=matrix[r][j];\n                \n                result = Math.max(result, getNoLargerThanK(row, k));\n            }\n        }        \n        return result;\n    } \n    \n    private int getNoLargerThanK(int[] row, int k){\n        \n        TreeSet<Integer> set = new TreeSet<>();\n        set.add(0);\n        \n        int presum = 0;\n        int result = Integer.MIN_VALUE;;\n        \n        for (int i=0; i<row.length; i++){\n        \n            presum+=row[i];\n            \n            Integer val = set.ceiling(presum-k);\n            if (val!=null) \n                result = Math.max(result, presum-val);\n            set.add(presum);\n        }\n        return result;\n    }\n    \n  \n}","compare_result":"111111111111111111111111111111111111","title_slug":"max-sum-of-rectangle-no-larger-than-k","has_notes":false,"flag_type":1}