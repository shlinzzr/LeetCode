{"id":700464441,"question_id":547,"lang":"java","lang_name":"Java","time":"2Â years","timestamp":1652676750,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/700464441/","is_pending":"Not Pending","title":"Number of Provinces","memory":"53 MB","code":"public class Solution {\n    public int findCircleNum(int[][] M) {\n        int count = M.length;\n        int[] root = new int[M.length];\n        for(int i=0;i<M.length;i++){\n            root[i] =i;\n        }\n        for(int i=0;i<M.length;i++){\n            for(int j=0;j<M[0].length;j++){\n                if(M[i][j]==1){\n                    int rooti = findRoot(root,i);\n                    int rootj = findRoot(root,j);\n                    if(rooti!=rootj){\n                        root[rooti] = rootj;\n                        count--;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public int findRoot(int[] roots,int id){\n        while(roots[id]!=id){\n            roots[id] = roots[roots[id]];\n            id = roots[id];\n        }\n        return id;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}