{"id":700466054,"question_id":547,"lang":"java","lang_name":"Java","time":"2Â years","timestamp":1652676930,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/700466054/","is_pending":"Not Pending","title":"Number of Provinces","memory":"53.6 MB","code":"class Solution {\n    boolean[]visited;\n    public int findCircleNum(int[][] isConnected) {\n        int m = isConnected.length;\n        visited = new boolean[m];\n        \n        int provinces = 0;\n        for(int i=0;i<m;i++) {\n            if(!visited[i]) {\n                dfs(i, isConnected);\n                provinces++;\n            }\n        }\n        return provinces;\n    }\n    \n    void dfs(int i, int[][] connectedNodes) {\n        visited[i] = true;\n        int[] connectedNode = connectedNodes[i];\n        for(int j=0;j<connectedNode.length;j++) {\n            if(i!=j && !visited[j] && connectedNodes[i][j]==1)\n                dfs(j, connectedNodes);\n        }\n        \n    } \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}