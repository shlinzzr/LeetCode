{"id":963311698,"question_id":547,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685845521,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/963311698/","is_pending":"Not Pending","title":"Number of Provinces","memory":"N/A","code":"class Solution {\n    int[] parent;\n    int[] weight;\n    \n    \n    public int findCircleNum(int[][] isConnected) {\n        int n = isConnected.length;\n        \n        parent = new int[n];\n        for(int i=0; i<n; i++){\n            parent[i]=i;\n        }\n        \n        for(int i=0; i<n; i++){\n            for(int j=i+1; j<n; j++){\n                \n                int val = isConnected[i][j];\n                \n                if(val==1){\n                    n--;\n                    \n                    // int a = find(i);\n                    // int b = find(j);\n                }\n                \n            }\n        }\n        \n        return n;\n    }\n\n    private int find(int a){\n        \n        if(parent[a]!=a){\n            parent[a]=find(parent[a]);\n            \n        }\n        \n        return parent[a];\n    }\n    \n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n        \n        if(a==b)\n            return;\n        \n        parent[b] = a;\n    }\n}","compare_result":"11001111100000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000010000000","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}