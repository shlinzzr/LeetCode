{"id":867836764,"question_id":36,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672368943,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/867836764/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"42.4 MB","code":"class Solution {\n    public boolean isValidSudoku(char[][] board) {\n        int h = board.length;\n        int w = board[0].length;\n        \n        for(int i=0; i<h; i++){\n            Set<Character> set = new HashSet<>();\n            for(int j=0; j<w; j++){\n                if(board[i][j]!='.' && set.contains(board[i][j])){\n                    // System.out.println(1);\n                    return false;\n                }\n                set.add(board[i][j]);\n            }\n        }\n        \n        \n        \n        for(int j=0; j<w; j++){\n            Set<Character> set = new HashSet<>();\n            for(int i=0; i<h; i++){ \n                if(board[i][j]!='.' && set.contains(board[i][j])){\n                    System.out.println(2);\n                    return false;\n                }\n                set.add(board[i][j]);\n            }\n        }\n        \n        \n        for(int i=0; i<h/3; i++){\n            \n            for(int j=0; j<w/3; j++){\n                Set<Character> set = new HashSet<>();\n                \n                for(int k=0; k<h/3; k++){\n                    for(int l=0; l<w/3; l++){\n                        if(board[3*i+k][3*j+l]!='.' && set.contains(board[3*i+k][3*j+l])){\n                            System.out.println(3);\n                            return false;\n                        }\n                        set.add(board[3*i+k][3*j+l]);\n                    }\n                }\n                \n            }\n        }\n        Set<Character> set = new HashSet<>();\n        for(int i=0; i<h; i++){\n            if(board[i][i]!='.' && set.contains(board[i][i])){\n                    System.out.println(4);\n                    return false;\n            }\n        }\n        \n        set = new HashSet<>();\n        for(int i=0; i<h; i++){\n            if(board[i][w-i-1]!='.' && set.contains(board[i][w-i-1])){\n                System.out.println(5);\n                return false;\n            }\n        }\n        \n        \n        return true;\n    \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false,"flag_type":1}