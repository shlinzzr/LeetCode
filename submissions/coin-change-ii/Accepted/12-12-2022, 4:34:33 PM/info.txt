{"id":858531992,"question_id":518,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670834073,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/858531992/","is_pending":"Not Pending","title":"Coin Change II","memory":"49.1 MB","code":"class Solution {\n    public int change(int amount, int[] coins) {\n    \n        //此問題是在問 “總共” 有幾種方法 所以是舊方法的相加\n        \n        \n        int[][] dp = new int[coins.length+1][amount+1];\n        \n        for (int i = 1; i <= coins.length; i++) {\n            dp[i][0] = 1;  // 組成amount=0的方法都是1\n            \n            for (int j = 1; j <= amount; j++) {\n                \n//                 if(j-coins[i-1]>=0)\n                \n//                     dp[i][j] = dp[i-1][j] +  dp[i][j-coins[i-1]];\n                \n                 dp[i][j] = dp[i-1][j]/*之前其他硬幣的組成方法*/ \n                          + (j >= coins[i-1] ? /*如果amount>=coin*/ dp[i][j-coins[i-1]] /*減去之*/: 0);\n            }\n        }\n        \n        // for(int d: dp){\n        //     System.out.println(d);\n        // }\n        \n        return dp[coins.length][amount];\n        \n        // 2 : 1+1, 2\n        // \n        // 3 : 1+1+1  2+1 \n     \n        \n        \n        // return dp[amount];\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"coin-change-ii","has_notes":false,"flag_type":1}