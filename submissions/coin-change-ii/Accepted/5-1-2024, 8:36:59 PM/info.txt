{"id":1246525782,"question_id":518,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714567019,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1246525782/","is_pending":"Not Pending","title":"Coin Change II","memory":"41.2 MB","code":"class Solution {\n    public int change(int amount, int[] coins) {\n\n        // ref 377. Combination Sum IV\n        int[] dp = new int[amount+1];\n        dp[0]=1;\n\n        for(int c: coins){ // coin是有序的 只算一次 ex : 2,1,1==1,1,2\n            for(int i=1; i<=amount; i++){\n                if(i-c>=0){\n                    dp[i] += dp[i-c];\n                }\n            }\n        }\n        return dp[amount];\n\n\n        // if(amount==0) return 1;\n        // int len = coins.length;\n\n\n        // int[][] dp = new int[len+1][amount+1];\n        // for(int i=1; i<=len; i++){\n        //     dp[i][0]=1;\n\n        //     for(int j=1; j<=amount; j++){\n        //         dp[i][j] = dp[i-1][j];\n        //         if(j-coins[i-1]>=0){\n        //             dp[i][j] +=  dp[i][j-coins[i-1]];\n        //         }\n        //     }\n        // }\n        // return dp[len][amount];\n\n        // i 0 1 2 3 4 5 6\n        //dp 1 1 2 3 5\n        \n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"coin-change-ii","has_notes":false,"flag_type":1}