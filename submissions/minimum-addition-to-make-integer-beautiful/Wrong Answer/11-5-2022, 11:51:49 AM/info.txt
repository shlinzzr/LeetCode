{"id":837117509,"question_id":2544,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667620309,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/837117509/","is_pending":"Not Pending","title":"Minimum Addition to Make Integer Beautiful","memory":"N/A","code":"class Solution {\n    public long makeIntegerBeautiful(long n, int target) {\n        \n        int sum = sumDigit(n);\n        if (sum<=target)\n            return 0;\n        List<Integer> list = getList(n);\n        \n        \n        System.out.println(sum);\n        \n        int res=0;\n        int carry =1;\n        for(int i : list){\n            \n            if(sum<target)\n                break;\n            \n            sum-=i;\n            int comp = carry==1 ? (10-i) : (10-i-1);\n            \n            res+=(comp)*carry;\n            carry*=10;\n            // System.out.println(\"i=\"+i  + \"sum=\"+sum + \" comp=\"+comp + \" res=\"+res);\n            \n        }\n\n        return res;\n        \n    }\n    \n    \n    private List<Integer> getList(long n){\n        List<Integer> list = new ArrayList<>();\n        \n        \n        // 123 => [3, 2, 1]\n        while(n>0){\n            list.add((int)n%10);\n            n/=10;\n        }\n        return list;\n    }\n    \n    \n    private int sumDigit(long n){\n        \n        int res = 0;\n        \n        while(n>0){\n            res += (int)n%10;\n            n/=10;\n        }\n        \n        return res;\n        \n        \n    }\n    \n    \n    // 19    1\n    \n    // sum =10\n    // res = 1+ 10-1-1 *10, sum=9\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111110010000000000000000000000000000000000000011100111","title_slug":"minimum-addition-to-make-integer-beautiful","has_notes":false,"flag_type":1}