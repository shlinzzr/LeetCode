{"id":1267121117,"question_id":1242,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1716609621,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1267121117/","is_pending":"Not Pending","title":"Matrix Block Sum","memory":"45.7 MB","code":"class Solution {\n    public int[][] matrixBlockSum(int[][] mat, int k) {\n        \n        int h = mat.length;\n        int w = mat[0].length;\n        int[][] presum = new int[h+1][w+1];\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                presum[i+1][j+1] = mat[i][j] + presum[i][j+1] + presum[i+1][j] - presum[i][j];\n            }\n        }\n\n        int[][] res = new int[h][w];\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                int rmax = Math.min(h, i+k+1);\n                int rmin = Math.max(0, i-k);\n\n                int cmax = Math.min(w, j+k+1);\n                int cmin = Math.max(0, j-k);\n\n                // System.out.println(i+ \" \"+ j + \" \" + rmax + \" \" + cmax + \" \" + rmin + \" \" + cmin);\n\n                res[i][j] = presum[rmax][cmax] \n                          - presum[rmax][cmin]\n                          - presum[rmin][cmax]\n                          + presum[rmin][cmin];\n\n\n\n            }\n\n        }\n        return res;\n    }\n}","compare_result":"111111111111","title_slug":"matrix-block-sum","has_notes":false,"flag_type":1}