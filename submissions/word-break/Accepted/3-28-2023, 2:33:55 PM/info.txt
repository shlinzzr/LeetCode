{"id":923459660,"question_id":139,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679985235,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/923459660/","is_pending":"Not Pending","title":"Word Break","memory":"40.8 MB","code":"class Solution {\n    public boolean wordBreak(String s, List<String> wordDict) {\n        int len = s.length();\n        \n        // first sol : dp\n        // enhance_1: only find until wordDictMaxLen;\n        // enhance_2: use hashset to replace list\n        \n        Set<String> set = new HashSet<>();\n        int wordDictMaxLen = 0;\n        for(String w : wordDict){\n            set.add(w);\n            wordDictMaxLen = Math.max(wordDictMaxLen, w.length());\n        }\n        \n        \n        boolean[] dp = new boolean[len+1]; //0~len\n        dp[0]=true; //組成空字串的方式always true\n        // find dp[len];\n        for(int ed=0; ed<=len; ed++){\n            for(int st=0; st<ed; st++){\n                \n                if(ed-st>wordDictMaxLen)\n                    continue;\n                \n                if(dp[st] && set.contains(s.substring(st, ed))){\n                    dp[ed]=true;\n                }\n            }\n        }\n        \n        return dp[len];\n        \n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"word-break","has_notes":false,"flag_type":1}