{"id":1157011300,"question_id":576,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706238651,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1157011300/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"41.9 MB","code":"public class Solution {\n    public int findPaths(int m, int n, int N, int sr, int sc) {\n        if (N <= 0) return 0;\n        \n        final int MOD = 1000000007;\n        int[][] mat = new int[m][n];\n        mat[sr][sc] = 1;\n        int result = 0;\n        \n        int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n        \n        for (int step = 0; step < N; step++) {\n            int[][] temp = new int[m][n];\n            for (int i = 0; i < m; i++) {\n                for (int j = 0; j < n; j++) {\n                    for (int[] d : dirs) {\n                        int r = i + d[0];\n                        int c = j + d[1];\n                        if (r < 0 || r >= m || c < 0 || c >= n) {\n                            result = (result + mat[i][j]) % MOD;\n                        }\n                        else {\n                            temp[r][c] = (temp[r][c] + mat[i][j]) % MOD;\n                        }\n                    }\n                }\n            }\n            mat = temp;\n        }\n        \n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"out-of-boundary-paths","has_notes":false,"flag_type":1}