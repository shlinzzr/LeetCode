{"id":911321827,"question_id":314,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678259773,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/911321827/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int min = 100;\n    \n    public List<List<Integer>> verticalOrder(TreeNode root) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        for(int i=0; i<200; i++){\n            res.add(new ArrayList<>());\n        }\n     \n        \n        \n        helper(root, res, 100);\n        \n        while(res.get(0).size()==0)\n            res.remove(0);\n        \n        int i=0;\n        while(res.get(i).size()!=0){\n            i++;\n        }\n        while(i<res.size() && res.get(i).size()==0)\n            res.remove(i);\n        \n        \n        return res;\n    }\n    \n    private void helper(TreeNode root, List<List<Integer>> res, int lv){\n        \n        if(root.left!=null){\n            \n            min = Math.min(min, lv-1);\n            helper(root.left, res, lv-1);\n            \n        }\n        \n        res.get(lv).add(root.val);\n        \n        if(root.right!=null){\n            helper(root.right, res, lv+1);\n        }\n    }\n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-vertical-order-traversal","has_notes":false,"flag_type":1}