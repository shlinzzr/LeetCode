{"id":1141035591,"question_id":156,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704770265,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1141035591/","is_pending":"Not Pending","title":"Binary Tree Upside Down","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Node {\n    int val;\n    Node left;\n    Node right;\n    Node next;\n    Node(){}\n    Node(int val){this.val=val;}\n}\n\nclass Solution {\n\n     public TreeNode upsideDownBinaryTree(TreeNode root) {\n        if (root == null || root.left == null && root.right == null)\n            return root;\n\n        TreeNode newRoot = upsideDownBinaryTree(root.left);\n        \n        root.left.left = root.right;\n        root.left.right = root;\n        \n        root.left = null;\n        root.right = null;\n            \n        return newRoot;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-upside-down","has_notes":false,"flag_type":1}