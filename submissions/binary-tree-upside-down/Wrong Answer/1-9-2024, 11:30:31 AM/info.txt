{"id":1141043449,"question_id":156,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704771031,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1141043449/","is_pending":"Not Pending","title":"Binary Tree Upside Down","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Node {\n    int val;\n    Node left;\n    Node right;\n    Node next;\n    Node(){}\n    Node(int val){this.val=val;}\n}\n\nclass Solution {\n    public TreeNode upsideDownBinaryTree(TreeNode root) {\n\n        if(root==null) return null;\n        TreeNode res = new TreeNode();\n\n        Queue<TreeNode[]> q = new LinkedList<>();\n        q.offer(new TreeNode[]{null, root}); // parent, curr\n\n        while(!q.isEmpty()){\n            int siz = q.size();\n            boolean first = true;\n            while(siz-->0){\n\n                TreeNode[] arr = q.poll();\n                TreeNode parent = arr[0]; // null\n                TreeNode curr = arr[1]; // 1\n\n                TreeNode left = curr.left;  // 2 \n                TreeNode right = curr.right; // 3\n\n\n                if(left!=null){\n                    if(first)\n                        q.offer(new TreeNode[]{curr, left});\n                    else \n                        q.offer(new TreeNode[]{null, left});\n                }\n\n                if(right!=null){\n                    q.offer(new TreeNode[]{null, right});\n                }\n\n                if(parent!=null)\n                    curr.left = parent.right;\n\n                if(first){\n                    res = curr;//1\n                    curr.right = parent;\n                    if(parent!=null) parent.right=null;\n                    first=false;\n                }\n\n                \n            }\n        }\n\n        return res;\n    \n    }\n}","compare_result":"0110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-upside-down","has_notes":false,"flag_type":1}