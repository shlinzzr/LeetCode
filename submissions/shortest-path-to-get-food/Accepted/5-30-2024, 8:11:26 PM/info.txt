{"id":1272334723,"question_id":550,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717071086,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1272334723/","is_pending":"Not Pending","title":"Shortest Path to Get Food","memory":"51.5 MB","code":"class Solution {\n    public int getFood(char[][] grid) {\n\n        int h = grid.length;\n        int w = grid[0].length;\n\n        Queue<int[]> q = new LinkedList<>();\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                char ch = grid[i][j];\n                if(ch=='*'){\n                    q.offer(new int[]{i, j});\n                    break;\n                } \n            }\n        }\n\n        int[][] dirs = new int[][]{{1,0},{0,1},{-1,0}, {0,-1}};\n        int step = 0;\n        while(!q.isEmpty()){\n            int size= q.size();\n            while(size-->0){\n                int[] p = q.poll();\n\n                for(int[] d : dirs){\n                    int r = d[0]+p[0];\n                    int c = d[1] + p[1];\n                    if(r<0 || c<0 || r>=h || c>=w || grid[r][c]=='X' || grid[r][c]=='*') continue;\n\n                    if(grid[r][c]=='#') return step+1;\n                    grid[r][c] = 'X';\n                    q.offer(new int[]{r,c});\n                }\n            }\n            step++;\n        }\n\n        return -1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-to-get-food","has_notes":false,"flag_type":1}