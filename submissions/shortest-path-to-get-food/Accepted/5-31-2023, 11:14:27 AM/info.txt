{"id":960653167,"question_id":550,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685502867,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/960653167/","is_pending":"Not Pending","title":"Shortest Path to Get Food","memory":"49.9 MB","code":"class Solution {\n    public int getFood(char[][] grid) {\n        int h= grid.length;\n        int w = grid[0].length;\n        \n        boolean[][] bool = new boolean[h][w];\n        \n        Queue<int[]> q = new LinkedList<>();\n        for(int i=0; i<h;i++){\n            for(int j=0; j<w; j++){\n                if(grid[i][j]=='*')\n                    q.offer(new int[]{i, j});\n            }\n        }\n        \n        \n        int[][] dirs = new int[][]{{0,1}, {1,0}, {-1,0},{0,-1}};\n        \n        int step=1;\n        while(!q.isEmpty()){\n            \n            for(int i=q.size(); i>0; i--){\n                \n                int[] p = q.poll();\n                \n                for(int[] d : dirs){\n                    \n                    int r = d[0]+p[0];\n                    int c = d[1]+p[1];\n                    \n                    if(r<0 || c<0 || r>=h || c>=w || bool[r][c] || grid[r][c]=='X') \n                        continue;\n                    \n                    if(grid[r][c]=='#')\n                        return step;\n                    \n                    bool[r][c] = true;\n                    q.offer(new int[]{r,c});\n                }\n            }\n            step++;\n        }\n        return -1;\n    \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-to-get-food","has_notes":false,"flag_type":1}