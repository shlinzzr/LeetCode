{"id":1142163933,"question_id":545,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704869712,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1142163933/","is_pending":"Not Pending","title":"Boundary of Binary Tree","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n   List<Integer> nodes = new ArrayList<>(1000);\n    public List<Integer> boundaryOfBinaryTree(TreeNode root) {\n        System.out.println(nodes);\n        if(root == null) return nodes;\n\n        nodes.add(root.val);\n        leftBoundary(root.left);\n        leaves(root.left);\n        leaves(root.right);\n        rightBoundary(root.right);\n        \n        return nodes;\n    }\n    public void leftBoundary(TreeNode root) {\n        if(root == null || (root.left == null && root.right == null)) return;\n        nodes.add(root.val);\n        if(root.left == null) leftBoundary(root.right);\n        else leftBoundary(root.left);\n    }\n    public void rightBoundary(TreeNode root) {\n        if(root == null || (root.right == null && root.left == null)) return;\n        if(root.right == null)rightBoundary(root.left);\n        else rightBoundary(root.right);\n        nodes.add(root.val); // add after child visit(reverse)\n    }\n    public void leaves(TreeNode root) {\n        if(root == null) return;\n        if(root.left == null && root.right == null) {\n            nodes.add(root.val);\n            return;\n        }\n        leaves(root.left);\n        leaves(root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"boundary-of-binary-tree","has_notes":false,"flag_type":1}