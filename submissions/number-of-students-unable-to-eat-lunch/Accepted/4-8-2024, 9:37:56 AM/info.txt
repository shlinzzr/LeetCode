{"id":1226281764,"question_id":1802,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712540276,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1226281764/","is_pending":"Not Pending","title":"Number of Students Unable to Eat Lunch","memory":"41.2 MB","code":"class Solution {\n    public int countStudents(int[] stu, int[] food) {\n\n\n        int len = stu.length;\n\n        int z=0, o=0;\n\n        for(int i=0; i<len; i++){\n            if(stu[i]==0){\n                z++;\n            }else{\n                o++;\n            }\n        }\n\n        int min = Math.min(z, o);\n\n        for(int i=0; i<len; i++){\n            if(food[i]==1){\n                o--;\n            }else{\n                z--;\n            }\n\n            if(o<0 || z<0){\n                return len-i;\n            }\n        }\n\n        return 0;\n\n\n\n\n        // Queue<Integer> q = new LinkedList<>();\n        // for(int s: stu){\n        //     q.offer(s);\n        // }\n\n        // for(int i=0; i<len;i++){\n        //     int s = q.pop();\n        //     if(s==food[i]){\n        //         continue;\n        //     }else{\n        //         q.offer(s);\n        //         i--;\n        //     }\n        // }\n\n\n        // boolean[] taken = new boolean[len];\n        // boolean[] taken = new boolean[len];\n        // int si=0, fi=0;\n\n        // int cnt= 0 ;\n        // while(cnt<len){\n\n        //     if(stu[si]==food[fi]){\n                \n\n        //         taken[fi]=true;\n        //         cnt++;\n        //         if(cnt==len)\n        //             break;\n        //         while(taken[fi]){\n        //             fi++;\n        //         }\n\n        //         while()\n\n        //         si%=len;\n\n\n        //     }\n        // }\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"number-of-students-unable-to-eat-lunch","has_notes":false,"flag_type":1}