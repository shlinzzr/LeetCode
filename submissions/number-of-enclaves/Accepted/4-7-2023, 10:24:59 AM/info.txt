{"id":929351740,"question_id":1073,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680834299,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/929351740/","is_pending":"Not Pending","title":"Number of Enclaves","memory":"50.4 MB","code":"class Solution {\n    public int numEnclaves(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int oneCnt = 0;\n        \n        boolean[][] seen = new boolean[h][w];\n        Queue<int[]> q = new LinkedList<>();\n                \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(grid[i][j]==1){\n                    oneCnt++;\n                    if(i==0 || i==h-1 || j==0 || j==w-1){\n                        \n                        seen[i][j]=true;\n                        q.offer(new int[]{i, j});\n                        oneCnt--;\n                    }\n                }\n            }\n        }\n        \n        System.out.println(oneCnt);\n        \n        while(!q.isEmpty()){\n            \n            int[] p = q.poll();\n            for(int[] d : dirs){\n                int r = p[0]+d[0];\n                int c = p[1]+d[1];\n                \n                if(r<0 || r>=h || c<0 || c>=w || seen[r][c] || grid[r][c]!=1)\n                    continue;\n                \n                seen[r][c] = true;\n                oneCnt--;\n                q.offer(new int[]{r, c});\n            }\n        }\n        return oneCnt;\n    }\n    \n    int[][] dirs = new int[][]{{0,1}, {1,0}, {0, -1}, {-1, 0}};\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-enclaves","has_notes":false,"flag_type":1}