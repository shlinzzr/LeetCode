{"id":806001727,"question_id":1940,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663842301,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/806001727/","is_pending":"Not Pending","title":"Maximum XOR for Each Query","memory":"N/A","code":"class Solution {\n    public int[] getMaximumXor(int[] nums, int maximumBit) {\n        int len = nums.length;\n        \n        int max = findMax(maximumBit);\n        \n        int all=0;\n        for(int n : nums){\n            all= all^n;\n        }\n        \n        int[] res = new int[len];\n        for(int i=0; i<len; i++){\n            \n            int ed = len-i;\n            if(ed==len){\n                //xor nothing;\n                \n            }else{\n                all = all^nums[ed];\n            }\n            \n            int tempAll = all;\n            int mb = maximumBit;\n            int k=0;\n            while(mb>0){\n                \n                k=k<<1;\n                if(tempAll&1==1){\n                    \n                }else{\n                    k+1\n                }\n                mb--;\n            }\n            \n            res[i]=k;\n        }\n        \n        return res;\n            \n    }\n    \n    \n    private int findMax(int mb){\n        \n        int res =1;\n        while(mb>0){\n            res = res<<1;\n            mb--;\n        }\n        \n        return res-1;\n    }\n}","compare_result":null,"title_slug":"maximum-xor-for-each-query","has_notes":false,"flag_type":1}