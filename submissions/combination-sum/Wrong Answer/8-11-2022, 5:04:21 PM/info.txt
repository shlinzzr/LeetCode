{"id":770939194,"question_id":39,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660208661,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/770939194/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        \n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(candidates, target, res, new ArrayList<>(), 0);\n        \n        return res;\n        \n        \n        \n    }\n    \n    \n    private void helper(int[] can, int target, List<List<Integer>> list, List<Integer> curr, int start){\n        \n        if(target==0){\n            list.add(new ArrayList<>(curr));\n        }\n        \n        for(int i=start; i<can.length; i++){\n            if(target-i>=0){\n                curr.add(can[i]);\n                helper(can, target-can[i], list, curr, i);\n                curr.remove(curr.size()-1);\n            }\n        }\n        \n    }\n    \n    \n}","compare_result":"111111111110111111111111111111111111111111111111111111111111111111111010000101010110100011011111111011011010101101110111110010011000000111011010011000110100100111011100111","title_slug":"combination-sum","has_notes":false,"flag_type":1}