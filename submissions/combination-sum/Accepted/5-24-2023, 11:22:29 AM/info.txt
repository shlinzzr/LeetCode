{"id":956180352,"question_id":39,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684898549,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/956180352/","is_pending":"Not Pending","title":"Combination Sum","memory":"44.2 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] C, int target) {\n        \n        Arrays.sort(C);\n        List<List<Integer>> res = new ArrayList<>();\n        helper(res, C, target, new ArrayList<>(), 0);\n        return res;\n        \n    }\n    \n    \n    private void helper(List<List<Integer>> res , int[] C, int target, List<Integer>curr, int st){\n        if(target==0){\n            res.add(new ArrayList<>(curr));\n            return ;\n        }\n        \n        if(target<0)\n            return;\n        \n        \n        for(int i=st; i<C.length; i++){\n            int n = C[i];\n            curr.add(n);\n            helper(res, C, target-n, curr, i);\n            curr.remove(curr.size()-1);\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}