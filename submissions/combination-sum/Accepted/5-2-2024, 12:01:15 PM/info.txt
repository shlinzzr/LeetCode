{"id":1247061505,"question_id":39,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714622475,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1247061505/","is_pending":"Not Pending","title":"Combination Sum","memory":"44.3 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        List<List<Integer>> res = new ArrayList<>();\n        helper(candidates, target, new ArrayList<>(), res, 0);\n        return res;\n    }\n\n    private void helper(int[] candidates, int target, List<Integer> curr, List<List<Integer>> res, int st){\n\n        if(target==0){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n\n        for(int i=st; i<candidates.length; i++){\n            int c = candidates[i];\n            if(target>=c){\n                curr.add(c);\n                helper(candidates, target-c, curr, res, i);\n                curr.remove(curr.size()-1);\n            }\n        }\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}