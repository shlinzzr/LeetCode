{"id":1076551942,"question_id":39,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697449140,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1076551942/","is_pending":"Not Pending","title":"Combination Sum","memory":"43.7 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        int len = candidates.length;\n        List<List<Integer>> res= new ArrayList<>();\n\n        helper(candidates, res, new ArrayList<>(), target, 0);\n        return res;\n\n    }\n\n    private void helper(int[] arr,  List<List<Integer>> res, List<Integer> curr, int target, int st){\n\n        if(target==0){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n\n        if(target<0)\n            return;\n\n        for(int i=st; i<arr.length; i++){\n            \n            if(target-arr[i]>=0){\n                curr.add(arr[i]);\n                helper(arr, res, curr, target-arr[i], i);\n                curr.remove(curr.size()-1);\n            }\n        }\n\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}