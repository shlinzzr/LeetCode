{"id":825028227,"question_id":2487,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666078399,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/825028227/","is_pending":"Not Pending","title":"Optimal Partition of String","memory":"48.3 MB","code":"class Solution {\n    public int partitionString(String s) {\n        int cnt =1;\n        int[] arr = new int[26];\n        \n        for(int i=0; i<s.length(); i++){\n            char ch = s.charAt(i);\n            \n            if(arr[ch-'a']!=0){\n                cnt++;\n                Arrays.fill(arr, 0);\n            }\n            \n            arr[ch-'a']++;\n            \n            \n        }\n        \n        return cnt;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"optimal-partition-of-string","has_notes":false,"flag_type":1}