{"id":825024969,"question_id":2487,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666078000,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/825024969/","is_pending":"Not Pending","title":"Optimal Partition of String","memory":"N/A","code":"class Solution {\n    public int partitionString(String s) {\n        int cnt =0;\n        int[] arr = new int[26];\n        boolean isNew = true;\n        \n        \n        for(int i=0; i<s.length(); i++){\n            char ch = s.charAt(i);\n            \n            if(arr[ch-'a']==0){\n                arr[ch-'a']++;\n                if(isNew){\n                    cnt++;\n                  isNew =false;  \n                } \n            }else{\n                cnt++;\n                Arrays.fill(arr, 0);\n                isNew =true;\n            }\n        }\n        \n        return cnt;\n        \n    }\n}","compare_result":"11101000010000000000000000000000000000000000000111000000011","title_slug":"optimal-partition-of-string","has_notes":false,"flag_type":1}