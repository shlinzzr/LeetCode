{"id":1043676950,"question_id":1384,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1694155143,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1043676950/","is_pending":"Not Pending","title":"Maximum Font to Fit a Sentence in a Screen","memory":"56 MB","code":"/**\n * // This is the FontInfo's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface FontInfo {\n *     // Return the width of char ch when fontSize is used.\n *     public int getWidth(int fontSize, char ch) {}\n *     // Return Height of any char when fontSize is used.\n *     public int getHeight(int fontSize)\n * }\n */\nclass Solution {\n    public int maxFont(String text, int w, int h, int[] fonts, FontInfo fontInfo) {\n        int len = fonts.length;\n        \n        int st=0, ed=len-1;\n        while(st<ed){\n            int mid = ed-(ed-st)/2;\n            \n            if(isOk(text, w, h, fonts[mid], fontInfo)){\n                st=mid;\n            }else{\n                ed=mid-1;\n            }\n            \n            \n        }\n       \n        \n        if(isOk(text, w, h, fonts[st], fontInfo))\n            return fonts[st];\n        \n        if(st>0 && isOk(text, w, h, fonts[st-1], fontInfo))\n            return fonts[st-1];\n        \n        return -1;\n        \n    }\n    \n    private boolean isOk(String text, int w, int h, int f, FontInfo fontInfo){\n        \n        if(fontInfo.getHeight(f)>h)\n            return false;\n        \n        int sum =0;\n        for(char ch : text.toCharArray()){\n            sum += fontInfo.getWidth(f, ch);\n        }\n        \n        \n        if(sum>w)\n            return false;\n        \n        return true;\n        \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111","title_slug":"maximum-font-to-fit-a-sentence-in-a-screen","has_notes":false,"flag_type":1}