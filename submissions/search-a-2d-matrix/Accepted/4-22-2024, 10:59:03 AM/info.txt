{"id":1238697297,"question_id":74,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713754743,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1238697297/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"42.1 MB","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n\n        int st = 0, ed = h-1;\n\n        while(st<ed){ // 0, 1\n            int m = ed-(ed-st)/2;  // 1\n\n            if(matrix[m][0]>target){\n                ed = m-1; //0\n            }else{\n                st = m; //1\n            }\n        }\n\n        int row = st;\n\n        st=0; ed = w-1;\n\n        while(st<ed){\n            int m = st+(ed-st)/2;\n\n            if(matrix[row][m]==target) \n                return true;\n            else if(matrix[row][m]>target){\n                ed = m-1;\n\n            }   else\n                st = m+1;\n        }\n\n        return matrix[row][st]==target;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}