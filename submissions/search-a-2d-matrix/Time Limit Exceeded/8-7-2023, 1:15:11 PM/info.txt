{"id":1014381810,"question_id":74,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1691385311,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1014381810/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int st=0, ed=h-1;\n        \n        while(st<ed){\n            \n            int mid = st+(ed-st)/2;\n            \n            if(matrix[mid][0]>target){\n                ed = mid-1;\n            }else{\n                st = mid;\n            }\n        }\n        \n        \n            \n            \n        int row = st;\n        st=0;\n        ed=w-1;\n        \n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            \n            if(matrix[row][mid]==target){\n                return true;\n            }else if(matrix[row][mid]>target){\n                st = mid+1;\n            }else{\n                ed= mid-1;\n            }\n        }\n        \n        return matrix[row][st]==target;        \n    }\n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}