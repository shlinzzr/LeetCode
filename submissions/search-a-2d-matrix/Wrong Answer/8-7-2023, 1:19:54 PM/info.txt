{"id":1014384865,"question_id":74,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1691385594,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1014384865/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int st=0, ed=h-1;\n        \n        while(st<ed){\n            \n            int mid = ed-(ed-st)/2;\n            \n            if(matrix[mid][0]>target){\n                ed = mid-1;\n            }else{\n                st = mid;\n            }\n        }\n        \n        \n        // System.out.println(st);\n            \n        int row = st;\n        st=0;\n        ed=w-1;\n        \n        while(st<ed){\n            int mid = ed-(ed-st)/2;\n            \n            if(matrix[row][mid]==target){\n                return true;\n            }else if(matrix[row][mid]>target){\n                ed = mid-1;\n            }else{\n                st= mid+1;\n            }\n        }\n        \n         // System.out.println(st);\n        \n        return false;\n    }\n}","compare_result":"1110111110111101011011101101010111111111110111101011101011111011111111111111101111111111011111011101011101111111110111111111111101111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}