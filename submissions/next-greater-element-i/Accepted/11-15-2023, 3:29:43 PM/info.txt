{"id":1099233677,"question_id":496,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1700033383,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1099233677/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"43.7 MB","code":"class Solution {\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\n        Stack<Integer> st = new Stack<>();\n\n        int len = nums2.length;\n\n        int[] nextGreater = new int[len];\n\n        HashMap<Integer,Integer> map = new HashMap<>();\n\n        Arrays.fill(nextGreater, -1);\n        for(int i=0; i<len; i++){\n\n            while(!st.isEmpty() && nums2[st.peek()]<nums2[i]){\n                map.put(nums2[st.peek()], nums2[i]);\n                nextGreater[st.pop()] = i;\n            }\n            st.push(i);\n        }\n\n        int[] res = new int[nums1.length];\n        for(int i=0; i<nums1.length; i++){\n            res[i] = map.getOrDefault(nums1[i], -1);\n        }\n\n        return res;\n\n\n    }\n}","compare_result":"1111111111111111","title_slug":"next-greater-element-i","has_notes":false,"flag_type":1}