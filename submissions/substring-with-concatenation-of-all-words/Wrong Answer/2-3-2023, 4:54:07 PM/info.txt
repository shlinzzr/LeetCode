{"id":890589202,"question_id":30,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675414447,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/890589202/","is_pending":"Not Pending","title":"Substring with Concatenation of All Words","memory":"N/A","code":"class Solution {\n    public List<Integer> findSubstring(String s, String[] words) {\n        List<String> list = new ArrayList<>();\n        \n        int len = words.length;\n        boolean[] used = new boolean[len];\n        \n        dfs(words, \"\", list, used);\n        \n        List<Integer> res = new ArrayList<>();\n        for(String l : list){\n            \n            if(s.indexOf(l)>-1)\n                res.add(s.indexOf(l));\n        }\n        \n        return res;\n        \n    }\n    \n    \n    private void dfs(String words[], String curr, List<String> list, boolean[] used){\n        \n        int wLen = words[0].length();\n        int len = words.length;\n        if(curr.length()==wLen*len){\n            list.add(curr);\n            return;\n        }\n        \n        \n        for(int i=0; i<len; i++){\n            if(used[i]==false){\n                used[i]=true;\n                dfs(words, curr+words[i], list, used);\n                used[i]=false;\n            }\n        }\n        \n        \n    }\n}","compare_result":"1110001101010001100000011000001111111111111111111111111111011101111111111111111111101111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000","title_slug":"substring-with-concatenation-of-all-words","has_notes":false,"flag_type":1}