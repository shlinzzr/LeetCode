{"id":757925212,"question_id":1114,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658907183,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/757925212/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"41.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode bstToGst(TreeNode root) {\n        \n        \n        dfs(root, 0);\n        \n        return root;\n    }\n    \n    private int dfs(TreeNode curr, int cnt){\n        \n        if(curr==null)\n            return 0;\n        \n        int right = dfs(curr.right, cnt);\n        \n        int total = curr.val + right ;\n        \n        curr.val = total + cnt;\n        \n        total += dfs(curr.left, curr.val);\n        \n        return total;\n        \n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree","has_notes":false,"flag_type":1}