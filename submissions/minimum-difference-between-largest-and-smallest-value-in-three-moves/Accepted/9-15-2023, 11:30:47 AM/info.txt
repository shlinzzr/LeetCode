{"id":1049800414,"question_id":1616,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694748647,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1049800414/","is_pending":"Not Pending","title":"Minimum Difference Between Largest and Smallest Value in Three Moves","memory":"54.3 MB","code":"class Solution {\n    public int minDifference(int[] nums) {\n        \n        int n = nums.length;\n        \n        if(n<=4)\n            return 0;\n\n        Arrays.sort(nums);\n        \n        return Math.min(nums[n-1]-nums[3],  Math.min(nums[n-2]-nums[2],  Math.min(nums[n-3]-nums[1], nums[n-4]-nums[0])));        \n        \n        // 6  6  0  1  1  4  6\n        // 0  1  2  3       n-1\n        //.      2.       n-2\n        //.   1.      n-3 \n        \n        // 0 1 1 4 6 6 6 \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-difference-between-largest-and-smallest-value-in-three-moves","has_notes":false,"flag_type":1}