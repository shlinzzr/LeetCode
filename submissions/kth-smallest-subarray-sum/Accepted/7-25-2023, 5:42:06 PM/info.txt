{"id":1003427729,"question_id":2069,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690278126,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/1003427729/","is_pending":"Not Pending","title":"Kth Smallest Subarray Sum","memory":"45.8 MB","code":"class Solution {\n    public int kthSmallestSubarraySum(int[] nums, int k) {\n        int len = nums.length;\n        \n        \n        int[] presum = new int[len+1];\n        for(int i=0; i<len; i++){\n            presum[i+1] = presum[i]+nums[i];\n        }\n        \n        int st=0, ed = Integer.MAX_VALUE;\n        \n        while(st<ed){\n            \n            int mid = st + (ed-st)/2;\n            \n            if(countLessEqual(nums, mid)<k){\n                st = mid+1;\n            }else{\n                ed = mid;\n            }\n                \n            \n        }\n        \n        return st;\n        \n        \n    }\n\n    \n    private int countLessEqual(int[] nums, int target) {\n        int count = 0, sum = 0, left = 0;\n        for (int right = 0; right < nums.length; right++) {\n            sum += nums[right];\n            while (sum > target) {\n                sum -= nums[left];\n                left++;\n            }\n            count += right - left + 1;\n        }\n        return count;\n    }\n    \n//     private int getCnt(int[] presum, int mid){\n//         int len = presum.length;\n//         for()\n//     }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-subarray-sum","has_notes":false,"flag_type":1}