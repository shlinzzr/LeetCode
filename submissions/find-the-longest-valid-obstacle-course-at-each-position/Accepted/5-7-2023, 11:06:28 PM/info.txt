{"id":946119350,"question_id":2096,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683471988,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/946119350/","is_pending":"Not Pending","title":"Find the Longest Valid Obstacle Course at Each Position","memory":"55.9 MB","code":"class Solution {\n     public int[] longestObstacleCourseAtEachPosition(int[] A) {\n        int n = A.length, length = 0, res[] = new int[n], mono[] = new int[n];\n        for (int i = 0; i < n; ++i) {\n            int l = 0, r = length;\n            while (l < r) {\n                int m = (l + r) / 2;\n                if (mono[m] <= A[i])\n                    l = m + 1;\n                else\n                    r = m;\n            }\n            res[i] = l + 1;\n            if (length == l)\n                length++;\n            mono[l] = A[i];\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-longest-valid-obstacle-course-at-each-position","has_notes":false,"flag_type":1}