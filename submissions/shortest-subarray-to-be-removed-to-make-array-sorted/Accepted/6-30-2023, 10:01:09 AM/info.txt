{"id":982735821,"question_id":1679,"lang":"java","lang_name":"Java","time":"11Â months, 2Â weeks","timestamp":1688090469,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/982735821/","is_pending":"Not Pending","title":"Shortest Subarray to be Removed to Make Array Sorted","memory":"56.4 MB","code":"class Solution {\n    public int findLengthOfShortestSubarray(int[] arr) {\n        int len = arr.length;\n        \n        \n        int j =len-1;\n        \n        while(j>0 && arr[j-1]<=arr[j]){\n            j--;\n        }\n        \n        int min = len-1;\n        \n        min = Math.min(min, j);\n        \n        if(min==0)\n            return 0;\n        \n        \n        \n        for(int i=0; i<len; i++){\n            if(i-1>=0 && arr[i-1]>arr[i]){\n                break;\n            }\n            \n            while(j<len && arr[i]>arr[j]){\n                j++;\n            }\n            \n            min = Math.min(min, j-i-1);\n        \n        }\n        \n        return min;\n        \n        \n        \n        \n        \n    }\n    \n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-subarray-to-be-removed-to-make-array-sorted","has_notes":false,"flag_type":1}