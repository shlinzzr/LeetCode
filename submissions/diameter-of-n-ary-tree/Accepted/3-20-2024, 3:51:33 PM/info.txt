{"id":1208913053,"question_id":1665,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1710921093,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1208913053/","is_pending":"Not Pending","title":"Diameter of N-Ary Tree","memory":"43.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    \n    public Node() {\n        children = new ArrayList<Node>();\n    }\n    \n    public Node(int _val) {\n        val = _val;\n        children = new ArrayList<Node>();\n    }\n    \n    public Node(int _val,ArrayList<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    int max = 0;\n    public int diameter(Node root) {\n        getDepth(root);\n        return max;\n    }\n\n    private int getDepth(Node root){\n        if(root==null) return 0;\n\n        List<Node> list = root.children;\n\n        int top1 = 0;\n        int top2 = 0;\n\n        for(Node node : list){\n            int d = getDepth(node);\n\n            if(d>top1){\n                top2 = top1;\n                top1 = d;\n                \n            }else if(d>top2){\n                top2=d;\n            }\n\n        }\n\n        max = Math.max(max, top1+top2);\n\n        return top1+1;\n\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"diameter-of-n-ary-tree","has_notes":false,"flag_type":1}