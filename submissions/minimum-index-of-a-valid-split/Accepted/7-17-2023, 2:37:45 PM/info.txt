{"id":996448349,"question_id":2888,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689575865,"status":10,"status_display":"Accepted","runtime":"1612 ms","url":"/submissions/detail/996448349/","is_pending":"Not Pending","title":"Minimum Index of a Valid Split","memory":"61.1 MB","code":"class Solution {\n    public int minimumIndex(List<Integer> nums) {\n        \n        List<Long> left = new ArrayList<>();\n        \n        HashMap<Long, Integer> map = new HashMap<>();\n        \n        long max = (long)nums.get(0);\n        int cnt = 1;\n        \n        for(int i=0; i<nums.size(); i++){\n            long n = (long)nums.get(i);\n            map.put((long)n, map.getOrDefault(n,0)+1);\n            \n            if(map.get(n)>cnt){\n                cnt = map.get(n);\n                max = n;\n            }\n            if(map.get(max)*2>i+1)\n                left.add(max);\n            else \n                left.add(-1L);\n        }\n        \n        \n        map = new HashMap<>();\n        max = nums.get(nums.size()-1);\n        cnt=1;\n        List<Long> right  = new ArrayList<>();\n        for(int i=nums.size()-1; i>=0; i-- ){\n            \n            long n  = (long)nums.get(i);\n            map.put((long)n, map.getOrDefault(n,0)+1);\n            \n            if(map.get(n)>cnt){\n                cnt = map.get(n);\n                max = n;\n            }\n            \n            // System.out.println( \" i=\" + i + \" max=\"+max + \" map.get(max)=\"+map.get(max));\n            \n            if(map.get(max)*2>nums.size()-i)\n                right.add(0, max);\n            else \n                right.add(0, -1L);\n            \n            \n        }\n        \n        \n//         for(int i=0; i<10; i++){\n//             System.out.print(left.get(i) + \", \");\n//         }\n//         System.out.println();\n        \n//         for(int i=0; i<10; i++){\n//             System.out.print(right.get(i) + \", \");\n//         }\n//         System.out.println();\n        \n        \n        // System.out.println(left.get(6)-right.get(6));\n        for(int i=0; i<nums.size()-1; i++){\n            \n            if(left.get(i)-right.get(i+1)==0 && left.get(i)!=-1)\n                return i;\n        }\n        \n        return -1;\n        \n        \n        \n        \n        \n        \n    }\n}","compare_resulttitle_slug":"minimum-index-of-a-valid-split","has_notes":false,"flag_type":1}