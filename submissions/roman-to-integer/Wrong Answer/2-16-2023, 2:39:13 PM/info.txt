{"id":898966978,"question_id":13,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676529553,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/898966978/","is_pending":"Not Pending","title":"Roman to Integer","memory":"N/A","code":"class Solution {\n    public int romanToInt(String s) {\n        Map<String, Integer> map = new LinkedHashMap<>();\n        map.put(\"IV\", 4);\n        map.put(\"IX\", 9);\n        map.put(\"XL\", 50);\n        map.put(\"XC\", 90);\n        map.put(\"CD\", 500);\n        map.put(\"CM\", 900);\n        map.put(\"I\", 1);\n        map.put(\"V\", 5);\n        map.put(\"X\", 10);\n        map.put(\"L\", 50);\n        map.put(\"C\", 100);\n        map.put(\"D\", 500);\n        map.put(\"M\", 1000);\n        \n        int res =0;\n        \n        for(Map.Entry<String, Integer> en : map.entrySet()){\n            // System.out.println(en.getKey());\n            int idx = s.indexOf(en.getKey());\n            while(idx>=0){\n                \n                res+=en.getValue();\n                idx = s.indexOf(en.getKey(), idx+1);\n            }\n            s= s.replaceAll(en.getKey(), \"\");\n        }\n            \n        return res;\n    }\n}\n","compare_resulttitle_slug":"roman-to-integer","has_notes":false,"flag_type":1}