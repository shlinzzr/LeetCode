{"id":820746098,"question_id":1544,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665561615,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/820746098/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"50.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    \n    public int goodNodes(TreeNode root) {\n        \n        return helper(root, Integer.MIN_VALUE);\n        \n        \n    }\n    \n    private int helper(TreeNode root, int max){\n        \n        if(root==null)\n            return 0;\n        \n        int res = (root.val>=max)?1:0;\n        \n        max = Math.max(root.val, max);\n        res+=helper(root.left, max);\n        res+=helper(root.right, max);\n        \n        return res;\n        \n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}