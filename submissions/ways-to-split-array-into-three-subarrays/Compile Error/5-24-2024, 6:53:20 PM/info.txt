{"id":1266579466,"question_id":1831,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1716548000,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1266579466/","is_pending":"Not Pending","title":"Ways to Split Array Into Three Subarrays","memory":"N/A","code":"class Solution {\n    public int waysToSplit(int[] nums) {\n\n        // left <= mid <= right\n\n        int M = (int) 1e9+7;\n        int len = nums.length;\n        int[] presum = new int[len];\n        for(int i=0; i<len; i++){\n            presum[i] = i==0 ? nums[i] : nums[i] + presum[i-1];\n        }\n\n        for (int i = 0, j = 0, k = 0; i < len - 2; ++i) {\n            while (j <= i || (j < len-1 && presum[j] < presum[i] * 2)) // p[j] need >= 2*p[i]\n                ++j; //j 是mid.left最小的可能\n            while ( k < j || ( k < len-1 && presum[k] - presum[i] <= presum[len-1] - presum[k]))\n                ++k; //k 是mid.right 最大的可能\n\n            res = (res + k - j) % 1000000007;\n        }    \n        return res;\n    }\n    // find mid.left == j\n    //     [ x x x ] [ x x x] [x x x] \n    //           i     j       \n\n    // find mid.right==k\n    //     [ x x x ] [ x x x] [x x x] \n    //           i         k       len-1\n\n}","compare_result":null,"title_slug":"ways-to-split-array-into-three-subarrays","has_notes":false,"flag_type":1}