{"id":1271334789,"question_id":268,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1716981075,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1271334789/","is_pending":"Not Pending","title":"Missing Number","memory":"45.2 MB","code":"class Solution {\n    public int missingNumber(int[] nums) {\n        // [0, n] => n+1 \n        int len = nums.length;\n\n        // vallen  will be change to the missing pos\n\n        int idx= 0 ;\n        for(int i=0; i<len; i++){\n            int val = nums[i]; // val should be on the nums[val] except when val==len\n\n            while(nums[i]<len && nums[nums[i]]!=nums[i]){\n                swap(nums, i, nums[i]);\n            }\n        }\n\n        for(int i=0; i<len; i++){\n            if(nums[i]!=i) return i;\n        }\n\n        return len;\n        \n    }\n\n    private void swap(int[] nums, int a, int b){\n        int t = nums[a];\n        nums[a] = nums[b];\n        nums[b] = t;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"missing-number","has_notes":false,"flag_type":1}