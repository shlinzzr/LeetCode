{"id":936135728,"question_id":2626,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1681874563,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936135728/","is_pending":"Not Pending","title":"Count the Number of Good Subarrays","memory":"N/A","code":"class Solution {\n    public long countGood(int[] nums, int k) {\n        Arrays.sort(nums);\n        int len = nums.length;\n        int cnt =0;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        for(int i=0; i<len ; i++){\n            map.put(nums[i], map.getOrDefault(nums[i], 0)+1);\n        }\n        \n        for(int key : map.keySet()){\n            \n            int val = map.get(key);\n            int n = val*(val-1)/2;\n            \n            if((val)*(val-1)/2>=k)\n                cnt++;\n        }\n        \n        return cnt;\n            \n            \n            \n        \n        \n    }\n}","compare_result":"10110001001100000000000000000000001000010","title_slug":"count-the-number-of-good-subarrays","has_notes":false,"flag_type":1}