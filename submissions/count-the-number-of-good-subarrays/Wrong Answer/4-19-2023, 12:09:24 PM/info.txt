{"id":936152468,"question_id":2626,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1681877364,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936152468/","is_pending":"Not Pending","title":"Count the Number of Good Subarrays","memory":"N/A","code":"class Solution {\n    public long countGood(int[] nums, int k) {\n        // Arrays.sort(nums);\n        int len = nums.length;\n        int res =0;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        int pairs = 0;\n        int ed=0;\n        for(int st=0; st<len ; st++){\n            \n            while(ed<len && pairs<k){\n                pairs += diff(map, nums[ed], 1);\n                map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n                ed++;\n            }\n            \n            if(pairs>=k){\n                res += len-ed+1;\n            }\n            \n            \n            pairs += diff(map, nums[st], -1);\n            map.put(nums[st], map.getOrDefault(nums[st], 0)-1);\n        }\n        return res;        \n        \n    }\n    \n    private int diff(HashMap<Integer, Integer> map , int num, int d){\n        \n        int cnt = map.getOrDefault(num,0);\n        int old_pair = cnt*(cnt-1)/2;\n        cnt+=d;\n        int new_pair = cnt*(cnt-1)/2;\n        \n        return new_pair-old_pair;\n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111001111","title_slug":"count-the-number-of-good-subarrays","has_notes":false,"flag_type":1}