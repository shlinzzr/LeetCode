{"id":1113304612,"question_id":1419,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701830488,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1113304612/","is_pending":"Not Pending","title":"Make Array Non-decreasing or Non-increasing","memory":"43.2 MB","code":"class Solution {\n    public static int convertArray(int[] nums) {\n        int n = nums.length;\n        int res1 = 0;\n        int res2 = 0;\n        Queue<Integer> maxHeap = new PriorityQueue<>((a, b) -> b - a);\n        Queue<Integer> minHeap = new PriorityQueue<>();\n        for (int i = 0; i < n; i++) {\n            if (!maxHeap.isEmpty() && maxHeap.peek() >= nums[i]) {\n                res1 += maxHeap.peek() - nums[i];\n                maxHeap.poll();\n                maxHeap.add(nums[i]);\n            }\n            if (!minHeap.isEmpty() && minHeap.peek() <= nums[i]) {\n                res2 += nums[i] - minHeap.peek();\n                minHeap.poll();\n                minHeap.add(nums[i]);\n            }\n            maxHeap.add(nums[i]);\n            minHeap.add(nums[i]);\n        }\n\n        return Math.min(res1, res2);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-array-non-decreasing-or-non-increasing","has_notes":false,"flag_type":1}