{"id":1142241439,"question_id":655,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704876780,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1142241439/","is_pending":"Not Pending","title":"Print Binary Tree","memory":"43.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<String>> printTree(TreeNode root) {\n         List<List<String>> res = new ArrayList<>();\n         int h = getH(root);\n         int w = (int)Math.pow(2, h)-1;\n\n         for(int i=0; i<h; i++){\n             res.add(new ArrayList<>());\n             for(int j=0; j<w; j++){\n                 res.get(i).add(\"\");\n             }\n         }\n\n        //  helper(root, res, row, left, right);\n         helper(root, res, 0, 0, w-1);\n\n         return res;\n\n    }\n\n\n    private void helper(TreeNode root, List<List<String>> res, int row, int left, int right){\n        if(root==null) return;\n\n        int mid = left + (right-left)/2;\n        res.get(row).set(mid, root.val+\"\");\n\n        helper(root.left, res, row+1, left, mid-1);\n        helper(root.right, res, row+1, mid+1, right);\n\n    }\n\n    private int getH(TreeNode node){\n        if(node==null) return 0;\n\n        int left = getH(node.left);\n        int right = getH(node.right);\n\n        return Math.max(left, right)+1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"print-binary-tree","has_notes":false,"flag_type":1}