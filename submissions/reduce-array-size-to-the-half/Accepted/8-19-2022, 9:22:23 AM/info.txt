{"id":777367577,"question_id":1464,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1660872143,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/777367577/","is_pending":"Not Pending","title":"Reduce Array Size to The Half","memory":"56 MB","code":"// class Solution {\n//     public int minSetSize(int[] arr) {\n//         Hash\n        \n//         for(int i : arr){\n//              occ[i]++;\n//         }\n        \n//         Arrays.sort(occ);\n        \n//         int cnt=0, total=0;\n//         for(int i=occ.length-1; i>=0; i--){\n            \n//             total+=occ[i];\n//             cnt++;\n            \n//             if(total>=arr.length/2)\n//                 return cnt;\n//         }\n        \n//         return -1;\n//     }\n// }\nclass Solution {\n    public int minSetSize(int[] a) {\n        Map<Integer, Integer> m = new HashMap<>();\n        for (int n : a) \n            m.put(n, m.getOrDefault(n, 0) + 1);\n        PriorityQueue<Integer> pq = new PriorityQueue<>((c, d) -> d - c);\n        for (int n : m.keySet()) pq.offer(m.get(n));\n        int res = 0, sum = 0;\n        while(!pq.isEmpty()){\n            sum += pq.poll();\n            res++;\n            if (sum >= (a.length + 1) / 2) return res;\n        }\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"reduce-array-size-to-the-half","has_notes":false,"flag_type":1}