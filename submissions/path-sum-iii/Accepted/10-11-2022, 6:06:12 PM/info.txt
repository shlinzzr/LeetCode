{"id":820040791,"question_id":437,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665482772,"status":10,"status_display":"Accepted","runtime":"131 ms","url":"/submissions/detail/820040791/","is_pending":"Not Pending","title":"Path Sum III","memory":"91.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int res=0;\n    \n    public int pathSum(TreeNode root, int targetSum) {\n        \n        helper(root, targetSum, new ArrayList<>());\n        return res;\n    \n    }\n    \n    private void helper(TreeNode root, long t, List<Long> list ){\n        \n        if(root==null)\n            return;\n        \n        if(root.val==t)\n            res++;\n        \n        \n        List<Long> list2 = new ArrayList<>();\n        \n        for(Long n:list){\n            if(n+root.val==t)\n                res++;\n            \n            list2.add(n+Long.valueOf(root.val));\n        }\n        \n        list2.add(Long.valueOf(root.val));\n        helper(root.left, t, list2);\n        helper(root.right, t, list2);\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}