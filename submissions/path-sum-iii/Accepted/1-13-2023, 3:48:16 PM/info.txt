{"id":877300164,"question_id":437,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673596096,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/877300164/","is_pending":"Not Pending","title":"Path Sum III","memory":"41.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int cnt;\n    \n    public int pathSum(TreeNode root, int targetSum) { //https://www.youtube.com/watch?v=3UaqfofZGVM\n        cnt =0;\n        helper(root, new ArrayList<>(), targetSum);\n        return cnt;\n    }\n    \n    private void helper(TreeNode root, ArrayList<Integer> list, int targetSum){\n        if(root==null)\n            return;\n        \n        list.add(0, root.val); //關鍵在於從尾巴往前加\n        long sum=0;\n        for(int i: list){\n            sum+=i;\n            if(sum==targetSum)\n                cnt++;\n        }\n        \n        helper(root.left, list, targetSum);\n        helper(root.right, list, targetSum);\n        \n        list.remove(0);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}