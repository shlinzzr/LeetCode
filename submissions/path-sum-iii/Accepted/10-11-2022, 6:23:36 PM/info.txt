{"id":820048601,"question_id":437,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665483816,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/820048601/","is_pending":"Not Pending","title":"Path Sum III","memory":"44.8 MB","code":"class Solution {\n    int count = 0;\n    public int pathSum(TreeNode root, int targetSum) {\n        // copied from solution\n        \n        Map<Long, Integer> map = new HashMap<>();\n\n        pathSum(root, 0L, targetSum, map);\n        \n        return count;\n    }\n    \n    private void pathSum(TreeNode root, long curr, int t, Map<Long, Integer> map) {\n        if (root == null) {\n            return;\n        }\n        curr += root.val;\n        \n        if (curr == t) {\n            count++;\n        }\n        \n        count += map.getOrDefault(curr - t, 0);\n        \n        map.put(curr, map.getOrDefault(curr, 0) + 1);\n\n        //  for(Map.Entry<Long, Integer> en :frequencyMap.entrySet() ){\n        //     System.out.println(en.getKey() + \" \" + en.getValue()+ \" count=\"+count);\n        // }\n        //  System.out.println();\n        \n        pathSum(root.left, curr, t, map);\n        \n        pathSum(root.right, curr, t, map);\n        \n        map.put(curr, map.get(curr) - 1);\n        \n       \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}