{"id":916708166,"question_id":437,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679035002,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/916708166/","is_pending":"Not Pending","title":"Path Sum III","memory":"42.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int cnt=0;\n    public int pathSum(TreeNode root, int targetSum) {\n        \n        helper(root, targetSum,  new ArrayList<>());\n        \n        return cnt;\n        \n    }\n    \n    private void helper(TreeNode root, int targetSum, List<Integer> list){\n        \n        if(root==null)\n            return;\n        \n        list.add(root.val);\n        long sum=0;\n        \n        for(int i=list.size()-1; i>=0; i--){\n            sum+=list.get(i);\n            if(sum==targetSum)\n                cnt++;\n        }\n            \n        helper(root.left, targetSum, list);\n        helper(root.right, targetSum, list);\n        \n        \n        list.remove(list.size()-1);\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}