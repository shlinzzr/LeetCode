{"id":894442932,"question_id":437,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675913008,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/894442932/","is_pending":"Not Pending","title":"Path Sum III","memory":"42.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int cnt=0;\n    public int pathSum(TreeNode root, int targetSum) {\n        helper(root, new ArrayList<>(), targetSum);\n        return cnt;\n    }\n    \n    private void helper(TreeNode root, List<Integer> list, int t){\n        \n        if(root==null)\n            return ;\n        \n        list.add(root.val);\n        long sum=0;\n        for(int i=list.size()-1; i>=0; i--){\n            \n            sum+=Long.valueOf(list.get(i));\n            if(sum==t)\n                cnt++;\n        }\n        \n        helper(root.left, list, t);\n        helper(root.right, list, t);\n        \n        list.remove(list.size()-1);\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}