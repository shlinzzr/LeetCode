{"id":1141976440,"question_id":437,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704852143,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1141976440/","is_pending":"Not Pending","title":"Path Sum III","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int res = 0;\n    int target = 0;\n    \n    HashMap<Long, Integer> map = new HashMap<>();\n    public int pathSum(TreeNode root, int targetSum) {\n        this.target = targetSum;\n\n      \n        map.put(0L, 1);\n        helper(root, 0L);\n        return res;\n    }\n\n    private void helper(TreeNode root, long curr){\n\n        if(root==null) return;\n\n        curr+=root.val;\n        if(map.containsKey(curr-target)){\n            res+= map.get(curr-target);\n        }\n        map.put(curr, map.getOrDefault(curr, 0)+1);\n        helper(root.left, curr);\n        helper(root.right, curr);\n        map.put(curr, map.get(curr)-1);\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}