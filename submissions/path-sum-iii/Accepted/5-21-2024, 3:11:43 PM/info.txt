{"id":1263772002,"question_id":437,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716275503,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1263772002/","is_pending":"Not Pending","title":"Path Sum III","memory":"43.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int res=0;\n    public int pathSum(TreeNode root, int targetSum) {\n\n        Map<Long, Integer> map = new HashMap<>();\n        map.put(0L, 1);\n\n        helper(root, map, 0L, targetSum);\n        return res;\n        \n    }\n\n    private void helper(TreeNode node, Map<Long, Integer> map, long curr, int target){\n\n        if(node==null) return ;\n\n        curr+=node.val;\n\n        if(map.containsKey(curr-target)){\n            res+= map.get(curr-target);\n        }\n\n        map.put(curr, map.getOrDefault(curr,0)+1);\n\n        helper(node.left, map, curr, target);\n        helper(node.right, map, curr, target);\n\n        map.put(curr, map.getOrDefault(curr,0)-1);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}