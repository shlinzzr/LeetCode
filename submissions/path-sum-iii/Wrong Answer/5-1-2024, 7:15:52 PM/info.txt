{"id":1246475974,"question_id":437,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714562152,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1246475974/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n      Map<Integer,Integer> map ;\n    public int pathSum(TreeNode root, int targetSum) {\n         map = new HashMap<>();\n        map.put(0, 1);\n\n        return helper(root, 0, targetSum);\n        \n        \n    }\n\n\n    private int helper(TreeNode node, int cur, int target){\n        \n        if(node==null) return 0;\n\n\n\n        int res = helper(node.left, cur+node.val, target);\n        res += helper(node.right, cur+node.val, target);\n\n        if(map.containsKey(cur-target)){\n            res += map.get(cur-target);\n        }\n\n        map.put(cur+node.val, map.getOrDefault(cur+node.val,0)+1);\n\n        return res;\n\n    }\n}","compare_result":"001100010011000000100001000000000100000000011010001101001110011000000111001100011101101101010110110001100101000000011100000001101","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}