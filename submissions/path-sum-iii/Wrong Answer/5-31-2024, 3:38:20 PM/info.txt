{"id":1273079459,"question_id":437,"lang":"java","lang_name":"Java","time":"1 week, 5 days","timestamp":1717141100,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1273079459/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int res=0;\n    Map<Integer, Integer> map ;\n    public int pathSum(TreeNode root, int targetSum) {\n\n        map = new HashMap<>();\n        map.put(0, 1);\n\n        helper(root, 0, targetSum);\n\n        return res;\n\n        \n    }\n\n    private void helper(TreeNode node, int cur, int target){\n\n        if(node==null) return;\n\n        cur += node.val;\n\n        if(map.containsKey(cur-target)){\n            res += map.get(cur-target);\n        }\n\n        map.put(cur, map.getOrDefault(cur,0)+1);\n        helper(node.left, cur, target);\n        helper(node.right, cur, target);\n        map.put(cur, map.get(cur)-1);\n        if(map.get(cur)==0) map.remove(cur);\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}