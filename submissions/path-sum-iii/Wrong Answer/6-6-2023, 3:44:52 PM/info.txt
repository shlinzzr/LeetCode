{"id":964983412,"question_id":437,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686037492,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/964983412/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int res= 0; \n    \n    public int pathSum(TreeNode root, int targetSum) {\n        if(root==null)\n            return -1;\n        \n        HashMap<Long, Integer> map = new HashMap<>();\n        map.put(0L, 1);\n        \n        helper(root, targetSum, 0L, map);\n        \n        \n        return res;\n    }\n    \n    \n    private void helper(TreeNode root, int target, long curr, HashMap<Long, Integer> map ){\n        \n        if(root==null)\n            return;\n        \n        curr+=root.val;\n        if(map.containsKey(curr-target)){\n            res += map.get(curr-target);\n        }\n        map.put(curr, map.getOrDefault(curr,0)+1);\n        helper(root.left, target, curr, map);\n        helper(root.right, target, curr, map);\n        map.put(curr, map.get(curr)-1);\n        \n        \n    }\n}","compare_result":"11001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}