{"id":1246477245,"question_id":437,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714562282,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1246477245/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n      Map<Long,Integer> map ;\n\n      int res=0;\n    public int pathSum(TreeNode root, int targetSum) {\n        map = new HashMap<>();\n        map.put(0L, 1);\n        helper(root, 0, targetSum);\n        return res;\n    }\n\n\n    private int helper(TreeNode node, int targetSum, long curr){\n        \n        if(node==null) return 0;\n\n        curr += node.val;\n        if(map.containsKey(curr-targetSum)){\n            res += map.get(curr-targetSum);\n        }\n\n        map.put(curr, map.getOrDefault(curr,0)+1);\n        helper(node.left, targetSum, curr );\n        helper(node.right, targetSum, curr );\n        map.put(curr, map.getOrDefault(curr,0)-1);\n        return res;\n\n    }\n}","compare_result":"001101100010001001101000001011001100000000001010001101000110000000010000000011001010010001110110110101100111110110111101000011111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}