{"id":1238726955,"question_id":437,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713758518,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1238726955/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    Map<Integer, Integer> map ;\n    int res= 0 ;\n    public int pathSum(TreeNode root, int targetSum) {\n        map = new HashMap<>(); \n        map.put(0, 1);\n        helper(root, 0, targetSum);\n        return res;\n    }\n\n    private void helper(TreeNode node, int curr, int targetSum){\n\n        if(node==null) return;\n        curr += node.val;\n\n        if(map.containsKey(curr - targetSum)){\n            res += map.get(curr - targetSum);\n        }\n\n        \n        map.put(curr, map.getOrDefault(curr,0)+1);\n        helper(node.left, target, curr, map);\n        helper(node.right, target, curr, map);\n        map.put(curr, map.get(curr)-1);\n    }\n}","compare_result":null,"title_slug":"path-sum-iii","has_notes":false,"flag_type":1}