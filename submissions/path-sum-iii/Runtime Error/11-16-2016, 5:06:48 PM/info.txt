{"id":82803907,"question_id":437,"lang":"c","lang_name":"C","time":"7 years, 6 months","timestamp":1479287208,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/82803907/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     struct TreeNode *left;\r\n *     struct TreeNode *right;\r\n * };\r\n */\r\nint pathSum(struct TreeNode* root, int sum) {\r\n    int path=0;\r\n    \r\n    struct TreeNode* p = root;\r\n    \r\n    while(p->left || p->right)\r\n    {\r\n        if(p->left)\r\n        {\r\n            if(p->val + pathSum(p->left, sum-p->val)==sum) path++;\r\n            path += pathSum(p->left, sum);\r\n            \r\n        }\r\n        if(p->right){\r\n            if(p->val + pathSum(p->right, sum-p->val)==sum) path++;\r\n            path += pathSum(p->right, sum);\r\n        }\r\n        \r\n         if(p->left) p=p->left;\r\n         if(p->right) p=p->right;\r\n    }\r\n    return path;\r\n        \r\n    \r\n    /*\r\n    if(root->val + root->left->val == sum )\r\n        return 1;\r\n    else path += pathSum(root->left, sum);\r\n    \r\n    if(root->val + root->right->val == sum)\r\n        return 1;\r\n    else path += pathSum(root->right, sum);\r\n    \r\n    return path;*/\r\n}","compare_result":null,"title_slug":"path-sum-iii","has_notes":false,"flag_type":1}