{"id":829867697,"question_id":336,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666692588,"status":10,"status_display":"Accepted","runtime":"2063 ms","url":"/submissions/detail/829867697/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"53 MB","code":"public class Solution {\n    public List<List<Integer>> palindromePairs(String[] words) {\n        List<List<Integer>> ret = new ArrayList<>(); \n        if (words == null || words.length < 2) return ret;\n        Map<String, Integer> map = new HashMap<>();\n        for (int i=0; i<words.length; i++) {\n            map.put(words[i], i);\n        }\n        for (int i=0; i<words.length; i++) {\n            for (int j=0; j<=words[i].length(); j++) { // notice it should be \"j <= words[i].length()\"\n                String str1 = words[i].substring(0, j);\n                String str2 = words[i].substring(j);\n                if (isPalindrome(str1)) {\n                    String str2rvs = new StringBuilder(str2).reverse().toString();\n                    if (map.getOrDefault(str2rvs, i) != i) {\n                        ret.add(Arrays.asList(map.get(str2rvs), i));\n                    }\n                }\n                if (isPalindrome(str2) && str2.length() != 0) {\n                    String str1rvs = new StringBuilder(str1).reverse().toString();\n                    // check \"str.length() != 0\" to avoid duplicates\n                    if (map.getOrDefault(str1rvs, i) != i) { \n                        ret.add(Arrays.asList(i, map.get(str1rvs)));\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n    \n    private boolean isPalindrome(String str) {\n        for (int l = 0, r = str.length() - 1; l <= r; l ++, r --) {\n            if (str.charAt(l) != str.charAt(r)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-pairs","has_notes":false,"flag_type":1}