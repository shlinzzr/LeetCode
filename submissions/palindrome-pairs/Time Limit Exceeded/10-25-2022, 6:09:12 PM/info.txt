{"id":829867424,"question_id":336,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666692552,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/829867424/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> palindromePairs(String[] words) {\n    List<List<Integer>> ret = new ArrayList<>(); \n    if (words == null || words.length < 2) return ret;\n    Map<String, Integer> map = new HashMap<String, Integer>();\n    for (int i=0; i<words.length; i++) map.put(words[i], i);\n    for (int i=0; i<words.length; i++) {\n        // System.out.println(words[i]);\n        for (int j=0; j<=words[i].length(); j++) { // notice it should be \"j <= words[i].length()\"\n            String str1 = words[i].substring(0, j);\n            String str2 = words[i].substring(j);\n            if (isPalindrome(str1)) {\n                String str2rvs = new StringBuilder(str2).reverse().toString();\n                if (map.containsKey(str2rvs) && map.get(str2rvs) != i) {\n                    List<Integer> list = new ArrayList<Integer>();\n                    list.add(map.get(str2rvs));\n                    list.add(i);\n                    ret.add(list);\n                    // System.out.printf(\"isPal(str1): %s\\n\", list.toString());\n                }\n            }\n            if (isPalindrome(str2)) {\n                String str1rvs = new StringBuilder(str1).reverse().toString();\n                // check \"str.length() != 0\" to avoid duplicates\n                if (map.containsKey(str1rvs) && map.get(str1rvs) != i && str2.length()!=0) { \n                    List<Integer> list = new ArrayList<Integer>();\n                    list.add(i);\n                    list.add(map.get(str1rvs));\n                    ret.add(list);\n                    // System.out.printf(\"isPal(str2): %s\\n\", list.toString());\n                }\n            }\n        }\n    }\n    return ret;\n}\n\nprivate boolean isPalindrome(String str) {\n    int left = 0;\n    int right = str.length() - 1;\n    while (left <= right) {\n        if (str.charAt(left++) !=  str.charAt(right--)) return false;\n    }\n    return true;\n}\n    \n    \n//     private boolean isPalindrome(String ab){\n//         for(int i=0; i<ab.length()/2; i++){\n//             if(ab.charAt(i)!=ab.charAt(ab.length()-1-i))\n//                 return false;\n//         }\n        \n//         return true;\n        \n//     }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"palindrome-pairs","has_notes":false,"flag_type":1}