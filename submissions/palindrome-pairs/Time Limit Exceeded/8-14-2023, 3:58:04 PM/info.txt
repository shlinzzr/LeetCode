{"id":1020901796,"question_id":336,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1691999884,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1020901796/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> palindromePairs(String[] words) {\n        List<List<Integer>> res  = new ArrayList<>();\n        int len = words.length;\n        \n        \n        for(int i=0; i<len ; i++){\n            for(int j=i+1; j<len; j++){\n                \n                if(isPal(words[i]+words[j])){\n                    res.add(Arrays.asList(i, j));\n                }\n                \n                if(isPal(words[j]+words[i])){\n                    res.add(Arrays.asList(j, i));\n                }\n                \n                \n            }\n        }\n        return res;\n        \n    }\n    \n    \n    private boolean isPal(String s){\n        \n        for(int i=0; i<s.length()/2; i++){\n            \n            if(s.charAt(i)!=s.charAt(s.length()-i-1))\n                return false;\n        }\n        \n        return true;\n                    \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"palindrome-pairs","has_notes":false,"flag_type":1}