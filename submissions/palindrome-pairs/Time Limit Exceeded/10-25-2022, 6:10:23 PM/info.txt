{"id":829867946,"question_id":336,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666692623,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/829867946/","is_pending":"Not Pending","title":"Palindrome Pairs","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> palindromePairs(String[] words) {\n        List<List<Integer>> res = new ArrayList<>();\n        HashMap<String, Integer> map = new HashMap<>();\n        for(int i=0; i<words.length; i++){        \n            map.put(words[i], i);\n        }\n        \n        \n        for(int i=0; i<words.length; i++){\n            String w = words[i];\n            \n            for(int j=0; j<=w.length(); j++){\n                \n                String str1 = w.substring(0, j);\n                String str2 = w.substring(j);\n                \n                \n                // XXXX YYY  XXXX\n                //      str1 str2\n                //     |->  w  <-|  w 在後面\n                \n                if(isPalindrome(str1)){ // \n                    String rev = getReverse(str2);    \n                    if(map.containsKey(rev)  && map.get(rev) != i ){\n                        List<Integer> list = new ArrayList<>();\n                        \n                        list.add(map.get(rev));\n                        list.add(i);\n                        \n                        res.add(list);\n                    }\n                }\n                \n                // XXXX YYY  XXXX\n                // str1 str2\n                //|->  w  <-|  w 在前面\n                if(isPalindrome(str2)){\n                    String rev = getReverse(str1);    \n                    if(map.containsKey(rev) && map.get(rev) != i && str2.length()!=0){\n                        List<Integer> list = new ArrayList<>();\n                        \n                        list.add(i);\n                        list.add(map.get(rev));\n                        res.add(list);\n                    }\n                }\n            }\n        }\n        \n        return res;\n    }\n    \n    private String getReverse(String w){\n        StringBuilder sb = new StringBuilder(w);\n        return sb.reverse().toString();\n    }\n\n    private boolean isPalindrome(String str) {\n        int left = 0;\n        int right = str.length() - 1;\n        while (left <= right) {\n            if (str.charAt(left++) !=  str.charAt(right--)) return false;\n        }\n        return true;\n    }\n    \n    \n//     private boolean isPalindrome(String ab){\n//         for(int i=0; i<ab.length()/2; i++){\n//             if(ab.charAt(i)!=ab.charAt(ab.length()-1-i))\n//                 return false;\n//         }\n        \n//         return true;\n        \n//     }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"palindrome-pairs","has_notes":false,"flag_type":1}