{"id":1131161809,"question_id":1558,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703831736,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/1131161809/","is_pending":"Not Pending","title":"Course Schedule IV","memory":"48.1 MB","code":"class Solution {\n    public List<Boolean> checkIfPrerequisite(int n, int[][] prerequisites, int[][] queries) {\n        // List<Boolean>  res= new ArrayList<>();\n\n        // List<Integer>[] adj = new ArrayList[n];\n        // for(int i=0; i<n; i++) adj[i] = new ArrayList<>();\n        // int[] indeg = new int[n];\n\n        // for(int[] p : pre){\n        //     indeg[p[1]]++;\n        //     adj[p[0]].add(p[1]);\n        // }\n\n        // Floy-warshall problems:\n        boolean[][] connected = new boolean[n][n];\n        for (int[] p : prerequisites)\n            connected[p[0]][p[1]] = true; // p[0] -> p[1]\n        for (int k = 0; k < n; k++)\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < n; j++)\n                    connected[i][j] = connected[i][j] || connected[i][k] && connected[k][j];\n        List<Boolean> ans = new ArrayList<>();\n        for (int[] q : queries)\n            ans.add(connected[q[0]][q[1]]);\n        return ans;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"course-schedule-iv","has_notes":false,"flag_type":1}