{"id":1229328531,"question_id":1865,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712828991,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1229328531/","is_pending":"Not Pending","title":"Checking Existence of Edge Length Limited Paths II","memory":"N/A","code":"class DistanceLimitedPathsExist {\n\n    int[][] g;\n\n    public DistanceLimitedPathsExist(int n, int[][] edgeList) {\n        g = new int[n][n];\n        for(int[] a : g){\n            Arrays.fill(a, Integer.MAX_VALUE);\n        }\n        \n\n        for(int[] e : edgeList){\n            int a = e[0];\n            int b = e[1];\n            int d = e[2];\n\n            if(g[a][b]>d){\n                g[a][b] = d;\n            }\n\n            if(g[b][a]>d){\n                g[b][a]=d;\n            }\n        }\n\n        for(int i=0; i<n;i++){\n            for(int j=0; j<n; j++){\n                \n            }\n        }\n            \n    }\n    \n    public boolean query(int p, int q, int limit) {\n        \n    }\n}\n\n/**\n * Your DistanceLimitedPathsExist object will be instantiated and called as such:\n * DistanceLimitedPathsExist obj = new DistanceLimitedPathsExist(n, edgeList);\n * boolean param_1 = obj.query(p,q,limit);\n */","compare_result":null,"title_slug":"checking-existence-of-edge-length-limited-paths-ii","has_notes":false,"flag_type":1}