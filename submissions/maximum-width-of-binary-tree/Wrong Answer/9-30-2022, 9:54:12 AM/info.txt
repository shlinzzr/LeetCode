{"id":811755746,"question_id":662,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664502852,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/811755746/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int widthOfBinaryTree(TreeNode root) {\n        Queue<TreeNode> queue = new LinkedList<>();\n        queue.offer(root);\n        Map<TreeNode, Integer> map = new HashMap<TreeNode, Integer>();\n        map.put(root, 1);\n        \n        \n        int level=0, width=0; // nodeCnt = 2^level, width==nodeCnt-1==2^level-1;\n        while(!queue.isEmpty()){\n            int siz = queue.size();\n            int start=0, end=0;\n            \n            \n            for(int i=0; i<siz; i++){ // by level\n                TreeNode curr = queue.poll();                \n                if(i==0){\n                    start = map.get(curr);\n                }\n                if(i==siz-1){\n                    end = map.get(curr);\n                }\n                \n                if(curr.left!=null){\n                    queue.offer(curr.left);\n                    map.put(curr.left, 2*map.get(curr));\n                    \n                }\n                \n                if(curr.right!=null){\n                    queue.offer(curr.right);\n                    map.put(curr.right, 2*map.get(curr)+1);\n                }\n                    \n                width = Math.max(width, end-start+1);\n                \n            }\n        }\n        \n        return width;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111101111111111101111101","title_slug":"maximum-width-of-binary-tree","has_notes":false,"flag_type":1}