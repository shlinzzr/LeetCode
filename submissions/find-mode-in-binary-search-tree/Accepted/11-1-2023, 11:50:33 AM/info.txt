{"id":1088823862,"question_id":501,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698810633,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1088823862/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"46.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    int maxFreq = 0;\n    int curFreq = 0;\n    int prev;\n    List<Integer> list = new ArrayList<>();\n\n    public int[] findMode(TreeNode root) {\n        if(root==null)\n            return new int[0];\n        \n        findMode(root.left);\n\n        if(maxFreq==0){ // init the first node\n            maxFreq=1;\n            curFreq=1;\n            // prev = root.val;\n            list.add(root.val);\n\n        }else{\n            if(root.val==prev){\n                curFreq+=1;\n                if(curFreq > maxFreq){\n                    maxFreq = curFreq;\n                    list = new ArrayList<>();\n                    list.add(root.val);\n                }else if(curFreq == maxFreq){\n                    list.add(root.val);\n                }\n            }else{\n                curFreq = 1;\n                if(curFreq == maxFreq){\n                    list.add(root.val);\n                }\n            }\n        }\n\n        prev = root.val;\n        findMode(root.right);\n\n\n        int[] res = new int[list.size()];\n        for(int i=0; i<list.size(); i++){\n            res[i] = list.get(i);\n        }\n        return res;\n    }   \n\n}","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}