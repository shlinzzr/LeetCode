{"id":835288820,"question_id":433,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667384003,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/835288820/","is_pending":"Not Pending","title":"Minimum Genetic Mutation","memory":"40.4 MB","code":"public class Solution {\n    public int minMutation(String start, String end, String[] bank) {\n        if(start.equals(end)) return 0;\n        \n        Set<String> bankSet = new HashSet<>();\n        for(String b: bank) bankSet.add(b);\n        \n        char[] charSet = new char[]{'A', 'C', 'G', 'T'};\n        \n        int level = 0;\n        Set<String> visited = new HashSet<>();\n        Queue<String> queue = new LinkedList<>();\n        queue.offer(start);\n        visited.add(start);\n        \n        while(!queue.isEmpty()) {\n            int size = queue.size();\n            while(size-- > 0) {\n                String curr = queue.poll();\n                if(curr.equals(end)) return level;\n                \n                char[] currArray = curr.toCharArray();\n                for(int i = 0; i < currArray.length; i++) {\n                    char old = currArray[i];\n                    for(char c: charSet) {\n                        currArray[i] = c;\n                        String next = new String(currArray);\n                        if(!visited.contains(next) && bankSet.contains(next)) {\n                            visited.add(next);\n                            queue.offer(next);\n                        }\n                    }\n                    currArray[i] = old;\n                }\n            }\n            level++;\n        }\n        return -1;\n    }\n}","compare_result":"111111111111111","title_slug":"minimum-genetic-mutation","has_notes":false,"flag_type":1}