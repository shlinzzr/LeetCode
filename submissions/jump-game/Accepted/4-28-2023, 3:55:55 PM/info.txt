{"id":940995928,"question_id":55,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682668555,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/940995928/","is_pending":"Not Pending","title":"Jump Game","memory":"43.5 MB","code":"class Solution {\n    public boolean canJump(int[] nums) {\n        int len = nums.length;\n        boolean[] dp = new boolean[len];\n        dp[0]=true;\n        int max = nums[0];        \n        \n        for(int i=0; i<len; i++){\n            \n            if(i<=max){\n                dp[i]= true;\n                max=Math.max(max, i+ nums[i]);\n            }\n        }\n        \n        return dp[len-1];\n        \n        \n        \n    }\n//     public boolean canJump(int[] nums) {\n//         int len = nums.length;\n//         boolean[] dp = new boolean[len];\n        \n//         dp[0] =true;\n        \n//         for(int i=0; i<len;i++){\n            \n//             if(dp[i]){\n//                 for(int j=i; j<=i+nums[i] && j<len; j++){\n//                     dp[j]=true;    \n//                 }\n//             }\n//         }\n        \n//         return dp[len-1];\n//     }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game","has_notes":false,"flag_type":1}