{"id":759719955,"question_id":1411,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659083821,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/759719955/","is_pending":"Not Pending","title":"Convert Binary Number in a Linked List to Integer","memory":"41.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n// class Solution {\n//     public int getDecimalValue(ListNode head) {\n        \n        \n        \n//         List<Integer> list = new ArrayList<>();\n        \n//         while(head!=null){\n            \n//             list.add(0, head.val);\n//             head=head.next;\n//         }\n        \n        \n//         int res = 0;\n        \n//         int mul =1;\n//         for(int i=0; i<list.size(); i++){\n//             res += mul * list.get(i);    \n//             mul *=2;\n//         }\n        \n//         return res;\n        \n        \n        \n//     }\n// }\nclass Solution {\n  public int getDecimalValue(ListNode head) {\n\tint num = 0;                // Initialise num to 0\n\twhile(head!=null) {         // Iteratore over the linked list until head is null    \n\t\tnum <<= 1;              // Left shift num by 1 position to make way for next bit\n\t\tnum += head.val;        // Add next bit to num at least significant position\n\t\thead = head.next;       // Update head\n\t}\n\treturn num;\n}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-binary-number-in-a-linked-list-to-integer","has_notes":false,"flag_type":1}