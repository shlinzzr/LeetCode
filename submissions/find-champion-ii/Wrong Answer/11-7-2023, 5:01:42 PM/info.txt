{"id":1093482995,"question_id":3189,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699347702,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1093482995/","is_pending":"Not Pending","title":"Find Champion II","memory":"N/A","code":"class Solution {\n    \n    public int findChampion(int n, int[][] edges) {\n        \n        HashMap<Integer, Integer> indegree = new HashMap<>();\n        \n        \n        \n        // UnionFind uf = new UnionFind(n);\n        \n        int len = edges.length;\n        for(int i=0; i<len; i++){\n            \n            int src = edges[i][0];\n            int dst = edges[i][1];\n            \n            indegree.put(dst, indegree.getOrDefault(dst,0)+1);\n            \n            // if(uf.find(src)!=uf.find(dst)){\n            //     uf.union(src, dst);\n            // }\n        }\n        \n        List<Integer> list = new ArrayList<>();\n        \n        for(int i=0; i<len;i++){\n            if(indegree.getOrDefault(i, 0)==0)\n                list.add(i);\n        }\n        \n        \n        \n        return list.size()==1 ? list.get(0) : -1;\n            \n        \n        \n    }\n}\n\nclass UnionFind{\n        \n    int[] parent;\n    int[] weight;\n\n    public UnionFind(int n){\n        parent = new int[n];\n        weight = new int[n];\n\n        for(int i=0; i<n; i++){\n            parent[i]=i;\n        }\n        Arrays.fill(weight, 1);\n    }\n\n\n    public void union(int a, int b){\n\n        a = find(a);\n        b = find(b);\n\n        if(a==b)\n            return ;\n\n        parent[b] = a;\n    }\n\n\n    public int find(int x){\n        if(parent[x] ==x)\n            return x;\n\n        parent[x] = find(parent[x]);\n        return parent[x];\n    }\n\n\n}","compare_resulttitle_slug":"find-champion-ii","has_notes":false,"flag_type":1}