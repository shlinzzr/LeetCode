{"id":1155196651,"question_id":44,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706069670,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1155196651/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\n    public boolean isMatch(String s, String p) {\n        int s_len = s.length();\n        int p_len = p.length();\n        \n        boolean[][] dp = new boolean[s_len+1][p_len+1];\n        dp[0][0]=true;\n        // s : \"\"\n        // p : \"*****\"\n            for(int j=1; j<=p_len; j++){\n                if(p.charAt(j-1)!='*')\n                    break;\n                dp[0][j]=true;\n            }\n        \n        \n        \n        for(int i=1; i<=s.length(); i++){\n            for(int j=1; j<=p.length();j++){\n                \n                if(p.charAt(j-1)=='?' || p.charAt(j-1)==s.charAt(i-1)){\n                    dp[i][j] = dp[i-1][j-1];\n                    \n                }else if(p.charAt(j-1)=='*'){\n                    \n                    for(int k=0; k<=i ; k++){\n                        if(dp[k][j]==true)\n                            dp[i][j]=true;\n                    }\n                    \n                    // dp[i][j] = dp[i-1][j] || dp[]\n                }\n                \n                \n            }\n        }\n        \n        return dp[s.length()][p.length()];\n    }\n}","compare_resulttitle_slug":"wildcard-matching","has_notes":false,"flag_type":1}