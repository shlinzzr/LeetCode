{"id":800974084,"question_id":1896,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1663300448,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/800974084/","is_pending":"Not Pending","title":"Maximum Score from Performing Multiplication Operations","memory":"N/A","code":"class Solution {\n    public int maximumScore(int[] nums, int[] multipliers) {\n        int score=0;\n        ArrayList<Integer> list = new ArrayList<>();\n        for(int num : nums)\n            list.add(num);\n        \n        int n = nums.length, m=multipliers.length;\n        \n//         Queue<Integer> queue = new LinkedList<>();\n//         queue.offer(0)\n//         int max=Integer.MIN_VALUE;\n//         int idx=0, cur=0;\n//         while(st.size()>0){\n//             for(int i=0; i<queue.size(); i++){\n//                 int cur = cur + queue.pop()\n                \n                \n                \n//             }\n//             int cur = st.pop();\n            \n//             if(list.size()>0){\n//                 st.push(list.get(0));\n//                 st.push(list.get(list.size()-1));\n                \n                \n                \n//             }\n//         }\n        \n        \n        \n        for(int i=0; i<m; i++){\n            \n            boolean head = list.get(0) > list.get(list.size()-1)*multipliers[i]? true : false;\n            int num= head ? list.get(0) : list.get(list.size()-1);\n            System.out.println(num*multipliers[i]);\n            score += num*multipliers[i];\n            \n            \n            list.remove( head?0 : list.size()-1);\n        }\n        \n        return score;\n        \n    }\n}","compare_result":"10000000000000000000000000000000000000010110111011","title_slug":"maximum-score-from-performing-multiplication-operations","has_notes":false,"flag_type":1}