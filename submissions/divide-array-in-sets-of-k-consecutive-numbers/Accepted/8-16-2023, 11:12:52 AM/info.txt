{"id":1022613584,"question_id":1422,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692155572,"status":10,"status_display":"Accepted","runtime":"141 ms","url":"/submissions/detail/1022613584/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"57 MB","code":"class Solution {\n    public boolean isPossibleDivide(int[] nums, int k) {\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for(int n : nums){\n            map.put(n, map.getOrDefault(n, 0)+1);\n        }\n        \n        \n        int len = nums.length;\n        if(len%k!=0)\n            return false;\n        \n        List<Integer> list = new ArrayList<>(map.keySet());\n        \n        while(!map.isEmpty()){\n            \n            int key = map.firstKey();    \n            for(int i=0; i<k;i++){\n                \n                 int t = key+i;\n                \n                 if(!map.containsKey(t)){\n                     return false;\n                 }else{\n                    map.put(t, map.get(t)-1);\n                    if(map.get(t)==0)\n                        map.remove(t);\n                 }\n            }\n        }\n        \n        return true;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"divide-array-in-sets-of-k-consecutive-numbers","has_notes":false,"flag_type":1}