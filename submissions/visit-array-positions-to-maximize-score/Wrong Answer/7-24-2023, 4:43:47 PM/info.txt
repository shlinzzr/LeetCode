{"id":1002466763,"question_id":2893,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690188227,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002466763/","is_pending":"Not Pending","title":"Visit Array Positions to Maximize Score","memory":"N/A","code":"class Solution {\n    public long maxScore(int[] nums, int x) {\n        \n        \n        int len = nums.length;\n        \n        int cur = nums[0];\n        int ops = 0;\n        \n        boolean even = cur%2==0;\n        \n        for(int i=1; i<len; i++){\n            int n = nums[i];\n\n            //[2,3,6,1,9,2]\n            \n            if(n%2==0){ // n is even\n                \n                int nextCur = even? cur+n : cur;\n                int nextOps = even? ops : ops+n;\n                \n                if(nextOps-x > nextCur){\n                    int t = nextCur;\n                    nextCur = nextOps-x;\n                    nextOps = t;\n                    even = !even;\n                }\n                \n                cur = nextCur;\n                ops = nextOps;\n                \n            }else{ // n is odd\n                \n                int nextCur = even? cur : cur+n;\n                int nextOps = even? ops+n : ops;\n                \n                if(nextOps-x >= nextCur){\n                    int t = nextCur;\n                    nextCur = nextOps-x;\n                    nextOps = t;\n                    even = !even;\n                }\n                cur = nextCur;\n                ops = nextOps;\n            }\n            \n            System.out.println(\"i=\" + i + \" cur=\"+cur + \" ops=\" + ops + \" even=\"+even);\n            \n        }\n        \n        \n        return cur > ops-x ? cur : ops;\n    }\n}","compare_resulttitle_slug":"visit-array-positions-to-maximize-score","has_notes":false,"flag_type":1}