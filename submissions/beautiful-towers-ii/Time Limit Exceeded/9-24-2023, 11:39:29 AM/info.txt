{"id":1057586426,"question_id":3113,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695526769,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1057586426/","is_pending":"Not Pending","title":"Beautiful Towers II","memory":"N/A","code":"class Solution {\n    public long maximumSumOfHeights(List<Integer> maxHeights) {\n        \n        int len = maxHeights.size();\n        \n        long res =0;\n        for(int i=0; i<len; i++){\n            long sum = maxHeights.get(i);\n            \n            int max= maxHeights.get(i);\n            for(int st=i-1; st>=0; st--){\n                int val = Math.min(max, maxHeights.get(st));\n                sum += val;\n                max = Math.min(max, val);\n            }\n            \n            max= maxHeights.get(i);\n            for(int ed=i+1; ed<len; ed++){\n                int val = Math.min(max, maxHeights.get(ed));\n                sum += val;\n                max = Math.min(max, val);\n            }\n            \n            res = Math.max(sum , res);\n       \n        }\n        \n        return res;\n        \n    }\n}","compare_resulttitle_slug":"beautiful-towers-ii","has_notes":false,"flag_type":1}