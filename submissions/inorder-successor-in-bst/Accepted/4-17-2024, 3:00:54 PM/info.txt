{"id":1234649307,"question_id":285,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713337254,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1234649307/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"45.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n\n     public TreeNode inorderSuccessor(TreeNode root, TreeNode p) {\n\n        return helper(root, p);\n     }\n\n     private TreeNode helper(TreeNode node, TreeNode p){\n        if(node==null) return null;\n\n        if(p.val>=node.val){\n            return helper(node.right, p);\n        }else{\n            TreeNode left = helper(node.left, p);\n            return left!=null ? left : node;\n        }\n\n        \n\n     }\n\n    // O(n) : n is total # of tree\n    // TreeNode prev;\n    // public TreeNode inorderSuccessor(TreeNode root, TreeNode p) {\n        \n    //     if(root==null) return null;\n        \n    //     TreeNode left = inorderSuccessor(root.left, p);\n    //     if(left!=null) return left;\n        \n    //     if(prev==p)\n    //         return root;\n        \n        \n    //     prev = root;\n    //     TreeNode right = inorderSuccessor(root.right, p);\n    //     if(right!=null) return right;\n        \n    //     return null;\n        \n    // }\n}","compare_result":"111111111111111111111111","title_slug":"inorder-successor-in-bst","has_notes":false,"flag_type":1}