{"id":1235352411,"question_id":285,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713406228,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1235352411/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n\n     public TreeNode inorderSuccessor(TreeNode root, TreeNode p) {\n\n        return predeccessor(root, p);\n     }\n\n     private TreeNode successor(TreeNode node, TreeNode p){\n        if(node==null) return null;\n\n        if(p.val>=node.val){\n            return successor(node.right, p);\n        }else{\n            TreeNode left = successor(node.left, p);\n            return left!=null ? left : node;\n        }\n\n        \n\n     }\n\n\n    private TreeNode predeccessor(TreeNode node, TreeNode p){\n        if(node==null) return null;\n\n        if(p.val<=node.val){\n            return predeccessor(node.left, p);\n        }else{\n            TreeNode right = predeccessor(node.right, p);\n            return right!=null ? right : node;\n        }\n     }\n\n    // O(n) : n is total # of tree\n    // TreeNode prev;\n    // public TreeNode inorderSuccessor(TreeNode root, TreeNode p) {\n        \n    //     if(root==null) return null;\n        \n    //     TreeNode left = inorderSuccessor(root.left, p);\n    //     if(left!=null) return left;\n        \n    //     if(prev==p)\n    //         return root;\n        \n        \n    //     prev = root;\n    //     TreeNode right = inorderSuccessor(root.right, p);\n    //     if(right!=null) return right;\n        \n    //     return null;\n        \n    // }\n}","compare_result":"001100000000000000000000","title_slug":"inorder-successor-in-bst","has_notes":false,"flag_type":1}