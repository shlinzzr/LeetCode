{"id":1052300927,"question_id":1361,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695010448,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1052300927/","is_pending":"Not Pending","title":"Tiling a Rectangle with the Fewest Squares","memory":"39.7 MB","code":"class Solution {\n    private int result = 14 * 14;\n    \n    public int tilingRectangle(int n, int m) {\n        int[][] visited = new int[n][m];\n        if (n == m) return 1;\n        dfs(n, m, 0, visited);\n        return result;\n    }\n    \n    private void dfs(int n, int m, int cur, int[][] visited) {\n        if (cur >= result) \n            return;\n        \n        // check rectangle is full\n        boolean full = true;\n        int row = 0, col = 0;\n        for (int i = 0; i < n && full; i++) {\n            for (int j = 0; j < m && full; j++) {\n                if (visited[i][j] == 0) {\n                    full = false;\n                    row = i;\n                    col = j;\n                }\n            }\n        }\n        if (full) {\n            result = Math.min(result, cur);\n            return;\n        }\n        \n        \n        // fill with square from big to small\n        for (int len = Math.min(n - row, m - col); len > 0; len--) {\n            \n            boolean haveBrick = false;\n            for (int i = row; i < row + len && !haveBrick; i++) \n                for (int j = col; j < col + len && !haveBrick; j++) \n                    if (visited[i][j] == 1) \n                        haveBrick = true;\n            if (haveBrick)  // have brick, can't fill square, use smaller one\n                continue;\n            \n            // fill with square, go backtracking next round\n            for (int i = row; i < row + len; i++) \n                for (int j = col; j < col + len; j++) \n                    visited[i][j] = 1;\n            \n            dfs(n, m, cur + 1, visited);\n            \n            for (int i = row; i < row + len; i++) \n                for (int j = col; j < col + len; j++) \n                    visited[i][j] = 0;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"tiling-a-rectangle-with-the-fewest-squares","has_notes":false,"flag_type":1}