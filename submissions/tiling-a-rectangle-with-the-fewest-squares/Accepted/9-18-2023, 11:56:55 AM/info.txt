{"id":1052291455,"question_id":1361,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695009415,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1052291455/","is_pending":"Not Pending","title":"Tiling a Rectangle with the Fewest Squares","memory":"39.8 MB","code":"class Solution {\n    int ans = Integer.MAX_VALUE;\n    int h,w;\n    public int tilingRectangle(int n, int m) {\n        this.h = n;\n        this.w = m;\n        dfs(0, 0, new boolean[h][w], 0);\n        return ans;\n    }\n\n    private void dfs(int r, int c, boolean[][] rect, int cnt) {\n        if (cnt >= ans) return;\n        if (r >= h) {\n            ans = cnt; \n            return;\n        }\n        if (c >= w) {\n            dfs(r+1, 0, rect, cnt); \n            return;\n        }\n        if (rect[r][c]) {\n            dfs(r, c+1, rect, cnt);\n            return;\n        }\n        for (int k = Math.min(h-r, w-c); k >= 1 && isAvailable(rect, r, c, k); k--) {\n            coverOrUncover(rect, r, c, k, true);\n            dfs(r, c+k, rect, cnt+1);\n            coverOrUncover(rect, r, c, k, false);\n        }\n    }\n    private boolean isAvailable(boolean[][] rect, int r, int c, int k) {\n        for (int i = r; i < r+k; i++){\n            for (int j = c; j < c+k; j++){\n                if (rect[i][j]) return false;\n            }\n        }\n        return true;\n    }\n    private void coverOrUncover(boolean[][] rect, int r, int c, int k, boolean cover) {\n        for (int i = r; i < r+k; i++){\n            for (int j = c; j < c+k; j++){\n                rect[i][j] = cover;\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"tiling-a-rectangle-with-the-fewest-squares","has_notes":false,"flag_type":1}