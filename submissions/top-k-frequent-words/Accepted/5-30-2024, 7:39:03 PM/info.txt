{"id":1272312805,"question_id":692,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717069143,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1272312805/","is_pending":"Not Pending","title":"Top K Frequent Words","memory":"44.6 MB","code":"class Solution {\n    public List<String> topKFrequent(String[] words, int k) {\n\n        List<String> res = new ArrayList<>();\n\n        Map<String , Integer> map = new HashMap<>();\n\n        PriorityQueue<Map.Entry<String, Integer>> pq = new PriorityQueue<>(\n            (a,b) -> a.getValue()!=b.getValue() ? a.getValue()-b.getValue() : b.getKey().compareTo(a.getKey())\n        );\n\n        for(String w : words){\n            map.put(w, map.getOrDefault(w,0)+1);\n        }\n\n        pq.addAll(map.entrySet());\n\n        while(pq.size()>k){\n            pq.poll();\n        }\n\n        while(!pq.isEmpty()){\n            res.add(0, pq.poll().getKey());\n        }\n\n        return res;\n\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"top-k-frequent-words","has_notes":false,"flag_type":1}