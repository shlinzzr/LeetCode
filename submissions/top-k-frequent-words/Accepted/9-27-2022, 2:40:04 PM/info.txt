{"id":809615156,"question_id":692,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664260804,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/809615156/","is_pending":"Not Pending","title":"Top K Frequent Words","memory":"45.2 MB","code":"class Solution {\n    public List<String> topKFrequent(String[] words, int k) {\n        HashMap<String, Integer> map = new HashMap<>();\n        for(String w : words){\n            map.put(w , map.getOrDefault(w, 0)+1);\n        }\n        \n        PriorityQueue<Map.Entry<String, Integer>> pq = new PriorityQueue<>(\n            (a,b)->a.getValue()-b.getValue()==0?   b.getKey().compareTo(a.getKey()) : a.getValue()-b.getValue()\n        );\n        for(Map.Entry<String, Integer> en : map.entrySet()){\n            pq.offer(en);\n            \n            if(pq.size()>k)\n                pq.poll();\n        }\n        \n        List<String>  res = new ArrayList<>();\n        while(pq.size()>0){\n            res.add(0,  pq.poll().getKey());\n        }\n        \n        return res;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"top-k-frequent-words","has_notes":false,"flag_type":1}