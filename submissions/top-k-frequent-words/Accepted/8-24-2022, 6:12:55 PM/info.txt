{"id":782044804,"question_id":692,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661335975,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/782044804/","is_pending":"Not Pending","title":"Top K Frequent Words","memory":"45 MB","code":"class Solution {\n    public List<String> topKFrequent(String[] words, int k) {\n        HashMap<String, Integer> map = new HashMap<>();\n        for(String s: words){\n            int c = map.getOrDefault(s, 0);\n            map.put(s, c+1);\n        }\n        \n        PriorityQueue<Map.Entry<String,Integer>> pq = new PriorityQueue<>(\n            (a,b) -> a.getValue()==b.getValue() ? b.getKey().compareTo(a.getKey()) : a.getValue()-b.getValue()\n        );\n        \n        for(Map.Entry<String, Integer> en : map.entrySet()){\n            pq.offer(en);\n            \n            if(pq.size()>k)\n                pq.poll();\n            \n        }\n        \n        \n        List<String> list = new ArrayList<>();\n        while(!pq.isEmpty()){\n            list.add( 0, pq.poll().getKey());\n        }\n        \n        \n        \n        return list;\n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"top-k-frequent-words","has_notes":false,"flag_type":1}