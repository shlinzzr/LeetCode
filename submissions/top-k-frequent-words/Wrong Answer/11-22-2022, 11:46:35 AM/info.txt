{"id":847802883,"question_id":692,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669088795,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/847802883/","is_pending":"Not Pending","title":"Top K Frequent Words","memory":"N/A","code":"class Solution {\n    public List<String> topKFrequent(String[] words, int k) {\n        HashMap<String, Integer> map = new HashMap<>();\n        for(String w : words){\n            map.put(w, map.getOrDefault(w, 0) +1 );\n        }\n        \n        PriorityQueue<Map.Entry<String, Integer>> pq = new PriorityQueue<>(\n            (a, b) -> b.getValue() == a.getValue()? a.getKey().compareTo(b.getKey()) : a.getValue() - b.getValue()\n        );\n        \n        \n        for(Map.Entry<String, Integer> en : map.entrySet()){\n            pq.offer(en);\n            if(pq.size()>2)\n                pq.poll();\n        }\n        \n        List<String> list = new ArrayList<>();\n        \n        for(Map.Entry<String, Integer> en : pq){\n             list.add(en.getKey());   \n        }\n        \n        return list;\n        \n        \n        \n    }\n}","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"top-k-frequent-words","has_notes":false,"flag_type":1}