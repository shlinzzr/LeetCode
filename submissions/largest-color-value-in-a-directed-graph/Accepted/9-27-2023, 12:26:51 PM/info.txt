{"id":1060223425,"question_id":1986,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1695788811,"status":10,"status_display":"Accepted","runtime":"612 ms","url":"/submissions/detail/1060223425/","is_pending":"Not Pending","title":"Largest Color Value in a Directed Graph","memory":"109.2 MB","code":"class Solution {\r\n    List<List<Integer>> graph;\r\n    boolean visited[];\r\n    int counts[][];\r\n\r\n    public int largestPathValue(String colors, int[][] edges) {\r\n        int max = -1;\r\n        int nodes = colors.length();\r\n        counts = new int[nodes][26];\r\n        visited = new boolean[nodes];\r\n\r\n        graph = new ArrayList<>();\r\n\r\n        for (int i = 0; i < nodes; i++) {\r\n            graph.add(new ArrayList<>());\r\n        }\r\n\r\n        for (int[] edge: edges) {\r\n            int source = edge[0];\r\n            int dest = edge[1];\r\n\r\n            graph.get(source).add(dest);\r\n        }\r\n\r\n        for (int i = 0; i < nodes; i++) {\r\n\r\n            boolean pathVisited[] = new boolean[nodes];\r\n\r\n            int count = countInPath(i, pathVisited, colors);\r\n\r\n            max = Math.max(count, max);\r\n        }\r\n\r\n        return max == Integer.MAX_VALUE ? -1 : max;\r\n    }\r\n\r\n    private int countInPath(int node, boolean pathVisited[], String colors) {\r\n        if (pathVisited[node]) {\r\n            return Integer.MAX_VALUE;\r\n        }\r\n\r\n        int idx = colors.charAt(node) - 'a';\r\n\r\n        if (visited[node]) {\r\n            return counts[node][idx];\r\n        }\r\n\r\n        visited[node] = true;\r\n        pathVisited[node] = true;\r\n\r\n        for (int adj: graph.get(node)) {\r\n            int data = countInPath(adj, pathVisited, colors);\r\n\r\n            if (data == Integer.MAX_VALUE) {\r\n                return Integer.MAX_VALUE;\r\n            }\r\n\r\n            for (int i = 0; i < 26; i++) {\r\n                counts[node][i] = Math.max(counts[node][i], counts[adj][i]);\r\n            }\r\n        }\r\n\r\n        counts[node][idx]++;\r\n        pathVisited[node] = false;\r\n\r\n        return counts[node][idx];\r\n    }\r\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-color-value-in-a-directed-graph","has_notes":false,"flag_type":1}