{"id":918105683,"question_id":98,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679229845,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/918105683/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        \n       \n        return helper(root, Integer.MAX_VALUE, Integer.MIN_VALUE);\n        \n    }\n    \n    \n    private boolean helper(TreeNode root, int high, int low){\n        \n         if(root==null)\n            return true;\n        \n        if(root.left!=null && (root.left.val>=root.val || root.left.val<=low))\n            return false;\n        \n        if(root.right!=null && ( root.right.val<=root.val || root.right.val>=high))\n            return false;\n        \n        boolean left = helper(root.left, root.val, low);\n        boolean right = helper(root.right, high, root.val);\n        \n        return left&&right;\n        \n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111010101110011110","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}