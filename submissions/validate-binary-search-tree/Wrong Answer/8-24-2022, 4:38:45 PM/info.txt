{"id":781990662,"question_id":98,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661330325,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/781990662/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        \n        \n        return helper(root, null, null);\n        \n        \n    }\n    \n    \n    private boolean helper(TreeNode root, Integer left, Integer right){\n          \n        if(root==null)\n            return true;\n        \n        if(root.left!=null && root.left.val>root.val)\n            return false;\n        \n        if(root.right!=null && root.right.val<root.val)\n            return false;\n        \n        if(right!=null && root.val > right)\n            return false;\n        \n        if(left!=null && root.val < left)\n            return false;\n        \n        \n        boolean bl = helper(root.left, left, root.val);\n        boolean br = helper(root.right, root.val, right);\n        \n        \n        return bl && br;\n        \n        \n        \n        \n    }\n}","compare_result":"11110001111111111011111111111111111111110111111111111111101111000011111111111001","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}