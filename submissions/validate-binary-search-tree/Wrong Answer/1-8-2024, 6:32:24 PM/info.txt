{"id":1140356824,"question_id":98,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704709944,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1140356824/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    boolean flag = true;\n    public boolean isValidBST(TreeNode root) {\n\n        if(root==null) return true;\n\n        if(root.left!=null && root.left.val>=root.val) return false;\n        if(root.right!=null && root.right.val<=root.val) return false;\n\n        boolean left = isValidBST(root.left);\n        boolean right = isValidBST(root.right);\n\n        return left && right;\n\n        \n        \n    }\n}","compare_result":"111111111111001001001111111111111111111111111111111111111111111111111111101111101111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}