{"id":770868735,"question_id":98,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660201188,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/770868735/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return helper(root, null, null);\n    }\n    \n    private boolean helper(TreeNode root, Integer low, Integer high){\n        if(root==null){\n            return true;\n        }\n        \n        if(root.left!=null && root.left.val >= root.val )\n            return false;\n        if(root.right!=null && root.right.val<= root.val)\n            return false;\n        \n        if(low!=null && root.val<=low)\n            return false;\n        \n        if(high!=null && root.val>=high)\n            return false;\n            \n        boolean left = helper(root.left, low, root.val);\n        boolean right = helper(root.right, root.val, high);\n        \n        return left && right;\n        \n        \n    } \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}