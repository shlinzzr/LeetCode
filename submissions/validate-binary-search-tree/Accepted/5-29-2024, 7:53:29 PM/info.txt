{"id":1271363801,"question_id":98,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1716983609,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1271363801/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        if(root==null) return true;\n\n        return helper(root, null, null);\n        \n    }\n\n    private boolean helper(TreeNode root, Integer lo, Integer hi ){\n\n        if(root==null) return true;\n\n        if(root.left!=null && root.left.val>=root.val) return false;\n        if(root.right!=null && root.right.val<=root.val) return false;\n        if(lo!=null && root.left!=null && root.left.val<=lo) return false;\n        if(hi!=null && root.right!=null && root.right.val>=hi) return false;\n\n        boolean left = helper(root.left, lo, root.val);\n        boolean right = helper(root.right, root.val, hi);\n\n        return left && right;\n    }\n\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}