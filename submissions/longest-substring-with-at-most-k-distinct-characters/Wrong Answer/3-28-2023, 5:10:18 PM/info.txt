{"id":923521875,"question_id":340,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679994618,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/923521875/","is_pending":"Not Pending","title":"Longest Substring with At Most K Distinct Characters","memory":"N/A","code":"class Solution {\n    public int lengthOfLongestSubstringKDistinct(String s, int k) {\n        \n        \n        if(k==0)\n            return 0;\n            \n        \n        Map<Character, Integer> map = new HashMap<>();\n        int len = s.length();\n        \n        int max =0;\n        \n        int st=-1;\n        \n        for(int ed=0; ed<len; ed++){\n            \n            char ch = s.charAt(ed);\n            \n            if(map.size()==k){\n                int min=-1;\n                Character rm = null;\n                for(Map.Entry<Character, Integer>en : map.entrySet()){\n                    if(en.getValue()<min){\n                        min = en.getValue();\n                        rm = en.getKey();\n                    }\n                }\n                \n                st = min;\n                map.remove(rm);\n            }\n            \n            \n            if(map.size()<k || map.containsKey(ch)){\n                map.put(ch, ed);\n                max = Math.max(max, ed-st);\n                continue;\n            }\n            \n        }\n        \n        return max;\n        \n    }\n}","compare_result":"1111111111111110011101010000001000000000000001000000100000110000000001000000000000001000000000000000000000000010000000000000100001000000100000","title_slug":"longest-substring-with-at-most-k-distinct-characters","has_notes":false,"flag_type":1}