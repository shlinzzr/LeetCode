{"id":1028317057,"question_id":727,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692684468,"status":10,"status_display":"Accepted","runtime":"2769 ms","url":"/submissions/detail/1028317057/","is_pending":"Not Pending","title":"Minimum Window Subsequence","memory":"44.6 MB","code":"class Solution {\n    public String minWindow(String s1, String s2) {\n        \n        int len = s1.length();\n        \n        \n        String[] dp = new String[len+1]; // 執行到第i個字符的 min subseq\n        \n        \n        if(s1.equals(s2))\n            return s1;\n        \n        int min = Integer.MAX_VALUE;\n        String str = s1;\n        \n        \n        \n        \n        for(int i=0; i<s1.length(); i++){\n        \n            int idx = 0;\n            \n            if(s1.charAt(i)!=s2.charAt(idx)){\n                continue;\n            }\n            \n            int st=i, ed=i;\n            while(ed<s1.length() && idx<s2.length()){\n                \n                if(s1.charAt(ed)==s2.charAt(idx)){\n                    idx++;\n                    ed++;\n                }else{\n                    ed++;\n                }\n            }\n            \n            String sub = s1.substring(st, ed);\n            // System.out.println(sub);\n            \n            if(idx==s2.length() && sub.length()<min){\n                min = sub.length();\n                str = sub;\n            }\n            \n            \n            \n        }\n        \n        return min==Integer.MAX_VALUE ? \"\" : str;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-subsequence","has_notes":false,"flag_type":1}