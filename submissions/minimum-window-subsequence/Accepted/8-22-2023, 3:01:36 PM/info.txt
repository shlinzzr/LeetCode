{"id":1028356081,"question_id":727,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692687696,"status":10,"status_display":"Accepted","runtime":"2769 ms","url":"/submissions/detail/1028356081/","is_pending":"Not Pending","title":"Minimum Window Subsequence","memory":"44.2 MB","code":"class Solution {\n    public String minWindow(String s1, String s2) {\n        \n        \n        // sliding window O(m*n)\n        \n        int len = s1.length();\n        \n        String[] dp = new String[len+1]; // 執行到第i個字符的 min subseq?\n        \n        if(s1.equals(s2))\n            return s1;\n        \n        String res = s1+\"#\";\n        \n        \n        for(int i1=0; i1<s1.length(); i1++){\n        \n            int i2 = 0;\n            \n            if(s1.charAt(i1)!=s2.charAt(i2)){\n                continue;\n            }\n            \n            int st=i1, ed=i1;\n            while(ed<s1.length() && i2<s2.length()){\n                \n                if(s1.charAt(ed)==s2.charAt(i2)){\n                    i2++;\n                    ed++;\n                }else{\n                    ed++;\n                }\n            }\n            \n            String sub = s1.substring(st, ed);\n            \n            if(i2==s2.length() && sub.length()<res.length()){\n                res = sub;\n            }\n            \n        }\n        \n        return res.length()==len+1 ? \"\" : res;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-subsequence","has_notes":false,"flag_type":1}