{"id":1028174856,"question_id":836,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692670436,"status":10,"status_display":"Accepted","runtime":"160 ms","url":"/submissions/detail/1028174856/","is_pending":"Not Pending","title":"Race Car","memory":"69.8 MB","code":"class Solution {\n    public int racecar(int target) {\n        //AAR.  0 --> 1 --> 3 --> 3\n        \n        Queue<int[]> queue = new LinkedList<>();\n        queue.offer(new int[]{0, 1}); // pos, speed\n        Set<String> set = new HashSet<>();\n        set.add(0+\"_\"+1);\n        \n        for(int step=0; !queue.isEmpty(); step++){\n            \n            for(int k=queue.size(); k>0; k--){\n                \n                int[] cur = queue.poll();\n                if(cur[0]==target){\n                    return step;\n                }\n                \n                // accelerate\n                int[] nxt = new int[]{cur[0]+cur[1], cur[1]*=2};\n                String key = (nxt[0] + \"_\" + nxt[1]);\n                if(!set.contains(key) && nxt[0]>0 &&  nxt[0]<(target*2)){\n                    set.add(key);\n                    queue.offer(nxt);\n                }\n                \n                \n                //reverse\n                nxt = new int[]{cur[0], cur[1]>0? -1 : 1 };\n                key = (nxt[0] + \"_\" + nxt[1]);\n                if(!set.contains(key) && nxt[0]>0 &&  nxt[0]<(target*2)){\n                    set.add(key);\n                    queue.offer(nxt);\n                }\n            }\n        }\n        \n        return -1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"race-car","has_notes":false,"flag_type":1}