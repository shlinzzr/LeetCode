{"id":1004328258,"question_id":447,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690364307,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/1004328258/","is_pending":"Not Pending","title":"Number of Boomerangs","memory":"43.7 MB","code":"class Solution {\n    public int numberOfBoomerangs(int[][] points) {\n        int res = 0;\n\n        Map<Integer, Integer> map = new HashMap<>();\n        for(int i=0; i<points.length; i++) {\n            for(int j=0; j<points.length; j++) {\n\n                int d = getDistance(points[i], points[j]);                \n                map.put(d, map.getOrDefault(d, 0) + 1);\n            }\n\n            for(int val : map.values()) {\n                res += val * (val-1);\n            }            \n            map.clear();\n        }\n\n        return res;\n    }\n    \n    private int getDistance(int[] a, int []b){\n        return (a[0]-b[0])*(a[0]-b[0]) + (a[1]-b[1])*(a[1]-b[1]);\n    }\n    \n}","compare_result":"11111111111111111111111111111111","title_slug":"number-of-boomerangs","has_notes":false,"flag_type":1}