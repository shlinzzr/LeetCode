{"id":1125686447,"question_id":2439,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703229953,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1125686447/","is_pending":"Not Pending","title":"Longest Cycle in a Graph","memory":"N/A","code":"class Solution {\n    public int longestCycle(int[] edges) {\n        int len = edges.length;\n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        // int[] longest = new int[len];\n        // Arrays.fill(longest, -1);\n        int max = -1;\n        for(int i=0; i<len; i++){\n            HashSet<Integer> set = new HashSet<>();\n            set.add(i);\n            if(edges[i]==-1) continue;\n\n            int res = dfs(i, edges[i], edges, set, 1);\n            max = Math.max(res, max);\n        }\n\n        return max;\n    }\n\n    private int dfs(int org, int cur, int[] edges, HashSet<Integer>set, int step){\n\n        if(cur==-1) return -1;\n        if(edges[cur]==-1) return -1;\n        if(org==cur) return step;\n        if(set.contains(cur)) return -1;\n        \n\n        set.add(cur);\n        return dfs(org, edges[cur], edges, set, step+1);\n\n        \n\n\n    \n        \n        \n        \n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111000000000000000000","title_slug":"longest-cycle-in-a-graph","has_notes":false,"flag_type":1}