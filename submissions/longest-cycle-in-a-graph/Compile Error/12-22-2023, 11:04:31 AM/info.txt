{"id":1125527746,"question_id":2439,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703214271,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1125527746/","is_pending":"Not Pending","title":"Longest Cycle in a Graph","memory":"N/A","code":"class Solution {\n    public int longestCycle(int[] edges) {\n        int len = edges.length;\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int[] longest = new int[len];\n\n        Arrays.fill(longest, -1);\n\n        for(int i=0; i<len; i++){\n            HashSet<Integer> set = new HashSet<>();\n            set.add(i);\n            int res = dfs(i, i, edges, set, 0);\n            max = Math.max(res, max);\n        }\n\n        return res;\n    }\n\n    private int dfs(int org, int cur, int[] edges, HashSet<Integer>set, int step){\n\n        \n\n        dfs(edge)\n        \n        \n\n    }\n}","compare_result":null,"title_slug":"longest-cycle-in-a-graph","has_notes":false,"flag_type":1}