{"id":740847410,"question_id":111,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1657188724,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/740847410/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"94.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int minDepth(TreeNode root) {\n        if(root==null)\n            return 0;\n        \n        Queue<TreeNode> q = new LinkedList<>();\n        q.offer(root);\n        \n        int level = 1;\n        \n        while(q.size()>0){\n            \n            int size = q.size();\n            for(int i=0; i<size; i++){\n                TreeNode n = q.poll();\n            \n                if(n.left==null && n.right==null){\n                    return level;\n                }\n            \n                if(n.left!=null)\n                    q.offer(n.left);\n            \n                if(n.right!=null)\n                    q.offer(n.right);\n            }\n            \n            level ++;\n        }\n        \n        return  level;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}