{"id":899490452,"question_id":799,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676602426,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/899490452/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"40.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int min = Integer.MAX_VALUE;\n    TreeSet<Integer> set = new TreeSet<>();\n        \n    public int minDiffInBST(TreeNode root) {\n        \n        if(root==null)\n            return 0;\n        \n        \n        if(set.ceiling(root.val)!=null){\n            min = Math.min(min, Math.abs(root.val-set.ceiling(root.val)));\n        }\n\n        if(set.floor(root.val)!=null){\n            min = Math.min(min, Math.abs(root.val-set.floor(root.val)));\n        }\n            \n        set.add(root.val);\n        \n        if(root.left!=null){\n            minDiffInBST(root.left);\n        }\n        \n        if(root.right!=null){\n            minDiffInBST(root.right);\n        }\n        \n        \n        \n        return min;\n        \n    }\n    \n    \n    /* 90\n     69\n   49  89 \n    52  */\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}