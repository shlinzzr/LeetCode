{"id":1005877859,"question_id":446,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690522101,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1005877859/","is_pending":"Not Pending","title":"Arithmetic Slices II - Subsequence","memory":"N/A","code":"class Solution {\n    public int numberOfArithmeticSlices(int[] nums) {\n        int len = nums.length;\n        \n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(nums, res, new ArrayList<>(), 0);\n        \n        // System.out.println(res);\n        \n        return res.size();\n        \n    }\n    \n    \n    private void helper(int[] nums, List<List<Integer>> res, List<Integer> curr, int st){\n        \n        if(curr.size()>=3){\n            res.add(new ArrayList<>(curr));\n        }\n        \n        \n        for(int i=st; i<nums.length; i++){\n            \n            int n = nums[i];\n            \n            if(curr.size()>=2){\n                \n                if(n-curr.get(curr.size()-1) != curr.get(curr.size()-1)-curr.get(curr.size()-2)) \n                    continue;\n                \n                curr.add(n);\n                helper(nums, res, curr, i+1);\n                curr.remove(curr.size()-1);\n                \n            }else{\n                curr.add(n);\n                helper(nums, res, curr, i+1);\n                curr.remove(curr.size()-1);\n                \n            }\n        }\n        \n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111001111111111111111111110000000000000000000000000000000000000000000000000000000000000000","title_slug":"arithmetic-slices-ii-subsequence","has_notes":false,"flag_type":1}