{"id":1005930595,"question_id":446,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690527002,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/1005930595/","is_pending":"Not Pending","title":"Arithmetic Slices II - Subsequence","memory":"90.3 MB","code":"class Solution {\n    \n    // dp\n     public int numberOfArithmeticSlices(int[] A) {\n         \n        // https://leetcode.com/problems/arithmetic-slices-ii-subsequence/discuss/92822/Detailed-explanation-for-Java-O(n2)-solution\n        int res = 0;\n        Map<Integer, Integer>[] map = new Map[A.length];\n\n        for (int i = 0; i < A.length; i++) {\n            map[i] = new HashMap<>(i);\n\n            for (int j = 0; j < i; j++) {\n                long diff = (long)A[i] - A[j];\n                if (diff <= Integer.MIN_VALUE || diff > Integer.MAX_VALUE) continue;\n\n                int d = (int)diff;\n                int c1 = map[i].getOrDefault(d, 0);\n                int c2 = map[j].getOrDefault(d, 0);\n                map[i].put(d, c1 + c2 + 1);\n                \n                res += c2;\n            }\n        }\n\n        return res;\n         \n     }\n    \n    \n    // brute-force : TLE\n//     public int numberOfArithmeticSlices(int[] nums) {\n//         int len = nums.length;\n        \n//         List<List<Long>> res = new ArrayList<>();\n        \n//         helper(nums, res, new ArrayList<>(), 0);\n        \n//         return res.size();\n        \n//     }\n    \n    \n//     private void helper(int[] nums, List<List<Long>> res, List<Long> curr, int st){\n        \n//         if(curr.size()>=3){\n//             res.add(new ArrayList<>(curr));\n//         }\n//         for(int i=st; i<nums.length; i++){\n//             long n = (long)nums[i];\n//             if(curr.size()>=2){\n//                 if(n-curr.get(curr.size()-1) != curr.get(curr.size()-1)-curr.get(curr.size()-2)) \n//                     continue;\n//                 curr.add(n);\n//                 helper(nums, res, curr, i+1);\n//                 curr.remove(curr.size()-1);\n                \n//             }else{\n//                 curr.add(n);\n//                 helper(nums, res, curr, i+1);\n//                 curr.remove(curr.size()-1);\n//             }\n//         }\n//     }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-slices-ii-subsequence","has_notes":false,"flag_type":1}