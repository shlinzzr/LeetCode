{"id":1140249478,"question_id":446,"lang":"java","lang_name":"Java","time":"5 months","timestamp":1704699961,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/1140249478/","is_pending":"Not Pending","title":"Arithmetic Slices II - Subsequence","memory":"53.9 MB","code":"\nclass Solution {\n    public int numberOfArithmeticSlices(int[] A) {\n\n\n        /*\n            dp[2][1] = dp[1][0] +1;\n            dp[3][2] = dp[2][1] +1\n            dp[4][3] = dp[3][2] +1\n            dp[4][2] = dp[2][0] +1\n            dp[i][j] = dp[j][k] +1\n\n        */\n        int n = A.length;\n        int[][] dp = new int[n][n]; //以i為結尾的, diff=d時的 subseq數量\n        // diff range 到2^31-1 太大了, 改用map array宣告\n\n        //dp 定義改為 以i, j 為最後兩項的時候subseq數量\n\n        Map<Long, List<Integer>> map = new HashMap<>(); // < diff, List<idx> >\n        for (int i = 0; i < n; i++) {\n            map.putIfAbsent((long) A[i], new ArrayList<>()); //  val, List<valIndex>\n            map.get((long) A[i]).add(i);\n        }\n\n        //  -1      -1         4       6      \n        // \"k1\" x \"k2\"  x x x \"j\" x x \"i\" x x \n        \n        int res = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                long diff =  2 *  (long) A[j] - A[i]; // 2*4-6\n                if (map.containsKey(diff)) {\n                    for (int k : map.get(diff)) {\n                        if (k < j) {  // check valIndex \n                            dp[i][j] += (dp[j][k] + 1); // \n                        }\n                    }\n                }\n                res += dp[i][j];\n            }\n        }\n        \n        return res;\n    }\n}\n\n         ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-slices-ii-subsequence","has_notes":false,"flag_type":1}