{"id":1275863473,"question_id":833,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1717383451,"status":10,"status_display":"Accepted","runtime":"1030 ms","url":"/submissions/detail/1275863473/","is_pending":"Not Pending","title":"Bus Routes","memory":"69.9 MB","code":"class Solution {\n    public int numBusesToDestination(int[][] routes, int source, int target) {\n\n        if(source==target) return 0;\n\n        int len = routes.length;\n\n        Map<Integer, List<Integer>> map = new HashMap<>(); // bus_stop_id, r_id, \n\n        int targetBus = -1;\n\n        for(int i=0; i<routes.length;i++){\n            int[] r = routes[i];\n            for(int stop : r){\n                map.putIfAbsent(stop, new ArrayList<>());\n                map.get(stop).add(i);\n            }\n        }\n\n        \n\n        Set<Integer> seen = new HashSet<>();\n        Queue<Integer> q = new LinkedList<>();\n        q.offer(source);\n\n        int step = 1;\n\n        while(!q.isEmpty()){\n            int size = q.size();\n            while(size-->0){\n                int stop_id = q.poll();\n\n                for(int r_id : map.getOrDefault(stop_id, new ArrayList<>())){\n\n                    if(seen.add(r_id)==false) continue;\n\n                    for(int nextStop : routes[r_id]){\n\n                        if(nextStop==target) return step;\n                        q.offer(nextStop);\n                    }\n                }\n                \n            }\n            step++;\n        }\n        return -1;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"bus-routes","has_notes":false,"flag_type":1}