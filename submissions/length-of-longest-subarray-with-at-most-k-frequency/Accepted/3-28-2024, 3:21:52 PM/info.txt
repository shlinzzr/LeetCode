{"id":1216152815,"question_id":3225,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711610512,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/1216152815/","is_pending":"Not Pending","title":"Length of Longest Subarray With at Most K Frequency","memory":"60.4 MB","code":"class Solution {\n    public int maxSubarrayLength(int[] nums, int k) {\n\n        int max = 0;\n        Map<Integer,Integer> map = new HashMap<>();\n        int st =0;\n        for(int ed=0; ed<nums.length; ed++){\n            map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n            while(st<=ed && map.get(nums[ed])>k){\n                map.put(nums[st], map.get(nums[st])-1);\n                st++;\n            }\n\n            max = Math.max(max, ed-st+1);\n        }\n\n        return max;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"length-of-longest-subarray-with-at-most-k-frequency","has_notes":false,"flag_type":1}