{"id":196721876,"question_id":1,"lang":"java","lang_name":"Java","time":"5 years, 5 months","timestamp":1545630534,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/196721876/","is_pending":"Not Pending","title":"Two Sum","memory":"25.4 MB","code":"//Approach 1: Brute Force Time/Space : O(n^2)/O(1)\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[j] == target - nums[i]) {\n                    return new int[] { i, j };\n                }\n            }\n        }\n        throw new IllegalArgumentException(\"No two sum solution\");\n    }\n}\n\n//Approach 2: Two-pass Hash Table\n// class Solution {\n//     public int[] twoSum(int[] nums, int target) {\n//     Map<Integer, Integer> map = new HashMap<>();\n//     for (int i = 0; i < nums.length; i++) {\n//         int complement = target - nums[i];\n//         if (map.containsKey(complement)) {\n//             return new int[] { map.get(complement), i };\n//         }\n//         map.put(nums[i], i);\n//     }\n//     throw new IllegalArgumentException(\"No two sum solution\");\n//     }\n// }","compare_result":"11111111111111111111111111111","title_slug":"two-sum","has_notes":false,"flag_type":1}