{"id":1072447861,"question_id":2334,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697008240,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1072447861/","is_pending":"Not Pending","title":"Number of Flowers in Full Bloom","memory":"N/A","code":"class Solution {\n\n    class Tuple{\n        int idx;\n        int val;\n        public Tuple(int idx, int val){\n            this.idx = idx;\n            this.val = val;\n        }\n    }\n\n    public int[] fullBloomFlowers(int[][] flowers, int[] people) {\n        Arrays.sort(flowers, (a,b)-> a[0]-b[0]);\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b)-> a[1]-b[1]\n        );\n\n        Tuple[] arr = new Tuple[people.length];\n        for(int i=0; i<people.length; i++){\n            arr[i] = new Tuple(i, people[i]);\n        }\n\n        Arrays.sort(arr, (a,b)-> a.val-b.val);\n\n\n\n        int[] res = new int[people.length];\n\n        int idx = 0;\n\n        for(int i=0; i<arr.length; i++){\n\n            Tuple t = arr[i];\n            int p = t.val;\n\n            while(!pq.isEmpty() && pq.peek()[1]<p){\n                int[] po = pq.poll();\n                System.out.println(\"poll: \"  + po[0]+\" \"+po[1]);\n            }\n\n\n            while(idx<flowers.length && flowers[idx][0]<=p){\n                pq.offer(flowers[idx]);\n                  System.out.println(\"offer: \" + idx + \" \"   + flowers[idx][0]+\" \"+flowers[idx][1]);\n                  idx++;\n            }\n\n            res[t.idx] = pq.size();\n\n        }\n\n        return res;\n\n\n\n    }\n}","compare_result":"1110101001100110010011010000000000001001000110010111","title_slug":"number-of-flowers-in-full-bloom","has_notes":false,"flag_type":1}