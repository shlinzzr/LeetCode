{"id":1280357951,"question_id":1962,"lang":"java","lang_name":"Java","time":"5 days, 18 hours","timestamp":1717749195,"status":10,"status_display":"Accepted","runtime":"735 ms","url":"/submissions/detail/1280357951/","is_pending":"Not Pending","title":"Single-Threaded CPU","memory":"78.2 MB","code":"class Solution {\n    public int[] getOrder(int[][] tasks) {\n\n        int len = tasks.length;\n\n        PriorityQueue<int[]> pool= new PriorityQueue<>( // en, proc, idx\n            (a,b)-> a[1]!=b[1] ? a[1]-b[1] : a[2]-b[2]\n        );\n\n        // PriorityQueue<int[]> pq= new PriorityQueue<>( // en, proc, idx\n        //     (a,b) -> a[0]-b[0]\n        // );\n        // for(int i=0; i<len; i++){\n        //     pq.offer(new int[]{tasks[i][0], tasks[i][1], i});\n        // }\n\n        //replace by list\n        List<int[]> list = new ArrayList<>();\n        for(int i=0; i<tasks.length; i++) list.add(new int[]{tasks[i][0], tasks[i][1], i});\n        Collections.sort(list, (a,b)-> a[0]-b[0]);\n\n        int[] res = new int[len];\n        int idx= 0;\n        int max = list.get(0)[0];\n\n\n        while(idx<len){\n\n            // add task to pool from pq;\n            // while(!pq.isEmpty() && pq.peek()[0]<=max){\n            //     pool.offer(pq.poll());    \n            // }\n            while(!list.isEmpty() && list.get(0)[0]<=max){\n                pool.offer(list.remove(0));\n            }\n\n\n            if(pool.isEmpty() && !list.isEmpty()){\n                max = Math.max(max, list.get(0)[0]);\n                continue;\n            }\n\n            int[] p = pool.poll();\n            max += p[1];\n            res[idx] = p[2];\n\n            idx++;\n        }\n\n        return res;\n\n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"single-threaded-cpu","has_notes":false,"flag_type":1}