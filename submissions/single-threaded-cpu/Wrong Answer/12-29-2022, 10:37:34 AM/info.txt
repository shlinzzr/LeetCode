{"id":867250847,"question_id":1962,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672281454,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/867250847/","is_pending":"Not Pending","title":"Single-Threaded CPU","memory":"N/A","code":"class Solution {\n    public int[] getOrder(int[][] tasks) {\n        int n = tasks.length;\n        \n        Map<int[], Integer> map = new HashMap<>();\n        for(int i=0; i<n; i++){\n            map.put(tasks[i], i);\n        }\n        \n        \n        Arrays.sort(tasks, (a,b)-> a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        \n        \n        PriorityQueue<int[]> pq = new PriorityQueue<int[]>(\n            (a,b) -> a[1]==b[1]? a[0]-b[0] : a[1]-b[1]\n        );\n        \n        int[] res = new int[n];\n        int idx = 0;\n        int curr=0;\n        \n        for(int i=0; i<n; i++){\n            \n            int[] t = tasks[i];\n            pq.offer(t);\n            \n            \n            while(i+1<n && tasks[i+1][0]==t[0]){\n                i++;\n                pq.offer(tasks[i]);\n            }\n            \n            int[] p = pq.poll();\n            curr+=p[1];\n            \n            while(i+1<n && tasks[i+1][0]<=curr){\n                i++;\n                pq.offer(tasks[i]);\n            }\n            \n            \n            res[idx] = map.get(p);\n                  \n            idx++;\n        }\n        \n        while(!pq.isEmpty()){\n            res[idx++] = map.get(pq.poll());\n        }\n        \n        \n        return res;\n        \n        \n    }\n}","compare_result":"110000000000000000000000000111010111111","title_slug":"single-threaded-cpu","has_notes":false,"flag_type":1}