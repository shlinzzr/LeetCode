{"id":1114208322,"question_id":1962,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701936870,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1114208322/","is_pending":"Not Pending","title":"Single-Threaded CPU","memory":"N/A","code":"class Solution {\n\n    class Task{\n\n        int eq;\n        int pt;\n        int idx;\n        public Task(int ed, int pt, int idx){\n            this.eq=eq;\n            this.pt=pt;\n            this.idx=idx;\n        }\n    }\n    public int[] getOrder(int[][] tasks) {\n        int len = tasks.length;\n        List<Task> list = new ArrayList<>(); \n        PriorityQueue<Task> pq = new PriorityQueue<>( // enq, processTime, idx\n            (a,b)-> a.pt!=b.pt? a.idx-b.idx : a.pt-b.pt\n        );\n\n        for(int i=0; i<len; i++){\n            list.add(new Task(tasks[i][0], tasks[i][1], i));\n        }\n\n        Collections.sort(list, (a,b)-> a.eq-b.eq);\n\n        pq.offer(list.get(0));\n        int cur = list.get(0).eq;\n        int idx= 1;\n        int cnt = 0;\n\n        int[] ans = new int[len];\n\n        while(cnt<len){\n\n            while(idx<list.size() && list.get(idx).eq<=cur){\n                pq.offer(list.get(idx));\n                idx++;\n            }\n\n            if(pq.isEmpty() && list.get(idx)!=null){\n                pq.offer(list.get(idx));\n                cur = list.get(idx).eq;\n                idx++;\n            }else{\n                Task t = pq.poll();\n                ans[cnt]=t.idx;\n                cnt++;\n            }\n        }\n\n        return ans;\n\n\n\n    }\n}","compare_result":"000000000000000000000000000000010000010","title_slug":"single-threaded-cpu","has_notes":false,"flag_type":1}