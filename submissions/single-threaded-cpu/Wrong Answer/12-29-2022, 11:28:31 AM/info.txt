{"id":867267966,"question_id":1962,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672284511,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/867267966/","is_pending":"Not Pending","title":"Single-Threaded CPU","memory":"N/A","code":"class Solution {\n    public int[] getOrder(int[][] tasks) {\n        int n = tasks.length;\n        Map<int[], int[]> map = new HashMap<>();\n        for(int i=0; i<n; i++){\n             int[] t = new int[3];\n            t[0] = tasks[i][0];\n            t[1] = tasks[i][1];\n            t[2] = i;\n            map.put(tasks[i], t);\n        }\n        \n        Arrays.sort(tasks, (a,b)-> a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        \n//         for(int[] t: tasks){\n//             System.out.print(\"[\"+t[0]+ \",\"+t[1]+ \"],\");\n//         }\n        \n        \n        \n        PriorityQueue<int[]> pq = new PriorityQueue<int[]>(\n            (a,b) -> a[1]==b[1]? a[2]-b[2] : a[1]-b[1]\n        );\n        \n        int[] res = new int[n];\n        int idx = 0;\n        int curr=tasks[0][0];\n        \n        for(int i=0; i<n; i++){\n            \n            \n            pq.offer(map.get(tasks[i]));\n            \n            boolean idle = i+1<n && (tasks[i+1][0]==tasks[i][0] || tasks[i+1][0]<=curr);\n            \n            while(i+1<n && (tasks[i+1][0]==tasks[i][0] || tasks[i+1][0]<=curr)){\n                i++;\n                pq.offer(map.get(tasks[i]));\n            }\n            \n            int[] p = pq.poll();\n            \n            if(!idle)\n                curr = p[0];\n            \n            curr+=p[1];\n            \n            res[idx] = p[2];\n                  \n            idx++;\n        }\n        \n        while(!pq.isEmpty()){\n            int[] p = pq.poll();\n             // System.out.print(\"[\"+p[0]+ \",\"+p[1]+ \"],\");\n            res[idx++] =p[2];\n        }\n        \n        \n        return res;\n        /*\n        [2,15]\n        [16,9]\n        [21,10]\n        [37,4]\n        \n       [[19,13],[16,9],[21,10],[32,25],[37,4],[49,24],,[38,41],[37,34],[33,6],[45,4],[18,18],[46,39],[12,24]]\n       \n       [2,15], => 17  choose 6 \n       [12,24],[16,9], => 26  choose 1\n       [18,18],[19,13],[21,10], =>36 chopse 2\n       [32,25],[33,6], => 42 choose 9\n       [37,4],[37,34],[38,41], => 46 choose 4\n       [45,4],[46,39],[49,24], => 50 choose 10\n       \n       \n       \n        */\n        \n    }\n}","compare_result":"111001100010000011000000000111010111111","title_slug":"single-threaded-cpu","has_notes":false,"flag_type":1}