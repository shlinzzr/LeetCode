{"id":1251436863,"question_id":902,"lang":"java","lang_name":"Java","time":"1 month","timestamp":1715056743,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1251436863/","is_pending":"Not Pending","title":"Minimum Number of Refueling Stops","memory":"45.2 MB","code":"class Solution {\n    public int minRefuelStops(int target, int startFuel, int[][] stations) {\n\n        // Arrays.sort(stations, (a,b)->a[0]-b[0]);\n\n        int curr = startFuel;\n\n        PriorityQueue<Integer> pq = new PriorityQueue<>(\n            Collections.reverseOrder()\n        );\n\n        int cnt = 0 ;\n\n        int idx =0;\n        while(curr<target){\n\n            while(idx<stations.length && curr>=stations[idx][0]){ // 如果目前的油 可以抵達幾個加油站, 通通放在pq內\n                pq.offer(stations[idx][1]);\n                idx++;\n            }\n\n            if(pq.isEmpty()) \n                return -1;\n\n            curr += pq.poll(); // 加最大的油\n            cnt++;\n\n        }\n\n        return cnt;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-refueling-stops","has_notes":false,"flag_type":1}