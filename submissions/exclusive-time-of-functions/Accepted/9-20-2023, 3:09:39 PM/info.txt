{"id":1054287544,"question_id":636,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695193779,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1054287544/","is_pending":"Not Pending","title":"Exclusive Time of Functions","memory":"44 MB","code":"class Solution {\n    public int[] exclusiveTime(int n, List<String> logs) {\n        Stack<Log> stack = new Stack<>();\n        int[] result = new int[n];\n        for (String content : logs) {\n            Log log = new Log(content);\n            if (log.isStart) {\n                stack.push(log);\n            } else {\n                Log top = stack.pop();\n                result[top.id] += (log.time - top.time + 1);\n                if (!stack.isEmpty()) {\n                    result[stack.peek().id] -= (log.time - top.time + 1);\n                }\n            }\n        }\n        \n        return result;\n    }\n    \n    public static class Log {\n        public int id;\n        public boolean isStart;\n        public int time;\n        \n        public Log(String content) {\n            String[] strs = content.split(\":\");\n            id = Integer.valueOf(strs[0]);\n            isStart = strs[1].equals(\"start\");\n            time = Integer.valueOf(strs[2]);\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"exclusive-time-of-functions","has_notes":false,"flag_type":1}