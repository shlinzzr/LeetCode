{"id":902143566,"question_id":2362,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676970335,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/902143566/","is_pending":"Not Pending","title":"Minimum Rounds to Complete All Tasks","memory":"N/A","code":"class Solution {\n    public int minimumRounds(int[] tasks) {\n        Arrays.sort(tasks);\n        int len = tasks.length;\n        \n        /*\n        \n        2 -> 1\n        3 -> 1\n        4 -> 2\n        5 -> 2\n        6 -> 2\n        7 -> 3\n        8 -> 3\n        9 -> 3\n        10 ->4\n        */\n        \n        int res = 0;\n        int idx=0;\n        while(idx<len){\n            \n            int t = tasks[idx];\n            if(idx>=len && tasks[idx+1]!=t){\n                return -1;\n            }\n            \n            int cnt=1;\n            \n            while(idx+1<len && tasks[idx+1]==t){\n                idx++;\n                cnt++; \n            }\n            \n            res+=cnt/3;\n            // 4 -> 1\n            // 5 -> 1\n            // 6 -> 2\n            \n            \n            if(cnt%3!=0)\n                res+=1;\n            idx++;\n        }\n        \n        return res;\n    }\n}","compare_result":"1000111111111111000011000000000000000000000000000011111111111100000000111111110","title_slug":"minimum-rounds-to-complete-all-tasks","has_notes":false,"flag_type":1}