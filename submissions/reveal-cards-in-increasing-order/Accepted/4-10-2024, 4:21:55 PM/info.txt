{"id":1228367648,"question_id":987,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712737315,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1228367648/","is_pending":"Not Pending","title":"Reveal Cards In Increasing Order","memory":"44 MB","code":"class Solution {\n\n    class Tuple{\n        int val;\n        int idx;\n        public Tuple(int idx, int val){\n            this.val=val;\n            this.idx=idx;\n        }\n    }\n    public int[] deckRevealedIncreasing(int[] deck) {\n        int len = deck.length;\n\n        Tuple[] arr = new Tuple[len];\n        for(int i=0; i<len; i++){\n            arr[i] = new Tuple(i, deck[i]);\n        }   \n        proc(arr);\n\n        Map<Integer, Integer> map = new HashMap<>();\n\n        for(int i=0; i<len;i++){\n            map.put(i, arr[i].idx);\n        }\n\n        Arrays.sort(deck);\n\n        int[] res = new int[len];\n\n\n        for(int i=0; i<len; i++){\n            res[map.get(i)] = deck[i];\n        }\n\n        return res;\n\n        \n\n\n    }\n\n\n    private void proc(Tuple[] arr){\n\n        Queue<Tuple> q = new LinkedList<>();\n        for(Tuple t : arr){\n            q.offer(t);\n        }\n        int idx = 0 ;\n        while(!q.isEmpty()){\n            arr[idx++] = q.poll();\n\n            if(!q.isEmpty())\n                q.offer(q.poll());\n        }\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"reveal-cards-in-increasing-order","has_notes":false,"flag_type":1}