{"id":776786561,"question_id":1285,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1660813454,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/776786561/","is_pending":"Not Pending","title":"Balance a Binary Search Tree","memory":"59.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n//     public TreeNode balanceBST(TreeNode root) {\n//         if(Math.abs(getDepth(root.left) - getDepth(root.right))>1)\n//     }\n    \n//     private helper()\n    \n    \n//     private int getDepth(TreeNode root){\n        \n//         if(root==null)\n//             return 0;\n        \n//         int left = getDepth(root.left);\n//         int right = getDepth(root.right);\n        \n//         return Math.max(left, right);\n        \n//     }\n    \n    \n    public TreeNode balanceBST(TreeNode root) {\n         \n        List<TreeNode> list = new ArrayList<>();\n        inorderTraverse(root, list);\n        TreeNode res = sortedListToBSTtree(list, 0, list.size()-1);\n        return res;\n    }\n\n    private TreeNode sortedListToBSTtree(List<TreeNode> list, int st, int ed){\n        if(st>ed)\n            return null;\n        \n        int mid=st + (ed-st)/2;\n        TreeNode root = list.get(mid);\n        root.left = sortedListToBSTtree(list, st, mid-1);\n        root.right = sortedListToBSTtree(list, mid+1, ed);\n        \n        return root;\n    }\n    \n    \n    private void inorderTraverse(TreeNode root,  List<TreeNode> list){\n        if(root==null)\n            return;\n        inorderTraverse(root.left, list);\n        list.add(root);\n        inorderTraverse(root.right, list);\n        \n        return;\n    }\n    \n    \n}","compare_result":"11111111111111111","title_slug":"balance-a-binary-search-tree","has_notes":false,"flag_type":1}