{"id":955015778,"question_id":60,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684748446,"status":10,"status_display":"Accepted","runtime":"1070 ms","url":"/submissions/detail/955015778/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"44.4 MB","code":"class Solution {\n    \n    int idx=0;\n    String res;\n    \n    public String getPermutation(int n, int k) {\n        boolean[] seen = new boolean[n+1];\n        \n        perm(n, \"\", seen, k);\n        \n        return res;\n        \n    }\n    \n    \n    private void perm(int n,  String curr, boolean[] seen, int k){\n        \n        if(idx>k)\n            return;\n        \n       if(curr.length()==n) {\n         \n           idx++;\n           if(idx==k){\n               res = curr;\n           }\n           \n           return;\n       }\n           \n        for(int i=1; i<=n; i++){\n            \n            if(seen[i]==false){\n                seen[i]=true;\n                perm(n,  curr+i, seen, k);\n                seen[i]=false;\n            }\n           \n        }\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence","has_notes":false,"flag_type":1}