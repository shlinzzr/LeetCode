{"id":1239773665,"question_id":950,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1713865990,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1239773665/","is_pending":"Not Pending","title":"X of a Kind in a Deck of Cards","memory":"45.2 MB","code":"class Solution {\n    public boolean hasGroupsSizeX(int[] deck) {\n        int len = deck.length;\n        \n        Map<Integer, Integer> map = new HashMap<>();\n        \n        for(int d: deck){\n            map.put(d, map.getOrDefault(d,0)+1);\n        }\n        \n\n        // 找到所有數字出現次數的最大公因數\n        int gcd = 0;\n        for (int count : map.values()) {\n            gcd = gcd(gcd, count);\n        }\n\n        // 如果最大公因數大於1，則返回true；否則返回false\n        return gcd > 1;\n    }\n\n    // 找到兩個數字的最大公因數\n    private int gcd(int a, int b) {\n        while (b != 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"x-of-a-kind-in-a-deck-of-cards","has_notes":false,"flag_type":1}