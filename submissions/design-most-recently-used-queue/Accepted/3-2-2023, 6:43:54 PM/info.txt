{"id":907667882,"question_id":1903,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1677753834,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/907667882/","is_pending":"Not Pending","title":"Design Most Recently Used Queue","memory":"43.7 MB","code":"class MRUQueue {\n    \n    Node[] nodes;\n    int bucket;\n    public MRUQueue(int n) {\n        bucket = (int)Math.sqrt(n);\n        nodes = new Node[(n+bucket-1)/bucket];\n        Arrays.asList(nodes).replaceAll(i->new Node(-1));\n        for(int i = 1; i <= n;++i){\n            nodes[(i-1)/bucket].pre.append(new Node(i));\n        }\n    }\n    public int fetch(int k) {\n        var ans = nodes[--k/bucket].nxt;\n        for(int i = k%bucket; i > 0; --i){//seek to target inside bucket\n            ans = ans.nxt;\n        }\n        ans.remove();\n        for(int i = 1+k/bucket; i < nodes.length; ++i){//rebalance\n            nodes[i-1].pre.append(nodes[i].nxt.remove());\n        }\n        nodes[nodes.length-1].pre.append(ans);\n        return ans.val;\n    }\n    static class Node{\n        Node pre = this, nxt = this;\n        int val;\n        Node(int v){\n            val = v;\n        }\n        void append(Node node){\n            var tmp = nxt;\n            nxt = node;\n            node.pre = this;\n            node.nxt = tmp;\n            tmp.pre = node;\n        }\n        Node remove(){\n            pre.nxt = nxt;\n            nxt.pre = pre;\n            return nxt = pre = this;\n        }\n    }\n}\n\n/**\n * Your MRUQueue object will be instantiated and called as such:\n * MRUQueue obj = new MRUQueue(n);\n * int param_1 = obj.fetch(k);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-most-recently-used-queue","has_notes":false,"flag_type":1}