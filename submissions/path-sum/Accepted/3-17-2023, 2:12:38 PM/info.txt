{"id":916698059,"question_id":112,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679033558,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/916698059/","is_pending":"Not Pending","title":"Path Sum","memory":"43 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean hasPathSum(TreeNode root, int targetSum) {\n        \n        if(root==null)\n            return false;\n        \n        if(root.left==null && root.right==null){\n            if( root.val==targetSum)\n                return true;\n            else \n                return false;\n        }\n        \n        \n        boolean left = hasPathSum(root.left, targetSum-root.val);\n        boolean right = hasPathSum(root.right, targetSum-root.val);\n        \n        return left||right;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"flag_type":1}