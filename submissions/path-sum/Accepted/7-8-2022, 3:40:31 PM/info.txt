{"id":741608497,"question_id":112,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1657266031,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/741608497/","is_pending":"Not Pending","title":"Path Sum","memory":"43.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean hasPathSum(TreeNode root, int targetSum) {\n        \n        if(root==null)\n            return false;\n            \n        Stack<TreeNode> st = new Stack<TreeNode>();\n\n        st.push(root);\n        \n        while(!st.isEmpty()){\n            TreeNode curr = st.pop();\n\n            \n            if(curr.left==null && curr.right==null){\n                \n                if(curr.val==targetSum)\n                    return true;\n\n            }\n            \n            if(curr.left!=null){\n                st.push(curr.left);\n                curr.left.val += curr.val;\n            }\n            if(curr.right!=null){\n                st.push(curr.right);\n                curr.right.val += curr.val;\n            }\n                \n            \n        }\n        \n        return false;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"flag_type":1}