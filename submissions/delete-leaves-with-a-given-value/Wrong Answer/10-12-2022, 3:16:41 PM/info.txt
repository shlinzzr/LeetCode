{"id":820724858,"question_id":1450,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665559001,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/820724858/","is_pending":"Not Pending","title":"Delete Leaves With a Given Value","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode removeLeafNodes(TreeNode root, int target) {\n        \n        if(root.left==null && root.right==null && root.val==target)\n            return null;\n        \n        helper(root, target);\n        helper(root, target);\n        return root;\n        \n    }\n    \n    \n    private void helper( TreeNode root, int target){\n        \n        if(root==null)\n            return;\n        \n        if(root.left!=null&&root.left.left==null &&root.left.right==null && root.left.val==target)\n            root.left=null;\n        \n        if(root.right!=null&&root.right.left==null &&root.right.right==null && root.right.val==target)\n            root.right=null;\n        \n        // if(root.left==null && root.right==null){\n        //     helper(root, target);\n        // }\n        \n        \n        \n        helper(root.left, target);\n        helper(root.right, target);\n                \n            \n        \n        \n    }\n}","compare_result":"11001111111101111100001010100100000000000000000000","title_slug":"delete-leaves-with-a-given-value","has_notes":false,"flag_type":1}