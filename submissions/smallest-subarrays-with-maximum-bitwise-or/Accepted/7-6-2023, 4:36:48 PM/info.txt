{"id":987623914,"question_id":2498,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688632608,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/987623914/","is_pending":"Not Pending","title":"Smallest Subarrays With Maximum Bitwise OR","memory":"64.6 MB","code":"class Solution {\n    public int[] smallestSubarrays(int[] nums) {\n       \n        //https://www.youtube.com/watch?v=npZ4NlpomeU\n        \n        // 難 概念有 不好實做\n        \n        \n        int len = nums.length;\n        int right = len-1;\n        int[] res = new int[len];\n        int[] arr = new int[32];\n        \n        // 由後往前 變成ed與left互換了\n        for (int left=len-1; left>=0; left--)\n        {\n            \n            // 整理arr : 把nums[left]灌進arr\n            for (int k=0; k<32; k++){\n                arr[k] += ((nums[left]>>k)&1);\n            }\n                \n            \n            \n            while (right>left && isOK(nums[right], arr))\n            {\n                for (int k=0; k<32; k++)\n                    arr[k] -= ((nums[right]>>k)&1);\n                right--;\n            }\n            \n            res[left] = right-left+1;\n        }\n        return res;\n        \n    }\n    \n    private boolean isOK(int num, int[] arr) { // right 可以往左移, 等於最後一位有沒有or 對sum 沒有影響\n        for (int k=0; k<32; k++) {\n            if (arr[k] > 0 && (arr[k] - ((num>>k)&1) <= 0)) \n                return false;\n        }\n        return true;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-subarrays-with-maximum-bitwise-or","has_notes":false,"flag_type":1}