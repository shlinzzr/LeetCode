{"id":920647443,"question_id":2019,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679566671,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/920647443/","is_pending":"Not Pending","title":"Product of Two Run-Length Encoded Arrays","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> findRLEArray(int[][] encoded1, int[][] encoded2) {\n        List<Integer> list1 = new ArrayList<>();\n        for(int[] en : encoded1){\n            for(int i=0; i<en[1]; i++){\n                list1.add(en[0]);\n            }\n        }\n        \n        List<Integer> list2 = new ArrayList<>();\n        for(int[] en : encoded2){\n            for(int i=0; i<en[1]; i++){\n                list2.add(en[0]);\n            }\n        }\n        \n        \n        List<Integer> list3 = new ArrayList<>();\n        for(int i=0; i<list1.size(); i++){\n            list3.add(list1.get(i) * list2.get(i));\n        }\n        \n        \n        List<List<Integer>> res = new ArrayList<>();\n        int i=0;\n        while(i<list3.size()){\n            \n            int n = list3.get(i);\n            int cnt = 1;\n            while(i+1<list3.size() && list3.get(i+1)==n){\n                cnt++;\n                i++;\n            }\n            \n            List<Integer> list = new ArrayList<>();\n            list.add(n);\n            list.add(cnt);\n            res.add(list);\n            i++;\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111100000","title_slug":"product-of-two-run-length-encoded-arrays","has_notes":false,"flag_type":1}