{"id":920654226,"question_id":2019,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679567668,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/920654226/","is_pending":"Not Pending","title":"Product of Two Run-Length Encoded Arrays","memory":"104.1 MB","code":"class Solution {\n    public List<List<Integer>> findRLEArray(int[][] encoded1, int[][] encoded2) {\n        int i1 = 0, i2 = 0;\n        int f1 = 0, f2 = 0;\n        int p = 0;\n        int len1 = encoded1.length, len2 = encoded2.length;\n        List<int[]> lst = new ArrayList<>();\n        while (i1 < len1 && i2 < len2) {\n            f1 = encoded1[i1][1];\n            f2 = encoded2[i2][1];\n            p = encoded1[i1][0] * encoded2[i2][0];\n            if (f1 == f2) {\n                lst.add(new int[]{p, f1});\n                i1++;\n                i2++;\n            } else if (f1 < f2) {\n                lst.add(new int[]{p, f1});\n                encoded2[i2][1] = f2 - f1;\n                i1++;\n            } else {\n                lst.add(new int[]{p, f2});\n                encoded1[i1][1] = f1 - f2;\n                i2++;\n            }\n        }\n        //for (int[] arr : lst) System.out.println(Arrays.toString(arr));\n        List<List<Integer>> res = new ArrayList<>();\n        \n        int[] cur = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i)[0] != cur[0]) { \n                res.add(Arrays.asList(new Integer[]{cur[0], cur[1]})); // if diff from prev, add to result.\n                cur = lst.get(i);\n            } else {\n                cur[1] += lst.get(i)[1]; // if same as prev, then add freq.\n            }\n        }\n        res.add(Arrays.asList(new Integer[]{cur[0], cur[1]})); // last one\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"product-of-two-run-length-encoded-arrays","has_notes":false,"flag_type":1}