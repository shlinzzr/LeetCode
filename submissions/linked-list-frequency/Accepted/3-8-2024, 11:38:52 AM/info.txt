{"id":1197248304,"question_id":3359,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1709869132,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/1197248304/","is_pending":"Not Pending","title":"Linked List Frequency","memory":"60.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode frequenciesOfElements(ListNode head) {\n\n        HashMap<Integer, Integer> map = new HashMap<>();\n\n        ListNode cur = head;\n\n        while(cur!=null){\n            map.put(cur.val, map.getOrDefault(cur.val,0)+1);\n            cur=cur.next;\n        }\n\n\n        ListNode dummy = new ListNode();\n        cur = dummy;\n        for(int k : map.keySet()){\n            ListNode node = new ListNode(map.get(k));\n            cur.next = node;\n            cur = node;\n        }\n\n        return dummy.next;\n\n\n        \n    }\n}","compare_resulttitle_slug":"linked-list-frequency","has_notes":false,"flag_type":1}