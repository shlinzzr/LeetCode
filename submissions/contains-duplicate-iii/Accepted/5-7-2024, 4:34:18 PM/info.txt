{"id":1251600202,"question_id":220,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715070858,"status":10,"status_display":"Accepted","runtime":"267 ms","url":"/submissions/detail/1251600202/","is_pending":"Not Pending","title":"Contains Duplicate III","memory":"60.2 MB","code":"class Solution {\n    public boolean containsNearbyAlmostDuplicate(int[] nums, int indexDiff, int valueDiff) {\n\n        int len = nums.length;\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        int st= 0 ;\n        for(int ed=0; ed<len; ed++){\n\n            \n\n            Integer lo = map.floorKey(nums[ed]+valueDiff);\n            if(lo!=null && lo>=nums[ed]) return true;\n\n            Integer hi = map.ceilingKey(nums[ed]-valueDiff);\n            if(hi!=null && hi<=nums[ed]) return true;\n            \n            map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n            \n            if(ed-st<indexDiff ) continue;\n            map.put(nums[st], map.get(nums[st])-1);\n            if(map.get(nums[st])==0) map.remove(nums[st]);\n            st++;\n\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"contains-duplicate-iii","has_notes":false,"flag_type":1}