{"id":764902390,"question_id":141,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659604046,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/764902390/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"45.7 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode fast =head, slow = head;\n        \n        \n        while(fast!=null){\n            fast = fast.next;\n            \n            if(fast!=null)\n                fast=fast.next;\n            else\n                break;\n            \n            slow = slow.next;\n            \n            if(slow==fast)\n                return true;\n                \n            \n        }\n        \n        return false;\n    }\n}","compare_result":"111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}