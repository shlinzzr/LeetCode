{"id":929357820,"question_id":141,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680835521,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/929357820/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"43.5 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n        \n        while(fast!=null && fast.next!=null){\n            slow = slow.next;\n            fast=fast.next.next;\n            \n            \n            if(slow==fast)\n                return true;\n        }\n        \n        return false;\n        \n        \n    \n    }\n}","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}