{"id":741559317,"question_id":141,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1657261397,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/741559317/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n        \n        while(fast!=null){\n            slow = slow.next;\n            fast = fast.next.next;\n            \n            if(slow==fast)\n                return true;\n        }\n        \n        return false;\n    }\n}","compare_result":"110000000000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}