{"id":940882926,"question_id":869,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682648340,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/940882926/","is_pending":"Not Pending","title":"Similar String Groups","memory":"42.7 MB","code":"class Solution {\n    public int numSimilarGroups(String[] strs) {\n        int len = strs.length;\n        \n        UnionFind uf = new UnionFind(len);\n        \n        int res = len;\n        \n        for(int i=0; i<len ;i++){\n            for(int j=i+1; j<len; j++){\n                \n                String a = strs[i];\n                String b = strs[j];\n                // System.out.println(a+ \" \" + b + \" \"+isSim(a, b));\n                if(isSim(a, b)){\n                    uf.union(i, j);\n                    res--;\n                }\n            }\n        }\n        \n        int cnt = 0;\n        for(int i=0; i<len; i++){\n            if(uf.parent[i]==i)\n                cnt++;\n        }\n        \n        return cnt;\n        \n        \n        // return res;\n    }\n    \n    \n    \n    \n    \n    private boolean isSim(String a, String b){\n        \n        if(a.length()!=b.length())\n            return false;\n        \n        if(a.equals(b))\n            return true;\n        \n        int len = a.length();\n        \n        int cnt=0;\n        \n        for(int i=0; i<len ; i++){\n            \n            if(a.charAt(i)!=b.charAt(i))\n                cnt++;\n            if(cnt > 2){\n                return false;\n            }\n        }\n        \n        return cnt==0 || cnt==2;\n    }\n    \n    \n    class UnionFind{\n        \n        int[] parent;\n        int[] weight;\n        \n        public UnionFind(int n){\n            \n            parent = new int[n];\n            weight = new int[n];\n               \n            for(int i=0; i<n; i++){\n                parent[i] = i;\n            }\n            \n            Arrays.fill(weight, 1);\n        }\n        \n        public int find(int x){\n            \n            if(parent[x]==x)\n                return x;\n            \n            parent[x] = find(parent[x]);\n            return parent[x];\n        }\n        \n        public void union(int a, int b){\n            \n            int ra = find(a);\n            int rb = find(b);\n            \n            if(ra==rb)\n                return;\n            \n            if(weight[ra]>=weight[rb]){\n                weight[ra] += weight[rb];\n                parent[rb] = ra;\n            }else{\n                weight[rb] += weight[ra];\n                parent[ra] = rb;\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"similar-string-groups","has_notes":false,"flag_type":1}