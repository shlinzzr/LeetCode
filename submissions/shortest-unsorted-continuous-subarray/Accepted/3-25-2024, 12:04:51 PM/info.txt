{"id":1213130608,"question_id":581,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711339491,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1213130608/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"45.1 MB","code":"class Solution {\n    public int findUnsortedSubarray(int[] nums) {\n        int len = nums.length;\n        int min = nums[len-1];\n        int max= nums[0];\n        int st =len-1, ed=0;\n        for(int i=1; i<len; i++){\n            min = Math.min(min, nums[len-i-1]);\n            max = Math.max(max, nums[i]);\n            if(nums[len-i-1]>min) st = len-i-1;\n            if(nums[i]<max) ed = i;\n        }\n\n        return st>=ed ? 0 : ed-st+1;\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray","has_notes":false,"flag_type":1}