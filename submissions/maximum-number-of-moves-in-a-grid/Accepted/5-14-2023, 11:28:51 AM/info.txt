{"id":949967042,"question_id":2794,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1684034931,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/949967042/","is_pending":"Not Pending","title":"Maximum Number of Moves in a Grid","memory":"50 MB","code":"class Solution {\n    public int maxMoves(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n       \n        \n        // (row - 1, col + 1), (row, col + 1) and (row + 1, col + 1)\n        int[][] dirs = new int[][]{{-1,+1},{0,1},{1,1}};\n        \n        \n        int max = 0;\n        \n        boolean[][] seen = new boolean[h][w];\n        Queue<int[]> q = new LinkedList<>();\n        \n        \n        for(int i=0; i<h; i++){\n              q.offer(new int[]{i,0});\n              seen[i][0]=true;\n        }\n       \n          \n        int step=0;\n        while(!q.isEmpty()){\n                \n            max = Math.max(max, step);\n                \n            int siz = q.size();\n            for(int j=0; j<siz; j++){\n                int[] p = q.poll();\n                    \n                int cur = grid[p[0]][p[1]];\n                    \n                for(int[] d : dirs){\n                        \n                    int r = d[0]+p[0];\n                    int c = d[1]+p[1];\n                        \n                    if(r<0 || c<0 || r>=h || c>=w || seen[r][c] || grid[r][c]<=cur)\n                     continue;\n                    seen[r][c]=true;\n                        \n                    q.offer(new int[]{r,c});\n                        \n                }\n            }\n            step++;\n        }\n        \n        return max;\n        \n        \n        \n    }\n}","compare_resulttitle_slug":"maximum-number-of-moves-in-a-grid","has_notes":false,"flag_type":1}