{"id":806665117,"question_id":1387,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663916474,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/806665117/","is_pending":"Not Pending","title":"Find Elements in a Contaminated Binary Tree","memory":"56.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass FindElements {\n\n    HashSet<Integer> set ;\n    \n    public FindElements(TreeNode root) {\n        root.val = 0;\n        set = new HashSet<>();\n        recoverTree(root);\n    }\n    \n    public boolean find(int target) {\n        return set.contains(target);\n    }\n    \n    private void recoverTree(TreeNode root){\n        \n        if(root==null)\n            return;\n\n        set.add(root.val);\n        \n        if(root.left!=null){\n            root.left.val = 2 * root.val +1;\n            recoverTree(root.left);\n        }\n        \n        if(root.right!=null){\n            root.right.val = 2 * root.val +2;\n            recoverTree(root.right);\n        }\n        \n    }\n    \n}\n\n/**\n * Your FindElements object will be instantiated and called as such:\n * FindElements obj = new FindElements(root);\n * boolean param_1 = obj.find(target);\n */","compare_result":"1111111111111111111111111111111","title_slug":"find-elements-in-a-contaminated-binary-tree","has_notes":false,"flag_type":1}