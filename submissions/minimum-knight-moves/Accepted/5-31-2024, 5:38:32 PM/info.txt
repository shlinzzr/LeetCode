{"id":1273160256,"question_id":1142,"lang":"java","lang_name":"Java","time":"1 week, 5 days","timestamp":1717148312,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1273160256/","is_pending":"Not Pending","title":"Minimum Knight Moves","memory":"44.4 MB","code":"class Solution {\n    Map<String, Integer> memo = new HashMap<>();\n\n    public int minKnightMoves(int x, int y) {\n\n        x = Math.abs(x);\n        y = Math.abs(y);\n        String key = x+\"_\"+y;\n\n        if(memo.containsKey(key)) return memo.get(key);\n        if(x==0 && y==0) return 0;\n        // if(x*y==2) return 1;\n        // if(x==2 && y==0) return 2;\n        // if(y==2 && x==0) return 2;\n        // if(x+y==1) return 3;\n\n        if(x+y==2) return 2;\n\n\n        int a = minKnightMoves(x-2, y-1);\n        int b = minKnightMoves(x-1, y-2);\n\n        int res = 1 + Math.min(a,b);\n        memo.put(key, res);\n\n        return res;\n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"minimum-knight-moves","has_notes":false,"flag_type":1}