{"id":1082018113,"question_id":1142,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1698054319,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1082018113/","is_pending":"Not Pending","title":"Minimum Knight Moves","memory":"43.5 MB","code":"class Solution {\n    \n    HashMap<String, Integer> memo = new HashMap<>();\n    \n    public int minKnightMoves(int x, int y) {\n        \n        // 只看第一象限\n        x = Math.abs(x);\n        y = Math.abs(y);\n        \n        String key = x+\",\"+y;        \n        if(memo.containsKey(key))\n            return memo.get(key);\n        \n        if(x==0 && y==0)\n            return 0;\n        else if(x+y==2)\n            return 2;\n        else {\n            int res = 1 + Math.min( minKnightMoves((x-1), (y-2)),\n                                    minKnightMoves((x-2), (y-1)));\n            \n            memo.put(key, res);\n            return res;\n        }\n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"minimum-knight-moves","has_notes":false,"flag_type":1}