{"id":1003188581,"question_id":668,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690257157,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1003188581/","is_pending":"Not Pending","title":"Kth Smallest Number in Multiplication Table","memory":"38.8 MB","code":"class Solution {\n    \n    \n    public int findKthNumber(int m, int n, int k) {\n    \tint st = 1 , ed = m * n + 1;\n        \n    \twhile (st < ed) {\n    \t    int mid = st + (ed - st) / 2;\n    \t    if ( count(mid, m, n) < k) \n                st = mid +1;\n            else\n                ed = mid;\n    \t}\n        \n    \treturn st;\n    }\n    \n    private int count(int v, int m, int n) {\n        int count = 0;\n        for (int i = 1; i <= m; i++) {\n            count += Math.min(v / i , n);\n        }\n        return count;\n    }\n    \n    \n    // TLE\n//     public int findKthNumber(int m, int n, int k) {\n//         PriorityQueue<int[]> pq = new PriorityQueue<>(\n//             (a,b) -> a[0]-b[0]\n//         );\n            \n        \n//         for(int i=1; i<=m; i++){\n//             pq.offer(new int[]{i, i, 1});\n//         }\n        \n//         while(!pq.isEmpty()&& k>1){\n            \n//             int[] p = pq.poll();\n//             int val = p[0];\n//             int i = p[1];\n//             int j = p[2];\n            \n//             // System.out.println(val+ \" \" + i + \" \" + j);            \n            \n//             if(j+1<=n){\n//                 pq.offer(new int[]{i*(j+1), i, j+1});\n//             }\n            \n//             k--;\n//         }\n        \n//         return pq.peek()[0];\n//     }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-number-in-multiplication-table","has_notes":false,"flag_type":1}