{"id":1094350793,"question_id":794,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699439405,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1094350793/","is_pending":"Not Pending","title":"Swim in Rising Water","memory":"43.4 MB","code":"class Solution {\n    public int swimInWater(int[][] grid) {\n        int h= grid.length;\n        int w= grid[0].length;\n\n        int st=0,ed=2499;\n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            if(ok(grid, mid)){\n                ed=mid;\n            }else{\n                st=mid+1;\n            }\n\n        }\n\n        return st;\n\n    }\n\n    private boolean ok(int[][] grid, int mid){\n        int n = grid.length;\n        boolean[][] seen = new boolean[n][n];\n        return  dfs(grid, mid, 0, 0, seen);\n    }\n\n    private boolean dfs(int[][] grid, int mid, int x, int y, boolean[][] seen ){\n\n        int n = grid.length;\n\n        if(seen[x][y]) return false;\n\n        seen[x][y]=true;\n\n        if(grid[x][y]>mid)\n            return false;\n\n        if(x==n-1 && y==n-1)\n            return true;\n        \n        boolean rt = false;\n        if(x+1<n && grid[x+1][y]<=mid )  rt = rt || dfs(grid, mid, x+1, y, seen);\n        if(x-1>=0 && grid[x-1][y]<=mid)  rt = rt || dfs(grid, mid, x-1, y, seen);\n        if(y+1<n && grid[x][y+1]<=mid)  rt = rt || dfs(grid, mid, x, y+1, seen);\n        if(y-1>=0 && grid[x][y-1]<=mid)  rt = rt || dfs(grid, mid, x, y-1, seen);\n\n        return rt;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"swim-in-rising-water","has_notes":false,"flag_type":1}