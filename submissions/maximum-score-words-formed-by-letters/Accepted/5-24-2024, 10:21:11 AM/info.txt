{"id":1266265710,"question_id":1381,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1716517271,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1266265710/","is_pending":"Not Pending","title":"Maximum Score Words Formed by Letters","memory":"41.1 MB","code":"class Solution {\n    public int maxScoreWords(String[] words, char[] letters, int[] score) {\n        // if (words == null || words.length == 0 || letters == null || letters.length == 0 || score == null || score.length == 0) return 0;\n\n\n        int[] arr = new int[score.length];\n        for (char ch : letters) {\n            arr[ch-'a']++;\n        }\n        int res = backtrack(words, arr, score, 0);\n        return res;\n    }\n    int backtrack(String[] words, int[] arr, int[] score, int index) {\n        int max = 0;\n        for (int i = index; i < words.length; i++) {\n            int res = 0;\n            boolean isValid = true;\n            for (char ch : words[i].toCharArray()) {\n                arr[ch - 'a']--;\n                res += score[ch - 'a'];\n                if (arr[ch - 'a'] < 0) isValid = false;\n            }\n            if (isValid) {\n                res += backtrack(words, arr, score, i + 1);\n                max = Math.max(res, max);\n            }\n\n            // recover\n            for (char ch : words[i].toCharArray()) {\n                arr[ch - 'a']++;\n                res = 0;\n            }\n        }\n        return max;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"maximum-score-words-formed-by-letters","has_notes":false,"flag_type":1}