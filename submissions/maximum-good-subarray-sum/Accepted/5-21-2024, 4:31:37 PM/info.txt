{"id":1263823128,"question_id":3265,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716280297,"status":10,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/1263823128/","is_pending":"Not Pending","title":"Maximum Good Subarray Sum","memory":"61.2 MB","code":"class Solution {\n    public long maximumSubarraySum(int[] nums, int k) {\n        Map<Integer, Long> map = new HashMap<>(); // nums[i], min_presum\n        long sum = 0;\n        long res = Long.MIN_VALUE;\n\n        for (int v : nums) {\n            if (map.containsKey(v - k)) {\n                long min = map.get(v - k);\n                res = Math.max(res, v + sum-min);\n            }\n            if (map.containsKey(v + k)) {\n                long min = map.get(v + k);\n                res = Math.max(res, v + sum-min);\n            }\n\n            map.put(v, Math.min(map.getOrDefault(v, Long.MAX_VALUE), sum));\n            sum += v;\n        }\n\n        return res == Long.MIN_VALUE ? 0 : res;\n    }\n}","compare_resulttitle_slug":"maximum-good-subarray-sum","has_notes":false,"flag_type":1}