{"id":809621579,"question_id":19,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664261501,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/809621579/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"40.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n    \n        ListNode start = new ListNode(0);\n        ListNode slow = start, fast = start;\n        slow.next = head;\n\n        //Move fast in front so that the gap between slow and fast becomes n\n        for(int i=1; i<=n+1; i++)   {\n            fast = fast.next;\n        }\n        //Move fast to the end, maintaining the gap\n        while(fast != null) {\n            slow = slow.next;\n            fast = fast.next;\n        }\n        //Skip the desired node\n        slow.next = slow.next.next;\n        return start.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false,"flag_type":1}