{"id":803337442,"question_id":234,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663556156,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/803337442/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"96.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        \n        ListNode fast=head, slow=head;\n        \n        \n        while(fast!=null){\n            fast=fast.next;\n            slow=slow.next;\n            if(fast!=null)\n                fast=fast.next;\n        }\n        \n        slow = reverse(slow);\n        \n        while(slow!=null && head!=null){\n            if(slow.val!=head.val)\n                return false;\n            slow=slow.next;\n            head=head.next;\n            \n        }\n        \n        return true;\n    \n        \n    }\n    \n    \n    private ListNode reverse(ListNode head){\n        \n        ListNode prev = null;\n        while(head!=null){\n            ListNode next = head.next;\n            head.next = prev;\n            prev = head;\n            head = next;\n        }\n        return prev;\n        \n    }\n    \n    \n    \n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}