{"id":1210491546,"question_id":234,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1711073249,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1210491546/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"68.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        int cnt= 0 ;\n        \n        ListNode fast = head;\n        ListNode slow = head;\n        while(fast!=null && fast.next!=null){\n            slow = slow.next;\n            fast=fast.next.next;\n        }\n        \n        ListNode tail = reverse(slow);\n        \n//         while(fast!=null){\n            \n//             System.out.print(fast.val + \" ,\");\n//             fast= fast.next;\n//         }\n//         System.out.println();\n//         while(head!=null){\n//             System.out.print(head.val + \" ,\");\n//             head = head.next;\n//         }\n        \n        \n        while(tail!=null && head !=null){\n            if(tail.val!=head.val) return false;\n            head = head.next;\n            tail = tail.next;\n        }\n        \n        return true;\n        \n    }\n    \n    private ListNode reverse(ListNode node){\n        ListNode prev = null;\n        while(node!=null){\n            ListNode next = node.next;\n            node.next = prev;\n            prev = node;\n            node = next;\n        }\n        \n        return prev;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}