{"id":780918528,"question_id":234,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661229686,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/780918528/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        ListNode fast=head, slow=head;\n        \n        while(fast!=null && fast.next!=null){\n            slow=slow.next;\n            fast=fast.next.next;\n        }\n        \n        // if(slow.next!=null)\n        //     slow = slow.next;\n        \n        fast = reverse(fast);\n        \n        while(fast!=null && head!=null){\n            if(fast.val!=head.val)\n                return false;\n            head=head.next;\n            fast=fast.next;\n        }\n        \n        return true;\n        \n        \n        \n    }\n    \n    private ListNode reverse(ListNode head){\n        \n        ListNode prev = null;\n        while(head!=null){\n            ListNode next = head.next;\n            head.next = prev;\n            prev=head;\n            head=next;\n        }\n        \n        return prev;\n        \n    }\n}\n","compare_result":"101111100000010100010011111101010111011101101011111101110110100111110101010010001100100","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}