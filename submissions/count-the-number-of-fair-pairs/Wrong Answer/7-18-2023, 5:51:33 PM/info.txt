{"id":997448107,"question_id":2699,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689673893,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/997448107/","is_pending":"Not Pending","title":"Count the Number of Fair Pairs","memory":"N/A","code":"class Solution {\n    public long countFairPairs(int[] nums, int lower, int upper) {\n        Arrays.sort(nums);\n        long result = 0;\n        for (int i = 0; i < nums.length; i++) {\n            \n            long b = higher(nums, i, upper-nums[i]);\n            long a = floor(nums, i, lower-nums[i]);\n            result += (b-1)-a+1;\n        }\n        return result;\n    }\n    public long higher(int[] nums, int index, int target) {\n        int start = index + 1;\n        int end = nums.length-1;\n        while (start < end) {\n            int mid = start + (end - start) / 2;\n            if (nums[mid] > (target)) {\n                end = mid;\n            } else {\n                start = mid + 1;\n            }\n        }\n        return start;\n    }\n     public long floor(int[] nums, int index, int target) {\n        int start = index + 1;\n        int end = nums.length-1;\n        while (start < end) {\n            int mid = start + (end - start) / 2;\n            if (nums[mid] < (target)) {\n                start = mid + 1;\n            } else {\n                end = mid;\n            }\n        }\n        return start;\n    }\n}","compare_result":"10110010001000000000000000000000100000000000000100101","title_slug":"count-the-number-of-fair-pairs","has_notes":false,"flag_type":1}