{"id":1241452150,"question_id":1248,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714028214,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1241452150/","is_pending":"Not Pending","title":"Binary Tree Coloring Game","memory":"41.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int xleft =0;\n    int xright = 0;\n    public boolean btreeGameWinningMove(TreeNode root, int n, int x) {\n        // n : odd\n        // 1 player choose x (red)\n        // 2 player choose y, (blue) y!=x\n            \n        // left, right, parent with uncolored\n        // if can't pick, pass, \n        // if both pass, game over;\n        // color node more wins the game\n        \n        // I'm 2nd player, can win = true, else false\n        \n        \n        int total = getNodeCnt(root);\n        int subx = getNodeCntWithX(root, x , false);\n        System.out.println(subx);\n        \n        int others = total-subx;\n        \n        if(others> total/2 || xleft>others+xright || xright>others+xleft)\n            return true;\n        \n        return false;\n            \n    }\n    \n    \n    private int getNodeCntWithX(TreeNode node, int x, boolean found){\n        \n        if(node==null) return 0;\n        \n        if(node.val==x){\n            found = true;\n        }\n        \n        int left = getNodeCntWithX(node.left, x, found);\n        int right = getNodeCntWithX(node.right, x, found);\n        \n        if(node.val==x){\n            xleft = left;\n            xright = right;\n        }\n        \n        return (found? 1 : 0 ) + left + right;\n        \n    }\n    \n    private int getNodeCnt(TreeNode node){\n        \n        if(node==null) return 0;\n        if(node.left==null && node.right==null) return 1;\n        \n        int left = getNodeCnt(node.left);\n        int right = getNodeCnt(node.right);\n        return left+right+1;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-coloring-game","has_notes":false,"flag_type":1}