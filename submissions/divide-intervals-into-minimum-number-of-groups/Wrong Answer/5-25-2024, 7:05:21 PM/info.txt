{"id":1267382797,"question_id":2488,"lang":"java","lang_name":"Java","time":"2Â weeks, 4Â days","timestamp":1716635121,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1267382797/","is_pending":"Not Pending","title":"Divide Intervals Into Minimum Number of Groups","memory":"N/A","code":"class Solution {\n    public int minGroups(int[][] intervals) {\n        Arrays.sort(intervals, (a,b)-> a[0]!=b[0] ? a[0]-b[0] : a[1]-b[1]);\n\n        List<int[]> list = new ArrayList<>();\n        int idx= 0 ;\n        int len = intervals.length;\n\n        int g=1;\n\n        int[] prev = intervals[0];\n        for(int i=1; i<len; i++){\n\n            int[] curr = intervals[i];\n            if(prev[1] < curr[0]){\n                list.add(prev);\n                prev = curr;\n                continue;\n            }\n\n            if(prev[1]<=curr[1]){\n                prev[1] = Math.max(prev[1], curr[1]);\n                g ++;\n                continue; \n            }\n        }\n\n        list.add(prev);\n\n        return g;\n        \n    }\n}","compare_result":"11001011000000001000000000000011110","title_slug":"divide-intervals-into-minimum-number-of-groups","has_notes":false,"flag_type":1}