{"id":1268275972,"question_id":2488,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1716706674,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/1268275972/","is_pending":"Not Pending","title":"Divide Intervals Into Minimum Number of Groups","memory":"80.6 MB","code":"class Solution {\n    public int minGroups(int[][] intervals) {\n        int len = intervals.length;\n\n        int max = 1;\n\n        Arrays.sort(intervals, (a,b)-> a[0]-b[0]);\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> a[1]-b[1]\n        );\n\n        for(int i=0; i<len; i++){\n\n            pq.offer(intervals[i]);\n            while(!pq.isEmpty() && pq.peek()[1]<intervals[i][0]){\n                pq.poll();\n            }\n\n            max = Math.max(max, pq.size());\n\n        }\n\n\n        return max;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"divide-intervals-into-minimum-number-of-groups","has_notes":false,"flag_type":1}