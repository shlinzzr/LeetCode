{"id":1030291995,"question_id":1017,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692863764,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/1030291995/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"49.7 MB","code":"class Solution {\n    public int oddEvenJumps(int[] arr) {\n        \n        // [5,1,3,4,2] \n        // 每次跳可以先選擇odd jump 或 even jump, odd跳完要換even, even跳完要換odd\n        // odd jump : find val >= curr\n        // even jump : find val <= curr\n        \n        int len = arr.length;\n        boolean[] higher = new boolean[len];\n        boolean[] lower = new boolean[len];\n        \n        higher[len-1]=true;\n        lower[len-1]=true;\n        int res =1;\n        \n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        \n        map.put(arr[len-1], len-1); // val -> idx =>(2, 4)\n\n        for(int i=len-2; i>=0; i--){ // len-1 已經是答案了 從len-2(4) 開始\n            Map.Entry<Integer, Integer> hi = map.ceilingEntry(arr[i]); // null\n            Map.Entry<Integer, Integer> lo = map.floorEntry(arr[i]); // lo=(2,4)\n            \n            if(hi!=null)\n                higher[i]=lower[(int)hi.getValue()];\n            \n            if (lo != null) \n                lower[i] = higher[(int)lo.getValue()];\n            \n            if(higher[i]) \n                res++;\n            \n            map.put(arr[i], i);\n            \n            \n        }\n        \n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-jump","has_notes":false,"flag_type":1}