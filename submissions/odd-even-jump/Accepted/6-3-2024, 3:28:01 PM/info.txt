{"id":1276080527,"question_id":1017,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1717399681,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/1276080527/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"47.2 MB","code":"class Solution {\n    public int oddEvenJumps(int[] arr) {\n\n        int len = arr.length;\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        int res = 1; // the last idx is always valid\n\n        boolean[] higher = new boolean[len];\n        boolean[] lower = new boolean[len];\n        higher[len-1] = true;\n        lower[len-1] = true;\n\n        map.put(arr[len-1], len-1);\n\n        for(int i=len-2; i>=0; i--){\n            Integer hi = map.ceilingKey(arr[i]);\n            if(hi!=null){\n                lower[i] = higher[map.get(hi)];\n            }\n\n            Integer lo = map.floorKey(arr[i]);\n            if(lo!=null){\n                higher[i] = lower[map.get(lo)];\n            }\n            \n            if(lower[i]) res++;\n\n            map.put(arr[i], i);\n\n        }\n\n        return res;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-jump","has_notes":false,"flag_type":1}