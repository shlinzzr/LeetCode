{"id":1163669598,"question_id":1017,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1706856169,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1163669598/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"N/A","code":"class Solution {\n    public int oddEvenJumps(int[] arr) {\n        int len = arr.length;\n        \n        boolean[] higher = new boolean[len];\n        boolean[] lower = new boolean[len];\n        \n        // odd  arr[i] <= arr[j]\n        // even arr[i] >= arr[j]\n        \n        \n        higher[len-1] = true;\n        lower[len-1] = true;\n        int res = 1;\n        \n        //= [10,13,12,14,15]\n        \n        TreeMap<Integer ,Integer> map = new TreeMap<>();  \n        map.put(arr[len-1], len-1);   // 15, 4\n        \n        for(int i=len-2; i>=0; i--){\n            // arr[i] = 14 \n            Integer hi = map.higherKey(arr[i]); // hi = 15\n            Integer lo = map.lowerKey(arr[i]); // xx\n            \n            if(hi!=null){\n                higher[i] = lower[map.get(hi)]; // lower[4] = true\n            }\n            \n            if(lo!=null){\n                lower[i] = higher[map.get(lo)];\n            }\n            \n            if(higher[i]){\n                System.out.println(i);\n                res++;\n            }\n                \n            \n            map.put(arr[i], i);\n            \n        }\n        \n        return res;\n            \n        \n            \n            \n            \n    }\n}","compare_result":"10111100011111111110111111111111100111100111111111111111111110111","title_slug":"odd-even-jump","has_notes":false,"flag_type":1}