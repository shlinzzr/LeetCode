{"id":1119498437,"question_id":1418,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702547208,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1119498437/","is_pending":"Not Pending","title":"Fair Distribution of Cookies","memory":"43.9 MB","code":"class Solution {\n\n    int min = Integer.MAX_VALUE;\n    public int distributeCookies(int[] cookies, int k) {\n        List<Integer>[] arr = new ArrayList[k];\n        for(int i=0; i<k; i++){\n            arr[i] = new ArrayList<>();\n        }\n\n        Arrays.sort(cookies);\n        int len = cookies.length;\n\n        helper(cookies, len-1, arr);\n        return min==Integer.MAX_VALUE? -1 : min;\n    }\n\n    private void helper(int[] cookies, int idx, List<Integer>[] arr ){\n        int maxSum = 0;\n        for(List<Integer> list : arr){\n            maxSum = Math.max(maxSum, getSum(list));\n        }\n\n        if(idx<0){\n            min = Math.min(min, maxSum);\n            return;\n        }\n\n        // 20 15 10 8 8\n        int flag=0;\n\n        for(int i=0; i<arr.length; i++){\n            List<Integer> list = arr[i];\n\n            \n            int sum = getSum(list);\n            if(sum+cookies[idx]>min) continue;\n\n            if(sum==0) {\n                if(flag==1) continue;\n                else flag=1;\n            }\n\n            list.add(cookies[idx]);\n            helper(cookies, idx-1, arr);\n            list.remove(list.size()-1);\n        }\n    }\n\n    private int getSum(List<Integer> list){\n        int sum = 0;\n        for(int n : list){\n            sum+=n;\n        }\n        return sum;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"fair-distribution-of-cookies","has_notes":false,"flag_type":1}