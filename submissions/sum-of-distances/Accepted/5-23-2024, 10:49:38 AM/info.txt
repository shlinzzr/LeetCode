{"id":1265370776,"question_id":2721,"lang":"java","lang_name":"Java","time":"3 weeks","timestamp":1716432578,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/1265370776/","is_pending":"Not Pending","title":"Sum of Distances","memory":"73.4 MB","code":"class Solution {\n    public long[] distance(int[] nums) {\n        \n        // 1 : 0 2 3\n        // 3 : 1\n        // 2 : \n        int len = nums.length;\n        long[] res = new long[len];\n\n        Map<Integer,List<Integer>> map = new HashMap<>();\n        for(int i=0; i<len; i++){\n            map.putIfAbsent(nums[i], new ArrayList<>());\n            map.get(nums[i]).add(i);\n        }\n\n\n        // by huifeng, one-pass solution\n        for(Map.Entry<Integer, List<Integer>> en : map.entrySet()){\n            int val = en.getKey();\n            List<Integer> list = en.getValue();\n            long sum = 0;\n            for(int i=0; i<list.size(); i++){\n                sum += list.get(i) - list.get(0);\n            }\n            res[list.get(0)] = sum;\n            for(int i=1; i<list.size(); i++){\n                sum +=  (list.get(i)-list.get(i-1))*i;\n                sum -=  (list.get(i)-list.get(i-1))*(list.size()-i) ;\n                res[list.get(i)] = sum ;\n            }\n        }\n\n\n        // // 不知道錯在哪欸\n        // for(int k : map.keySet()){\n        //     List<Integer> list = map.get(k);\n        //     if(list.size()<=1){\n        //         res[list.get(0)]=0;\n        //     }else{\n        //         List<Long> rt = getSum(list);\n\n        //         System.out.println(rt);\n        //         for(int j=0; j<list.size(); j++){\n        //             res[list.get(j)] = rt.get(j);\n        //         }\n        //     }\n        // }\n\n        return res;\n        \n    }\n\n\n     // // 不知道錯在哪欸\n    private List<Long> getSum(List<Integer> list) {\n\n        List<Long> res = new ArrayList<>();\n\n        int len = list.size();\n\n        long[] presum = new long[len];\n        long[] sufsum = new long[len];\n        for(int i=0; i<len; i++){\n            presum[i] = list.get(i) + (i==0? 0 : presum[i-1]);\n            int idx = len-1-i;\n            sufsum[idx] = list.get(idx) + (idx==len-1 ? 0 : sufsum[idx+1]);\n        }\n\n        // 1 : 0 2 3\n        // p   0 2 5\n        // s.  5 5 3\n\n        //i=0 : \n//        5\n        // i=1\n        // 2*2-2 + 5-(2*2)\n\n\n        for(int i=0; i<len; i++){\n            res.add( list.get(i)*(i+1)-presum[i] + sufsum[i] - list.get(i)*(len-i));\n        }\n\n\n        return res;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-distances","has_notes":false,"flag_type":1}