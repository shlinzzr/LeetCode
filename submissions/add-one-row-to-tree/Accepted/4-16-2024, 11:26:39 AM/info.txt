{"id":1233588325,"question_id":623,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713237999,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1233588325/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode addOneRow(TreeNode root, int val, int depth) {\n\n        if(depth==1){\n            TreeNode node = new TreeNode(val);\n            node.left = root;\n            return node;\n        }\n\n        helper(root, val, depth, 1);\n        return root;\n        \n    }\n\n    private void helper(TreeNode root, int val, int depth, int curDepth){\n\n        if(root==null) return ;\n\n        if(curDepth+1==depth){\n\n            TreeNode left = new TreeNode(val);\n            left.left = root.left;\n            root.left = left;\n            \n            TreeNode right = new TreeNode(val);\n            right.right = root.right;\n            root.right = right;\n            return;\n        }\n\n        helper(root.left, val, depth, curDepth+1);\n        helper(root.right, val, depth, curDepth+1);\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree","has_notes":false,"flag_type":1}