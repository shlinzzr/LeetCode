{"id":815562818,"question_id":623,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664952139,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/815562818/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode addOneRow(TreeNode root, int val, int depth) {\n        \n        if(depth==1){\n            TreeNode newRoot = new TreeNode(val);\n            newRoot.left = root;\n            return newRoot;\n        }\n        \n        \n        helper(root, val, depth, 1);\n        return root;     \n    }\n    \n    \n    private void helper(TreeNode root, int val, int depth, int curr){\n        if(root==null){\n            return;\n        }\n        \n        if(curr==depth-1){\n            \n            if(root.left!=null){\n                TreeNode left = new TreeNode(val);\n                left.left = root.left;\n                root.left = left;\n            }\n             \n            if(root.right!=null){\n                TreeNode right = new TreeNode(val);\n                right.right = root.right;\n                root.right = right;\n            }\n            \n            return;\n        }\n        \n        helper(root.left, val, depth, curr+1);\n        helper(root.right, val, depth, curr+1);\n        \n        \n    }\n}","compare_result":"1100111110000000100001000001011000011001000101001001001001101101000000101001000000000000001001000000000000000","title_slug":"add-one-row-to-tree","has_notes":false,"flag_type":1}