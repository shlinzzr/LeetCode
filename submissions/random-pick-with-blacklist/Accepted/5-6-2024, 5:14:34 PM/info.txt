{"id":1250717182,"question_id":894,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714986874,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/1250717182/","is_pending":"Not Pending","title":"Random Pick with Blacklist","memory":"55.7 MB","code":"class Solution {\n\n    Map<Integer, Integer> map ;\n    Random r;\n    int n;\n    int len;\n    public Solution(int n, int[] blacklist) {\n\n        r = new Random();\n        this.n = n;\n        \n        map = new HashMap<>();\n        for(int b : blacklist){\n            map.put(b, -1);\n        }\n        len = n - map.size();\n\n        for(int b : blacklist){\n            if(b<len){\n                while(map.containsKey(n-1)){\n                    n--;\n                }\n\n                map.put(b, n-1);\n                n--;\n            }\n\n        }\n\n\n\n        \n\n\n        \n    }\n    \n    public int pick() {\n        int p = r.nextInt(len);\n        if(map.containsKey(p))\n            return map.get(p);\n\n        return p;\n        \n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(n, blacklist);\n * int param_1 = obj.pick();\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"random-pick-with-blacklist","has_notes":false,"flag_type":1}