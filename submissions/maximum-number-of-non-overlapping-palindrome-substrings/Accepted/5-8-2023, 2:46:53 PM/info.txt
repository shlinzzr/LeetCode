{"id":946465056,"question_id":2559,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683528413,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/946465056/","is_pending":"Not Pending","title":"Maximum Number of Non-overlapping Palindrome Substrings","memory":"40.6 MB","code":"class Solution {\n\n    public int maxPalindromes(String s, int k) {\n        int ans = 0;\n\n        for (int i = 0; i < s.length(); i++) {\n            for (int j = i; j < s.length(); j++) {\n                int len = (j - i) + 1;\n                if (len > k + 1) break;\n\n                if (len >= k && isPalindrome(s, i, j)) {\n                    ans++;\n                    i = j;\n                    break;\n                }\n            }\n        }\n        \n        return ans;\n    }\n\n    boolean isPalindrome(String s, int l, int r) {\n        while (l < r) {\n            if (s.charAt(l++) != s.charAt(r--)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-non-overlapping-palindrome-substrings","has_notes":false,"flag_type":1}