{"id":946472482,"question_id":2559,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683529360,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/946472482/","is_pending":"Not Pending","title":"Maximum Number of Non-overlapping Palindrome Substrings","memory":"N/A","code":"class Solution {\n    public int maxPalindromes(String s, int k) {\n        \n        int n = s.length();\n        \n        int cnt=0;\n        \n        for(int i=0; i<n; i++){\n            \n            for(int j=i+k; j<=n; j++){\n                    \n                \n//                 int len = j-i+1;\n                \n//                 if(len>k+1)break;\n                \n                if(isPal(s.substring(i, j))){\n                    cnt++;\n                    i=j;\n                    break;\n                }\n                    \n            }\n        }\n        \n        return cnt;\n        \n    }\n    \n    //  boolean isPal(String s, int l, int r) {\n    //     while (l < r) {\n    //         if (s.charAt(l++) != s.charAt(r--)) {\n    //             return false;\n    //         }\n    //     }\n    //     return true;\n    // }\n    \n    private boolean isPal(String s){\n         // System.out.println(s);\n        \n        int l=0, r=s.length()-1;\n        \n        while (l < r) {\n            if (s.charAt(l++) != s.charAt(r--)) {\n                return false;\n            }\n        }\n        return true;\n        \n        \n//         int len = s.length();\n        \n//         int st=0, ed=len-1;\n        \n//         while(st<ed){\n            \n//             if(s.charAt(st)==s.charAt(ed)){\n//                 st++;\n//                 ed--;\n//             }else{\n//                 return false;\n//             }\n            \n//         }\n//         System.out.println(s);\n//         return true;\n        \n        \n    }\n    \n    \n    \n    \n    \n//     class Solution {\n\n//     public int maxPalindromes(String s, int k) {\n//         int ans = 0;\n\n//         for (int i = 0; i < s.length(); i++) {\n//             for (int j = i; j < s.length(); j++) {\n//                 int len = (j - i) + 1;\n//                 if (len > k + 1) break;\n\n//                 if (len >= k && isPalindrome(s, i, j)) {\n//                     ans++;\n//                     i = j;\n//                     break;\n//                 }\n//             }\n//         }\n        \n//         return ans;\n//     }\n\n//     boolean isPalindrome(String s, int l, int r) {\n//         while (l < r) {\n//             if (s.charAt(l++) != s.charAt(r--)) {\n//                 return false;\n//             }\n//         }\n//         return true;\n//     }\n// }\n\n}","compare_result":"1110000110011010111000100110110100000100101110111101010","title_slug":"maximum-number-of-non-overlapping-palindrome-substrings","has_notes":false,"flag_type":1}