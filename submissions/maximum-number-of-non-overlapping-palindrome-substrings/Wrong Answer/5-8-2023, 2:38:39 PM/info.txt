{"id":946461309,"question_id":2559,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683527919,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/946461309/","is_pending":"Not Pending","title":"Maximum Number of Non-overlapping Palindrome Substrings","memory":"N/A","code":"class Solution {\n    public int maxPalindromes(String s, int k) {\n        \n        int len = s.length();\n        \n        int cnt=0;\n        \n        for(int i=0; i<len; i++){\n            \n            for(int j=i+k; j<=len; j++){\n                \n                if(isPal(s.substring(i, j))){\n                    cnt++;\n                    i=j-1;\n                    break;\n                }\n                    \n            }\n        }\n        \n        return cnt;\n        \n    }\n    \n    private boolean isPal(String s){\n         // System.out.println(s);\n        int len = s.length();\n        \n        int st=0, ed=len-1;\n        \n        while(st<=ed){\n            \n            if(s.charAt(st)==s.charAt(ed)){\n                st++;\n                ed--;\n            }else{\n                return false;\n            }\n            \n        }\n        System.out.println(s);\n        return true;\n        \n        \n    }\n}","compare_result":"1111111111111111111010111111110111011111111111111101010","title_slug":"maximum-number-of-non-overlapping-palindrome-substrings","has_notes":false,"flag_type":1}