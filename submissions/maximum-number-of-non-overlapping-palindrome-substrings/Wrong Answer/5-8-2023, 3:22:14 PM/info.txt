{"id":946481131,"question_id":2559,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683530534,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/946481131/","is_pending":"Not Pending","title":"Maximum Number of Non-overlapping Palindrome Substrings","memory":"N/A","code":"class Solution {\n    public int maxPalindromes(String s, int k) {\n        \n        int len = s.length();\n        \n        int cnt=0;\n        \n        for(int i=0; i<len; i++){\n            \n            for(int j=i; j<len; j++){\n                \n                int wLen=j-i+1;\n                if(wLen >k+1) break;\n                    \n                if( wLen>=k && isPal2(s,i,j)){\n                \n                // if( isPal(s.substring(i, j))){\n                    cnt++;\n                    i=j-1;\n                    break;\n                }\n                    \n            }\n        }\n        \n        return cnt;\n        \n    }\n    \n        boolean isPal2(String s, int l, int r) {\n         int or=r, ol=l;\n         \n        while (l < r) {\n            if (s.charAt(l++) != s.charAt(r--)) {\n                return false;\n            }\n        }\n         \n         System.out.println(s.substring(ol, or+1));\n         \n        return true;\n    }\n        \n    private boolean isPal(String s){\n         // System.out.println(s);\n        int len = s.length();\n        \n        int st=0, ed=len-1;\n        \n        while(st<ed){\n            \n            if(s.charAt(st)==s.charAt(ed)){\n                st++;\n                ed--;\n            }else{\n                return false;\n            }\n            \n        }\n        System.out.println(s);\n        return true;\n        \n        \n    }\n}","compare_result":"1101000000000000000000000000000000000000000000000000000","title_slug":"maximum-number-of-non-overlapping-palindrome-substrings","has_notes":false,"flag_type":1}