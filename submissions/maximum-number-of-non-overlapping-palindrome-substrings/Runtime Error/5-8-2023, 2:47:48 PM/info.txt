{"id":946465476,"question_id":2559,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683528468,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/946465476/","is_pending":"Not Pending","title":"Maximum Number of Non-overlapping Palindrome Substrings","memory":"N/A","code":"class Solution {\n    public int maxPalindromes(String s, int k) {\n        \n        int len = s.length();\n        \n        int cnt=0;\n        \n        for(int i=0; i<len; i++){\n            \n            for(int j=i; j<=len; j++){\n                \n                \n                int wLen = (j-i+1);\n                if(wLen >k+1) break;\n                    \n                if(wLen>=k && isPal(s, i, j)){\n                    cnt++;\n                    i=j;\n                    break;\n                }\n                    \n            }\n        }\n        \n        return cnt;\n        \n    }\n    \n     boolean isPal(String s, int l, int r) {\n        while (l < r) {\n            if (s.charAt(l++) != s.charAt(r--)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","compare_result":"1000000000000000000000000000000000000000000000000000000","title_slug":"maximum-number-of-non-overlapping-palindrome-substrings","has_notes":false,"flag_type":1}