{"id":1108707659,"question_id":892,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701240945,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1108707659/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"N/A","code":"class Solution {\n    public int shortestSubarray(int[] nums, int k) {\n        int len = nums.length;\n        int[] presum = new int[len+1];\n\n        for(int i=0; i<len; i++){\n            presum[i+1] = i==0? nums[0] : nums[i] + presum[i];\n        }\n\n        int min= Integer.MAX_VALUE;\n        int st = 0;\n        for(int ed=1; ed<=len; ed++){\n            if(presum[ed]-presum[st]<k){\n                continue;\n            }\n\n            min = Math.min(min, ed-st);\n\n            while(presum[ed]-presum[st]>=k){\n                st++;\n            }\n\n        }\n\n        return min==Integer.MAX_VALUE ? -1 : min;\n    }\n}","compare_result":"1111100101000101010110100001001001000110100000000000100000000000000100010100000001000000000010001","title_slug":"shortest-subarray-with-sum-at-least-k","has_notes":false,"flag_type":1}