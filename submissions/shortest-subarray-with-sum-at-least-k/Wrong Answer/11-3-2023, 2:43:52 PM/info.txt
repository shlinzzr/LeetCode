{"id":1090424041,"question_id":892,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1698993832,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1090424041/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"N/A","code":"class Solution {\n    public int shortestSubarray(int[] nums, int k) {\n        int len = nums.length;\n\n        int min = Integer.MAX_VALUE;\n\n        int cur = 0;\n        int st= 0;\n        for(int ed =0; ed<len; ed++){\n            cur += nums[ed];\n            System.out.println(cur);\n            while(st<len && (cur>=k || ed==len-1)){\n                if(cur>=k)\n                    min = Math.min(min, ed-st+1);\n\n                cur-= nums[st++];\n            }\n        }\n\n        return min == Integer.MAX_VALUE ? -1 : min;\n\n    }\n}","compare_result":"1111111111110111111111101101101101110111100000111011101011111010001101110110100011010000010010001","title_slug":"shortest-subarray-with-sum-at-least-k","has_notes":false,"flag_type":1}