{"id":892543767,"question_id":892,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675675186,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/892543767/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"N/A","code":"class Solution {\n    public int shortestSubarray(int[] nums, int k) {\n        int min = Integer.MAX_VALUE;\n        \n        int len = nums.length;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        \n        for(int i=1; i<len;i++){\n            nums[i]+=nums[i-1];\n        }\n        \n        for(int i=0; i<len; i++){\n            map.put(nums[i], i);\n        }\n        \n        \n        for(int i=0; i<len; i++){\n            \n            if(map.containsKey(nums[i]-k)){\n                min = Math.min(min, i-map.get(nums[i]-k));\n            }\n        }\n        \n        return min==Integer.MAX_VALUE ? -1 : min;\n        \n            \n    }\n}","compare_result":"1111000010111100010110010000100010000010000000000000000000000000000000000000000000000000000010001","title_slug":"shortest-subarray-with-sum-at-least-k","has_notes":false,"flag_type":1}