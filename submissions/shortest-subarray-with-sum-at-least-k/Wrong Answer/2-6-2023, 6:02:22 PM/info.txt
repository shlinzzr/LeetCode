{"id":892562458,"question_id":892,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675677742,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/892562458/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"N/A","code":"class Solution {\n    public int shortestSubarray(int[] nums, int k) {\n        \n        \n        //concept https://www.youtube.com/watch?v=HeFW6EPBGBg\n        \n        int len  = nums.length;\n        int min = len;\n        long[] presum = new long[len+1];\n        \n        for(int i=0; i<len ; i++){\n            presum[i+1] = presum[i] + nums[i];\n        }\n        \n        Deque<Integer> dq = new ArrayDeque<>();\n        for(int i=0; i<len; i++){\n            \n            while(!dq.isEmpty() && presum[i]-presum[dq.getFirst()]>=k ) // 已配對成功的拉掉\n                min = Math.min(min, i-dq.pollFirst());\n            \n            while(!dq.isEmpty() && presum[i]<=presum[dq.getLast()])  // 比curr 還大的也直接拉掉\n                dq.pollLast();\n            \n            dq.addLast(i);\n        }\n        \n        return min<=len? min : -1;\n        \n            \n    }\n}","compare_result":"1011111101011111111111111111111111111111111111011111111111111111111111111111111111111111111001111","title_slug":"shortest-subarray-with-sum-at-least-k","has_notes":false,"flag_type":1}