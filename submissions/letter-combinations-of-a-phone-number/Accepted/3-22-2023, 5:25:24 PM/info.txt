{"id":920028023,"question_id":17,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679477124,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/920028023/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"43.1 MB","code":"class Solution {\n    public List<String> letterCombinations(String digits) {\n        String[] arr = new String[]{\"\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"qprs\", \"tuv\", \"wxyz\"};\n        \n        List<String> res = new ArrayList<>();\n        res.add(\"\"); // for first iteration\n        \n        int len = digits.length();\n        \n        for(int i=0; i<len; i++){\n            char ch = digits.charAt(i);\n            res = helper(res, arr[ch-'1']);\n        }\n           \n        if(res.size()==1 && res.get(0)==\"\")\n            return new ArrayList<>();\n        \n        return res;\n        \n      \n    }\n    \n     private List<String> helper(List<String> res, String str){\n        \n        List<String> tmp = new ArrayList<>();\n        for(int i=0; i<str.length(); i++){   //'def'\n           \n            for(int j=0; j<res.size(); j++){ // 'a', 'b', 'c'\n                tmp.add(res.get(j)+str.charAt(i));\n            }\n            \n        }\n        res = new ArrayList<>(tmp);\n        return res;\n       \n        \n    }\n}","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}