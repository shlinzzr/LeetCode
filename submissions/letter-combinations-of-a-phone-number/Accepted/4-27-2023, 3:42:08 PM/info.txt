{"id":940480824,"question_id":17,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682581328,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/940480824/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"43 MB","code":"class Solution {\n    \n     String[] arr = new String[]{\"\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"qprs\", \"tuv\", \"wxyz\"};\n    \n    public List<String> letterCombinations(String digits) {\n        \n        List<String> res = new ArrayList<>();\n        List<String> curr= new ArrayList<>();\n        curr.add(\"\");\n        helper(digits, 0, curr, res);\n        res.remove(\"\");\n        return res;\n        \n    }\n    \n    private void helper(String digits, int d, List<String> curr, List<String> res){\n        \n        if(d==digits.length()){\n            \n            for(String c: curr)\n                res.add(c);\n            return;\n        }\n        \n        char num = digits.charAt(d);\n        String word = arr[num-'1'];\n        // System.out.println (num + \"  \" + word);\n        \n        List<String> tmp = new ArrayList<>();\n        for(char ch : word.toCharArray()){\n            \n            for(String c : curr){\n                tmp.add(c+ch);\n            }\n        }\n        \n        \n        // for(String t: tmp) {\n        //     System.out.println(t);\n        // }        \n        \n        helper(digits, d+1, tmp, res);\n        \n        \n        \n    }\n    \n}","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}