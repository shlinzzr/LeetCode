{"id":678845307,"question_id":88,"lang":"java","lang_name":"Java","time":"2 years, 2 months","timestamp":1649748670,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/678845307/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"42 MB","code":"class Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n        \n        \n        int n1=m-1, n2=n-1, fin=m+n-1;\n\n        while(n2>=0){\n            \n//             while( n1<0&&n2>=0){\n                \n//                 nums1[fin] = nums2[n2];\n//                 fin--;\n//                 n2--;\n//             }\n            \n//              while( n2<0&&n1>=0){\n                \n//                 nums1[fin] = nums1[n1];\n//                 fin--;\n//                 n1--;\n//             }\n            \n            \n//             if(fin<0)\n//                 break;\n//             System.out.println(\"fin=\"+fin);\n//             System.out.println(\"n1=\"+n1);\n//             System.out.println(\"n2=\"+n2);\n            \n            if(n1>=0 && nums1[n1]>nums2[n2]){\n                nums1[fin]=nums1[n1];\n                fin--;\n                n1--;\n            \n            }else {\n                nums1[fin]=nums2[n2];\n                fin--;\n                n2--;\n            }\n            \n        }\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array","has_notes":false,"flag_type":1}