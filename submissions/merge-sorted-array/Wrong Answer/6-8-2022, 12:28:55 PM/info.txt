{"id":717035733,"question_id":88,"lang":"java","lang_name":"Java","time":"2Â years","timestamp":1654662535,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/717035733/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"N/A","code":"class Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n        \n        int idx1=m-1, idx2=n-1, idxTotal = m+n-1;\n        \n        while(idx1>=0 && idx2>=0){\n            \n            if(nums1[idx1]> nums2[idx2]){\n                nums1[idxTotal] =nums1[idx1];\n                idx1--;\n            }else{\n                nums1[idxTotal] =nums2[idx2];\n                idx2--;\n            }\n            idxTotal--;\n            \n            \n            \n        }\n        while(idx2>0){\n            nums1[idx2]=nums2[idx2];\n            idx2--;\n        }\n        \n        \n        \n        \n//         int temp=Integer.MAX_VALUE, idx1=0, idx2=0;\n        \n//         while(idx2<n){\n            \n//             if(temp < nums[idx2]){\n                \n//                 if(nums1[idx1]<=temp){\n//                     idx1++;\n//                 }else{\n                    \n//                     temp = nums[idx1];\n//                     nums[idx1] = nums[idx2];\n//                     idx2++;\n//                 }\n                \n                \n//             }else{\n                \n//                 if(nums1[idx1]<=nums2[idx2]){\n//                     idx1++;\n//                 }else{\n//                     temp = nums[idx1];\n//                     nums[idx1] = nums[idx2];\n//                     idx2++;\n//                 }\n                \n//                 // idx1=2, idx2=1, temp = 3\n            \n                \n//             }\n            \n            \n//         }\n    }\n}","compare_result":"11010100101111011101111100101111011111111110111011101010101","title_slug":"merge-sorted-array","has_notes":false,"flag_type":1}