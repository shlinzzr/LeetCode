{"id":1092696203,"question_id":2157,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699264449,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1092696203/","is_pending":"Not Pending","title":"Smallest K-Length Subsequence With Occurrences of a Letter","memory":"N/A","code":"class Solution {\n    public String smallestSubsequence(String s, int k, char letter, int repetition) {\n        TreeMap<Character, Integer> map = new TreeMap<>();\n\n        // leet, len=4, k=3\n        \n        for(int i=0; i<=s.length()-k){\n            map.put(s.charAt(i), i);\n            \n        }\n\n        HashMap<Character, Integer> cntMap = new HashMap<>();\n        int idx = s.length()-1;\n        for(; idx>=s.length()-k+1; idx--){\n            cntMap.put(s.charAt(idx), cntMap.getOrDefault(s.charAt(idx),0)+1);\n        }\n\n        while(cntMap.get(letter)<repetition){\n            char ch = s.charAt(idx);\n            cntMap.put(ch, cntMap.getOrDefault(ch,0)+1);\n            idx++;\n            map.p\n            \n        }\n\n        \n    }\n}","compare_result":null,"title_slug":"smallest-k-length-subsequence-with-occurrences-of-a-letter","has_notes":false,"flag_type":1}