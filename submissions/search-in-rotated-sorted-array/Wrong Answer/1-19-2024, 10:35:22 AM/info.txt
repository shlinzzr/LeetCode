{"id":1150298603,"question_id":33,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705631722,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1150298603/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int len = nums.length;\n        \n        // find the smallest one\n        \n        int st=0, ed=len-1;\n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            \n            if(nums[mid]>nums[ed]){\n                st = mid+1;\n            }else{\n                ed = mid;\n            }\n        }\n        \n        int offset = st;\n        System.out.println(offset);\n        st=0; ed=len-1;\n        \n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            int tran = (mid+offset)%len;\n            if(nums[tran]==target){\n                return mid;\n            }else if(nums[tran]>target){\n                ed = mid-1;\n            }else \n                st = mid+1;\n        }\n        \n        return st+offset;\n        \n    }\n}","compare_result":"100100101000000010101001000000100000010000000110100001000010010100010000011101010001111000001000000000101000000100010001001001000010000000100010010000001000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}