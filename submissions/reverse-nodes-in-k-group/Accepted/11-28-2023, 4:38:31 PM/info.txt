{"id":1108026064,"question_id":25,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701160711,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1108026064/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"44.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        ListNode prev = new ListNode();\n        ListNode curr = head;\n        List<ListNode > list = new ArrayList<>();\n\n        int cnt = 0;\n\n       \n        while(curr!=null){\n\n            if(cnt++%k==0){\n                prev.next = null;\n                list.add(curr);\n            }\n            prev = curr;\n            curr = curr.next;\n        }\n\n\n        boolean rev = (cnt%k==0);\n        \n        ListNode dummy = new ListNode();\n        curr = dummy;\n        for(int i=0; i<list.size(); i++){\n            ListNode node = list.get(i);\n\n            if(i==list.size()-1 && !rev ){\n                curr.next=node;\n            }else{\n                curr.next = reverse(node);\n                curr = node;\n            }\n        }\n\n        return dummy.next;\n\n    }\n\n    private ListNode reverse( ListNode node){\n        ListNode prev = null;\n        ListNode curr = node;\n        while(curr!=null){\n            ListNode next = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr=next;\n        }\n\n        return prev;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}