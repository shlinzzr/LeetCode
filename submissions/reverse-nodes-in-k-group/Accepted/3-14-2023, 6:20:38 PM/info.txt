{"id":914934251,"question_id":25,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678789238,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/914934251/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"43 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        \n        \n        List<ListNode> list = new ArrayList<>();\n        \n        int cnt=0;\n        ListNode prev=null;\n        ListNode curr = head;\n        while(curr!=null){\n            \n            if(cnt%k==0){\n                if(prev!=null)\n                    prev.next=null;\n                list.add(curr);\n            }\n            \n            prev=curr;\n            curr=curr.next;\n            cnt++;\n        }\n        \n        \n        boolean revLast = cnt%k==0? true : false;\n        \n        curr = null;\n        \n        for(int i=list.size()-1; i>=0; i--){\n            \n            if(revLast==false && i==list.size()-1){\n                curr = list.get(i);\n                \n            }else{\n                curr = reverse(list.get(i), curr);\n            }\n        }\n        \n        \n        return curr;\n    }\n    \n    \n    private ListNode reverse(ListNode head, ListNode prev){\n        \n        ListNode curr = head;\n        while(curr!=null){\n            ListNode next = curr.next;\n            curr.next = prev;\n            prev=curr;\n            curr=next;\n        }        \n        \n        return prev;\n        \n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}