{"id":1082832142,"question_id":25,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1698135154,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1082832142/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"43 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        \n        if(head==null)\n            return head;\n        \n        List<ListNode> list = new ArrayList<>();\n        \n        ListNode curr = head;\n        ListNode currHead = head;\n        list.add(currHead);\n        \n        boolean needRev = false;\n        \n        int cnt =0;\n        while(curr!=null){\n            cnt++;\n            \n            if(cnt%k==0){\n                needRev=true;\n                currHead = curr.next;\n                \n                curr.next = null;\n                curr = currHead;\n                if(currHead!=null)\n                    list.add(currHead);\n            }else{\n                needRev=false;\n                curr=curr.next;\n            }\n                \n                \n        }\n        \n        \n        \n        \n        \n        ListNode prev = null;\n        for(int i=list.size()-1; i>=0; i--){\n            \n            ListNode node = list.get(i);         \n            if(i==list.size()-1){\n                \n                if(needRev){\n                    prev = reverse(node, prev);\n                }else{\n                    prev = node;\n                }\n            }else{\n                prev = reverse(node, prev);\n            }\n        }\n        \n        return prev;\n        \n    }\n    \n    \n    private ListNode reverse(ListNode node, ListNode prev){\n        \n        ListNode curr = node;\n        while(curr!=null){\n            \n            ListNode next = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = next;\n        }\n        \n        return prev;\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}