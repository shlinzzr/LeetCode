{"id":1275830949,"question_id":25,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1717379868,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1275830949/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"44.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n\n        int len = 0;\n        ListNode curr = head;\n        while(curr!=null){\n            len++;\n            curr = curr.next;\n        }\n        k%=len;\n        if(k==0) return reverse(head, null);\n\n        List<ListNode> list = new ArrayList<>();\n\n\n        boolean lastRev = false;\n        ListNode prev = new ListNode();\n        curr= head;\n        while(curr!=null){\n\n            list.add(curr);\n            int cnt = 0;\n            while(curr!=null && cnt++<k){\n                prev=curr;\n                curr=curr.next;\n            }\n\n            prev.next = null;\n            if(cnt==k) lastRev = true;\n            else lastRev = false;\n        }\n\n\n        ListNode dummy = new ListNode();\n        for(int i=list.size()-1; i>=0; i--){\n            ListNode node = list.get(i);\n\n            if(i==list.size()-1){\n                if(lastRev){\n                    dummy = reverse(node, null);\n                }else{\n                    dummy = node;\n                }\n            }else{\n                dummy = reverse(node, dummy);\n            }\n\n            // print(dummy);\n        }\n\n        return dummy;\n    }\n    \n    // private void print(ListNode node){\n    //     while(node!=null){\n    //         System.out.print(node.val+ \",\");\n    //         node=node.next;\n    //     }\n    //     System.out.println();\n    // }\n    private ListNode reverse(ListNode node, ListNode prev){\n\n        while(node!=null){\n            ListNode next = node.next;\n            node.next = prev;\n            prev = node;\n            node = next;\n        }\n\n        return prev;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}