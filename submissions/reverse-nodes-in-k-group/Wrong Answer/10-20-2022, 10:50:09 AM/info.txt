{"id":826327666,"question_id":25,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666234209,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/826327666/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        \n     \n        List<ListNode> list = new ArrayList<>();\n        ListNode curr = head;\n        \n        while(curr!=null){\n            \n            list.add(curr);\n            for(int i=0; i<k-1&&curr.next!=null; i++){\n                curr = curr.next;\n            }    \n            \n            ListNode tmp = curr.next;\n            curr.next = null;\n            curr = tmp;\n        }\n        \n        for(int i=0; i<list.size()-1 || i==0; i++){\n            list.set(i, reverseList(list.get(i)));\n        }\n        \n        for(int i=0; i<list.size()-1; i++){\n            \n            curr = list.get(i);\n            \n            while(curr.next!=null){\n                curr=curr.next;\n            }\n            curr.next = list.get(i+1);\n        }\n        \n        \n        return list.get(0);\n    \n    }\n    \n    \n    \n    private ListNode reverseList(ListNode head){\n        \n        ListNode prev = null;\n        while(head!=null){\n            ListNode next = head.next;\n            head.next = prev;\n            prev = head;\n            head = next;\n        }\n        \n        return prev;\n            \n        \n    }\n}","compare_result":"11111111110111110011111111110110111111111111111111011111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}