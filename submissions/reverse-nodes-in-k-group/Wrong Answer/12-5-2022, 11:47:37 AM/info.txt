{"id":854799731,"question_id":25,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670212057,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/854799731/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        \n        List<ListNode> list = new ArrayList<>();\n        \n        ListNode curr = head;\n        ListNode prev= null;\n        while(curr!=null){\n            list.add(curr);\n            for(int i=0; i<k && curr!=null; i++){\n                prev = curr;\n                curr=curr.next;\n            }\n            \n            if(prev!=null)\n                prev.next = null;\n        }\n        \n        ListNode tail = null;\n        for(int i=list.size()-1; i>=0; i--){\n            ListNode n = list.get(i);\n            tail = reverse(n, tail);\n        }\n        \n        return tail;\n        \n    }\n    \n    \n    private ListNode reverse(ListNode head, ListNode tail){\n        \n        \n        ListNode curr = head;\n        ListNode prev = tail;\n        while(curr!=null){\n            \n            ListNode next = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr=next;\n        }\n        \n        \n        return prev;\n    }\n}","compare_result":"10111111111111111101111100111111111111110101001001100000000000","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}