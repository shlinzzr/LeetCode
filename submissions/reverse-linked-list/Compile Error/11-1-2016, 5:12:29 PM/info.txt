{"id":80908777,"question_id":206,"lang":"c","lang_name":"C","time":"7 years, 7 months","timestamp":1477991549,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/80908777/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n\r\n\r\n//iterative\r\nstruct ListNode* reverseList(struct ListNode* head) {\r\n  \r\n    struct ListNode *pre = NULL;\r\n    struct ListNode *node = head;\r\n\r\n    while(node!=NULL){\r\n        struct ListNode *next = node -> next;\r\n        node -> next = pre;\r\n        pre = node;\r\n        node = next;\r\n    }\r\n    \r\n    return pre;\r\n    \r\n} \r\n*/\r\n\r\nstruct ListNode* reverseList(struct ListNode* head) {\r\n     if(node==NULL) return pre;\r\n   \r\n     struct ListNode *pre = NULL;\r\n     struct ListNode *node = head;\r\n     struct ListNode *next = node -> next;\r\n     node -> next = pre;\r\n     pre = node;\r\n     node = next;\r\n     \r\n     reverseList(node);\r\n  \r\n    \r\n} \r\n\r\n","compare_result":null,"title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}