{"id":80905716,"question_id":206,"lang":"c","lang_name":"C","time":"7Â years, 7Â months","timestamp":1477988675,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/80905716/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n\r\nstruct ListNode* reverseList(struct ListNode* head) {\r\n    \r\n    struct ListNode *pre = NULL;\r\n    struct ListNode *node = head;\r\n\r\n    while(node){\r\n        struct ListNode *next = node -> next;\r\n        node -> next = pre;\r\n        pre = node;\r\n        node = next;\r\n    }\r\n    \r\n    return node;\r\n    \r\n} */\r\nstruct ListNode* reverseList(struct ListNode* head) {\r\n\tif(NULL==head) return head;\r\n\r\n\tstruct ListNode *p=head;\r\n\tp=head->next;\r\n\thead->next=NULL;\r\n\twhile(NULL!=p){\r\n\t\tstruct ListNode *ptmp=p->next;\r\n\t\tp->next=head;\r\n\t\thead=p;\r\n\t\tp=ptmp;\r\n\t}\r\n\treturn head;\r\n}","compare_result":null,"title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}