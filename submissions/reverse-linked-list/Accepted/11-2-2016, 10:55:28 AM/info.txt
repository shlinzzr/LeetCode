{"id":81004966,"question_id":206,"lang":"c","lang_name":"C","time":"7Â years, 7Â months","timestamp":1478055328,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/81004966/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n\r\n\r\n//iterative\r\nstruct ListNode* reverseList(struct ListNode* head) {\r\n  \r\n    struct ListNode *pre = NULL;\r\n    struct ListNode *node = head;\r\n\r\n    while(node!=NULL){\r\n        struct ListNode *next = node -> next;\r\n        node -> next = pre;\r\n        pre = node;\r\n        node = next;\r\n    }\r\n    \r\n    return pre;\r\n    \r\n} \r\n*/\r\n\r\nstruct ListNode* reverseList(struct ListNode* head) {\r\n    if(head==NULL || head->next==NULL ) return head;\r\n    \r\n    \r\n    struct ListNode *next = head -> next;\r\n    head -> next = NULL;\r\n    \r\n    struct ListNode *newhead =  reverseList(next);\r\n    \r\n    next -> next = head;\r\n    \r\n    return newhead;\r\n  \r\n     \r\n    \r\n} \r\n\r\n","compare_result":null,"title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}