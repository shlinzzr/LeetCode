{"id":1176552806,"question_id":222,"lang":"java","lang_name":"Java","time":"3 months, 4 weeks","timestamp":1708051543,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1176552806/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"47.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max=0;\n    public int countNodes(TreeNode root) {\n        if(root==null) return 0;\n        helper(root, 0);\n        return max+1;\n    }\n\n    private void helper(TreeNode root, int idx){\n        if(root==null) return;\n\n        max = Math.max(max, idx);\n        helper(root.left, 2*idx+1);\n        helper(root.right, 2*idx+2);\n\n    }\n\n    \n}","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false,"flag_type":1}