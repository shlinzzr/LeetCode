{"id":993337576,"question_id":222,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1689238785,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/993337576/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int countNodes(TreeNode root) {\n        \n        if(root==null)\n            return 0;\n        \n        return helper(root, 1);\n        \n    }\n    \n    private int helper(TreeNode root, int idx){\n        \n        if(root.right!=null){\n            return helper(root.right, 2*idx+1);\n        }\n        \n        if(root.left!=null){\n            return helper(root.left, 2*idx);\n        }\n\n        return idx;\n        \n    }\n    \n}\n","compare_result":"111110010010000000","title_slug":"count-complete-tree-nodes","has_notes":false,"flag_type":1}