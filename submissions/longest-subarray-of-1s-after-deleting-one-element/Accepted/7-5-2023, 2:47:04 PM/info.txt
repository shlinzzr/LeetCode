{"id":986713612,"question_id":1586,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688539624,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/986713612/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"53.2 MB","code":"class Solution {\n    public int longestSubarray(int[] nums) {\n        int len = nums.length;\n        \n        int max = 0;\n        \n        int st= 0;\n        int zero = 0;\n        \n        boolean ez = false;\n        \n        \n        for(int ed= 0; ed<len;ed++){\n            \n            if(nums[ed]==0){\n                zero++;\n                ez=true;\n            }\n                \n            \n            while(zero>1){\n                \n                if(nums[st]==0)\n                    zero--;\n                st++;\n            }\n            \n            \n            if(zero==0){\n                max = Math.max(max, ed-st+1);\n            }else{\n                max = Math.max(max, ed-st);    \n            }\n            \n            \n        }\n        \n        return ez? max : max-1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}