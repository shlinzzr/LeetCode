{"id":952592524,"question_id":1586,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684398620,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/952592524/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"51 MB","code":"class Solution {\n    public int longestSubarray(int[] nums) {\n        int len = nums.length;\n        \n        int max = 0;\n        \n        int zero=0;\n        int cur=0;\n        int st=0;\n        for(int ed=0; ed<len; ed++){\n            if(nums[ed]==1)\n                cur++;\n            else\n                zero++;\n            \n          \n            \n            while(zero>1){\n                \n                if(nums[st]==1)\n                    cur--;\n                else\n                    zero--;\n                st++;\n            }\n            \n            max = Math.max(max, zero==1?ed-st+1-zero : ed-st);\n            \n        }\n        \n        return max;\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}