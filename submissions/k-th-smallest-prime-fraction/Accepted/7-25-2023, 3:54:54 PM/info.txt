{"id":1003358061,"question_id":802,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690271694,"status":10,"status_display":"Accepted","runtime":"304 ms","url":"/submissions/detail/1003358061/","is_pending":"Not Pending","title":"K-th Smallest Prime Fraction","memory":"42.2 MB","code":"class Solution {\n    public int[] kthSmallestPrimeFraction(int[] A, int K) {\n        PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) ->\n                A[a[0]] * A[b[1]] - A[a[1]] * A[b[0]]);\n\n        for (int i = 1; i < A.length; ++i)\n            pq.add(new int[]{0, i});\n\n        while (--K > 0) {\n            int[] frac = pq.poll();\n            if (frac[0]++ < frac[1])\n                pq.offer(frac);\n        }\n\n        int[] ans = pq.poll();\n        return new int[]{A[ans[0]], A[ans[1]]};\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"k-th-smallest-prime-fraction","has_notes":false,"flag_type":1}