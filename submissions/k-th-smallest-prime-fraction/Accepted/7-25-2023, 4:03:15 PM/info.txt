{"id":1003363245,"question_id":802,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690272195,"status":10,"status_display":"Accepted","runtime":"308 ms","url":"/submissions/detail/1003363245/","is_pending":"Not Pending","title":"K-th Smallest Prime Fraction","memory":"41.6 MB","code":"class Solution {\n    public int[] kthSmallestPrimeFraction(int[] A, int K) {\n        PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) ->\n                A[a[0]] * A[b[1]] - A[a[1]] * A[b[0]]);\n        \n        // a[0]/a[1] <-> b[0]/b[1] 比大小  ==>  a[0]*b[1] <-> a[1]*b[0]\n\n        for (int i = 1; i < A.length; ++i)\n            pq.add(new int[]{0, i});\n        \n        // (0, 1) (0,2), (0,3).....\n\n        while (--K > 0) {\n            int[] frac = pq.poll();\n            if (frac[0]++ < frac[1])\n                pq.offer(frac);  // (1,2), (1,3), (2,3).....\n        }\n\n        int[] ans = pq.poll();\n        return new int[]{A[ans[0]], A[ans[1]]};\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"k-th-smallest-prime-fraction","has_notes":false,"flag_type":1}