{"id":1149632589,"question_id":162,"lang":"java","lang_name":"Java","time":"4Â months, 3Â weeks","timestamp":1705570913,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1149632589/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int len = nums.length;\n\n        // find init edge case\n        if(len==1) return nums[0];\n        if(nums[0]>nums[1]) return nums[0];\n        if(nums[len-1]>nums[len-2]) return nums[len-1];\n        \n        int st = 1 , ed=len-2;\n        \n        // is all about the mid\n\n        while(st<ed){\n            int mid = st+(ed-st)/2;\n\n            if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]) \n                return mid;\n\n            if(nums[mid-1]< nums[mid]){\n                st = mid+1;\n            }else if(nums[mid-1]>nums[mid]){\n                ed = mid;\n            }\n            \n            // if(nums[mid]>nums[st] && nums[mid]>nums[ed]){// st ^mid^ ed\n            //     if(nums[st]<nums[ed]){\n            //         st = mid;\n            //     }else \n            //         ed = mid;\n            // }else if(nums[st]<nums[mid] && nums[mid]<nums[ed]){ // st mid ed (go up)\n            //     st = mid;\n            // }else if(nums[st]>nums[mid] && nums[mid]>nums[ed]){ // st mid ed (go down)\n            //     ed = mid;\n            // }else{\n            //     st++;\n            //     ed--;\n            // }\n        }\n        \n        return st;\n        \n    }\n}","compare_result":"110000001000010100000111001111001111101111100010111111111111111100","title_slug":"find-peak-element","has_notes":false,"flag_type":1}