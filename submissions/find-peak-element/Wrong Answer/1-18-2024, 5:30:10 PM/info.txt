{"id":1149625110,"question_id":162,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705570210,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1149625110/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int len = nums.length;\n        \n        int st = 0 , ed=len-1;\n        \n        while(st<ed){\n            int mid = ed-(ed-st)/2;\n            \n            if(nums[mid]>nums[st] && nums[mid]>nums[ed]){// st ^mid^ ed\n                if(nums[st]<nums[ed]){\n                    st = mid;\n                }else \n                    ed = mid;\n            }else if(nums[st]<nums[mid] && nums[mid]<nums[ed]){ // st mid ed (go up)\n                st = mid;\n            }else if(nums[st]>nums[mid] && nums[mid]>nums[ed]){ // st mid ed (go down)\n                ed = mid;\n            }else{\n                st++;\n                ed--;\n            }\n        }\n        \n        return st;\n        \n    }\n}","compare_result":"101101011000101001100110011000000010010000010000000111001000000101","title_slug":"find-peak-element","has_notes":false,"flag_type":1}