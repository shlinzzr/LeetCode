{"id":1149634802,"question_id":162,"lang":"java","lang_name":"Java","time":"4Â months, 3Â weeks","timestamp":1705571122,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1149634802/","is_pending":"Not Pending","title":"Find Peak Element","memory":"42.1 MB","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int len = nums.length;\n\n        // find init edge case\n        if(len==1) return 0;\n        if(nums[0]>nums[1]) return 0;\n        if(nums[len-1]>nums[len-2]) return len-1;\n        \n        int st = 1 , ed=len-2;\n        \n        // is all about the mid\n\n        while(st<ed){\n            int mid = st+(ed-st)/2;\n\n            if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]) \n                return mid;\n\n            if(nums[mid-1]< nums[mid]){\n                st = mid+1;\n            }else if(nums[mid-1]>nums[mid]){\n                ed = mid;\n            }\n\n        }\n        \n        return st;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}