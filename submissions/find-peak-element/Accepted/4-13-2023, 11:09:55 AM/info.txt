{"id":932832916,"question_id":162,"lang":"java","lang_name":"Java","time":"1Â year, 2Â months","timestamp":1681355395,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/932832916/","is_pending":"Not Pending","title":"Find Peak Element","memory":"42.2 MB","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int len = nums.length;\n        \n\t\tif(len == 1) return 0; // single element\n        \n\t\t// check if 0th/n-1th index is the peak element\n        if(nums[0] > nums[1]) return 0;\n        if(nums[len-1] > nums[len-2]) return len-1;\n\t\t\n\t\t// search in the remaining array\n        int st = 1;\n        int ed = len-2;\n        \n        while(st<=ed) {\n            int mid = st+ (ed-st)/2;\n            if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]) \n                return mid;\n            \n            else if(nums[mid-1] > nums[mid]) \n                ed = mid - 1;\n            else if(nums[mid+1] > nums[mid]) \n                st = mid + 1;\n        }\n        return -1; // dummy return statement\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}