{"id":1238906973,"question_id":162,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713777868,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1238906973/","is_pending":"Not Pending","title":"Find Peak Element","memory":"42.3 MB","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int len = nums.length;\n        \n        if(len==1) return 0;\n        \n        if(len==2){\n            if(nums[0]>nums[1]) return 0;\n            else  return 1;\n        }\n        \n        int[] arr = new int[len+2];\n        System.arraycopy(nums, 0, arr, 1, len);\n        arr[0] = Integer.MIN_VALUE;\n        arr[arr.length-1]= Integer.MIN_VALUE;\n        \n        int st=1, ed=arr.length-2;\n        \n        while(st<ed){\n            int m = st+(ed-st)/2; \n            \n            if(arr[m-1] < arr[m] && arr[m]>arr[m+1]){\n                return m-1;\n            }else if(arr[m]< arr[m+1]){\n                st = m+1; \n                \n            }else { \n                ed = m-1; \n            }\n        }\n        \n        return st-1;\n    }\n    \n    \n    //[1,2,1,3,5,6,4]\n         // st  m   ed\n    \n    //[6,5,4,3,2,3,2]\n    // [min, 1,2,3, min]\n            // st m ed\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}