{"id":1212221348,"question_id":3376,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711252323,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1212221348/","is_pending":"Not Pending","title":"Longest Common Suffix Queries","memory":"N/A","code":"class Solution {\n    \n    TrieNode root;\n    \n    class TrieNode{\n        \n        TrieNode[] children;\n        boolean isWord;\n        List<WCON> list;\n        \n        public TrieNode(){\n            children = new TrieNode[26];\n            list = new ArrayList<>();\n        }\n    }\n    \n    class WCON{\n        String s;\n        int idx;\n        \n        public WCON(String s, int idx) {\n            this.s= s;\n            this.idx=idx;\n        }\n        \n    }\n    \n    public int[] stringIndices(String[] wc, String[] wq) {\n       \n        \n        int len = wc.length;\n        \n         root = new TrieNode();\n        for(int i =0; i<len; i++){\n            \n            String w = wc[i];\n            WCON obj = new WCON(w, i);\n            \n            TrieNode cur = root;\n            \n            root.list.add(obj);\n            for(int j=w.length()-1; j>=0; j--){\n                char ch = w.charAt(j);\n                if(cur.children[ch-'a']==null)\n                    cur.children[ch-'a'] = new TrieNode();\n                cur = cur.children[ch-'a'];\n                cur.list.add(obj);\n                \n                Collections.sort(cur.list, (a,b)->a.s.length()!=b.s.length() ? a.s.length()-b.s.length() : a.idx-b.idx);\n            }\n            \n            cur.isWord = true;\n        }\n        \n         Collections.sort(root.list, (a,b)->a.s.length()!=b.s.length() ? a.s.length()-b.s.length() : a.idx-b.idx);\n        \n        int[] res = new int[len];\n        \n        \n        for(int i=0; i<len ;i++){\n            \n            String w = wq[i];\n            \n            boolean found = true;\n            TrieNode cur = root;\n            List<WCON> list = new ArrayList<>();\n            for(int j=w.length()-1; j>=0; j--){\n                \n                char ch = w.charAt(j);\n                if(cur.children[ch-'a']==null){\n                    break;\n                }\n                \n                cur = cur.children[ch-'a'];\n                list = cur.list;\n            }\n            \n                res[i] = cur.list.get(0).idx;\n            \n        }\n                                  \n                                  return res;\n        \n        \n        \n        \n        \n        \n        \n        \n    }\n}","compare_resulttitle_slug":"longest-common-suffix-queries","has_notes":false,"flag_type":1}