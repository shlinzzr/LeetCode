{"id":1246999990,"question_id":169,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714615754,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1246999990/","is_pending":"Not Pending","title":"Majority Element","memory":"53.2 MB","code":"class Solution {\n    \n    //sol 1 : brute force : Time(n^2) Space(1)\n    //sol 2 : HashMap : Time(n)     Space(n)\n    //sol 3 : sorting : Time(nlgn), Space(1)\n    //sol 4 : bit     : Time(nlogC) Space(1)\n    //sol 5 : randomization ???\n    //sol 6 : divide & conquer ??? \n    \n    //sol 7 : Boyer-Moore Time(n), Space(1)\n    public int majorityElement(int[] nums) {\n        int len = nums.length;\n        int major = nums[0];\n        int cnt = 1;\n\n        for(int i=1;i<len; i++){\n            if(nums[i]==major){\n                cnt++;\n            }else{\n                cnt--;\n            }\n\n            if(cnt==-1){\n                cnt = 1;\n                major = nums[i];\n            }\n        }\n\n        return major;\n      \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"majority-element","has_notes":false,"flag_type":1}