{"id":1021797556,"question_id":467,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692082143,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1021797556/","is_pending":"Not Pending","title":"Unique Substrings in Wraparound String","memory":"43.4 MB","code":"class Solution {\n    public int findSubstringInWraproundString(String p) {\n        \n        // count[i] is the maximum unique substring end with ith letter.\n        // 0 - 'a', 1 - 'b', ..., 25 - 'z'.\n        int[] count = new int[26];\n        \n        // store longest contiguous substring ends at current position.\n        int maxLengthCur = 0; \n\n        for (int i = 0; i < p.length(); i++) {\n            if (i > 0 && (p.charAt(i) - p.charAt(i - 1) == 1 || (p.charAt(i - 1) - p.charAt(i) == 25))) {\n                maxLengthCur++;\n            }\n            else {\n                maxLengthCur = 1;\n            }\n            \n            int index = p.charAt(i) - 'a';\n            count[index] = Math.max(count[index], maxLengthCur);\n        }\n        \n        // Sum to get result\n        int sum = 0;\n        for (int i = 0; i < 26; i++) {\n            sum += count[i];\n        }\n        return sum;\n        \n        // wa\n//         int[] arr = new int[26];\n        \n//         LinkedHashSet<String> set = new LinkedHashSet<>();\n//         String curr = \"\";\n        \n        \n//         for(char ch='a'; ch<='z'; ch++){\n//             for(int i=0; i<26;i++){\n//                 curr += (char)((ch-'a'+i)%26+'a');\n//                 set.add(curr);\n//             }\n//             curr = \"\";\n//         }\n        \n        \n//         int res =0;\n        \n//         Set<String> seen = new HashSet<>();\n        \n//         for(int i=0; i<s.length(); i++){\n//             char ch = s.charAt(i);\n//             arr[ch-'a']++;\n            \n            \n//             for(int j=i+1; j<=s.length(); j++){\n//                 String sub = s.substring(i, j);\n//                 if(set.contains(sub) && !seen.contains(sub)){\n//                     res++;\n//                     seen.add(sub);\n//                 }\n                    \n//             }\n            \n//         }\n//         return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-substrings-in-wraparound-string","has_notes":false,"flag_type":1}