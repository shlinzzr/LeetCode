{"id":1155244454,"question_id":324,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706073760,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1155244454/","is_pending":"Not Pending","title":"Wiggle Sort II","memory":"N/A","code":"class Solution {\n    public void wiggleSort(int[] nums) {\n        \n        // sort & partitiom : O(nlgn)/ \n        int len = nums.length;\n\n        int n= len;\n        int m = (n + 1) >> 1;\n        int[] copy = Arrays.copyOf(nums, n);\n\n        quickselect(nums, 0, len-1, len/2);\n        int median = nums[len/2];\n\n        \n\n        // for(int i=1; i<len/2; i+=2){\n        //     swap(nums, i, len-i-len/2);\n        // }\n       \n        \n        for (int i = 0, j = 0, k = n - 1; j <= k;) {\n            if (copy[j] < median) {\n                swap(copy, i++, j++);\n            } else if (copy[j] > median) {\n                swap(copy, j, k--);\n            } else {\n                j++;\n            }\n        }\n            \n        for (int i = m - 1, j = 0; i >= 0; i--, j += 2) nums[j] = copy[i];\n        for (int i = n - 1, j = 1; i >= m; i--, j += 2) nums[j] = copy[i];\n    }\n\n    private void quickselect(int[] nums, int st, int ed, int k){\n\n        if(st>=ed) return;\n\n        // select rightmost as pivot & return pivotIdx where rightmost value shoule be\n        int pivotIdx = partition_select(nums, st, ed-1, ed);\n        swap(nums, pivotIdx, ed);\n\n        if(k==pivotIdx) return;\n        if(k<pivotIdx)\n            quickselect(nums, st, pivotIdx, k);\n        else \n            quickselect(nums, pivotIdx+1, ed, k);\n    }\n\n    private int partition_select(int[] nums, int st, int ed, int p){\n        while(st<=ed){\n            if(nums[st]>nums[p]){\n                swap(nums, st, ed);\n                ed--;\n            }else \n                st++;\n        }\n\n        return st;\n    }\n\n    private void swap(int[] nums, int a, int b){\n        int t = nums[a];\n        nums[a] = nums[b];\n        nums[b] = t;\n    }\n}","compare_result":"1100000000000000000000000000000000000000000000000000","title_slug":"wiggle-sort-ii","has_notes":false,"flag_type":1}