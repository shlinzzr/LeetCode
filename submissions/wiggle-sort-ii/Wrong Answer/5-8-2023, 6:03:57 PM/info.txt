{"id":946548553,"question_id":324,"lang":"java","lang_name":"Java","time":"1Â year, 1Â month","timestamp":1683540237,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/946548553/","is_pending":"Not Pending","title":"Wiggle Sort II","memory":"N/A","code":"class Solution {\n    public void wiggleSort(int[] nums) {\n        \n        int len = nums.length;\n        \n        if(len==2){\n            \n            if(nums[0]>=nums[1]){\n                int tmp = nums[0];\n                nums[0] = nums[1];\n                nums[1] = tmp;\n            }\n                \n            return ;\n        }\n        \n        \n        \n        Arrays.sort(nums);\n        \n        int idx =2;\n        \n        for(int i=1; i<len; i++){\n            \n            while(idx<len-1 && nums[idx]<=nums[i])\n                idx++;\n            \n            int tmp = nums[i];\n            nums[i] = nums[idx];\n            nums[idx]=tmp;\n            i++;\n        }\n    }\n    \n//     1 1 1 4 5 6 \n        \n//     1 4 1 1 5 6\n//       ^   ^\n}","compare_result":"1111111101100101111110000101100110010110000011001000","title_slug":"wiggle-sort-ii","has_notes":false,"flag_type":1}