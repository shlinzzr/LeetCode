{"id":966321284,"question_id":1102,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686196814,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/966321284/","is_pending":"Not Pending","title":"Check If a Number Is Majority Element in a Sorted Array","memory":"40.4 MB","code":"class Solution {\n    public boolean isMajorityElement(int[] nums, int target) {\n        int firstIndex = fisrt(nums, target);\n        int plusNBy2Index = firstIndex + nums.length/2;\n        \n        if (plusNBy2Index<nums.length \n            && nums[plusNBy2Index] == target) {\n            return true;\n        }\n        \n        return false;\n    }\n    \n//     private int firstOccur(int[] nums, int target) {\n//         int low = 0;\n//         int high = nums.length;\n//         while (low < high) {\n//             int mid = low + (high-low)/2;\n//             if (nums[mid] < target) low = mid + 1;\n//             else if (nums[mid] >= target) high = mid;\n//         }\n//         return low;\n//     }\n    \n    \n    private int fisrt(int[] nums, int target){\n        int st =0, ed =nums.length-1;\n        \n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            \n            if(nums[mid]<target){\n                st=mid+1;\n            }else{\n                ed=mid;\n            }\n        }\n        \n        return st;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"check-if-a-number-is-majority-element-in-a-sorted-array","has_notes":false,"flag_type":1}