{"id":1014273583,"question_id":2920,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1691372618,"status":10,"status_display":"Accepted","runtime":"123 ms","url":"/submissions/detail/1014273583/","is_pending":"Not Pending","title":"Minimum Seconds to Equalize a Circular Array","memory":"89.6 MB","code":"class Solution {\n    public int minimumSeconds(List<Integer> nums) {\n        int siz = nums.size();\n        \n        HashMap<Integer, List<Integer>>  map= new HashMap<>();\n        \n        for(int i=0; i<siz; i++){\n            map.putIfAbsent(nums.get(i), new ArrayList<>());\n            map.get(nums.get(i)).add(i);\n        }\n        \n        \n        for(int k : map.keySet()){\n            map.get(k).add( siz+map.get(k).get(0)  );\n        }\n        \n        \n        \n        \n        \n        int min = Integer.MAX_VALUE;\n        for(int k : map.keySet()){\n            \n            List<Integer> list = map.get(k);\n            \n            // System.out.println(k + \" \" + list);\n            int max = 0;\n            for(int i=0; i<list.size()-1; i++){\n                max = Math.max(max, list.get(i+1)-list.get(i)-1);\n            }\n            \n            min = Math.min(min, max);\n        }\n        \n        if(min%2==0)\n            return min/2;\n        \n        return min/2+1;\n        \n        \n        \n        \n    \n    }\n}","compare_resulttitle_slug":"minimum-seconds-to-equalize-a-circular-array","has_notes":false,"flag_type":1}