{"id":753755191,"question_id":200,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658497521,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/753755191/","is_pending":"Not Pending","title":"Number of Islands","memory":"56.8 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        \n       \n        \n        int num = 0;\n        \n        for(int y=0; y<grid.length;y++){\n            for(int x=0; x<grid[0].length; x++){\n                \n                if(grid[y][x]=='1'){\n                    DFS(grid, x,y);\n                     num++;\n                }\n               \n                \n            }\n        }\n        \n        return num;\n        \n        \n    }\n    \n    private void DFS(char[][] grid, int x, int y){\n        \n         // System.out.println(x + \" DFS\" + y );\n        \n        int[] axis = new int[]{x,y};\n        Stack<int[]> st = new Stack<>();\n        st.push(axis);\n        \n        while(!st.isEmpty()){\n            \n            int[] cur = st.pop();\n             x = cur[0];\n             y = cur[1];\n            // System.out.println(x + \" \" + y );\n            \n            grid[y][x] = '2';\n            \n            if(x-1>=0 && grid[y][x-1]=='1')\n                st.push(new int[]{x-1, y});\n            \n            if(y-1>=0 && grid[y-1][x]=='1')\n                st.push(new int[]{x, y-1});\n            \n            if(x+1<grid[0].length && grid[y][x+1]=='1')\n                st.push(new int[]{x+1, y});\n            \n            if(y+1<grid.length && grid[y+1][x]=='1')\n                st.push(new int[]{x, y+1});\n            \n            \n        }\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}