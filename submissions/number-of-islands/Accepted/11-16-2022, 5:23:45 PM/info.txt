{"id":844465502,"question_id":200,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668590625,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/844465502/","is_pending":"Not Pending","title":"Number of Islands","memory":"56.9 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        \n        int cnt=0;\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(grid[i][j]=='1'){\n                    dfs(grid, new int[]{i,j});\n                    cnt++;\n                }\n                \n            }\n        }\n        \n        return cnt;\n    }\n    \n    int[][] dirs = new int[][]{{0,1},{1,0}, {0,-1}, {-1,0}};\n    private void dfs(char[][] grid, int[] p){\n        \n         int h = grid.length;\n        int w = grid[0].length;\n        \n        for(int[] d : dirs){\n            int r = p[0]+d[0];\n            int c = p[1]+d[1];\n            \n            if(r<0 || c<0 || r>=h || c>=w || grid[r][c]!='1')\n                continue;\n            \n            grid[r][c] ='0';\n            dfs(grid, new int[]{r,c});\n        }\n        \n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}