{"id":939373687,"question_id":200,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682406952,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/939373687/","is_pending":"Not Pending","title":"Number of Islands","memory":"51.5 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n\n        boolean[][] seen = new boolean[h][w];\n        int cnt=0;\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(grid[i][j]=='1' && seen[i][j]==false){\n                    seen[i][j]=true;\n                    bfs(grid, seen, i , j);\n                    cnt++;\n                }\n                    \n            }\n        }\n        \n        return cnt;\n    }\n    \n    \n    int[][]dirs = new int[][]{{0,1},{0,-1}, {1,0}, {-1,0}};    \n    \n    private void bfs(char[][] grid, boolean[][] seen, int i, int j){\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        for(int[] d : dirs){\n            int r = i + d[0];\n            int c = j + d[1];\n\n            if(r<0 || c<0 || r>=h || c>=w || seen[r][c]==true || grid[r][c]=='0')\n                continue;\n\n            seen[r][c] =true;\n            bfs(grid, seen, r, c);\n        }\n            \n            \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}