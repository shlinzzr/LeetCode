{"id":916045438,"question_id":102,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1678940634,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/916045438/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(res, root, 0);\n        return res;\n    }\n    \n    \n    private void helper( List<List<Integer>>  res, TreeNode root, int lv){\n        \n        if(root==null)\n            return;\n        \n        if(res.size()<lv+1){\n            res.add(new ArrayList<>());\n        }\n        \n        res.get(lv).add(root.val);\n        \n        helper(res, root.left, lv+1);\n        helper(res, root.right, lv+1);\n        \n        \n    }\n    \n}","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}