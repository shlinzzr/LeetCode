{"id":903378782,"question_id":1085,"lang":"java","lang_name":"Java","time":"1Â year, 3Â months","timestamp":1677136927,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/903378782/","is_pending":"Not Pending","title":"The Earliest Moment When Everyone Become Friends","memory":"48.2 MB","code":"class Solution {\n    \n    int[] parent;\n    public int earliestAcq(int[][] logs, int n) {\n        Arrays.sort(logs, (a,b)-> a[0]!=b[0]? a[0]-b[0] : a[1]!=b[1] ? a[1]-b[1] : a[0]-b[0]);\n        \n        \n        parent = new int[n];\n        int cnt = n;\n        int max = 0;\n        for(int i=0; i<n; i++) parent[i] = i;\n        \n        \n        for(int[] log : logs){\n            \n            \n            // System.out.println(\"log=\"  + log[0] +\" \" + log[1] + \" \" + log[2]);\n            int time = log[0];\n            \n            int root = find(log[1]);\n            int node = find(log[2]);\n            \n            if(root!=node){\n                \n                parent[node]=root;\n                max = Math.max(max, log[0]);\n                cnt--;\n                \n                // System.out.println(root + \", \"  + node + \", \" + cnt+ \", \" + max);\n                \n                if(cnt==1)\n                    return max;\n                \n            }\n            \n            \n        }\n        \n        return -1;\n        \n        \n        \n    }\n    \n    \n    private int find(int x){\n        if(parent[x]==x)\n            return x;\n        parent[x] = find(parent[x]);\n        return parent[x];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-earliest-moment-when-everyone-become-friends","has_notes":false,"flag_type":1}