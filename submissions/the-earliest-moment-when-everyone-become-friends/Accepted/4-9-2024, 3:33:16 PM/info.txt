{"id":1227418620,"question_id":1085,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712647996,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1227418620/","is_pending":"Not Pending","title":"The Earliest Moment When Everyone Become Friends","memory":"44.1 MB","code":"class Solution {\n    int[] parent;\n    public int earliestAcq(int[][] logs, int n) {\n        parent = new int[n];\n        int cnt= 1 ;\n\n        for(int i=0; i<n; i++){\n            parent[i] = i;\n        }\n            \n\n        Arrays.sort(logs, (a,b)-> a[0]-b[0]);\n        int res = -1;\n        for(int[] log : logs){\n            int time = log[0];\n            int a = log[1];\n            int b = log[2];\n\n            if(union(a, b)){\n                cnt++;\n                res = time;\n            }\n        }\n        System.out.println(cnt);\n        System.out.println(res);\n        return cnt==n ? res : -1;\n\n\n\n\n    }\n\n    private boolean union(int a, int b){\n        a = find(a);\n        b = find(b);\n\n        if(a==b) return false;\n        if(a<b){\n            parent[b] = a;\n        }else{\n            parent[a] = b;\n        }\n\n        return true;\n        \n    }\n\n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-earliest-moment-when-everyone-become-friends","has_notes":false,"flag_type":1}