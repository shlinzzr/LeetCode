{"id":1117693718,"question_id":399,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702350562,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1117693718/","is_pending":"Not Pending","title":"Evaluate Division","memory":"41.2 MB","code":"class Solution {\n\n    // graph https://www.youtube.com/watch?v=u9LE_7apB38\n\n    public double[] calcEquation(List<List<String>> equations, double[] values, List<List<String>> queries) {\n        HashMap<String, Map<String, Double>> g = new HashMap<>();\n        buildGraph(equations, values, g);\n\n        double[] res = new double[queries.size()];\n        Arrays.fill(res, -1);\n\n        for(int i=0; i<queries.size(); i++){\n            List<String> q = queries.get(i);\n            String a = q.get(0);\n            String b = q.get(1);\n\n            HashSet<String> seen = new HashSet<>();\n            seen.add(a);\n            dfs(g, a, b, seen, 1.0, i, res);\n        }\n\n        \n\n        return res;\n\n    }\n\n\n    private void dfs( HashMap<String, Map<String, Double>> g, String a, String b, HashSet<String> seen, double cur, int i, double[] res){\n        if(!g.containsKey(a)  || !g.containsKey(b))\n            return;\n\n        if(g.get(a).containsKey(b)){\n            res[i] =  g.get(a).get(b)*cur;\n            return;\n        }\n\n        for(String next : g.get(a).keySet()){\n            if(!seen.contains(next)){\n                seen.add(next);\n                dfs(g, next, b, seen, g.get(a).get(next)*cur, i, res);\n                seen.remove(next);\n            }\n        }\n    }\n\n\n\n    private void buildGraph(List<List<String>> equations, double[] values,  HashMap<String, Map<String, Double>> g ){\n\n        for(int i=0; i<equations.size(); i++){\n            \n            List<String> eq = equations.get(i);\n\n            String a = eq.get(0);\n            String b = eq.get(1);\n\n            g.putIfAbsent(a, new HashMap<>());\n            g.putIfAbsent(b, new HashMap<>());\n            g.get(a).put(a, 1.0);\n            g.get(b).put(b, 1.0);\n\n            g.get(a).put(b, values[i]);\n            g.get(b).put(a, 1.0/values[i]);\n        }\n    }\n\n\n\n\n}","compare_result":"1111111111111111111111111111","title_slug":"evaluate-division","has_notes":false,"flag_type":1}