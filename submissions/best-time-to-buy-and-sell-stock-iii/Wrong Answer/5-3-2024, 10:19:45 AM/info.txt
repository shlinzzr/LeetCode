{"id":1247871498,"question_id":123,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714702785,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1247871498/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock III","memory":"N/A","code":"class Solution {\n    public int maxProfit(int[] prices) {\n        int len = prices.length;\n        int[][] dp = new int[len+1][5];\n\n        dp[1][1] = -prices[0];\n        dp[1][2] = -2*prices[0];\n        \n        for(int i=2; i<=len; i++){\n            dp[i][4] = Math.max(dp[i-1][4], Math.max(dp[i-1][2]+prices[i-1]+prices[i-1], dp[i-1][3]+prices[i-1]));\n            dp[i][3] = Math.max(dp[i-1][3], Math.max(dp[i-1][1]+prices[i-1], dp[i-1][2]+prices[i-1]));\n\n            dp[i][2] = Math.max(dp[i-1][2], Math.max(dp[i-1][1]-prices[i-1], dp[i-1][0]-prices[i-1]-prices[i-1]));\n            dp[i][1] = Math.max(dp[i-1][1], Math.max(dp[i-1][0]-prices[i-1], dp[i-1][2]+prices[i-1]));\n            // dp[i][0] = Math.max(dp[i-1][0], Math.max(dp[i-1][2]+prices[i-1]+prices[i-1], dp[i-1][1]+prices[i-1]));\n        }\n\n        return Math.max(dp[len][4], dp[len][3]);\n    }\n}","compare_result":"0001000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"best-time-to-buy-and-sell-stock-iii","has_notes":false,"flag_type":1}