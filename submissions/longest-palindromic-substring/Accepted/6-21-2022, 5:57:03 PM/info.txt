{"id":727490720,"question_id":5,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1655805423,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/727490720/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"42.5 MB","code":"// class Solution {\n//     public String longestPalindrome(String s) {\n\n//         String ans = \"\";\n        \n//         for(int i=s.length(); i>=0; i--){\n//             for(int j=0; j<i; j++){\n\n//                 if(i-j < ans.length())\n//                     break;\n                \n//                 if(isPalindrome(s.substring(j, i))){\n//                     ans = s.substring(j,i);\n//                 }\n//             }\n//         }\n        \n//         return ans;\n        \n//     }\n    \n//     private boolean isPalindrome(String s){\n//         int st=0, ed=s.length()-1;\n//         while(st<ed){\n//             if(s.charAt(st++)!=s.charAt(ed--))\n//                 return false;\n//         }\n//         return true;\n//     }\n// }\n\n\nclass Solution {\n public String longestPalindrome(String s) {\n        String max = \"\";\n        for (int i = 0; i < s.length(); i++) {\n            String s1 = extend(s, i, i), s2 = extend(s, i, i + 1);\n            if (s1.length() > max.length()) max = s1;\n            if (s2.length() > max.length()) max = s2;\n        }\n        return max;\n    }\n    \n    private String extend(String s, int i, int j) {\n        for (; 0 <= i && j < s.length(); i--, j++) {\n            if (s.charAt(i) != s.charAt(j)) break;\n        }\n        return s.substring(i + 1, j);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}