{"id":1041799776,"question_id":1192,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1693974438,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1041799776/","is_pending":"Not Pending","title":"Divide Chocolate","memory":"44.2 MB","code":"class Solution {\n    public int maximizeSweetness(int[] sw, int k) {\n        int len = sw.length;\n        \n        int total= 0;\n        for(int s : sw){\n            total+=s;\n        }\n        int st =0, ed=total;\n        while(st<ed){\n            \n            int mid = ed-(ed-st)/2;\n            \n            if(isOk(sw, mid, k+1)){\n                st=mid;\n            }else{\n                ed=mid-1;\n            }\n        }\n        \n        return st;\n        \n        \n    }\n    \n    private boolean isOk(int[] sw, int mid, int k){\n        int cnt =0 ;\n        \n        int sum =0;\n        for(int i=0; i<sw.length; i++){\n            sum+=sw[i];\n            if(sum>=mid){\n                cnt++;\n                sum=0;\n            }\n                \n        }\n        \n        return cnt>=k;\n        \n    }\n    \n}","compare_result":"11111111111111111111111","title_slug":"divide-chocolate","has_notes":false,"flag_type":1}