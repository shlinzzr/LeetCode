{"id":929358685,"question_id":142,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680835707,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/929358685/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"42.5 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        ListNode fast=head, slow = head;\n        \n        while(fast!=null && fast.next!=null){\n            fast=fast.next.next;\n            slow=slow.next;\n            \n            if(slow==fast){\n                \n                slow = head;\n                while(slow!=fast){\n                    slow=slow.next;\n                    fast=fast.next;\n                }\n                \n                return slow;\n            }\n        }\n        \n        return null;\n    }\n}","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}