{"id":1107221295,"question_id":142,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701063910,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1107221295/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"43.4 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        ListNode fast = head;\n        ListNode slow = head;\n        while(slow!=null && fast!=null && fast.next!=null){\n            slow = slow.next;\n            fast = fast.next.next;\n\n            if(slow==fast){\n                slow = head;\n\n                while(slow!=fast){\n                    slow=slow.next;\n                    fast=fast.next;\n                }\n\n                return slow;\n            }\n        }\n\n        return null;\n    \n    }\n}","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}