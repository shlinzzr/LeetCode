{"id":841114871,"question_id":142,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668137159,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/841114871/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"45.3 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        ListNode fast = head, slow = head;\n        while(fast!=null&& fast.next!=null){\n            fast=fast.next.next;\n            slow=slow.next;\n            \n            \n            if(fast==slow){\n                ListNode slow2 = head;\n                while(slow2!=slow){\n                    slow2=slow2.next;\n                    slow=slow.next;\n                }\n                return slow2;\n            }\n            \n        }\n        \n        return null;\n        \n    }\n}","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}