{"id":780851358,"question_id":142,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661223376,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/780851358/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"45.8 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        \n        ListNode fast=head, slow=head;\n        \n        while(fast!=null && fast.next!=null){\n            \n            fast=fast.next.next;\n            slow = slow.next;\n            if(fast==slow){\n                ListNode slow2 = head;\n                while(slow!=slow2){\n                    slow=slow.next;\n                    slow2 = slow2.next;\n                }\n                \n                return slow2;\n                \n            }\n            \n            \n            \n            \n        }\n        \n        return null;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}