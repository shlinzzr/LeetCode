{"id":1119303205,"question_id":1799,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702527081,"status":13,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1119303205/","is_pending":"Not Pending","title":"Minimum Incompatibility","memory":"N/A","code":"class Solution {\n\n    int min = Integer.MAX_VALUE;\n    public int minimumIncompatibility(int[] nums, int k) {\n\n        Arrays.sort(nums);\n        int len = nums.length;\n        TreeSet<Integer>[] arr = new TreeSet[k];\n        for(int i=0; i<k; i++){\n            arr[i] = new TreeSet<>();\n        }\n\n        if(len%k!=0) return -1;\n\n        int siz = len/k;\n\n        helper(nums, 0, arr, siz);\n\n        return min==Integer.MAX_VALUE? -1 : min;\n    }\n\n    private boolean  helper(int[] nums, int st, TreeSet<Integer>[] arr, int siz){\n\n        if(st==nums.length){\n            int sum = 0 ;\n            for(int i=0; i<arr.length; i++){\n                     System.out.println(\"st=\"+st +  \" set[\" + i + \"]=\"+arr[i]);\n                // if(arr[i].size()>0)\n                    sum+=arr[i].last()-arr[i].first();\n            }\n            min = Math.min(min, sum);\n            return true;\n        }\n        \n        // [6,3,8,1,3,1,2,2]\n        //  1 1 2 2 3 3 6 8 \n        // greedy : error\n        // 1 2 1 2 3 6 3 8\n\n            boolean find =false;\n            for(Set<Integer> set : arr){\n                if(!set.contains(nums[st]) && set.size()<siz){\n                    find = true;\n                    set.add(nums[st]);\n                    // if( helper(nums, i+1, arr, siz) )\n                    //     return true;\n                    helper(nums, st+1, arr, siz) ;\n                    set.remove(nums[st]);\n                }\n            }\n\n\n        return false;\n\n        //  int sum = 0 ;\n        //     for(int i=0; i<arr.length; i++){\n        //         System.out.println(i + \" set=\"+arr[i]);\n        //         if(arr[i].size()>0)\n        //         sum+=arr[i].last()-arr[i].first();\n        //     }\n        //     min = Math.min(min, sum);\n\n    }\n}","compare_result":"1111111111100000000000000000000000000000000000000000000000","title_slug":"minimum-incompatibility","has_notes":false,"flag_type":1}