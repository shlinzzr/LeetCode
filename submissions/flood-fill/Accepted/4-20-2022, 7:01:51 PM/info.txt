{"id":684077076,"question_id":733,"lang":"java","lang_name":"Java","time":"2 years, 1 month","timestamp":1650452511,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/684077076/","is_pending":"Not Pending","title":"Flood Fill","memory":"48.7 MB","code":"class Solution {\n    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {\n        \n        // BFS\n        int oldColor = -1;\n        \n        int height = image.length;\n        int width = image[0].length;\n        \n        Queue<int[]> queue = new LinkedList<int[]>();\n        queue.offer(new int[]{sr, sc});\n        \n        List<int[]> visited = new ArrayList<>(); \n        \n        while(!queue.isEmpty()){\n         \n            System.out.println( \"\\n start while \");\n            \n            int[] curr = queue.poll();\n            System.out.println( Arrays.toString(curr));\n            \n            for(int [] ii : visited){\n                System.out.println( \"visited=\"+ Arrays.toString(ii));\n            }\n                \n            \n            \n            int y = curr[0];\n            int x = curr[1];\n            if(!isInList(visited, curr)){\n                oldColor = image[y][x];\n                image[y][x] = newColor;\n                visited.add(curr);\n            }\n                \n            \n            List<int[]> adjs = new ArrayList<>();\n            \n            \n            if(y-1>=0)\n                adjs.add (new int[] {y-1, x}); // up\n            \n            if(y+1<height)\n                adjs.add (new int[] {y+1, x}); // down\n            \n            if(x-1>=0)\n                adjs.add (new int[] {y, x-1}); // left\n            \n            if(x+1<width)\n                adjs.add (new int[] {y, x+1}); // right\n            \n            for(int[] adj : adjs){\n                \n                System.out.println( \"adj=\"+Arrays.toString(adj));\n            \n                if(!isInList(visited, adj))\n                    if( image[adj[0]][adj[1]] == oldColor)\n                        queue.add(adj);\n            }\n        }\n        return image;\n        \n    }\n    public static boolean isInList(\n    final List<int[]> list, final int[] candidate){\n\n    for(final int[] item : list){\n        if(Arrays.equals(item, candidate)){\n            return true;\n        }\n    }\n    return false;\n}\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"flag_type":1}