{"id":946524050,"question_id":733,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683536774,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/946524050/","is_pending":"Not Pending","title":"Flood Fill","memory":"43.4 MB","code":"class Solution {\n    public int[][] floodFill(int[][] image, int sr, int sc, int color) {\n        int h = image.length;\n        int w = image[0].length;\n        \n        \n        if(image[sr][sc]==color)\n            return image;\n        \n        \n        int org = image[sr][sc];\n        \n        Queue<int[]> q = new LinkedList<>();\n        q.offer(new int[]{sr, sc});\n        image[sr][sc]=color;\n        \n        int[][] dirs = new int[][]{{0,1}, {1,0}, {0,-1}, {-1, 0}};\n        \n        while(!q.isEmpty()){\n            int[] p = q.poll();\n            \n            for(int[] d: dirs){\n                \n                int r = d[0]+p[0];\n                int c = d[1]+p[1];\n                \n                if(r<0 || c<0 || r>=h || c>=w || image[r][c]!=org)\n                    continue;\n                \n                image[r][c]=color;\n                \n                q.offer(new int[]{r,c});\n            }\n        }\n        \n        \n        \n        \n        \n        return image;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"flag_type":1}