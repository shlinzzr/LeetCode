{"id":901397530,"question_id":1729,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676876263,"status":10,"status_display":"Accepted","runtime":"445 ms","url":"/submissions/detail/901397530/","is_pending":"Not Pending","title":"Binary Search Tree Iterator II","memory":"76.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass BSTIterator {\n\n     TreeNode root;\n    List<Integer> list;\n    int size;\n    int curr;\n    \n    Iterator<Integer> iter;\n    \n    \n    public BSTIterator(TreeNode root) {\n        this.root=root;\n        list = new ArrayList<>();\n        buildList(root);\n        size = list.size();\n        curr=-1;\n    }\n    \n    \n    private void buildList(TreeNode root){\n        \n        if(root==null)\n            return;\n        \n        buildList(root.left);\n        list.add(root.val);\n        buildList(root.right);\n    }\n    \n    public boolean hasNext() {\n        System.out.println(curr<size-1);\n        return curr<size-1;\n    }\n    \n    public int next() {\n        curr++;    \n        int val = list.get(curr);\n        \n        System.out.println(val);\n        return val;\n    }\n    \n    public boolean hasPrev() {\n         System.out.println(curr>0 && curr<size);\n        return curr>0 && curr<size; \n    }\n    \n    public int prev() {\n        curr--;\n        int val = list.get(curr);\n        System.out.println(val);\n        return val;\n    }\n}\n\n/**\n * Your BSTIterator object will be instantiated and called as such:\n * BSTIterator obj = new BSTIterator(root);\n * boolean param_1 = obj.hasNext();\n * int param_2 = obj.next();\n * boolean param_3 = obj.hasPrev();\n * int param_4 = obj.prev();\n */","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search-tree-iterator-ii","has_notes":false,"flag_type":1}