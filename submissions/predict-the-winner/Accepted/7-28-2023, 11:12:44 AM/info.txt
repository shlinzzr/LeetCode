{"id":1005808503,"question_id":486,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690513964,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1005808503/","is_pending":"Not Pending","title":"Predict the Winner","memory":"40.4 MB","code":"class Solution {\n    public boolean PredictTheWinner(int[] nums) {\n        \n        // recur https://www.youtube.com/watch?v=g5wLHFTodm0\n        int len = nums.length;\n        Integer[][] mem = new Integer[len][len];\n        return recur(nums , 0, len-1, mem)>=0;\n        \n        \n        \n        \n        // dp\n        // int n = nums.length;\n        // int[][] dp = new int[n][n];\n        // for (int i = 0; i < n; i++) { dp[i][i] = nums[i]; }\n        // for (int len = 1; len < n; len++) {\n        //     for (int i = 0; i < n - len; i++) {\n        //         int j = i + len;\n        //         dp[i][j] = Math.max(nums[i] - dp[i + 1][j], nums[j] - dp[i][j - 1]);\n        //     }\n        // }\n        // return dp[0][n - 1] >= 0;\n    }\n    \n    \n    private int recur(int[] nums, int st, int ed, Integer[][] mem){\n        \n        if(mem[st][ed]!=null){\n            return mem[st][ed];\n        }\n        \n        if(st==ed){\n            mem[st][ed] = nums[st];\n        } else{\n            mem[st][ed] =  Math.max(nums[st]-recur(nums, st+1, ed, mem)\n                                   ,nums[ed]-recur(nums, st, ed-1, mem));    \n        }\n        \n        return mem[st][ed];\n            \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"predict-the-winner","has_notes":false,"flag_type":1}