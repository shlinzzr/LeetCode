{"id":936831989,"question_id":2646,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1681983993,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936831989/","is_pending":"Not Pending","title":"Kth Largest Sum in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public long kthLargestLevelSum(TreeNode root, int k) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(res, root,k, 0);\n        int[] arr = new int[res.size()];\n        for(int i=0; i<res.size(); i++){\n            \n            List<Integer> list = res.get(i);\n            int val = 0;\n            for(int n : list){\n                val+=n;\n            }\n            \n            arr[i] = val;\n        }\n        \n        Arrays.sort(arr);\n        return arr[arr.length-k];\n        \n        \n        \n    }\n    \n    private void helper(List<List<Integer>> res, TreeNode root, int k, int lv){\n        \n        if(res.size()<lv+1){\n            res.add(new ArrayList<>());\n        }\n        if(root==null)\n            return ;\n        \n        res.get(lv).add(root.val);\n        \n        helper(res, root.left, k, lv+1);\n        helper(res, root.right, k, lv+1);\n    }\n        \n      \n}\n","compare_result":"111110000000000000000000000000000000000000000","title_slug":"kth-largest-sum-in-a-binary-tree","has_notes":false,"flag_type":1}