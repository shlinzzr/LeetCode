{"id":833832992,"question_id":417,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667198296,"status":10,"status_display":"Accepted","runtime":"1051 ms","url":"/submissions/detail/833832992/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"232.7 MB","code":"class Solution {\n    \n    int[][] dirs = new int[][]{{1,0}, {0,1}, {-1,0}, {0,-1}};\n    boolean[][] pac;\n    boolean[][] atl;\n    \n    public List<List<Integer>> pacificAtlantic(int[][] heights) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        int h = heights.length;\n        int w = heights[0].length;\n        \n        pac = new boolean[h][w];\n        atl = new boolean[h][w];\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(i==0 || j==0)\n                    pac[i][j]=true;\n                \n                if(i==h-1 || j==w-1)\n                    atl[i][j]=true;\n            }\n         }\n        \n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                    \n                if(pac[i][j] && atl[i][j])\n                    continue;\n                else \n                    dfs(new int[]{i,j}, h, w, heights);\n            }\n        }\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(pac[i][j] && atl[i][j]){\n                    \n                    List<Integer> list = new ArrayList<>();\n                    list.add(i);\n                    list.add(j);\n                    res.add(list);\n                }\n            }\n        }\n        \n        return res;\n        \n        \n       \n        \n       \n        \n    }\n    \n    private void dfs(int[] st, int h, int w, int[][] heights){\n        \n        boolean[][] seen = new boolean[h][w];\n        seen[st[0]][st[1]]=true;\n        \n        Queue<int[]> q = new LinkedList<>();\n        q.offer(new int[]{st[0], st[1]});\n        \n        while(!q.isEmpty()){\n            \n            int[] p = q.poll();\n            \n            int i=p[0];\n            int j=p[1];\n            \n            for(int[] d : dirs){\n                int r = p[0]+d[0];\n                int c = p[1]+d[1];\n                \n                if(r>=0 && r<h && c>=0 && c<w && seen[r][c]==false && heights[p[0]][p[1]]>=heights[r][c]){\n                    \n                    if(pac[r][c]==true)\n                        pac[st[0]][st[1]]=true;\n\n                    if(atl[r][c]==true)\n                        atl[st[0]][st[1]]=true;\n\n                    if(pac[r][c]&&atl[r][c])\n                        continue;\n                    \n                    q.offer(new int[]{r,c});\n                    seen[r][c]=true;\n                }\n            }\n        }\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pacific-atlantic-water-flow","has_notes":false,"flag_type":1}