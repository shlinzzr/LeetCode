{"id":873142697,"question_id":417,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673078504,"status":10,"status_display":"Accepted","runtime":"390 ms","url":"/submissions/detail/873142697/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"44.3 MB","code":"class Solution {\n    \n    Boolean[][] pac;\n    Boolean[][] atl;\n    \n    public List<List<Integer>> pacificAtlantic(int[][] heights) {\n        List<List<Integer>> res = new ArrayList<>();\n        int h = heights.length;\n        int w = heights[0].length;\n        \n        pac = new Boolean[h][w];\n        atl = new Boolean[h][w];\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(i==0 || j==0)\n                    pac[i][j]=true;\n                \n                if(i==h-1 || j==w-1)\n                    atl[i][j]=true;\n            }\n         }\n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(pac[i][j]!=null && atl[i][j]!=null)\n                    continue;\n                else{\n                    dfs(heights, new int[]{i,j});\n                }\n            }\n        }\n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(atl[i][j]!=null && pac[i][j]!=null && atl[i][j]==true && pac[i][j]==true){\n                    res.add(Arrays.asList(i, j));\n                }\n            }\n        }\n        \n        \n        return res;\n        \n        \n    }\n    \n    int[][] dirs = new int[][]{{1,0}, {0,1}, {-1,0}, {0,-1}};\n    \n    private void dfs(int[][] heights, int[] org){\n        int h = heights.length;\n        int w = heights[0].length;\n        \n        boolean[][] seen = new boolean[h][w];\n        Queue<int[]> q = new LinkedList<>();\n        q.add(org);\n        seen[org[0]][org[1]]=true;\n        \n        while(!q.isEmpty()){\n            \n            int[] p=q.poll();\n            \n            for(int[]d: dirs){\n                int r = p[0]+d[0];\n                int c = p[1]+d[1];\n\n                if(r>=0 && r<h && c>=0 && c<w && seen[r][c]==false && heights[p[0]][p[1]]>=heights[r][c]){\n\n                    if(pac[r][c]!=null && pac[r][c]==true)\n                        pac[org[0]][org[1]]=true;\n\n                    if(atl[r][c]!=null && atl[r][c]==true)\n                        atl[org[0]][org[1]]=true;\n\n                    \n                    if(pac[r][c]!=null && atl[r][c]!=null){\n                        seen[r][c]=true;\n                        continue;\n                    }\n                    \n                    q.offer(new int[]{r,c});\n                    seen[r][c]=true;\n                    \n                    \n\n\n                }\n            }\n            \n           \n        }\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pacific-atlantic-water-flow","has_notes":false,"flag_type":1}