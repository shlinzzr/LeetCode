{"id":938782693,"question_id":1463,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682315220,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/938782693/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"44 MB","code":"class Solution {\n    public int[] kWeakestRows(int[][] mat, int k) {\n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int[] res = new int[k];\n        \n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b)-> (a[1]==b[1])? a[0]-b[0] : a[1]-b[1]\n        );\n        \n        for(int i=0; i<h; i++){\n            \n            int total=0;\n            \n            for(int j=0; j<w; j++){\n                \n                if(mat[i][j]==0)\n                    break;\n                \n                total+=mat[i][j];\n            }\n            pq.offer(new int[]{i, total});\n        }\n        \n                \n        for(int i=0; i<k;i++){\n            res[i] = pq.poll()[0];\n        }\n            \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"the-k-weakest-rows-in-a-matrix","has_notes":false,"flag_type":1}