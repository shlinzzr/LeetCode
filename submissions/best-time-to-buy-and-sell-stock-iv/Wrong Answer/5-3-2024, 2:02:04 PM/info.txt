{"id":1247999657,"question_id":188,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714716124,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1247999657/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock IV","memory":"N/A","code":"class Solution {\n    public int maxProfit(int k, int[] prices) {\n        int len = prices.length;\n\n        int[][] dp = new int[len+1][2*k+1];\n        for(int i=0; i<=len; i++){\n            Arrays.fill(dp[i], Integer.MIN_VALUE/2);\n        }\n        dp[0][0] = 0;\n        // dp[0][1] = 0;\n        dp[1][0] = 0;\n        dp[1][1] = -prices[0];\n\n        for(int i=2;i<=len; i++){\n\n            for(int a=1; a<=2*k; a++){\n                \n                if(a%2==1)\n                    dp[i][a] = Math.max(dp[i-1][a], dp[i-1][a-1]-prices[i-1]);\n                else\n                    dp[i][a] = Math.max(dp[i-1][a], dp[i-1][a-1]+prices[i-1]);\n            }\n        }\n\n        int max= 0 ;\n\n        for(int a=1;a<=2*k; a++){\n            System.out.println(a + \" \" + dp[len][a]);\n            max = Math.max(max, dp[len][a]);\n        }\n\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111110111110101111111111111111111111111111111111111111111111111111111001111111111111111111111001111000011111111111111001111000011000001111110101101110111111101111011101000111011","title_slug":"best-time-to-buy-and-sell-stock-iv","has_notes":false,"flag_type":1}