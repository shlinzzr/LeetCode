{"id":1088015214,"question_id":161,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698720602,"status":10,"status_display":"Accepted","runtime":"754 ms","url":"/submissions/detail/1088015214/","is_pending":"Not Pending","title":"One Edit Distance","memory":"264.4 MB","code":"class Solution {\n    public boolean isOneEditDistance(String s, String t) {\n         int len1 = s.length();\n         int len2 = t.length();\n\n         int[][] dp = new int[len1+1][len2+1];\n\n         for(int i=0; i<=len1; i++){\n             dp[i][0] = i;\n         }\n\n         for(int j=0; j<=len2; j++){\n             dp[0][j] = j;\n         }\n\n\n         for(int i=1; i<=len1; i++){\n             for(int j=1; j<=len2; j++){\n\n                if(s.charAt(i-1)==t.charAt(j-1)){\n                    dp[i][j] = dp[i-1][j-1];\n                }else{\n                    int up = dp[i-1][j];\n                    int left = dp[i][j-1];\n                    int upleft = dp[i-1][j-1];\n\n                    dp[i][j] = 1 + Math.min(up, Math.min(left, upleft));\n                }\n             }\n         }\n\n         return dp[len1][len2]==1;\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"one-edit-distance","has_notes":false,"flag_type":1}