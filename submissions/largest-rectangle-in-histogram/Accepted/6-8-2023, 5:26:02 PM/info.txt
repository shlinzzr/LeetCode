{"id":966511166,"question_id":84,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686216362,"status":10,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/966511166/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"56.5 MB","code":"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        \n        \n        //max = (nextSmaller - prevSmaller)* heights[i];\n        \n        int len = heights.length;\n        \n        int[] nextSmaller = new int[len];\n        int[] prevSmaller = new int[len];\n        Arrays.fill(nextSmaller, len);\n         Arrays.fill(prevSmaller, -1);\n        Stack<Integer> st = new Stack<>();\n        for(int i=0; i<len; i++){\n            int h = heights[i];\n            while(!st.isEmpty() && heights[st.peek()]>h){\n                nextSmaller[st.pop()] = i;\n            }\n            \n            st.push(i);\n        }\n        \n        \n        st = new Stack<>();\n        for(int i=len-1; i>=0; i--){\n            int h = heights[i];\n            while(!st.isEmpty() && heights[st.peek()]>h){\n                prevSmaller[st.pop()]= i;\n            }\n            st.push(i);\n        }\n        \n        int max = 0;\n        for(int i=0; i<len; i++){\n            max = Math.max(max, (nextSmaller[i]-prevSmaller[i]-1)*heights[i]);\n        }\n        \n        return max;\n        \n        \n        \n            \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}