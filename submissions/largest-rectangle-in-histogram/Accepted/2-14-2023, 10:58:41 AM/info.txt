{"id":897576394,"question_id":84,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1676343521,"status":10,"status_display":"Accepted","runtime":"218 ms","url":"/submissions/detail/897576394/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"57.1 MB","code":"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        int len = heights.length;\n     \n        int[] nextSmaller = new int[len];\n        Arrays.fill(nextSmaller, len); // 預設值沒有下一個最小 idx賦予值n\n        \n        int[] prevSmaller = new int[len];\n        Arrays.fill(prevSmaller, -1);  // 預設值沒有上一個最小 idx賦予值-1\n        \n        Stack<Integer> st = new Stack<>();\n        for(int i=0; i<len; i++){\n            while(!st.isEmpty() && heights[st.peek()]>heights[i]){\n                nextSmaller[st.peek()]=i;\n                st.pop();\n            }\n            st.push(i);\n        }\n        \n        \n        st.clear();\n        for(int i=len-1; i>=0; i--){\n            while(!st.isEmpty() && heights[st.peek()]>heights[i]){\n                prevSmaller[st.peek()]=i;\n                st.pop();\n            }\n            st.push(i);\n        }       \n        \n        int max=0;\n        for(int i=0; i<len; i++){\n            \n            int area=heights[i]*(nextSmaller[i]-prevSmaller[i]-1);\n            max = Math.max(max, area);\n        }\n        \n        return max;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}