{"id":1088046338,"question_id":712,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698724347,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1088046338/","is_pending":"Not Pending","title":"Minimum ASCII Delete Sum for Two Strings","memory":"44.2 MB","code":"class Solution {\n    public int minimumDeleteSum(String s1, String s2) {\n        int m = s1.length();\n        int n = s2.length();\n\n        int[][] dp = new int[m+1][n+1];// dp[ 刪了幾個i char ] [ 刪了幾個j char ]\n\n        for (int i = 1; i <= m; i++) //有幾個char 就有幾個op, 每個op根據ascii有不同成本\n            dp[i][0] = dp[i-1][0]+s1.charAt(i-1);\n        \n        for (int j = 1; j <= n; j++)\n            dp[0][j] = dp[0][j-1]+s2.charAt(j-1);\n        \n\n        for(int i=1; i<=m; i++){\n            for(int j=1; j<=n; j++){\n                if(s1.charAt(i-1)==s2.charAt(j-1)){\n                    dp[i][j] = dp[i-1][j-1]; // 如果char equal 可以bypass\n                }else{\n\n                    int up = dp[i-1][j] + s1.charAt(i-1); // 刪up\n                    int left = dp[i][j-1] + s2.charAt(j-1); // 刪left\n                    dp[i][j] = Math.min(up, left); //看刪除up還是left成本比較小\n                }\n\n            }\n        }\n\n        return dp[m][n];\n            \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-ascii-delete-sum-for-two-strings","has_notes":false,"flag_type":1}