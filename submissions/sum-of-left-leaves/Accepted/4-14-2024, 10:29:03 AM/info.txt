{"id":1231700239,"question_id":404,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1713061743,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1231700239/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"41.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        return helper(root, false);\n    }\n\n    private int helper (TreeNode root, boolean isLeft){\n\n        if(root==null) return 0;\n\n        if(root.left==null && root.right==null && isLeft){\n            return root.val;\n        }\n\n        int left = helper(root.left, true);\n        int right = helper(root.right, false);\n\n        return left+right;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}