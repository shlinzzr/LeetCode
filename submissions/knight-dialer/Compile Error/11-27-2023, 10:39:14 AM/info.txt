{"id":1107138117,"question_id":972,"lang":"java","lang_name":"Java","time":"6Â months, 2Â weeks","timestamp":1701052754,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1107138117/","is_pending":"Not Pending","title":"Knight Dialer","memory":"N/A","code":"class Solution {\n    public int knightDialer(int n) {\n        List<List<Integer>> g = buildGraph();\n\n        int M = (int) 1e9+7;\n        Queue<Integer> q = new LinkedList<>();\n        for(int i=0; i<=9; i++){\n            q.offer(i);\n        }\n\n        while(!q.isEmpty()){\n            int siz = q.size();\n            while(siz-->0){\n\n                int p = \n\n\n            }\n        }\n\n\n\n\n    }\n\n    private List<List<Integer>> buildGraph(List<List<Integer>> g){\n        List<List<Integer>> g = new ArrayList<>();\n        for(int i=0; i<=9; i++){\n            list.add(new ArrayList<>());\n        }\n\n        list.get(0).add(4);\n        list.get(0).add(6);\n        list.get(1).add(8);\n        list.get(1).add(6);\n        list.get(2).add(7);\n        list.get(2).add(9);\n        list.get(3).add(4);\n        list.get(3).add(8);\n        list.get(4).add(3);\n        list.get(4).add(9);\n        list.get(4).add(0);\n        list.get(6).add(1);\n        list.get(6).add(7);\n        list.get(6).add(0);\n        list.get(7).add(2);\n        list.get(7).add(6);\n        list.get(8).add(1);\n        list.get(8).add(3);\n        list.get(9).add(2);\n        list.get(9).add(4);\n        list.get(0).add(4);\n        list.get(0).add(6);\n\n        return list;\n    }\n}","compare_result":null,"title_slug":"knight-dialer","has_notes":false,"flag_type":1}