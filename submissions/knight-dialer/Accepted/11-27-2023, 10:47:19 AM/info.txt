{"id":1107141278,"question_id":972,"lang":"java","lang_name":"Java","time":"6Â months, 2Â weeks","timestamp":1701053239,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/1107141278/","is_pending":"Not Pending","title":"Knight Dialer","memory":"43.4 MB","code":"class Solution {\n    public int knightDialer(int n) {\n        List<List<Integer>> g = buildGraph();\n        int M = (int) 1e9+7;\n        int[] dp = new int[10];\n        Arrays.fill(dp, 1);\n\n        for(int i=2; i<=n; i++){\n\n            int[] dp_old = new int[10];\n            System.arraycopy(dp,0, dp_old, 0, 10);\n\n            for(int j=0; j<10; j++){\n\n                dp[j]=0;\n                List<Integer> list = g.get(j);\n                for(int k : list){\n                    dp[j] += dp_old[k];\n                    dp[j]%=M;\n                }\n            }\n        }\n\n        int res = 0;\n        for(int i =0; i<10; i++){\n            res = (res + dp[i])%M;\n        }\n\n        return res;\n\n\n\n    }\n\n    private List<List<Integer>> buildGraph(){\n        List<List<Integer>> list = new ArrayList<>();\n        for(int i=0; i<=9; i++){\n            list.add(new ArrayList<>());\n        }\n\n        list.get(0).add(4);\n        list.get(0).add(6);\n        list.get(1).add(8);\n        list.get(1).add(6);\n        list.get(2).add(7);\n        list.get(2).add(9);\n        list.get(3).add(4);\n        list.get(3).add(8);\n        list.get(4).add(3);\n        list.get(4).add(9);\n        list.get(4).add(0);\n        list.get(6).add(1);\n        list.get(6).add(7);\n        list.get(6).add(0);\n        list.get(7).add(2);\n        list.get(7).add(6);\n        list.get(8).add(1);\n        list.get(8).add(3);\n        list.get(9).add(2);\n        list.get(9).add(4);\n\n\n        return list;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"knight-dialer","has_notes":false,"flag_type":1}