{"id":1134396177,"question_id":2854,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704179429,"status":10,"status_display":"Accepted","runtime":"133 ms","url":"/submissions/detail/1134396177/","is_pending":"Not Pending","title":"Decremental String Concatenation","memory":"54.3 MB","code":"class Solution {\n     Integer[][][] dp;\n    public int minimizeConcatenatedLength(String[] words) {\n        int len = words.length;\n        // int[][][] dp = new int[len][26][26];\n         dp= new Integer[words.length + 1][27][27];\n        String w = words[0];\n        return w.length() + dfs(words, 1, w.charAt(0)-'a', w.charAt(w.length()-1)-'a');\n    }\n\n    private int dfs(String[] words, int idx, int st, int ed){\n        if(idx==words.length) return 0;\n        int min = Integer.MAX_VALUE/2;\n        String w = words[idx];\n        int a = w.charAt(0)-'a';\n        int b = w.charAt(w.length()-1)-'a';\n\n        if(dp[idx][st][ed]!=null) return dp[idx][st][ed];\n\n\n        if(ed==a){\n            min = Math.min(min, w.length()-1 + dfs(words, idx+1, st, b));\n        }else\n            min = Math.min(min, w.length() + dfs(words, idx+1, st, b));\n\n        if(st==b){\n            min = Math.min(min, w.length()-1 + dfs(words, idx+1, a, ed));\n        }else{\n            min = Math.min(min, w.length() + dfs(words, idx+1, a, ed));\n        }\n\n        dp[idx][st][ed] = min;\n        return min;\n    }\n}","compare_resulttitle_slug":"decremental-string-concatenation","has_notes":false,"flag_type":1}