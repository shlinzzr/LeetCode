{"id":1134355384,"question_id":2854,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704176202,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1134355384/","is_pending":"Not Pending","title":"Decremental String Concatenation","memory":"N/A","code":"class Solution {\n    public int minimizeConcatenatedLength(String[] words) {\n        int len = words.length;\n\n        int[][] dp = new int[1<<len][len];\n\n        return dfs(words, 0, -1, dp, 0);\n\n    }\n\n    private int dfs(String[] words, int idx, int prev, int[][] dp, int state){\n        if(idx==words.length) return 0;\n\n        if(prev!=-1 && dp[state][prev]!=0) return dp[state][prev];\n\n        int min = Integer.MAX_VALUE;\n        for(int i=0; i<words.length; i++){\n            if((state & (1<<i))==0){\n                String w = words[i];\n                int newState = state | (1<<i);\n                if(prev==-1){\n                    min = Math.min(min, w.length() + dfs(words, idx+1, i, dp, newState));\n\n                }else{\n                    if(words[prev].charAt(words[prev].length()-1) == w.charAt(0)){\n                        min = Math.min(min, w.length()-1 + dfs(words, idx+1, i, dp, newState));\n                    }else{\n                        min = Math.min(min, w.length() + dfs(words, idx+1, i, dp, newState));\n                    }\n                }\n            }\n        }\n\n        if(prev!=-1)dp[state][prev]=min;\n        return min;\n\n    }\n}","compare_resulttitle_slug":"decremental-string-concatenation","has_notes":false,"flag_type":1}