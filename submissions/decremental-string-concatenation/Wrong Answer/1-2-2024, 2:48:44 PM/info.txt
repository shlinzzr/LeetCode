{"id":1134379775,"question_id":2854,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704178124,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1134379775/","is_pending":"Not Pending","title":"Decremental String Concatenation","memory":"N/A","code":"class Solution {\n    public int minimizeConcatenatedLength(String[] words) {\n        int len = words.length;\n\n        int[][][] dp = new int[1<<len][26][26];\n\n        return dfs(words, 0, -1, -1, dp, 0);\n\n    }\n\n    private int dfs(String[] words, int idx, int st, int ed, int[][][] dp, int state){\n        if(idx==words.length) return 0;\n\n        if(st!=-1 && dp[state][st][ed]!=0) return dp[state][st][ed];\n\n        int min = Integer.MAX_VALUE/2;\n        for(int i=0; i<words.length; i++){\n            if((state & (1<<i))==0 ){\n                String w = words[i];\n                int newState = state | (1<<i);\n                if(state==0){\n                    int nextst = w.charAt(0)-'a';\n                    int nexted = w.charAt(w.length()-1)-'a';\n                    min = Math.min(min, w.length() + dfs(words, idx+1, nextst, nexted, dp, newState));\n\n                }else{\n                    boolean prevcurr = (char)(ed+'a') == w.charAt(0) ;\n                    boolean currprev = (char)(st+'a') == w.charAt(w.length()-1);\n                    if(prevcurr){\n                        int nexted = w.charAt(w.length()-1)-'a';\n                        min = Math.min(min, w.length()-1 + dfs(words, idx+1, st, nexted, dp, newState));\n                    }\n                    if (currprev){\n                        int nextst = w.charAt(0)-'a';\n                        min = Math.min(min, w.length()-1 + dfs(words, idx+1, nextst, ed, dp, newState));\n                    }\n\n                    // if(!currprev && !prevcurr){\n                        min = Math.min(min, w.length() + dfs(words, idx+1, st, ed, dp, newState));\n                        min = Math.min(min, w.length() + dfs(words, idx+1, ed, st, dp, newState));\n                    // }\n                }\n            }\n        }\n\n        if(st!=-1 && ed!=-1)dp[state][st][ed]=min;\n        return min;\n\n    }\n}","compare_resulttitle_slug":"decremental-string-concatenation","has_notes":false,"flag_type":1}