{"id":1140350464,"question_id":114,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704709333,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1140350464/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"42 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n\n        preorder(root);\n        \n    }\n\n    private TreeNode preorder(TreeNode node){\n        if(node==null) return null;\n\n        TreeNode leftTail = preorder(node.left);\n        TreeNode rightTail = preorder(node.right);\n\n\n        if(leftTail!=null){\n            leftTail.right = node.right;\n            node.right = node.left;\n            node.left = null;\n        }\n            \n\n        if(rightTail!=null) return rightTail;\n        else if(leftTail!=null) return leftTail;\n        else return node;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}