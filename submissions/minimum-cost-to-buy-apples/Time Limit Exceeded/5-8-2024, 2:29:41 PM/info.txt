{"id":1252410271,"question_id":2612,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715149781,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1252410271/","is_pending":"Not Pending","title":"Minimum Cost to Buy Apples","memory":"N/A","code":"class Solution {\n    public long[] minCost(int n, int[][] roads, int[] appleCost, int k) {\n\n        Map<Integer, Map<Integer, Integer>> adjs = new HashMap<>();\n        buildMap(roads, adjs);\n        long[] res= new long[n];\n\n        LinkedHashMap<String, Long >memo = new LinkedHashMap<>();\n\n        for(int start=1; start<=n; start++){\n            boolean[] seen = new boolean[n+1];\n            seen[start]=true;\n            long rt = dfs(start, 0L, adjs, appleCost, k, seen, memo);\n            res[start-1] = rt;\n        }\n\n        return res;\n        \n    }\n\n    private long dfs(int curr, long acc,  Map<Integer, Map<Integer, Integer>> adjs \n    , int[] appleCost, int k, boolean[] seen, LinkedHashMap<String, Long> memo ){\n\n        if(memo.containsKey(memo.keySet().toString()))\n            return memo.get(curr);\n        \n        int takeApple = appleCost[curr-1];\n\n        // return @ curr \n        long res = acc + takeApple + k*acc;\n\n\n        Map<Integer, Integer> nebs = adjs.getOrDefault(curr, new HashMap<>());\n        for(int neb : nebs.keySet()){\n            if(seen[neb]) continue;\n            seen[neb] = true;\n            long roadCost = (long)nebs.get(neb);\n\n            long rt = dfs(neb, acc+roadCost, adjs, appleCost, k, seen, memo);\n\n            // System.out.println(curr+ \"->\" + neb + \"=\" + rt);\n\n            res = Math.min(res, rt);\n            seen[neb] = false;\n        }\n\n        memo.put(curr+\"\", res);\n        return res;\n\n\n\n    }\n\n    private void buildMap(int[][] roads, Map<Integer, Map<Integer, Integer>> adjs ){\n\n        int len = roads.length;\n        for(int[] r : roads){\n            int a = r[0];\n            int b = r[1] ;\n            int cost = r[2];\n\n            adjs.putIfAbsent(a, new HashMap<>());\n            adjs.get(a).put(b, cost);\n            adjs.putIfAbsent(b, new HashMap<>());\n            adjs.get(b).put(a, cost);\n        }\n\n    }\n}","compare_result":"110000000000000000000000000000000000000","title_slug":"minimum-cost-to-buy-apples","has_notes":false,"flag_type":1}