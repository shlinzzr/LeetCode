{"id":1227384991,"question_id":1058,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712645416,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1227384991/","is_pending":"Not Pending","title":"Lexicographically Smallest Equivalent String","memory":"41.9 MB","code":"class Solution {\n    int[] parent = new int[26];\n    public String smallestEquivalentString(String s1, String s2, String baseStr) {\n\n        int len = s1.length();\n\n        for(int i=0; i<26; i++){\n            parent[i]=i;\n        }\n\n        for(int i=0; i<len; i++){\n            int a = s1.charAt(i)-'a';\n            int b = s2.charAt(i)-'a';\n            union(a, b);\n        }\n\n        char[] arr = baseStr.toCharArray();\n        for(int i=0; i<baseStr.length(); i++){\n            int x  = baseStr.charAt(i)-'a';\n\n            arr[i] = (char)(find(x)+'a');\n        }\n\n        return new String(arr);\n\n\n\n        \n    }\n\n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n        if(a==b) return ;\n\n        if(a<b){\n            parent[b]=a;\n\n        }else{\n            parent[a] = b;\n        }\n    }\n\n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lexicographically-smallest-equivalent-string","has_notes":false,"flag_type":1}