{"id":988366463,"question_id":1165,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688712077,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/988366463/","is_pending":"Not Pending","title":"Meeting Scheduler","memory":"53 MB","code":"class Solution {\n    public List<Integer> minAvailableDuration(int[][] slots1, int[][] slots2, int duration) {\n        \n        Arrays.sort(slots1, Comparator.comparingInt(a -> a[0])); // sort increasing by start time\n        Arrays.sort(slots2, Comparator.comparingInt(a -> a[0])); // sort increasing by start time\n        \n        \n        int len1= slots1.length;\n        int len2 = slots2.length;\n        int i=0, j=0;\n        \n        while(i<len1 && j<len2){\n                \n            int st = Math.max(slots1[i][0], slots2[j][0]);        \n            int ed = Math.min(slots1[i][1], slots2[j][1]);\n\n            if(ed-st>=duration){\n\n                List<Integer> res = new ArrayList<>();\n\n                res.add(st);\n                res.add(st +duration);\n                return res;\n\n\n            }else{\n\n                if(slots1[i][1]<slots2[j][1]){\n                    i++;\n\n                }else{\n                    j++;\n                }\n            }\n        }\n        \n        return  new ArrayList<>();\n    }\n}","compare_result":"1111111111111111111111111","title_slug":"meeting-scheduler","has_notes":false,"flag_type":1}