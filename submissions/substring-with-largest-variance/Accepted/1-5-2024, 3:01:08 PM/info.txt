{"id":1137382290,"question_id":2360,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704438068,"status":10,"status_display":"Accepted","runtime":"163 ms","url":"/submissions/detail/1137382290/","is_pending":"Not Pending","title":"Substring With Largest Variance","memory":"44.4 MB","code":"class Solution {\n    public int largestVariance(String s) {\n        int len = s.length();\n\n        // for(int i=0; i<len; i++){\n        //     for(int win=1; i+win<=len && win<=len ; win++;)\n        // }\n        Map<Character, Integer> map = new HashMap<>();\n\n        for(char ch : s.toCharArray()){\n            map.put(ch, map.getOrDefault(ch, 0)+1);\n        }\n        \n        int res = 0;\n        int[] dp0 = new int[len+1]; // not contains -1\n        int[] dp1 = new int[len+1]; // contains -1\n\n       \n\n        for(char a  : map.keySet()){\n            for(char b : map.keySet()){\n\n                if(a==b) continue;\n                 int cnt0=0, cnt1=Integer.MIN_VALUE/2;\n\n                for(int i=0; i<len; i++){\n\n                    char ch = s.charAt(i);\n\n                    int cur = (ch==a) ? 1 : (ch==b) ? -1 : 0;\n\n                    if(cur==1){\n                        cnt1 = cnt1 + 1;\n                        cnt0 = cnt0 + 1;\n                    }else if(cur==-1){\n                        cnt1 = Math.max(cnt0, cnt1)-1;\n                        cnt0 = 0;\n                    }\n                    // if(cur==1){\n                    //     dp0[i] = (i==0) ? 1 : dp0[i-1] +1;\n                    //     dp1[i] = (i==0) ? cur : dp1[i-1] +1;\n                    // }else if(cur==-1){\n                    //     dp1[i] = Math.max(dp0[i-1], dp1[i-1])-1;\n                    //     dp0[i] = 0;\n                       \n                    // }\n\n                    res = Math.max(res, cnt1);\n                }\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"substring-with-largest-variance","has_notes":false,"flag_type":1}