{"id":770008109,"question_id":207,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660114771,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/770008109/","is_pending":"Not Pending","title":"Course Schedule","memory":"49.3 MB","code":"class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n     \n        \n        //https://www.youtube.com/watch?v=fskPWs3Nuhc\n        \n        int[] indegree = new int[numCourses];\n        HashMap<Integer, List<Integer>> map = new HashMap<>();\n        \n        \n        \n        for(int[] req : prerequisites){\n            int take = req[0];\n            int pre = req[1];\n            \n            indegree[take]++;\n            \n            List<Integer> list = map.getOrDefault(pre, new ArrayList<>());\n            list.add(take);\n            map.put(pre, list);\n        }\n        \n        Queue<Integer> queue = new LinkedList<>();\n        \n        for(int i=0; i<numCourses; i++){\n            if(indegree[i]==0)\n                queue.offer(i);\n        }\n        \n        \n        while(!queue.isEmpty()){\n            int cur = queue.poll();\n            List<Integer> list = map.get(cur);\n            if(list==null)\n                continue;\n            \n            for(int i : list){\n                indegree[i]--;\n                if(indegree[i]==0)\n                    queue.offer(i);\n            }\n        }\n\n        \n        \n        for(int i=0; i<numCourses; i++){\n            if(indegree[i]>0)\n                return false;\n        }\n    \n        return true;\n        \n        \n        \n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false,"flag_type":1}