{"id":959393033,"question_id":207,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685340735,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/959393033/","is_pending":"Not Pending","title":"Course Schedule","memory":"44.4 MB","code":"class Solution {\n    public boolean canFinish(int numCourses, int[][] prerequisites) {\n        HashMap<Integer, Set<Integer>> map = new HashMap<>();\n        int[] indegree = new int[numCourses];\n        \n        for(int[] pre : prerequisites){\n            int a = pre[0];\n            int b = pre[1];\n            \n            map.putIfAbsent(b, new HashSet<>());\n            map.get(b).add(a);\n            \n            indegree[a]++;\n        }\n        \n        \n        Queue<Integer> q = new LinkedList<>();\n        \n        for(int i=0; i<numCourses; i++){\n            if(indegree[i]==0){\n                q.offer(i);\n            }\n                \n            \n        }\n        \n        int curr = 0;\n        while(!q.isEmpty()){\n            \n            int p = q.poll();\n            for(int next : map.getOrDefault(p, new HashSet<Integer>())){\n                \n                \n                indegree[next]--;\n                \n                if(indegree[next]==0){\n                    q.offer(next);\n                }\n                    \n            }\n        }\n        \n        for(int i=0; i<numCourses; i++){\n            if(indegree[i]>0)\n                return false;\n        }\n        \n        return true;\n    }\n    \n    \n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false,"flag_type":1}