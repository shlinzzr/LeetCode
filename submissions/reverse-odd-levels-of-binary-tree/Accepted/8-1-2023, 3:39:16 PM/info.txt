{"id":1009175315,"question_id":2493,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690875556,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1009175315/","is_pending":"Not Pending","title":"Reverse Odd Levels of Binary Tree","memory":"47.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode reverseOddLevels(TreeNode root) {\n        \n        // We call the function from lvl 0, and everything starts from lvl 1\n        helper(root.left, root.right, 1);\n        return root;\n    }\n\n    public void helper(TreeNode node1, TreeNode node2, int lvl) {\n        if (node1 == null || node2 == null) {\n            return;\n        }\n        if (lvl % 2 == 1){\n            int temp = node1.val;\n            node1.val = node2.val;\n            node2.val = temp;\n        }\n\n        helper(node1.left, node2.right, lvl + 1);\n        helper(node1.right, node2.left, lvl + 1);\n    }\n        \n        //ans = \n        //[2,5,3,8,13,21,34]\n        //[7,11,13]\n        //[0,2,1,0,0,0,0,2,2,2,2,1,1,1,1]\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-odd-levels-of-binary-tree","has_notes":false,"flag_type":1}