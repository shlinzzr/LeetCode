{"id":806538145,"question_id":2493,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663902671,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/806538145/","is_pending":"Not Pending","title":"Reverse Odd Levels of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode reverseOddLevels(TreeNode root) {\n        if(root==null)\n            return null;\n        \n        TreeNode left = root.left;\n        TreeNode right = root.right;\n        \n        if(left!=null && right!=null){\n            int tmp = left.val;\n            left.val= right.val;\n            right.val=tmp;\n            \n            reverseOddLevels(left.left);\n            reverseOddLevels(left.right);\n            reverseOddLevels(right.right);\n            reverseOddLevels(right.left);\n        }\n        \n        \n        return root;\n        \n        \n    }\n}","compare_result":"110011010000000000000000000000000000000000000000000000110","title_slug":"reverse-odd-levels-of-binary-tree","has_notes":false,"flag_type":1}