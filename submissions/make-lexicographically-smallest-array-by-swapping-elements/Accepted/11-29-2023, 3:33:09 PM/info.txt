{"id":1108727822,"question_id":3219,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701243189,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/1108727822/","is_pending":"Not Pending","title":"Make Lexicographically Smallest Array by Swapping Elements","memory":"64.2 MB","code":"class Solution {\n    public int[] lexicographicallySmallestArray(int[] nums, int limit) {\n        \n        int len = nums.length;\n\n\n        int[] res =new int[len];\n        int[][] arr =new int[len][2]; // val, idx\n\n        for(int i=0;i<len;i++)\n            arr[i]=new int[]{nums[i], i};\n\n        Arrays.sort(arr, (a,b) -> a[0]-b[0]); // sort by val asc\n\n        List<Integer> list = new ArrayList<>(); //idx\n\n        for(int i=0;i<len;i++) {\n            list.add(arr[i][1]); // idx\n\n            if(i==len-1 || arr[i][0]+limit < arr[i+1][0]) { // nums[i]+limit < nums[i+1]\n                Collections.sort(list);\n\n                int prev = i-list.size()+1;\n\n                for(int j=prev;j<=i;j++) \n                    res[list.get(j-prev)] = arr[j][0];\n\n                list=new ArrayList<>();\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-lexicographically-smallest-array-by-swapping-elements","has_notes":false,"flag_type":1}