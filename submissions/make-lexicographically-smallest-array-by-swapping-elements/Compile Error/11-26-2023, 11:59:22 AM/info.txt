{"id":1106524261,"question_id":3219,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1700971162,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1106524261/","is_pending":"Not Pending","title":"Make Lexicographically Smallest Array by Swapping Elements","memory":"N/A","code":"class Solution {\n    public int[] lexicographicallySmallestArray(int[] nums, int limit) {\n        int len = nums.length;\n        \n        TreeMap<Integer, List<Integer>> map = new TreeMap<Integer, List<Integer>>(); // val, key\n        \n        for(int i=len-1; i>=0; i--){\n            int n = nums[i];\n            \n            Integer flor = map.floorKey(n);\n            if(flor!=null && flor>n-limit){\n                nums[i] = flor;\n                nums[map.get(flor)]=n;\n                map.put(flor, i);\n                map.put(n, map.get(ceil));\n                \n                // 62 60\n                // 60 63 62\n                \n                int key =  map.get(ceil);// 60.idx\n                Integer flor = map.floorKey(n+limit); //62\n                while(map.floorKey(n+limit)!=null && map.floorKey(n+limit)>n){\n                    nums[key] = map.floorKey(n+limit);\n                    nums[map.get(map.floorKey(n+limit))] = n;\n                    n= map.get(map.floorKey(n+limit));\n                     \n                }\n                \n                \n                \n            }else{\n                \n            \n                map.putIfAbsent(n,new ArrayList<>());\n                map.get(n).add(0,i);\n            }           \n        }\n        \n        return nums;\n        \n        \n        \n//         int[] res = new int[len];\n//         int idx = 0;\n        \n//         Stack<Integer> st = new Stack<>();\n//         Stack<Integer> st2 = new Stack<>();\n        \n//         for(int n : nums){\n            \n//             while(!st.isEmpty() && Math.abs(st.peek()-n)<=limit && st.peek()>n){\n//                 st2.push(st.pop());\n//             }\n            \n            \n//             st.push(n);\n            \n//             while(!st2.isEmpty()){\n//                 st.push(st2.pop());\n//             }\n//         }\n        \n//         for(int i : st){\n//             res[idx++]=i;\n//         }\n        \n//         return res;\n    }\n}\n\n//[1,4,5,3,9,8]\n\n// 1 3 4 5\n    \n// 5 4\n\n//[1,60,34,84,62,56,39,76,49,38]\n// 4\n// [1,60,34,84,62,56,39,76,49,38]\n// [1,56,34,84,60,62,38,76,49,39]\n\n\n//56 34 84 60 62 38 76 49 39\n// \n\n// [1,60,34,84,62,56,39,76,49,38]8\n\n","compare_result":null,"title_slug":"make-lexicographically-smallest-array-by-swapping-elements","has_notes":false,"flag_type":1}