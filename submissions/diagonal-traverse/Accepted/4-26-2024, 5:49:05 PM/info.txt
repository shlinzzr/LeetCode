{"id":1242378821,"question_id":498,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714124945,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1242378821/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"45.2 MB","code":"class Solution {\n    public int[] findDiagonalOrder(int[][] mat) {\n        \n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int idx = 0;\n        int[] res = new int[h*w];\n        \n        int[] cur = new int[]{0,0};\n        while(idx<h*w){\n            \n            // go up-right\n            for(int i=cur[0], j=cur[1]; i>=0&& j<w; i--,j++){\n                res[idx++] = mat[i][j];\n                cur[0] = i;\n                cur[1] = j;\n            }\n            \n            // test go right, if cant, go down\n            if(cur[1]+1<w) cur[1]++;\n            else if(cur[0]+1<h) cur[0]++;\n            else break;\n            \n            // go down-left;\n            for(int i=cur[0],j=cur[1]; i<h&&j>=0; i++, j--){\n                res[idx++] = mat[i][j];\n                cur[0]=i;\n                cur[1]=j;\n            }\n            \n             // test go down, if cant, go right\n            if(cur[0]+1<h) cur[0]++;\n            else if(cur[1]+1<w) cur[1]++;\n            else break;\n            \n            \n            \n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"diagonal-traverse","has_notes":false,"flag_type":1}