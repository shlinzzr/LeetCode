{"id":1247268560,"question_id":232,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714641549,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1247268560/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"40.9 MB","code":"class MyQueue {\n\n    // 3 2 1\n\n    Stack<Integer> st1 = new Stack<>();\n    Stack<Integer> st2 = new Stack<>();\n    public MyQueue() {\n\n    }\n    \n    public void push(int x) {\n\n        st1.push(x);\n        \n    }\n    \n    public int pop() {\n\n        if(st2.isEmpty()){\n            peek();\n        }   \n        return st2.pop();\n        \n    }\n    \n    public int peek() {\n\n        if(st2.isEmpty()){\n\n            while(!st1.isEmpty()){\n                st2.push(st1.pop());\n            }\n        }            \n        return st2.peek();\n\n        \n    }\n    \n    public boolean empty() {\n\n        return st1.isEmpty() && st2.isEmpty();\n        \n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}