{"id":938229213,"question_id":232,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682222450,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/938229213/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"40.4 MB","code":"class MyQueue {\n       Stack<Integer> st1;\n        Stack<Integer> st2;\n    public MyQueue() {\n        st1=new Stack();\n        st2=new Stack();\n    }\n    \n    public void push(int x) {\n        st1.push(x);\n    }\n    \n    public int pop() {\n        \n        if(!st2.isEmpty())\n            return st2.pop();\n    \n        peek();\n        \n        return st2.pop();\n    }\n    \n    public int peek() {\n        \n        if(!st2.isEmpty())\n            return st2.peek();\n        \n        while(!st1.isEmpty())\n            st2.push(st1.pop());\n        \n        return st2.peek();\n    }\n    \n    public boolean empty() {\n        return st1.isEmpty() && st2.isEmpty();\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}