{"id":1271367490,"question_id":232,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1716983921,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1271367490/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"N/A","code":"class MyQueue {\n\n    Stack<Integer> st1;\n    Stack<Integer> st2;\n\n    public MyQueue() {\n        \n        st1 = new Stack<>();\n        st2 = new Stack<>();\n        \n    }\n    \n    public void push(int x) {\n\n        st1.push(x);\n        \n    }\n    \n    public int pop() {\n\n        if(empty()){\n            return -1;\n        }\n\n        if(st2.isEmpty()) \n            peek();\n\n        return st2.pop();\n        \n    }\n    \n    public int peek() {\n\n        while(!st1.isEmpty()){\n            st2.push(st1.pop());\n        }\n        return st2.peek();\n    }\n    \n    public boolean empty() {\n        return st1.isEmpty() && st2.isEmpty();\n        \n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111101111100","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}