{"id":984200337,"question_id":2873,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1688268211,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/984200337/","is_pending":"Not Pending","title":"Prime Pairs With Target Sum","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> findPrimePairs(int n) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        List<Integer> ps = sieveOfEratosthenes( n);\n        HashSet<Integer> set = new HashSet<>(ps);\n        \n        for(int i=0; i<=ps.size()/2; i++){\n            \n            int x = ps.get(i);\n            if(set.contains(n-x)){\n                 res.add(Arrays.asList(x,n-x));\n            }\n            \n            \n        }\n        \n        \n//         for(int i=1; i<=n/2; i+=1){\n            \n//             int x = i; \n//             int y = n-x;\n//             if(isPrime(x) && isPrime(y)){\n//                 res.add(Arrays.asList(x,y));\n//             }\n//         }\n        \n        \n        return res;\n        \n    }\n    \n    \n    \n    public List<Integer> sieveOfEratosthenes(int n) {\n        List<Integer> result = new ArrayList<>();\n        boolean[] primes = new boolean[n + 1];\n        Arrays.fill(primes, true);\n        primes[0]=false;\n        primes[1]=false;\n          \n        for (int i = 2; i*i <= n; i++) {\n            if (primes[i]) {\n                for (int j = 2*i; j <= n; j += i) {\n                    primes[j] = false;\n                }\n            }\n        }\n        for (int i = 2; i <= n; i++) {\n            if (primes[i]) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    \n    \n     \n     public boolean isPrime(int n)\n    {\n        if(n<2)\n        {\n            return false;\n        }\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n}","compare_resulttitle_slug":"prime-pairs-with-target-sum","has_notes":false,"flag_type":1}