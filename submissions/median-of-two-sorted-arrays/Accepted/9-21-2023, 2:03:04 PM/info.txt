{"id":1055161595,"question_id":4,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695276184,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1055161595/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"44.4 MB","code":"class Solution {\n    \n    // https://www.youtube.com/watch?v=5hNWtR2EcrU\n    \n    public double findMedianSortedArrays(int[] A, int[] B) {\n        \n        int alen = A.length;\n        int blen = B.length;\n        int len = alen+blen;\n        int half = len/2;\n        \n        if(alen>blen)\n            return findMedianSortedArrays(B, A);// Ａ長 Ｂ短\n        \n        //想法: 針對amid 做binarySearch, bmid = half-amid\n\n\n        int left = 0;\n        int right = alen-1;\n        int cnt=0;\n\n        \n        while(true){ //一定存在median\n\n            int amid = right - (right-left)/2;  // 找右傾\n            int bmid = half-amid-2;\n            \n            int acurr = (amid>=0) ? A[amid] : Integer.MIN_VALUE; // 2\n            int anext = (amid+1<alen) ? A[amid+1] : Integer.MAX_VALUE; // max\n            int bcurr = (bmid>=0) ? B[bmid] : Integer.MIN_VALUE; //min\n            int bnext = (bmid+1<blen) ? B[bmid+1] : Integer.MAX_VALUE; // 1\n            \n            // System.out.println(\"acurr=\" + acurr + \" anext=\" + anext + \" bcurr=\" + bcurr + \" bnext=\" + bnext  );\n            \n            if(acurr<=bnext && bcurr<= anext){\n                \n                if(len%2==0)\n                    return ((double)Math.max(acurr, bcurr) + (double)Math.min(anext, bnext))/2;\n                else\n                    return (double) Math.min(anext, bnext);\n                \n            }else{\n                \n                if(bcurr>anext){\n                    left = amid+1; // 1\n                }else{\n                    right = amid-1;\n                }\n            }\n            \n            \n            \n        }\n        \n        \n    }\n}","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false,"flag_type":1}