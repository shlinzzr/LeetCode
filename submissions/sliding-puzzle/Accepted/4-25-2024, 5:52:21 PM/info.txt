{"id":1241556148,"question_id":787,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714038741,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1241556148/","is_pending":"Not Pending","title":"Sliding Puzzle","memory":"43.8 MB","code":"class Solution {\n    public int slidingPuzzle(int[][] board) {\n        \n        int h = board.length;\n        int w = board[0].length;\n        String target = \"123450\";\n        String state = \"\";\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                state += board[i][j];\n            }\n        }\n        char[] arr = state.toCharArray();\n        List<Integer>[] g = buildGraph();\n        Set<String> seen = new HashSet<>();\n        int step = 0;\n        \n        Queue<String> q = new LinkedList<>();\n        q.offer(state);\n        while(!q.isEmpty()){\n            int size = q.size();\n            while(size-->0){\n                String p = q.poll();\n                \n                if(p.equals(target)) return step;\n                \n                int idx =p.indexOf(\"0\");\n                for(int adj : g[idx]){\n                    \n                    String nextState = swap(p, idx, adj);\n                    \n                    if(!seen.contains(nextState)){\n                        seen.add(nextState);\n                        q.offer(nextState);\n                    }\n                }\n            }\n            \n            step++;\n            \n        }\n        return -1;\n        \n        \n//         123\n//         405\n            \n//         ans \n//         state : 123450\n        \n            \n//         assume:\n//         012\n//         345\n//         0 : 1,3\n//         1 : 0,2,4\n//         2 : 1 5\n//         3 : 0,4\n//         4 : 1 3 5\n//         5 : 2,4\n            \n        \n        \n    }\n    \n    private List<Integer>[] buildGraph(){\n        \n        List<Integer>[] g = new ArrayList[6];\n        for(int i=0; i<6;i++) g[i] = new ArrayList<>();\n        \n        g[0] = new ArrayList<>( Arrays.asList(1,3) );\n        g[1] = new ArrayList<>( Arrays.asList(0,2,4));\n        g[2] = new ArrayList<>( Arrays.asList(1,5));\n        g[3] = new ArrayList<>( Arrays.asList(0,4));\n        g[4] = new ArrayList<>( Arrays.asList(1,3,5));\n        g[5] = new ArrayList<>( Arrays.asList(2,4));\n        return g;        \n    }\n    \n    \n    private String swap(String state , int i, int j){\n        char[] arr =state.toCharArray();\n        char ch = arr[i];\n        arr[i] = arr[j];\n        arr[j] = ch;\n        \n        return new String(arr);\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"sliding-puzzle","has_notes":false,"flag_type":1}