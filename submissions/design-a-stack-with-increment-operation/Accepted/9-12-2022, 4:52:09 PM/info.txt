{"id":797793283,"question_id":1497,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1662972729,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/797793283/","is_pending":"Not Pending","title":"Design a Stack With Increment Operation","memory":"50.8 MB","code":"class CustomStack {\n\n    \n    Node head;\n    Node tail;\n    int maxSize =0;    \n    int len;\n    \n    class Node{\n        \n        Node next;\n        Node prev;\n        int val;\n        \n        public Node(int val){\n            this.val=val;\n        }\n        \n    }\n    \n    public CustomStack(int maxSize) {\n        this.head = new Node(0);\n        this.tail = new Node(0);\n        this.head.next = tail;\n        this.tail.prev = head;\n        this.maxSize = maxSize;\n        \n    }\n    \n    public void push(int x) {\n        if(this.len>=maxSize)\n            return;\n        \n        Node n = new Node(x);\n        Node prev = tail.prev;\n        \n        prev.next = n;\n        n.next = tail;\n        tail.prev = n;\n        n.prev =prev;\n        len++;\n    }\n    \n    public int pop() {\n        if(tail.prev==head)\n            return -1;\n        \n        else{\n            Node ele = tail.prev;\n            Node prev = ele.prev;\n            int val = ele.val;\n            \n            prev.next=tail;\n            tail.prev=prev;\n            len--;\n            return val;\n        }\n    }\n    \n    public void increment(int k, int val) {\n        Node cur = head.next;\n        \n        while(k>0&&cur!=tail){\n            cur.val +=val;\n            cur=cur.next;\n            k--;\n        }\n    }\n}\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * CustomStack obj = new CustomStack(maxSize);\n * obj.push(x);\n * int param_2 = obj.pop();\n * obj.increment(k,val);\n */","compare_result":"1111111111111111111111111111111111","title_slug":"design-a-stack-with-increment-operation","has_notes":false,"flag_type":1}