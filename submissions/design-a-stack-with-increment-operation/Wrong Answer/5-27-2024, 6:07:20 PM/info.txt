{"id":1269286930,"question_id":1497,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1716804440,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1269286930/","is_pending":"Not Pending","title":"Design a Stack With Increment Operation","memory":"N/A","code":"class CustomStack {\n\n    Stack<Integer> st;\n    int capacity ;\n    int[] arr ;\n    int idx;\n    public CustomStack(int maxSize) {\n        capacity = maxSize;\n        arr = new int[maxSize];\n        idx = 0;\n        st = new Stack<>();\n    }\n    \n    public void push(int x) {\n\n        if(st.size()<capacity){\n            st.push(x);\n        }\n            \n        \n    }\n    \n    public int pop() {\n        if(st.isEmpty()) return -1;\n        \n        int size = st.size()-1;\n        int res = arr[size] + st.pop();\n        arr[size] = 0;\n\n        return res;\n        \n    }\n    \n    public void increment(int k, int val) {\n        \n        for(int i=0; i<k && i<arr.length; i++){\n            arr[i] += val;\n        }\n        \n    }\n}\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * CustomStack obj = new CustomStack(maxSize);\n * obj.push(x);\n * int param_2 = obj.pop();\n * obj.increment(k,val);\n */","compare_result":"1100010101001000000000000011000001","title_slug":"design-a-stack-with-increment-operation","has_notes":false,"flag_type":1}