{"id":1176532795,"question_id":879,"lang":"java","lang_name":"Java","time":"3 months, 4 weeks","timestamp":1708049114,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1176532795/","is_pending":"Not Pending","title":"Maximize Distance to Closest Person","memory":"45.7 MB","code":"class Solution {\n    public int maxDistToClosest(int[] seats) {\n        int len = seats.length;\n        int max = 1;\n        \n        \n        TreeSet<Integer> set = new TreeSet<>();\n        \n        for(int i=0; i<seats.length; i++){\n            \n            if(seats[i]==1)\n                set.add(i);\n        }\n        \n        List<Integer> list = new ArrayList<>(set);\n        \n        \n        max = Math.max(max, list.get(0)-0);\n        max = Math.max(max, len-1-list.get(list.size()-1));\n        \n        for(int i=0; i<list.size()-1; i++){\n            \n            int left = list.get(i);\n            int right = list.get(i+1);\n            max = Math.max(max, (right-left)/2);\n            \n        }\n        \n        // 0 3 \n        \n        return max;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-distance-to-closest-person","has_notes":false,"flag_type":1}