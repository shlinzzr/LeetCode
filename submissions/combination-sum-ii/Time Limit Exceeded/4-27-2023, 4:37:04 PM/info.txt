{"id":940500198,"question_id":40,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682584624,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/940500198/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> combinationSum2(int[] can, int target) {\n        Set<List<Integer>> res = new HashSet<>();\n        \n        Arrays.sort(can);\n        \n        helper(can, new ArrayList<>(), res, 0 , target, 0);\n        \n        return new ArrayList<>(res);\n    }\n    \n    \n    private void helper(int[] can , List<Integer> list, Set<List<Integer>> res, int curr, int target, int st){\n        \n        //  for(int i: can){\n        //     System.out.print(i + \",\");\n        // }\n        // System.out.println();\n        \n        // System.out.println(curr + \" \" + target  + \" \"  + st);\n        // for(int i: list){\n        //     System.out.print(i + \",\");\n        // }\n        // System.out.println();\n        \n        \n        \n        if(target==0){\n            res.add(new ArrayList<>(list));\n            return;\n        }\n            \n        \n        for(int i=st; i<can.length; i++){\n            if(can[i]<=target ){\n                list.add(can[i]);\n                \n                helper(can, list, res, curr+can[i], target-can[i], i+1);\n                \n                list.remove(list.size()-1);\n            }\n        }\n    }\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}