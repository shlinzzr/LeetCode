{"id":1114965276,"question_id":40,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702026363,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1114965276/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> combinationSum2(int[] D, int target) {\n        Set<List<Integer>> res = new HashSet<>();\n\n        dfs(res, D, target, new ArrayList<>(), 0);\n        return new ArrayList<>(res);\n    }\n\n    private void dfs( Set<List<Integer>> res, int[] D, int target, List<Integer> curr, int st){\n\n        if(target==0){\n            \n\n            List<Integer> list = new ArrayList<>(curr);\n            Collections.sort(list);\n            res.add(list);\n            return;\n        }\n\n        for(int i=st; i<D.length; i++){\n            if(target-D[i]>=0){\n                curr.add(D[i]);\n                dfs(res, D, target-D[i], curr, i+1);\n                curr.remove(curr.size()-1);\n            }\n        }\n    }\n\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}