{"id":978949778,"question_id":2867,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1687662460,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/978949778/","is_pending":"Not Pending","title":"Ways to Split Array Into Good Subarrays","memory":"59.5 MB","code":"class Solution {\n    public int numberOfGoodSubarraySplits(int[] nums) {\n        int M = (int)1e9+7;\n        \n        int len = nums.length;\n        \n        boolean firstOne = false;\n        \n        \n        int z=1;\n        long res =1;\n        for(int i=0; i<len ; i++){\n\n            if(nums[i]==1){\n                firstOne=true;\n                \n                res = (res*z)%M;\n                z=1;\n            }else{\n                  if(firstOne)\n                      z++;\n                \n            }\n               \n            // System.out.println(i + \" r=\" + res + \" z=\" + z + \" fo=\"+firstOne);\n          \n            \n            \n        \n        } \n        \n        \n        return firstOne ? (int)res : 0;\n        \n    }\n}","compare_resulttitle_slug":"ways-to-split-array-into-good-subarrays","has_notes":false,"flag_type":1}