{"id":1270274870,"question_id":140,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1716889263,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1270274870/","is_pending":"Not Pending","title":"Word Break II","memory":"41.6 MB","code":"class Solution {\n    public List<String> wordBreak(String s, List<String> wordDict) {\n        Map<Integer, List<String>> map = new HashMap<>();\n        map.put(0, new ArrayList<>());\n        map.get(0).add(\"\");\n\n        Set<String> set = new HashSet<>(wordDict);\n\n        TreeMap<Integer, List<String>> wLenMap = new TreeMap<>();\n        for(String w: set){\n            wLenMap.putIfAbsent(w.length(), new ArrayList<>());\n            wLenMap.get(w.length()).add(w);\n        }\n\n        int len = s.length();\n        boolean[] dp = new boolean[len+1];\n        dp[0] = true;\n\n        for(int i=1; i<=len; i++){  \n            for(int wLen : wLenMap.keySet()){\n\n                if(i-wLen<0) break;\n                int j = i-wLen;\n\n                String sub = s.substring(j, i);\n\n                if(dp[j] && set.contains(sub)){\n                    List<String> list = map.get(j);\n                    map.putIfAbsent(i, new ArrayList<>());\n                    for(String prev : list){\n                        map.get(i).add( (prev.isEmpty() ? \"\" : (prev + \" \"))+ sub);\n                    }\n                    dp[i] = true;\n                }\n            }\n        }\n\n        return map.getOrDefault(len, new ArrayList<>());\n        \n    }\n}","compare_result":"111111111111111111111111111","title_slug":"word-break-ii","has_notes":false,"flag_type":1}