{"id":849419868,"question_id":943,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669347783,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/849419868/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"49.7 MB","code":"class Solution {\n    \n    // fucking extreme hard.....\n    public int sumSubarrayMins(int[] arr) {\n        int len = arr.length;\n        long sum = 0;\n        Stack<Integer> stack = new Stack<>();\n        int j, k;\n\n        for (int i = 0; i <= len; i++) {\n            while (!stack.isEmpty() && arr[stack.peek()] > (i == len ? Integer.MIN_VALUE : arr[i])) {\n                j = stack.pop();\n                k = stack.isEmpty() ? -1 : stack.peek();\n                sum += (long)arr[j] * (i - j) * (j - k);\n            }\n            stack.push(i);\n        }\n        return (int)(sum % (long) (1e9 + 7));\n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums","has_notes":false,"flag_type":1}