{"id":805983354,"question_id":1661,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663839895,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/805983354/","is_pending":"Not Pending","title":"Minimum Number of Vertices to Reach All Nodes","memory":"120.1 MB","code":"class Solution {\n    public List<Integer> findSmallestSetOfVertices(int n, List<List<Integer>> edges) {\n        List<Integer> res = new ArrayList<>();\n        \n        int[] arr = new int[n];\n        for(List<Integer> edge : edges){\n            int dest = edge.get(1);\n            arr[dest]++;            \n        }\n        \n        for(int i=0; i<n; i++){\n            if(arr[i]==0)\n                res.add(i);\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-vertices-to-reach-all-nodes","has_notes":false,"flag_type":1}