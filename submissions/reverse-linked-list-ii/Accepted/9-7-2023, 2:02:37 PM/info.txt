{"id":1042762576,"question_id":92,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1694066557,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1042762576/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"40.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        \n        if(left==right)\n            return head;\n        \n        ListNode prev = new ListNode();\n        prev.next = head;\n        \n        ListNode curr = head;\n        int cnt = 1;\n        \n        while(cnt<left && curr!=null){\n            prev = curr;\n            curr=curr.next;\n            cnt++;\n        }\n        \n        ListNode leftTail = prev;\n        ListNode midTail = curr;\n        \n        \n        while(curr!=null && cnt<right){\n            prev=curr;\n            curr=curr.next;\n            cnt++;\n        }\n        \n        ListNode rightHead = curr.next;\n        curr.next = null;\n        \n        ListNode midHead = reverse(leftTail.next);\n        ListNode leftHead = (left==1? midHead : head);\n        \n        leftTail.next = midHead;\n        midTail.next = rightHead;\n        \n        return leftHead;\n        \n    }\n    \n    \n    private ListNode reverse(ListNode node){\n        \n        ListNode prev = null;\n        while(node!=null){\n            ListNode next = node.next;\n            node.next = prev;\n            prev = node;\n            node = next;\n        }\n        return prev;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}