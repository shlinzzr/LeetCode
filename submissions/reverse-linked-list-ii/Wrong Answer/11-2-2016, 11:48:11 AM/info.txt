{"id":81013294,"question_id":92,"lang":"c","lang_name":"C","time":"7 years, 7 months","timestamp":1478058491,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/81013294/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n */\r\nstruct ListNode* reverseBetween(struct ListNode* head, int m, int n) {\r\n    struct ListNode *inihead = head;\r\n    struct ListNode *pre = NULL;\r\n    struct ListNode *next = NULL;\r\n    for(int i=0;i<m-1;i++)\r\n    {\r\n        pre = head;\r\n        head = head->next;\r\n        printf(\"%d\",head->val);\r\n    }\r\n       \r\n    struct ListNode *ininode = head;\r\n    struct ListNode *node = head;\r\n    while(n-m!=0)\r\n    {\r\n        next = node->next;\r\n        node->next = pre;\r\n        pre = node;\r\n        node = next;\r\n        n--;\r\n    }\r\n    \r\n    head -> next = node;\r\n    ininode -> next = next;\r\n    \r\n    return inihead;\r\n    \r\n}","compare_result":null,"title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}