{"id":953193321,"question_id":92,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684479950,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/953193321/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        List<ListNode> list = new ArrayList<>();\n        \n        ListNode dummy = new ListNode();\n        dummy.next = head;\n        list.add(dummy); // dummy\n        \n        ListNode curr = head;\n        while(curr!=null){\n            list.add(curr);\n            curr=curr.next;\n        }\n        \n        while(left<right){\n            \n            ListNode L = list.get(left);\n            ListNode R = list.get(right);\n            \n            ListNode Rnext = R.next;\n            ListNode Lnext = L.next;\n            \n            ListNode Rprev = right==0? dummy : list.get(right-1);\n            ListNode Lprev = left==0? dummy : list.get(left-1);\n            \n            Lprev.next = R;\n            R.next = Lnext;\n            Rprev.next = L;\n            L.next = Rnext;\n            \n            left++;\n            right--;\n            \n        } \n        \n        return dummy.next;\n        \n    }\n}","compare_result":"11110111001110000000111011110100000001000000","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}