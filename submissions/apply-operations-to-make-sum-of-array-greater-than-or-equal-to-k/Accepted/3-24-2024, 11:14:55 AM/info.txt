{"id":1212166774,"question_id":3328,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711250095,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1212166774/","is_pending":"Not Pending","title":"Apply Operations to Make Sum of Array Greater Than or Equal to k","memory":"40.5 MB","code":"class Solution {\n    public int minOperations(int k) {\n        \n        // (1 +a) *b >=k\n        // b + ab >= k\n        \n        int min = k-1;\n        for(int a=0; a<k; a++){\n            // a:0 b:4\n            // a:1 b:2\n            // int b = k/(a+1) ;\n            int b = k%(a+1)==0 ? k/(a+1) : k/(a+1)+1;\n\n            \n            min= Math.min(min , a+b-1);\n        }\n        \n        return min;\n\n            \n//         List<Integer> list = new ArrayList<>();\n//         list.add(1);\n        \n//         Set<List<Integer>> seen = new HashSet<>();\n        \n//         Queue<List<Integer>> q = new LinkedList<>();\n//         int step = 0;\n//         q.offer(list);\n//         while(!q.isEmpty()){\n            \n//             int siz = q.size();\n//             while(siz-->0){\n                \n//                 List<Integer> p = q.poll();\n//                 // System.out.println(step + \" \" + p);\n                \n                \n//                 int sum = 0;\n//                 for(int a : p){\n//                     sum+=a;\n//                 }\n                \n//                 if(sum>=k) return step;\n                \n                \n//                 for(int i=0; i<p.size(); i++){\n//                     int a = p.get(i);\n                    \n                    \n//                   List<Integer> next1 = new ArrayList<>(p);\n//                   next1.set(i , a+1);\n                    \n//                   if(seen.add(next1)){\n//                       q.offer(next1);\n//                   }\n                    \n                    \n//                     List<Integer> next2 = new ArrayList<>(p);\n//                     next2.add(a);\n                    \n//                     if(seen.add(next2)){\n//                         q.offer(next2);\n//                     }\n//                 }\n                    \n                \n                \n//             }\n            \n            \n//             step++;\n//         }\n        \n//         return -1;\n        \n         \n//         1 \n            \n//         a : +1\n//         b : +n\n            \n//         => k\n            \n            \n//         k/2\n            \n//         ex : 11\n//         target 6:\n        \n    }\n}","compare_resulttitle_slug":"apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k","has_notes":false,"flag_type":1}