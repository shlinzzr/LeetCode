{"id":1212152285,"question_id":3328,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711249508,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1212152285/","is_pending":"Not Pending","title":"Apply Operations to Make Sum of Array Greater Than or Equal to k","memory":"N/A","code":"class Solution {\n    public int minOperations(int k) {\n        \n//         1 : 2/2 \n//         2 : 3 , 4\n//         3 : 4 : u8\n//         4 : 5 16\n            \n//             1 + a *b>=k\n//             // a*b > k\n        \n//         if(k==1) return 0; \n            \n//         int a = (int) Math.sqrt(k) ;\n//         a++;\n        \n//         if(a>=k) return a-1;\n//         int b = k%a==0 ? k/a-1 : k/a;\n        \n//         return a+b;\n            \n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        \n        Set<List<Integer>> seen = new HashSet<>();\n        \n        Queue<List<Integer>> q = new LinkedList<>();\n        int step = 0;\n        q.offer(list);\n        while(!q.isEmpty()){\n            \n            int siz = q.size();\n            while(siz-->0){\n                \n                List<Integer> p = q.poll();\n                // System.out.println(step + \" \" + p);\n                \n                \n                int sum = 0;\n                for(int a : p){\n                    sum+=a;\n                }\n                \n                if(sum>=k) return step;\n                \n                \n                for(int i=0; i<p.size(); i++){\n                    int a = p.get(i);\n                    \n                    \n                  List<Integer> next1 = new ArrayList<>(p);\n                  next1.set(i , a+1);\n                    \n                  if(seen.add(next1)){\n                      q.offer(next1);\n                  }\n                    \n                    \n                    List<Integer> next2 = new ArrayList<>(p);\n                    next2.add(a);\n                    \n                    if(seen.add(next2)){\n                        q.offer(next2);\n                    }\n                }\n                    \n                \n                \n            }\n            \n            \n            step++;\n        }\n        \n        return -1;\n        \n         \n//         1 \n            \n//         a : +1\n//         b : +n\n            \n//         => k\n            \n            \n//         k/2\n            \n//         ex : 11\n//         target 6:\n        \n    }\n}","compare_resulttitle_slug":"apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k","has_notes":false,"flag_type":1}