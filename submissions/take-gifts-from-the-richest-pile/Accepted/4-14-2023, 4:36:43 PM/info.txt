{"id":933526959,"question_id":2692,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681461403,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/933526959/","is_pending":"Not Pending","title":"Take Gifts From the Richest Pile","memory":"42.7 MB","code":"class Solution {\n    public long pickGifts(int[] gifts, int k) {\n        \n        int len = gifts.length;\n        \n        PriorityQueue<Integer> pq = new PriorityQueue<>(\n            (a,b) -> Integer.compare(b,a)\n        );\n        \n        for(int i=0; i<len; i++){\n            pq.offer(gifts[i]);   \n        }\n        \n        while(k>0 ){\n            \n            int p = pq.poll();\n            \n            int ele = (int)Math.sqrt(p);\n            \n            pq.offer(ele);\n            k--;\n        }\n        \n        long res =0L;\n        \n        for(int p : pq){\n            res += p;\n        }\n        \n        return res;\n            \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"take-gifts-from-the-richest-pile","has_notes":false,"flag_type":1}