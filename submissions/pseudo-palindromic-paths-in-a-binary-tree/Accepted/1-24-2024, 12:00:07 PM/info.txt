{"id":1155187066,"question_id":1568,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706068807,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/1155187066/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"77.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int cnt = 0 ;\n    public int pseudoPalindromicPaths (TreeNode root) {\n\n        HashMap<Integer, Integer> map =new HashMap<>();\n\n        helper(map, root);\n\n        return cnt;\n\n        \n    }\n\n    private void helper(HashMap<Integer, Integer> map, TreeNode root){\n        if(root==null) return ;\n\n        map.put(root.val, map.getOrDefault(root.val,0)+1);\n\n        if(root.left==null && root.right==null && checkpal(map)){\n            cnt++;\n        }\n\n        helper(map, root.left);\n        helper(map, root.right);\n        map.put(root.val, map.getOrDefault(root.val,0)-1);\n    }\n\n    private boolean checkpal(HashMap<Integer, Integer> map){\n        boolean single = false;\n\n        for(int key : map.keySet()){\n            if(map.get(key)%2==1){\n                if(single) return false;\n                single = true;\n            }\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false,"flag_type":1}