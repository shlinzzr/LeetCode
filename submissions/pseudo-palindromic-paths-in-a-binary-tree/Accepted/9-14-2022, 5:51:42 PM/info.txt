{"id":799518420,"question_id":1568,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1663149102,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/799518420/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"105 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int res=0;\n    int[] arr;\n    \n    public int pseudoPalindromicPaths (TreeNode root) {\n        \n        arr = new int[10];\n        dfs(root);\n        return res;\n        \n    }\n    \n    private void dfs(TreeNode root ){\n        \n        if(root==null)\n            return ;\n        \n        arr[root.val]++;\n        if(root.left==null && root.right==null){\n            if(isPalindrome(arr))\n                ++res;\n        }else{\n            dfs(root.left);\n            dfs(root.right);    \n        }\n        \n        arr[root.val]--;\n        \n        return  ;\n    }\n    \n    private boolean isPalindrome(int[] arr){\n        int odd=0;\n        for(int i : arr){\n            if(i%2!=0)\n                odd++;\n        }\n        \n        \n        return odd<=1;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false,"flag_type":1}