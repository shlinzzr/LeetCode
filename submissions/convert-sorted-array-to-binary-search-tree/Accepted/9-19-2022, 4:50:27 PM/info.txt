{"id":803521242,"question_id":108,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663577427,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/803521242/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"44 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        int len = nums.length;\n        \n        if(len==0)\n            return null;\n        \n        if(len==1)\n            return new TreeNode(nums[0]);\n        \n        int mid = nums[len/2];\n        TreeNode root = new TreeNode(mid);\n       \n        root.left = sortedArrayToBST(Arrays.copyOfRange(nums, 0, len/2));\n        root.right = sortedArrayToBST(Arrays.copyOfRange(nums, len/2+1, len));\n        \n        return root;\n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}