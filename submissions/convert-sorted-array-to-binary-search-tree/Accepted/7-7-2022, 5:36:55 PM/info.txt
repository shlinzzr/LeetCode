{"id":740828055,"question_id":108,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1657186615,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/740828055/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"43.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        \n        \n        return helper(nums, 0, nums.length-1);\n        \n    }\n    \n    private TreeNode helper(int[] nums, int st, int ed){\n        \n        if(st>ed)\n            return null;\n        \n        // if(st==ed)\n        //     return new TreeNode(nums[st], null, null);\n\n        int mid = (st+ed)/2;\n        TreeNode root = new TreeNode(nums[mid], helper(nums, st, mid-1), helper(nums, mid+1,ed));\n        \n        return root;\n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}