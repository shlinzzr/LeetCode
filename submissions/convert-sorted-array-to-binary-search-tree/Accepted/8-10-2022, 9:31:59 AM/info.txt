{"id":769808004,"question_id":108,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660095119,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/769808004/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"44.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        \n        if(nums.length==0)\n            return null;\n        \n        int mid = nums[nums.length/2];  //nums[5/2] = 0\n        TreeNode root = new TreeNode(mid);\n        if(nums.length>0){\n            TreeNode left = sortedArrayToBST (Arrays.copyOfRange(nums, 0, nums.length/2) );\n            root.left = left;\n        }\n        if(nums.length>2){\n            TreeNode right = sortedArrayToBST( Arrays.copyOfRange(nums, nums.length/2+1, nums.length));\n            root.right = right;\n        }\n            \n        \n        \n        return root;\n    \n            \n            \n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}