{"id":854900633,"question_id":108,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670226251,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/854900633/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        int len = nums.length;\n        if(len==0)\n            return null;\n        \n        \n        TreeNode root = new TreeNode(nums[len/2]);\n        if(len==1)\n            return root;            \n        \n        // -10, -3, 0, 5, 9   len=5 %2==1\n        //root = nums[2];\n        // left = 0 ,2\n        // right = 3, 4\n        \n        //[1,3] len=2 %2 =0\n        // root = num[1];\n        // left = 0, 1;\n        // right = \n        \n        \n        \n        \n        int[] left = new int[len/2];\n        System.arraycopy(nums, 0, left, 0, len/2);\n        root.left = sortedArrayToBST(left);\n        \n        if(len/2+1 < len){\n            int rIdx = len/2+1;\n            int[] right = new int[len/2];\n            System.arraycopy(nums, rIdx, right, 0, len/2);\n            root.right = sortedArrayToBST(right);\n        }\n            \n            \n        \n        \n        \n        \n        \n        \n        return root;\n    }\n}","compare_result":"1111000000000000000000000000000","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}