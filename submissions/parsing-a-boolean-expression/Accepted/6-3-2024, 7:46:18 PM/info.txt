{"id":1276291239,"question_id":1197,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1717415178,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1276291239/","is_pending":"Not Pending","title":"Parsing A Boolean Expression","memory":"44.7 MB","code":"class Solution {\n    public boolean parseBoolExpr(String exp) {\n\n\n\n        List<Boolean> curr = new ArrayList<>();\n        Stack<List<Boolean>> st = new Stack<>();\n        Stack<Character> opst = new Stack<>();\n        boolean res = false;\n\n        for(int i=0; i<exp.length(); i++){\n            char ch = exp.charAt(i);\n\n            if(ch=='(' || ch==',') continue;\n\n            else if(ch=='!' || ch=='&' || ch=='|'){\n                st.push(new ArrayList<>(curr));\n                curr = new ArrayList<>();\n                opst.push(ch);\n\n            }else if(ch==')'){\n                res = eval(opst.pop(), curr);\n                curr = st.pop();\n                curr.add(res);\n            }else{\n                curr.add(ch=='t');\n            }\n        }\n\n        return res;\n\n\n        \n    }\n\n    private boolean eval(char op, List<Boolean> list){\n\n        boolean res = false;\n        if(op=='!'){\n            return !list.get(0);\n        }else if(op=='&'){\n            res = true;\n            for(boolean b : list){\n                res &=b;\n            }\n        }else if(op=='|'){\n            res= false;\n            for(boolean b: list){\n                res |=b;\n            }\n        }\n\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"parsing-a-boolean-expression","has_notes":false,"flag_type":1}