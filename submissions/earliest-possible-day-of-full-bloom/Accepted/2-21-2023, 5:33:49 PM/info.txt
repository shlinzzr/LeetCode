{"id":902155803,"question_id":2257,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676972029,"status":10,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/902155803/","is_pending":"Not Pending","title":"Earliest Possible Day of Full Bloom","memory":"61.7 MB","code":"class Solution {\n    public int earliestFullBloom(int[] plantTime, int[] growTime) {\n        int len = plantTime.length;\n        \n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a, b) -> b[1]==a[1] ? a[0]-b[1] : b[1]-a[1]\n        );\n        \n        \n        for(int i=0; i<len ;i++){\n            int[] en = new int[]{plantTime[i], growTime[i]};\n            pq.offer(en);\n        }\n        \n        int total=0, max=0;\n        while(pq.size()>0){\n            \n            int[] p = pq.poll();\n            \n            max = Math.max(max, total+p[0]+p[1]);\n            total+= p[0];\n                           \n            if(pq.size()==0)\n                total+=p[1];\n            \n            \n        }\n                           \n                           \n        return Math.max(total, max);\n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"earliest-possible-day-of-full-bloom","has_notes":false,"flag_type":1}