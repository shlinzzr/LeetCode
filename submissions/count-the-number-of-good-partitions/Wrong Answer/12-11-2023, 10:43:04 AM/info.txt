{"id":1116865104,"question_id":3212,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702262584,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1116865104/","is_pending":"Not Pending","title":"Count the Number of Good Partitions","memory":"N/A","code":"class Solution {\n    public int numberOfGoodPartitions(int[] nums) {\n        int len = nums.length;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        for(int i=0; i<len; i++){\n            map.put(nums[i], i);\n        }\n        \n        int m=0;\n        int right =0;\n        for(int i=0; i<len; i++){\n            \n            if(map.get(nums[i])==right){\n                m++;\n                right++;\n            }\n            \n            right = Math.max(right, map.get(nums[i]));\n        }\n        \n        return (int)Math.pow(2, m-1);\n        \n    }\n}","compare_resulttitle_slug":"count-the-number-of-good-partitions","has_notes":false,"flag_type":1}