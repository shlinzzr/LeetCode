{"id":1178467380,"question_id":3314,"lang":"java","lang_name":"Java","time":"3 months, 3 weeks","timestamp":1708226816,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1178467380/","is_pending":"Not Pending","title":"Most Frequent Prime","memory":"45.5 MB","code":"class Solution {\n    \n    \n    \n    int[][] dirs = new int[][]{{0,1},{1,1}, {1,0},{1,-1},{0,-1},{-1,-1},{-1,0}, {-1,1}};\n    \n    Map<Integer, Integer> map = new HashMap<>();\n    int h;\n    int w;\n    int maxFreq=0;\n    int ans=-1;\n    \n    public int mostFrequentPrime(int[][] mat) {\n        \n        \n        h = mat.length;\n        w = mat[0].length;\n        \n        \n//         Set<String> seen = new HashSet<>();\n//         seen.add(\"0_0\");\n        \n        String s =  mat[0][0]+\"\";\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                 for(int[] d : dirs){\n                     \n                     dfs(mat, i, j, mat[i][j]+\"\", d);\n            \n            \n            \n                 }\n            }\n        }\n       \n        \n        \n        // dfs(mat, 0, 0, s, seen);\n        \n        \n//         for(int k : map.keySet()){\n//             System.out.println(k + \" \"+  map.get(k));\n//         }\n        \n        return ans;\n        \n    }\n    \n    \n    private void dfs(int[][] mat, int x, int y, String curr,int[] d){\n        \n        \n        \n            int r = x+d[0];\n            int c = y+d[1];\n            \n            if(r<0 || c<0 || r>=h || c>=w) return;\n            \n            int val = Integer.valueOf(curr+mat[r][c]);\n            \n            if(isPrime(val)) {\n                 map.put(val, map.getOrDefault(val, 0)+1);\n                \n                int freq = map.get(val);\n                \n                if(freq>maxFreq){\n                    maxFreq = freq;\n                    ans = val;\n                }else if(freq==maxFreq){\n                    if(val>ans)\n                        ans = val;\n                }\n            }\n               \n            \n            dfs(mat, r, c, val+\"\", d);\n            \n        \n        \n    }\n    \n    \n    \n     \n    public boolean isPrime(int n)\n    {\n        if(n<2)\n        {\n            return false;\n        }\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n}","compare_resulttitle_slug":"most-frequent-prime","has_notes":false,"flag_type":1}