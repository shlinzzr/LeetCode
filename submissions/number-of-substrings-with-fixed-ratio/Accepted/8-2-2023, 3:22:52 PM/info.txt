{"id":1010058443,"question_id":2629,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690960972,"status":10,"status_display":"Accepted","runtime":"174 ms","url":"/submissions/detail/1010058443/","is_pending":"Not Pending","title":"Number of Substrings With Fixed Ratio","memory":"64.6 MB","code":"class Solution {\n    public long fixedRatio(String s, int num1, int num2) {\n        int len = s.length();\n        // 0 : num1, 1 : num2\n        \n//         HashMap<Integer, Integer> omap = new HashMap<>();\n//         HashMap<Integer, Integer> zmap = new HashMap<>();\n        \n//         int po = 0;\n//         int pz = 0;\n        \n//         for(int i=0; i<len; i++){\n//             char ch = s.charAt(i);\n//             if(ch=='0'){\n//                 po++;\n//             }else{\n//                 pz++;\n//             }\n            \n//             if(po%num1==0 && pz%num2==0 && po/num1==pz/num2){\n                \n//             }\n            \n//         }\n        \n        HashMap<String, Integer> map = new HashMap<>();\n        map.put(\"0_0\", 1);\n        \n        long a = 0, b = 0;\n        long ret = 0;\n        for (char ch: s.toCharArray()){\n            if (ch=='0') \n                a++;\n            else \n                b++;\n\n            long k = Math.min(a/num1, b/num2);\n            long x = a-k*num1, y = b-k*num2;\n\n            String key = x + \"_\" + y;\n            \n            if(map.containsKey(key))\n                ret += map.get(key);\n\n            map.put(key, map.getOrDefault(key, 0)+1);\n        }\n        \n        return ret;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-substrings-with-fixed-ratio","has_notes":false,"flag_type":1}