{"id":1114923311,"question_id":37,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702021231,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1114923311/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"N/A","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        int h = board.length;\n        int w = board[0].length;\n\n        Set<String> seen = new HashSet<>();\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n\n                if(board[i][j]=='.'){\n                    for(char k='1'; k<='9'; k++){\n\n                        if( !seen.contains( board[i][j] + \" exists at row:\" + i)\n                         && !seen.contains(board[i][j] + \" exists at col:\" + j)\n                         && !seen.add(board[i][j] + \" exists at block:\" + (i/3*3+i%3) + \"_\"+ (j/3*3+j%3))){\n                            board[i][j] = k;\n\n                            seen.add(board[i][j] + \" exists at row:\" + i);\n                            seen.add(board[i][j] + \" exists at col:\" + j);\n                            seen.add(board[i][j] + \" exists at block:\" + (i/3*3+i%3) + \"_\"+ (j/3*3+j%3));\n                         }\n\n                    }\n                    \n\n\n                }else{\n                    seen.add(board[i][j] + \" exists at row:\" + i);\n                    seen.add(board[i][j] + \" exists at col:\" + j);\n                    seen.add(board[i][j] + \" exists at block:\" + (i/3*3+i%3) + \"_\"+ (j/3*3+j%3));\n                }\n\n            }\n        }\n\n\n    }\n}","compare_result":"000000","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}