{"id":829017971,"question_id":37,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666582207,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/829017971/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"41.5 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        \n        dfs(board, 0, 0);\n        \n    }\n    \n    private boolean dfs(char[][] board, int i, int j){\n        if(i==9) return true;\n        if(j==9) return dfs(board, i+1, 0);\n        if(board[i][j]!='.')\n            return dfs(board, i, j+1);\n        \n        for(char k='1'; k<='9'; k++){\n            \n            if(!isValid(board, i, j, k))\n                continue;\n            \n            board[i][j]=k;\n            if(dfs(board, i, j+1)==true)\n                return true;\n            board[i][j]='.';\n        }\n        \n        return false;        \n        \n    }\n    \n    \n    private boolean isValid(char[][] board, int i, int j, char k){\n        \n        for(int r=0; r<9; r++){\n            if(board[r][j]==k) return false;\n            if(board[i][r]==k) return false;\n        }\n        \n        i=i/3*3;\n        j=j/3*3;\n        \n        for(int r=0; r<3; r++){\n            for(int c=0; c<3; c++){\n                if(board[i+r][j+c]==k)\n                    return false;\n            }\n        }\n        \n        \n        return true;\n        \n    }\n}","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}