{"id":800307243,"question_id":37,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1663229652,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/800307243/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"41.4 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        helper(board);\n        return;\n    }\n    \n//       public boolean solve(char[][] board){\n//         for(int i = 0; i < board.length; i++){\n//             for(int j = 0; j < board[0].length; j++){\n//                 if(board[i][j] == '.'){\n//                     for(char c = '1'; c <= '9'; c++){//trial. Try 1 through 9\n//                         if(isValid(board, j, i, c)){\n//                             board[i][j] = c; //Put c for this cell\n                            \n//                             if(solve(board))\n//                                 return true; //If it's the solution return true\n//                             else\n//                                 board[i][j] = '.'; //Otherwise go back\n//                         }\n//                     }\n                    \n//                     return false;\n//                 }\n//             }\n//         }\n//         return true;\n//     }\n    \n    \n    private boolean helper(char[][] board){\n        \n        int h=board.length;\n        int w=board[0].length;\n        for(int i=0; i<h; i++){\n            \n            for(int j=0; j<w; j++){\n                \n                if(board[i][j]=='.'){\n                    for(char c='1'; c<='9'; c++){\n\n                        if(isValid(board, j, i, c)){\n                            board[i][j]=c;\n                            if(helper(board)){\n                               return true;\n                            }else{\n                                board[i][j] = '.';    \n                            }    \n                        }\n                        \n                    }\n                    \n                    return false;\n                }\n            }\n            \n        }\n        \n        return true;\n        \n    }\n    \n    private boolean isValid(char[][] board, int col, int row, char c){\n        \n        for(int i=0; i<9; i++){\n            \n            if( board[i][col]==c) return false;\n            if( board[row][i]==c) return false;\n            if( board[3*(row/3) + i/3][3*(col/3) + i%3]==c) return false;\n        }\n        \n        return true;\n        \n    }\n\n\n\n}","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}