{"id":1114930050,"question_id":37,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702022006,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1114930050/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"40.6 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        int h = board.length;\n        int w = board[0].length;\n        dfs(board,0,0);\n    }\n\n    private boolean dfs(char[][]board, int i, int j){\n        if(i==9) return true;;\n        if(j==9) return dfs(board, i+1, 0);\n            \n\n        if(board[i][j]!='.')\n            return dfs(board, i, j+1);\n\n        for(char k='1'; k<='9'; k++){\n            \n\n            if(!isValid(board, i, j, k))\n                continue;\n\n            board[i][j]=k;\n            if(dfs(board, i, j+1))\n                return true;\n\n            board[i][j] = '.';\n\n\n        }\n\n        return false;\n    }\n\n \n    private boolean isValid (char[][] board, int r, int c, char ch){\n        \n        for(int i=0; i<9; i++){\n            if(board[i][c]==ch || board[r][i]==ch)\n                return false;\n        }\n        \n        r=r/3*3;\n        c=c/3*3;\n        \n        for(int i=0; i<3; i++){\n            for(int j=0; j<3; j++){\n                \n                 if(board[i+r][j+c]==ch)\n                    return false;\n                \n            }\n        }\n        return true;\n        \n    }\n\n\n    // private boolean isValid(char[][] board){\n    //     int h = board.length;\n    //     int w = board[0].length;\n\n    //     Set<String> seen = new HashSet<>();\n\n    //     for(int i=0; i<h;i++){\n    //         for(int j=0; j<w; j++){\n    //               if (!seen.add(board[i][j] + \" exists at row:\" + i)\n    //                 || !seen.add(board[i][j] + \" exists at col:\" + j)\n    //                 || !seen.add(board[i][j] + \" exists at block:\" + (i/3*3+i%3) + \"_\"+ (j/3*3+j%3)))\n    //                     return false;\n\n    //         }\n    //     }\n\n    //     return true;\n    // }\n}","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}