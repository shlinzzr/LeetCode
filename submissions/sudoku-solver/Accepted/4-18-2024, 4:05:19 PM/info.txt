{"id":1235565197,"question_id":37,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713427519,"status":10,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/1235565197/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"46.1 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n\n        int n = board.length;\n\n        Set<String> set = new HashSet<>();\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(board[i][j]=='.') continue;\n\n                set.add(board[i][j]+ \" seen at \" + i + \" row\");\n                set.add(board[i][j]+ \" seen at \" + j + \" col\");\n                set.add(board[i][j]+ \" seen at \" + i/3 + \"_\" + j/3 + \" block\");\n            }\n        }\n\n\n        dfs(board, set, 0, 0);\n        \n    }\n\n    private boolean dfs(char[][] board, Set<String> set, int row,  int col){\n\n        if(row==9 ) return true;\n        if(col==9) return dfs(board, set, row+1, 0);\n        \n        if(board[row][col]!='.') return dfs(board, set, row, col+1);\n\n        for(char ch = '1'; ch<='9'; ch++){\n            board[row][col] = ch;\n            if(isValid(board, set, row, col)){\n\n                set.add(board[row][col]+ \" seen at \" + row + \" row\");\n                set.add(board[row][col]+ \" seen at \" + col + \" col\");\n                set.add(board[row][col]+ \" seen at \" + row/3 + \"_\" + col/3 + \" block\");\n                // System.out.println(\"board[\" + row + \"][\"+ col+\"]=\" + ch);\n                boolean rt = dfs(board, set, row, col+1);\n\n                if(rt) return true;\n\n                set.remove(board[row][col]+ \" seen at \" + row + \" row\");\n                set.remove(board[row][col]+ \" seen at \" + col + \" col\");\n                set.remove(board[row][col]+ \" seen at \" + row/3 + \"_\" + col/3 + \" block\");\n            }\n            board[row][col] = '.';\n        }\n\n\n\n        return false;\n\n\n    }\n\n    private boolean isValid(char[][] board, Set<String> set, int i, int j){\n        if( set.contains(board[i][j]+ \" seen at \" + i + \" row\")) return false;\n        if( set.contains(board[i][j]+ \" seen at \" + j + \" col\")) return false;\n        if( set.contains(board[i][j]+ \" seen at \" + i/3 + \"_\" + j/3 + \" block\")) return false;\n\n        return true;\n    }\n\n}","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}