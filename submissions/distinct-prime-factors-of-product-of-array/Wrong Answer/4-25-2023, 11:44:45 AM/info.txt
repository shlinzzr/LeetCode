{"id":939288235,"question_id":2609,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682394285,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/939288235/","is_pending":"Not Pending","title":"Distinct Prime Factors of Product of Array","memory":"N/A","code":"class Solution {\n    public int distinctPrimeFactors(int[] nums) {\n        \n        Arrays.sort(nums);\n        \n        int len = nums.length;\n          int cnt=0;\n        \n        HashSet<Integer> set= new HashSet<>();\n        for(int n: nums){\n            \n            for(int p : set){\n                while(n%p==0){\n                    n/=p;\n                }\n                \n               \n            }\n            \n            if(isPrime(n)){\n                    cnt++;\n                    set.add(n);\n            }else{\n                \n                  for(int i=2; i<=Math.sqrt(n); i++){\n                      \n                        boolean valid=false;\n                        while(n%i==0 ){\n                            valid=true;\n                            n/=i;\n                        }\n                      \n                       if(valid)\n                          cnt++;\n                    }\n            }\n        }\n        \n        return cnt;\n    }\n    \n    \n    private boolean isPrime(int n){\n        \n        if(n<2) return false;\n        \n        if(n==2)\n            return true;\n        \n        for(int i=2; i<=Math.sqrt(n); i++){\n            \n            if(n%i==0 )\n                return false;\n        }\n        \n        return true;\n    }\n}","compare_result":"111111101011110111010111110111111101101001010100100010100101011111101111111111110","title_slug":"distinct-prime-factors-of-product-of-array","has_notes":false,"flag_type":1}