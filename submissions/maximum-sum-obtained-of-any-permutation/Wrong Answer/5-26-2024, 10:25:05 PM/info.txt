{"id":1268583117,"question_id":1695,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1716733505,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1268583117/","is_pending":"Not Pending","title":"Maximum Sum Obtained of Any Permutation","memory":"N/A","code":"class Solution {\n    public int maxSumRangeQuery(int[] nums, int[][] requests) {\n\n        int M = (int) 1e9+7;\n\n        int len = nums.length;\n\n        int[]  diff = new int[len+1];\n        for(int[] r : requests){\n            diff[r[0]]++;\n            diff[r[1]+1]--;\n        }\n\n        int cur = 0;\n        int[] freq = new int[len];\n        for(int i=0; i<len; i++){\n            cur += diff[i];\n            freq[i] = cur; \n        }\n\n        Arrays.sort(nums);\n        Arrays.sort(freq);\n\n        long sum = 0 ;\n        for(int i=0; i<len; i++){\n            sum = sum + (nums[i] * freq[i])%M;\n            sum %= M;\n        }\n\n        return (int) sum;\n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"maximum-sum-obtained-of-any-permutation","has_notes":false,"flag_type":1}