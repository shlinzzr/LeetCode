{"id":853286143,"question_id":838,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669966684,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/853286143/","is_pending":"Not Pending","title":"Design Linked List","memory":"N/A","code":"class MyLinkedList {\n\n    int length;\n    Node head;\n    \n    public MyLinkedList() {\n        this.length=0;\n        this.head=null;\n    }\n    \n    public int get(int index) {\n        if(index<0 || index>=this.length)\n            return -1;\n        \n        else{\n            int cnt=0;\n            Node curr =head;\n            while(cnt != index){\n                curr= curr.next;\n                cnt++;\n            }\n            \n            return curr.val;\n        }\n            \n    }\n    \n    public void addAtHead(int val) {\n        Node newHead = new Node(val);\n        newHead.next = head;\n        this.head = newHead;\n        this.length++;\n    }\n    \n    public void addAtTail(int val) {\n        if(this.length == 0) {\n            addAtHead(val);\n            return;\n        }\n        Node tail = new Node(val);\n        Node temp = head;\n        while(temp.next != null) {\n            temp = temp.next;\n        }\n        temp.next = tail;\n        this.length++;\n    }\n    \n    public void addAtIndex(int index, int val) {\n        if(index==this.length){\n            addAtTail(val);\n            return;\n        }\n        \n        if(index==0){\n            addAtHead(val);\n            return;\n        }\n        if(index<0 || index> length)\n            return ;\n        \n        int cnt=0;\n        Node curr =head;\n        while(cnt!=(index-1)){\n            curr= curr.next;\n            cnt++;\n        }\n\n        Node newNode = new Node(val);\n        newNode.next = curr.next;\n        curr.next = newNode;\n        this.length++;\n    }\n    \n    public void deleteAtIndex(int index) {\n        if(index<0 || index>= length)\n            return;\n            \n        Node curr =head;\n            \n        if(index==0)\n            head=curr.next;\n        else{\n            Node prev = null;\n            int cnt=0;\n            while(cnt!=index){\n                prev = curr;\n                curr= curr.next;\n                cnt++;\n            }\n            prev.next = curr.next;\n            this.length--;\n        }\n    }\n    \n    \n    class Node{\n        \n        int val;\n        int idx;\n        Node next;\n        \n        public Node(int val){\n            this.val=val;\n        }\n    }\n    \n}\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList obj = new MyLinkedList();\n * int param_1 = obj.get(index);\n * obj.addAtHead(val);\n * obj.addAtTail(val);\n * obj.addAtIndex(index,val);\n * obj.deleteAtIndex(index);\n */","compare_result":"1111111111111111111111111111111111111111111111111111111111100000","title_slug":"design-linked-list","has_notes":false,"flag_type":1}