{"id":82788902,"question_id":21,"lang":"c","lang_name":"C","time":"7 years, 6 months","timestamp":1479278393,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/82788902/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n\r\n \r\n //recursive\r\nstruct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2) {\r\n\r\n    if(l1 == NULL)   return l2;\r\n    if(l2 == NULL)   return l1;\r\n    \r\n    if(l1->val <= l2->val)\r\n    {\r\n        l1->next = mergeTwoLists(l1->next, l2);\r\n        return l1;\r\n     }\r\n     else\r\n     {\r\n        l2->next = mergeTwoLists(l2->next, l1);\r\n        return l2;\r\n     }\r\n}\r\n */\r\n\r\n//iterative\r\nstruct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2) {\r\n    struct ListNode* head;\r\n    if(l1 == NULL)   return l2;\r\n    if(l2 == NULL)   return l1;\r\n    \r\n    head = (l1->val <= l2->val)? l1 : l2;\r\n    \r\n    \r\n    while(l1 && l2)\r\n    {\r\n        struct ListNode* tmp;\r\n        \r\n        if(l1->val <= l2->val)\r\n        {\r\n            l1 = l1->next ;\r\n        }\r\n        else\r\n        {\r\n            tmp = l2->next;\r\n            l2->next = l1;\r\n            l1=l1->next;\r\n            l2=tmp;\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return head;\r\n}","compare_result":null,"title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}