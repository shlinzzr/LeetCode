{"id":936220255,"question_id":2590,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1681887524,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936220255/","is_pending":"Not Pending","title":"Maximum Star Sum of a Graph","memory":"N/A","code":"class Solution {\n    public int maxStarSum(int[] vals, int[][] edges, int k) {\n        HashMap<Integer, List<Integer>> map = new HashMap<>();\n        \n        for(int[] e : edges){\n            map.putIfAbsent(e[0], new ArrayList<>());\n            map.putIfAbsent(e[1], new ArrayList<>());\n            map.get(e[0]).add(e[1]);\n            map.get(e[1]).add(e[0]);\n        }\n        \n        int max = Integer.MIN_VALUE;\n        for(int i=0; i<vals.length; i++){\n            max = Math.max(max, vals[i]);\n        }\n        \n        \n        \n        for(Map.Entry<Integer, List<Integer>> en : map.entrySet()){\n            \n            int kk =k;\n            PriorityQueue<Integer> pq = new PriorityQueue<>();\n            List<Integer> list = en.getValue();\n            for(int idx : list){\n                pq.offer(vals[idx]);\n                \n                if(pq.size()>k)\n                    pq.poll();\n            }\n            \n            int sum =0;\n            for(int p : pq){\n                sum+=p;\n            }\n            \n            // System.out.println(en.getKey()+  \" \" + sum);\n            \n            max = Math.max(max, sum+vals[en.getKey()]);\n            \n        }\n        return max;\n        \n    }\n}","compare_result":"1111111100111110111111111","title_slug":"maximum-star-sum-of-a-graph","has_notes":false,"flag_type":1}