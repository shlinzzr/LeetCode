{"id":940371530,"question_id":2587,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682564117,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/940371530/","is_pending":"Not Pending","title":"Design Memory Allocator","memory":"43.1 MB","code":"class Allocator {\n    int[] array;\n    public Allocator(int n) {\n        array = new int[n];\n        for (int i = 0; i < array.length; i++) {\n            array[i] = -1;\n        }\n    }\n    public int allocate(int size, int mID) {\n        if (size > array.length) {\n            return -1;\n        }\n        int count = 0;\n        int startIndex = 0;\n        int endIndex = 0;\n        for (int i = 0; i < array.length; i++) {\n            if (array[i] == -1) {\n                count++;\n            } else {\n                count = 0;\n                startIndex = i + 1;\n            }\n            if (count == size) {\n                endIndex = i;\n                break;\n            }\n        }\n        if (startIndex > endIndex) {\n            return -1;\n        }\n        Arrays.fill(array, startIndex, Math.min(endIndex + 1, array.length), mID);\n        return startIndex;\n    }\n    public int free(int mID) {\n        int count = 0;   \n        for (int i = 0; i < array.length; i++) {\n            if (array[i] == mID) {\n                count++;\n                array[i] = -1;\n            }\n        }\n        return count;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-memory-allocator","has_notes":false,"flag_type":1}