{"id":845697266,"question_id":1484,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668758496,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/845697266/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubPath(ListNode head, TreeNode root) {\n        \n        if(root==null)\n            return false;\n        \n        \n        boolean res=false;\n        \n        if(head.val==root.val){\n            res = dfs(head, root);\n            if(res) \n                return true;\n        }\n        \n        if(res==false || head.val!=root.val){\n            boolean left= isSubPath(head, root.left);\n            boolean right = isSubPath(head, root.right);\n            res= left||right;\n        }\n        \n        return res;\n        \n        \n    }\n    \n    \n    private boolean dfs(ListNode head, TreeNode root){\n        \n        ListNode node = head;\n        TreeNode curr = root;\n        while(node!=null){\n            // System.out.println(node.val +\", \" + curr.val);\n            node= node.next;\n            \n            // System.out.println(node.val + \", \" + (curr.left==null)  + \" ,\"+ (curr.right==null));\n            if(node==null)\n                return true;\n            \n            if(curr.left!=null && node.val==curr.left.val)\n                curr = curr.left;\n            else if(curr.right!=null && node.val==curr.right.val)\n                curr = curr.right;\n            else \n                return false;\n            \n        }\n        \n        return false;\n        \n    }\n}\n","compare_result":"1011111111111011111101011001110111111111111111111111111011110011111","title_slug":"linked-list-in-binary-tree","has_notes":false,"flag_type":1}