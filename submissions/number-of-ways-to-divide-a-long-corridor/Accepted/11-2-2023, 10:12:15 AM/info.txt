{"id":1089556608,"question_id":2251,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698891135,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/1089556608/","is_pending":"Not Pending","title":"Number of Ways to Divide a Long Corridor","memory":"55 MB","code":"class Solution {\n    public int numberOfWays(String corridor) {\n        int len = corridor.length();\n        List<Integer> list = new ArrayList<>();\n        for(int i=0; i<len; i++){\n            if(corridor.charAt(i)=='S'){\n                list.add(i);\n            }\n        }\n\n        if(list.size()==0) return 0;\n        if(list.size()%2!=0) return 0;\n\n        int M = (int) 1e9+7;\n\n        boolean hasDiv = false;\n        long curr = 1;\n        for(int i=2; i+2<=list.size(); i+=2){\n            long diff = list.get(i)-list.get(i-1);\n            curr *= diff;\n            curr %= M;\n        }\n\n\n        return (int)curr;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-divide-a-long-corridor","has_notes":false,"flag_type":1}