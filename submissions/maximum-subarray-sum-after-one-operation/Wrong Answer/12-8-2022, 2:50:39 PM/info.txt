{"id":856498952,"question_id":1893,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670482239,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/856498952/","is_pending":"Not Pending","title":"Maximum Subarray Sum After One Operation","memory":"N/A","code":"class Solution {\n    public int maxSumAfterOperation(int[] nums) {\n        int len = nums.length;\n        int sum = 0;\n        int max = 0;\n        \n        int s = 0;\n        for(int n : nums){\n            \n            if(sum<0){\n                \n                if(s!=0){\n                    sum += s>0 ? Math.abs(s)*(Math.abs(s)-1) : Math.abs(s)*(Math.abs(s)+1);\n                }\n                max = Math.max(max, sum);\n                sum=0;\n                s=0;\n            }\n            \n            s = Math.abs(n)>Math.abs(s) ? n : s;\n                \n            sum += n;\n            \n            max = Math.max(max, sum);\n            \n        }\n        return max;\n        \n    }\n}","compare_result":"100000000000000000000000000000000000000000000000000000000","title_slug":"maximum-subarray-sum-after-one-operation","has_notes":false,"flag_type":1}