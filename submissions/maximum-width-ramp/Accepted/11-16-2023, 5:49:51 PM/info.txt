{"id":1099993857,"question_id":1002,"lang":"java","lang_name":"Java","time":"6 months, 4 weeks","timestamp":1700128191,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1099993857/","is_pending":"Not Pending","title":"Maximum Width Ramp","memory":"51.9 MB","code":"class Solution {\n    public int maxWidthRamp(int[] nums) {\n        int len = nums.length;\n        Stack<Integer> st = new Stack<>();\n\n\n        // find i candiate , make stack desc\n        for(int i=0; i<len; i++){\n            if(st.isEmpty() || nums[st.peek()]>nums[i]){\n                st.push(i);\n            }\n        }\n\n\n        int max =0 ;\n        // find j match with i from back, max = (j-i)\n        for(int j=len-1; j>=0; j--){\n            while(!st.isEmpty() && nums[st.peek()]<=nums[j]){\n                max = Math.max(max, j-st.pop());\n            }\n        }\n\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-width-ramp","has_notes":false,"flag_type":1}