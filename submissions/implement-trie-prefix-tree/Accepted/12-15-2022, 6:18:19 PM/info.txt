{"id":860123028,"question_id":208,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671099499,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/860123028/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"51.9 MB","code":"class Trie {\n\n    TrieNode root;\n    \n    \n    class TrieNode{\n        \n        TrieNode[] arr;\n        boolean isWord=false;\n        \n        public TrieNode(){\n            arr = new TrieNode[26];\n        }\n        \n    }\n    \n    public Trie() {\n        root = new TrieNode();\n    }\n    \n    public void insert(String word) {\n        \n        TrieNode curr = root;\n        \n        for(char ch : word.toCharArray()){\n            if(curr.arr[ch-'a']==null){\n                curr.arr[ch-'a'] = new TrieNode();\n            }\n            curr=curr.arr[ch-'a'];\n        }\n        \n        curr.isWord=true;\n    }\n    \n    public boolean search(String word) {\n        TrieNode curr = root;\n        for(char ch : word.toCharArray()){\n            \n            if(curr.arr[ch-'a']==null)\n                return false;\n            \n            curr=curr.arr[ch-'a'];\n        }\n        \n        if(curr.isWord==false)\n            return false;\n        \n        return true;\n    }\n    \n    public boolean startsWith(String prefix) {\n          TrieNode curr = root;\n        for(char ch : prefix.toCharArray()){\n            \n            if(curr.arr[ch-'a']==null)\n                return false;\n            \n            curr=curr.arr[ch-'a'];\n        }\n        return true;\n    }\n}\n\n/**\n * Your Trie object will be instantiated and called as such:\n * Trie obj = new Trie();\n * obj.insert(word);\n * boolean param_2 = obj.search(word);\n * boolean param_3 = obj.startsWith(prefix);\n */","compare_result":"1111111111111111","title_slug":"implement-trie-prefix-tree","has_notes":false,"flag_type":1}