{"id":844915699,"question_id":63,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668651645,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/844915699/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution {\n    public int uniquePathsWithObstacles(int[][] obstacleGrid) {\n        \n    \n        \n        int h = obstacleGrid.length;\n        int w = obstacleGrid[0].length;\n        \n        if(obstacleGrid[0][0]==1   || obstacleGrid[h-1][w-1]==1 )\n            return 0;\n        \n        \n        int[][] dp = new int[h][w];\n        \n        for(int i=0; i<h; i++){\n            if(obstacleGrid[i][0]==0)\n               dp[i][0]=1; \n        }\n        \n        for(int j=0; j<w; j++){\n            if(obstacleGrid[0][j]==0)\n               dp[0][j]=1; \n        }\n        \n        \n        for(int i=1; i<h; i++){\n            for(int j=1; j<w; j++){\n                \n                if(obstacleGrid[i][j]==1)\n                    continue;\n                \n                dp[i][j] = dp[i-1][j] + dp[i][j-1];\n            }\n        }\n        \n        \n        \n        return dp[h-1][w-1];\n    }\n}","compare_result":"11111111111111111101011110100000000111011","title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}