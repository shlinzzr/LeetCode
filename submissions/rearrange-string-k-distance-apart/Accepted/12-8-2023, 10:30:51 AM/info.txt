{"id":1114764753,"question_id":358,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702002651,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1114764753/","is_pending":"Not Pending","title":"Rearrange String k Distance Apart","memory":"45.3 MB","code":"class Solution {\n    public String rearrangeString(String s, int k) {\n\n        PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>(\n            (a,b) -> (b.getValue()-a.getValue())\n        );\n\n        HashMap<Character, Integer> map = new HashMap<>();\n        for(char ch : s.toCharArray()){\n            map.put(ch, map.getOrDefault(ch,0)+1);\n        }        \n\n        pq.addAll(map.entrySet());\n\n        Queue<Map.Entry<Character, Integer>> q = new LinkedList<>();\n        StringBuilder sb = new StringBuilder();\n        while(!pq.isEmpty()){\n\n            Map.Entry<Character, Integer> en = pq.poll();\n            sb.append(en.getKey());\n            en.setValue(en.getValue()-1);\n            q.offer(en);\n\n            if(q.size()<k)\n                continue;\n\n            Map.Entry<Character, Integer> p = q.poll();\n            if(p.getValue()>0){\n                pq.offer(p);\n            }\n        }\n\n        return sb.length()==s.length() ? sb.toString() : \"\";\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"rearrange-string-k-distance-apart","has_notes":false,"flag_type":1}