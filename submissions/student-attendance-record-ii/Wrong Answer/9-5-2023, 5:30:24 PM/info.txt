{"id":1041083581,"question_id":552,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1693906224,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1041083581/","is_pending":"Not Pending","title":"Student Attendance Record II","memory":"N/A","code":"class Solution {\n    \n    int M = (int) 1e9+7;\n    \n    public int checkRecord(int n) {\n        \n        //https://www.youtube.com/watch?v=CYmxU6v6bGY\n        \n        // A, L, P\n       // dp[i] with tatal combination with P and L\n        \n        // 1. without A\n        // with P \n        // dp[i] = dp[i-1];\n        \n        // with L ...PLLL\n        //          ^ i-4\n        // dp[i] = dp[i-1] - dp[i-4]\n        \n        // 2. with A\n        //with A\n        // 1......n,  'A' is at i, => i-1, A, n-i\n        \n        \n        \n        // dp[i] = dp[i-1] * dp[n-i]\n        \n        int[] dp = new int[n<=3 ? 4 : n+1];\n        dp[0] = 1;\n        dp[1] = 2; // L, P\n        dp[2] = 4; // LP, PL, LL, PP\n        dp[3] = 7;   // 2^3==8 - 'LLL' ==7\n        \n        for(int i=4; i<=n; i++){\n            dp[i] = (dp[i-1] + dp[i-1] - dp[i-4]+M)%M;\n        }\n        \n        long sum = dp[n];\n        for(int i=1; i<=n; i++){\n            sum += (dp[i-1] * dp[n-i])%M;\n        }\n        \n        return (int) (sum%M);\n        \n        \n    }\n}","compare_result":"11011111111111111111100000000000000000000000000000000000000","title_slug":"student-attendance-record-ii","has_notes":false,"flag_type":1}