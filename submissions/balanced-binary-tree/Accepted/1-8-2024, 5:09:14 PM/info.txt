{"id":1140303607,"question_id":110,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704704954,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1140303607/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"44.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    boolean flag = true;\n    public boolean isBalanced(TreeNode root) {\n\n        getH(root);\n\n        return flag;\n        \n    }\n\n    private int getH(TreeNode root){\n\n        if(root==null) return 0;\n\n        int left = getH(root.left);\n        int right = getH(root.right);\n\n        if(Math.abs(left- right)>1) flag = false;\n\n        return 1+Math.max(left, right);\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}