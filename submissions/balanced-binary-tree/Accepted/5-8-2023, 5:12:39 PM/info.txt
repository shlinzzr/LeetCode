{"id":946526746,"question_id":110,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683537159,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/946526746/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"42.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        \n        if(root==null)\n            return true;\n        \n        int left = getHeight(root.left);\n        int right = getHeight(root.right);\n        \n        if(Math.abs(left-right)<=1)\n            return isBalanced(root.left) && isBalanced(root.right);\n        \n        return false;\n        \n    }\n    \n    \n    private int getHeight(TreeNode root){\n        \n        if(root==null)\n            return 0;\n        \n        return Math.max(getHeight(root.left), getHeight(root.right))+1;\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}