{"id":1073313007,"question_id":110,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697100155,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1073313007/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"43.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n\n        if(root==null)\n            return true;\n\n        int left = getH(root.left, 0);\n        int right = getH(root.right, 0);\n        if(Math.abs(left-right)>1)\n            return false;\n\n        return isBalanced(root.left) && isBalanced(root.right);\n    }\n\n    private int getH(TreeNode root, int curr){\n        if(root==null)\n            return curr;\n\n        int left = getH(root.left, curr+1);\n        int right = getH(root.right, curr+1);\n\n        return Math.max(left, right);\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}