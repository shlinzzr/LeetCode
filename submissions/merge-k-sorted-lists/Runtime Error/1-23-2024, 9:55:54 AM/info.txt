{"id":1154140288,"question_id":23,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705974954,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1154140288/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        int len = lists.length;\n        \n        ListNode dummy = new ListNode();\n        PriorityQueue<ListNode> pq= new PriorityQueue<>(\n            (a,b)-> a.val-b.val\n        );\n        \n        for(ListNode node : lists){\n            pq.offer(node);\n        }\n        \n        \n        ListNode curr = dummy;\n        while(!pq.isEmpty()){\n            ListNode p = pq.poll();\n            \n            curr.next = p;\n            if(p.next!=null) \n                pq.offer(p.next);\n            curr = curr.next;\n        }\n        \n        return dummy.next;\n        \n    }\n}","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}