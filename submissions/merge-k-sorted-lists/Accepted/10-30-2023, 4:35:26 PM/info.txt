{"id":1087410176,"question_id":23,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698654926,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1087410176/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"42.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        PriorityQueue<ListNode> pq = new PriorityQueue<>( (a,b)->(a.val-b.val));\n\n        for(ListNode node : lists){\n            if(node!=null)\n                pq.offer(node);\n        }\n\n        ListNode dummy = new ListNode();\n        ListNode curr = dummy;\n        while(!pq.isEmpty()){\n            ListNode node = pq.poll();\n            curr.next = node;\n\n            if(node.next!=null)\n                pq.offer(node.next);\n\n            curr=curr.next;\n        }\n        // if(curr!=null)\n        //     curr.next = null;\n\n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}