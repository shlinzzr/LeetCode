{"id":1142921713,"question_id":1092,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704940287,"status":10,"status_display":"Accepted","runtime":"130 ms","url":"/submissions/detail/1142921713/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"41.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    int diff = 0; \n    public int maxAncestorDiff(TreeNode root) {\n        if(root==null) return 0;\n        helper(root, root);\n        return diff;\n    }\n\n    private void helper(TreeNode ans, TreeNode cur){\n        if(cur==null || ans==null) return;\n\n        diff = Math.max(diff, Math.abs(ans.val-cur.val));\n\n        helper(ans, cur.left);\n        helper(ans, cur.right);\n\n        if(ans==cur){\n            helper(ans.left, cur.left);\n            helper(ans.right, cur.right);\n        }\n\n    }\n\n\n\n    // private int getMin(TreeNode node){\n    //     if(node==null) return Integer.MAX_VALUE;\n\n    //     int left = getMin(node.left);\n    //     int right = getMin(node.right);\n    //     return Math.min(left, right);\n    // }\n\n  \n}","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false,"flag_type":1}