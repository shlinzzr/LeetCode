{"id":1113290336,"question_id":1917,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701828377,"status":10,"status_display":"Accepted","runtime":"389 ms","url":"/submissions/detail/1113290336/","is_pending":"Not Pending","title":"Maximum Average Pass Ratio","memory":"91.2 MB","code":"class Solution {\n    public double maxAverageRatio(int[][] classes, int extraStudents) {\n        int len = classes.length;\n\n        PriorityQueue<double[]> pq = new PriorityQueue<double[]>(\n            new Comparator<double[]>(){\n                public int compare(double[] a, double[] b ){\n                     double diffa = (a[0]+1)/(a[1]+1) - a[0]/a[1];\n                     double diffb = (b[0]+1)/(b[1]+1) - b[0]/b[1];\n\n                     if(diffa==diffb) return 0;\n                     return diffa>diffb ? -1 : 1;\n                }\n            }\n        );\n\n        for(int i=0; i<len; i++){\n            pq.offer(new double[]{Double.valueOf(classes[i][0]), Double.valueOf(classes[i][1])});\n        }\n\n        int allpass = 0;\n        while(!pq.isEmpty() && extraStudents>0){\n\n            double[] p = pq.poll();\n\n            p[0]+=1;\n            p[1]+=1;\n            pq.offer(p);\n            extraStudents--;\n        }\n\n\n        double res = 0;\n\n        for(double[] p : pq){\n            \n            res+= p[0]/p[1];\n        }\n\n\n\n        return res/Double.valueOf(len);\n\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-pass-ratio","has_notes":false,"flag_type":1}