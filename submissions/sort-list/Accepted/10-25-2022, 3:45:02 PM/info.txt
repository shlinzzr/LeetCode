{"id":829800549,"question_id":148,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666683902,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/829800549/","is_pending":"Not Pending","title":"Sort List","memory":"127.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode sortList(ListNode head) {\n        //merge sort\n        \n        if (head == null || head.next == null)\n            return head;\n        \n        ListNode fast=head;\n        ListNode slow=head;\n        ListNode prev=null;\n        while(fast!=null && fast.next!=null){\n            fast = fast.next.next;\n            prev = slow;\n            slow = slow.next;\n        }\n        if(prev!=null)\n            prev.next = null;\n        \n        ListNode l1 = sortList(head);\n        ListNode l2 = sortList(slow);\n        return mergeList(l1, l2);\n        \n        \n    }\n    \n    private ListNode mergeList(ListNode l1, ListNode l2){\n        \n        ListNode dummy = new ListNode();\n        ListNode curr = dummy;\n        \n        \n        while(l1!=null && l2!=null){\n            \n            if(l1.val<=l2.val){\n                ListNode node = new ListNode(l1.val);\n                curr.next = node;\n                l1=l1.next;\n            }else{\n                ListNode node = new ListNode(l2.val);\n                curr.next = node;\n                l2=l2.next;\n            }\n            curr=curr.next;\n        }\n        \n        \n       while(l1!=null){\n            ListNode node = new ListNode(l1.val);\n            l1=l1.next;\n            curr.next = node;\n            curr = curr.next;\n        }\n        \n        while(l2!=null){\n            ListNode node = new ListNode(l2.val);\n            l2=l2.next;\n            curr.next = node;\n            curr = curr.next;\n        }\n        \n        return dummy.next;\n        \n    }\n}\n","compare_result":"111111111111111111111111111111","title_slug":"sort-list","has_notes":false,"flag_type":1}