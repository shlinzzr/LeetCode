{"id":1003197247,"question_id":719,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690258000,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1003197247/","is_pending":"Not Pending","title":"Find K-th Smallest Pair Distance","memory":"N/A","code":"class Solution {\n    public int smallestDistancePair(int[] nums, int k) {\n        Arrays.sort(nums);\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> a[0]-b[0]\n        );\n        \n        int len = nums.length;\n        \n        \n        for(int i=1; i<len; i++){\n            pq.offer(new int[]{Math.abs(nums[i]-nums[0]), i, 0});\n        }\n        \n        // init : (1,0), (2,0), (3,0) ....\n        \n        while(!pq.isEmpty() && k>1){\n            \n            int[] p = pq.poll();\n            int val = p[0];\n            int i = p[1];\n            int j = p[2];\n            \n            if(j+1<i){\n                pq.offer(new int[]{Math.abs(nums[i]-nums[j+1]), i, j+1});\n            }\n            \n            \n            k--;\n            \n        }\n        \n        return pq.peek()[0];\n        \n        \n    }\n}","compare_result":"1110100100000110000","title_slug":"find-k-th-smallest-pair-distance","has_notes":false,"flag_type":1}