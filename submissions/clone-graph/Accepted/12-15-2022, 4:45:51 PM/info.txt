{"id":860092025,"question_id":133,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671093951,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/860092025/","is_pending":"Not Pending","title":"Clone Graph","memory":"42.3 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n    public Node() {\n        val = 0;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val) {\n        val = _val;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val, ArrayList<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\nclass Solution {\n    \n    public HashMap<Integer, Node> map = new HashMap<>();\n    \n    \n    public Node cloneGraph(Node node) {\n        \n        if(node==null)\n            return null;\n        \n        if(map.containsKey(node.val))\n            return map.get(node.val);\n        \n        Node newNode = new Node(node.val, new ArrayList<>());\n        map.put(newNode.val, newNode);\n        for(Node n : node.neighbors){\n            newNode.neighbors.add(cloneGraph(n));\n        }\n        \n        return newNode;\n        \n    }\n}","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}