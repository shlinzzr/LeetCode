{"id":1029344277,"question_id":1049,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692776748,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1029344277/","is_pending":"Not Pending","title":"Minimum Domino Rotations For Equal Row","memory":"48.9 MB","code":"class Solution {\n    public int minDominoRotations(int[] tops, int[] bottoms) {\n        \n        int len = tops.length;\n        int[] arr = new int[7];\n        \n        int target = -1;\n        boolean find=true;\n        for(int i=0; i<len; i++){\n            \n            if(arr[tops[i]]<i && arr[bottoms[i]]<i){\n                find=false;\n                break;\n            }\n            \n            \n            if(arr[tops[i]]>=i)\n                target = tops[i];\n            else \n                target = bottoms[i];\n            \n            \n            arr[tops[i]]++;\n            arr[bottoms[i]]++;\n            \n            \n        }\n         if(find==false){\n                return -1;\n        }\n        \n        \n        return Math.min(helper(tops, target), helper(bottoms, target));\n        \n    }\n    \n    \n    public int helper(int[] tops, int target) {\n        int len =tops.length;\n        int cnt=0;\n        for(int i=0; i<len; i++){\n            if(tops[i]!=target){\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n    \n    \n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-domino-rotations-for-equal-row","has_notes":false,"flag_type":1}