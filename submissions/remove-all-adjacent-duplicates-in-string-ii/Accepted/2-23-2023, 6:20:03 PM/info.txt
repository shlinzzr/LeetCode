{"id":903452762,"question_id":1320,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1677147603,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/903452762/","is_pending":"Not Pending","title":"Remove All Adjacent Duplicates in String II","memory":"53.8 MB","code":"class Solution {\n    public String removeDuplicates(String s, int k) {\n        // ArrayDeque has better performance than Stack and LinkedList\n        ArrayDeque<Adjacent> st = new ArrayDeque<>(s.length());\n        for (char c : s.toCharArray()) {\n            if (!st.isEmpty() && st.peekLast().ch == c) {\n                st.peekLast().freq++; // Increase the frequency\n            } else {\n                st.addLast(new Adjacent(c, 1));\n            }\n            if (st.peekLast().freq == k) // If reach enough k duplicate letters -> then remove\n                st.removeLast();\n        }\n        StringBuilder sb = new StringBuilder();\n        for (Adjacent a : st) {\n            sb.append(String.valueOf(a.ch).repeat(a.freq));\n        }\n        return sb.toString();\n    }\n    class Adjacent {\n        char ch;\n        int freq;\n        public Adjacent(char ch, int freq) {\n            this.ch = ch;\n            this.freq = freq;\n        }\n    }\n}","compare_result":"111111111111111111111","title_slug":"remove-all-adjacent-duplicates-in-string-ii","has_notes":false,"flag_type":1}