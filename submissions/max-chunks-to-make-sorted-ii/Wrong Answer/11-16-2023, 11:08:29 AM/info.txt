{"id":1099783462,"question_id":779,"lang":"java","lang_name":"Java","time":"6 months, 4 weeks","timestamp":1700104109,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1099783462/","is_pending":"Not Pending","title":"Max Chunks To Make Sorted II","memory":"N/A","code":"class Solution {\n    public int maxChunksToSorted(int[] arr) {\n        Set<Integer> lack = new HashSet<>();\n        Set<Integer> more = new HashSet<>();\n\n        int[] sorted = new int[arr.length];\n        System.arraycopy(arr, 0, sorted, 0, arr.length);\n        Arrays.sort(sorted);\n\n\n        int res = 0;\n        for(int i=0; i<arr.length; i++){\n            int a = arr[i];\n            if(more.contains(a)){\n                more.remove(a);\n            }else{\n                lack.add(a);\n            }\n\n            int t = sorted[i];\n            if(lack.contains(t)){\n                lack.remove(t);\n            }else{\n                more.add(t);\n            }\n\n            if(lack.isEmpty() && more.isEmpty()){\n                res++;\n            }\n\n        }\n        return res;\n    }\n}","compare_result":"1101100111111100000001000001111111111111111111111111111111111111111111111111111000000000001000000000000000001100100100100100100100101110100","title_slug":"max-chunks-to-make-sorted-ii","has_notes":false,"flag_type":1}