{"id":1021596876,"question_id":490,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692062155,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1021596876/","is_pending":"Not Pending","title":"The Maze","memory":"45.1 MB","code":"class Solution {\n    public boolean hasPath(int[][] maze, int[] start, int[] destination) {\n        int h = maze.length;\n        int w = maze[0].length;\n        \n        Queue<int[]> q = new LinkedList<>();\n        q.offer(new int[]{start[0], start[1]});\n        \n        boolean[][] seen = new boolean[h][w];\n        seen[start[0]][start[1]]=true;\n        \n        \n        int[][] dirs = new int[][]{{0,1},{1,0}, {0,-1}, {-1,0}};\n        \n        while(!q.isEmpty()){\n            \n            int[] p = q.poll();\n            \n            for(int di=0; di<4; di++){\n                \n                int[] d = dirs[di];\n                \n                int r = d[0] + p[0];\n                int c = d[1] + p[1];\n                \n                if(r<0 || c<0 || r>=h || c>=w || maze[r][c]==1){\n                    continue;\n                }\n                \n                while(r+d[0]>=0 && c+d[1]>=0 && r+d[0]<h && c+d[1]<w && maze[r+d[0]][c+d[1]]==0){\n                    r += d[0];\n                    c += d[1];\n                }\n                \n                if(seen[r][c]==true)\n                    continue;\n                \n                if(r==destination[0] && c==destination[1])\n                    return true;\n                \n                seen[r][c] = true;\n                q.offer(new int[]{r,c});\n            }\n            \n        }\n        \n        return false;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-maze","has_notes":false,"flag_type":1}