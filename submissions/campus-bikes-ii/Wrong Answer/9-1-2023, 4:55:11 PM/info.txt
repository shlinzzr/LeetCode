{"id":1037505404,"question_id":1067,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693558511,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1037505404/","is_pending":"Not Pending","title":"Campus Bikes II","memory":"N/A","code":"class Solution {\n    public int assignBikes(int[][] workers, int[][] bikes) {\n        int len_w = workers.length;\n        int len_b = bikes.length;\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(  // widx, bidx, distance\n            (a,b) -> a[2] - b[2]\n        );\n        \n        \n        boolean[] bike_seen = new boolean[len_b];\n        boolean[] worker_seen = new boolean[len_w];\n        \n        \n        HashSet<String> bike = new HashSet<>();\n        \n        for(int i=0; i<len_w; i++){\n            \n            for(int j=0; j<len_b; j++){\n                \n                int[] w = workers[i];\n                int[] b = bikes[i];\n                \n                int distance = Math.abs(w[0]-b[0]) + Math.abs(w[1]-b[1]);\n                pq.offer(new int[]{i, j, distance});\n            }\n        }\n        \n        int res = 0;\n        \n        int cnt =0;\n        while(cnt<len_w){\n            \n            while(!pq.isEmpty()){\n                int[] p = pq.poll();\n                \n                int widx = p[0];\n                int bidx = p[1];\n                int distance = p[2];\n                \n                if(worker_seen[widx]==false && bike_seen[bidx]==false){\n                    worker_seen[widx]=true;\n                    bike_seen[bidx]=true;\n                    res += distance;\n                    break;\n                }\n            }\n            \n            cnt++;\n        }\n        \n        return res;\n    }\n}","compare_result":"11111111111111111111111000000000000000000000","title_slug":"campus-bikes-ii","has_notes":false,"flag_type":1}