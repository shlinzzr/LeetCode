{"id":1037513191,"question_id":1067,"lang":"java","lang_name":"Java","time":"9Â months, 2Â weeks","timestamp":1693559322,"status":10,"status_display":"Accepted","runtime":"275 ms","url":"/submissions/detail/1037513191/","is_pending":"Not Pending","title":"Campus Bikes II","memory":"40.4 MB","code":"class Solution {\n        \n    int min = Integer.MAX_VALUE;\n    public int assignBikes(int[][] workers, int[][] bikes) {\n        dfs(new boolean[bikes.length], workers, 0, bikes, 0);\n        return min;\n    }\n    public void dfs(boolean[] visit, int[][] workers, int i, int[][] bikes, int distance) {\n        if (i >= workers.length) {\n            min = Math.min(distance, min);\n            return ;\n        }\n        if (distance > min) {\n            return ;\n        }\n        for (int j = 0; j < bikes.length; j++) {\n            if (visit[j]) {\n                continue;\n            }\n            visit[j] = true;\n            dfs(visit, workers, i + 1, bikes, distance + dis(bikes[j], workers[i]));\n            visit[j] = false;\n        }\n        \n    }\n    public int dis(int[] p1, int[] p2) {\n        return Math.abs(p1[0] - p2[0]) + Math.abs(p1[1] - p2[1]);\n    }\n        \n        \n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"campus-bikes-ii","has_notes":false,"flag_type":1}