{"id":1134262482,"question_id":1067,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704168091,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1134262482/","is_pending":"Not Pending","title":"Campus Bikes II","memory":"41.4 MB","code":"class Solution {\n    public int assignBikes(int[][] workers, int[][] bikes) {\n        int len = bikes.length;\n        int[] dp = new int[(1<<len)];\n        return dfs(workers, 0, bikes, 0, dp);\n    }\n\n    private int dfs(int[][] workers, int i, int[][] bikes, int state, int[] dp){\n        if(i>=workers.length){\n            return 0;\n        }\n\n        if(dp[state]!=0) return dp[state];\n\n        int min = Integer.MAX_VALUE;\n\n        for(int j=0; j<bikes.length; j++){\n            if((state & (1<<j)) == 0){\n\n                int[] a = workers[i];\n                int[] b = bikes[j];\n\n                int newState = state | (1<<j);\n                min = Math.min(min , getDis(a, b) + dfs(workers, i+1, bikes, newState, dp));\n            }\n        }\n\n        dp[state] = min;\n\n        return min;\n    }\n\n    private int getDis(int[] a, int[] b){\n        return Math.abs(a[0]-b[0]) + Math.abs(a[1]-b[1]);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"campus-bikes-ii","has_notes":false,"flag_type":1}