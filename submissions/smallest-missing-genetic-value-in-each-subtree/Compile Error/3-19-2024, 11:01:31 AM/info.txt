{"id":1207790558,"question_id":2131,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1710817291,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1207790558/","is_pending":"Not Pending","title":"Smallest Missing Genetic Value in Each Subtree","memory":"N/A","code":"class Solution {\n\n    Map<Integer, List<Integer>> map ;\n    int[] res = new int[len];\n    public int[] smallestMissingValueSubtree(int[] parents, int[] nums) {\n        int len = parents.length;\n\n        \n        vmap = new HashMap<>();\n        map = new HashMap<>();\n        for(int i=0; i<len; i++){\n            map.putIfAbsent(parents[i], new ArrayList<>());\n            map.get(parents[i]).add(i);\n\n            \n        }\n\n        helper(nums, 0);\n\n    }\n\n    private Set<Integer> helper( int[] nums, int idx){\n\n        if(map.get(idx)==null){\n            if(nums[idx]!=1)\n                res[idx] = 1;\n            else \n                res[idx] = 2;\n            Set<Integer> set = new TreeSet<>();\n            set.add(nums[idx]);\n            return set;\n        }\n\n        Set<Integer> all = new TreeSet<>();\n\n        for(int child : map.get(idx)){\n            \n            Set<Integer> sub = helper(nums, child);\n            all.\n        }\n\n\n\n    }\n}","compare_result":null,"title_slug":"smallest-missing-genetic-value-in-each-subtree","has_notes":false,"flag_type":1}