{"id":1104539621,"question_id":1752,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1700703459,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/1104539621/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"44.5 MB","code":"class Solution {\n    public List<Boolean> checkArithmeticSubarrays(int[] nums, int[] l, int[] r) {\n        int n = nums.length;\n        int m = l.length;\n\n        List<Boolean> res = new ArrayList<>();\n        for(int i=0; i<m; i++){\n            int left = l[i];\n            int right = r[i];\n            res.add(isArithMetic(nums, left, right));\n\n        }\n\n        return res;\n\n    }\n\n    private boolean isArithMetic(int[] nums, int l, int r){\n\n        if(l==r)\n            return true;\n\n        List<Integer> list = new ArrayList<>();\n\n        for(int i=l; i<=r; i++){\n            list.add(nums[i]);\n        }\n\n        Collections.sort(list);\n\n        int gap = list.get(1)-list.get(0);\n        for(int i=0; i<list.size()-1; i++){\n            if(list.get(i+1)-list.get(i)!=gap)\n                return false;\n        }\n\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays","has_notes":false,"flag_type":1}