{"id":1262993007,"question_id":1872,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1716201403,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1262993007/","is_pending":"Not Pending","title":"Can You Eat Your Favorite Candy on Your Favorite Day?","memory":"N/A","code":"class Solution {\n    // T = O(n) S=O(n)\n    public boolean[] canEat(int[] cc, int[][] queries) {\n        // calculate prefix sum\n        long[] presum = new long[cc.length+1];\n        boolean[] res = new boolean[queries.length];\n        \n        for(int i=0; i< cc.length; i++)\n            presum[i+1] = presum[i]+cc[i];\n        \n        for(int i=0; i< res.length; i++) {\n            int type = queries[i][0];\n            int day  = queries[i][1];\n            int cap  = queries[i][2];\n            \n            // max and min day required to eat\n            // if we eat one candy per day including type candy (prefix[type+1]). we decrement by 1 since we need atleast one candy of type\n            long maxDay = presum[type+1]; \n            // if we eat upto capacity each day upto previous candy\n            long minDay = presum[type]/cap; \n        \n            // check if query day is within the limits (minDay and maxDay inclusive)\n            res[i] = (minDay <= day && day <= maxDay);            \n        }\n        \n        return res;\n    }\n}","compare_result":"111111111011111111111111111111111111111111111111111111111111011","title_slug":"can-you-eat-your-favorite-candy-on-your-favorite-day","has_notes":false,"flag_type":1}