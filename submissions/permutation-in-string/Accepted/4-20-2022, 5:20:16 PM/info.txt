{"id":684041499,"question_id":567,"lang":"java","lang_name":"Java","time":"2 years, 1 month","timestamp":1650446416,"status":10,"status_display":"Accepted","runtime":"1088 ms","url":"/submissions/detail/684041499/","is_pending":"Not Pending","title":"Permutation in String","memory":"43 MB","code":"class Solution {\n    \n    // Brute force \n    // time : O(s1.length! * (s2.length-s1.length+1))\n    // Space : O(s1.length)\n    \n    \n    \n    \n//     public boolean checkInclusion(String s1, String s2) {\n        \n//         List<String> perm = new ArrayList<>();\n//         perm = permute(\"\", s1, perm);\n        \n//         for(String p : perm){\n//             if(s2.contains(p))\n//                 return true;\n//         }\n        \n        \n//         return false;\n//     }\n    \n//     private List<String> permute(String prefix, String postfix, List<String> perm){\n        \n\n//         if(postfix.length()==0){\n//             perm.add(prefix);\n//             // System.out.println(prefix);\n            \n//         }else{\n//             for(int i=0;i<postfix.length(); i++){\n//                 permute(  prefix+postfix.charAt(i)\n//                         , postfix.substring(0, i) + postfix.substring( i+1 , postfix.length())\n//                         , perm);\n//             }\n//         }\n//         return perm;\n//     }\n    \n    \n    // sliding window\n    // time O(26 * (s2.length - s1.length ) + s1.length)\n    // space = O (26*2) = O(1)\n    public boolean checkInclusion(String s1, String s2) {\n        if(s1.length()>s2.length())\n            return false;\n        \n        HashMap<Character,Integer> map = new HashMap<>();\n        int ls1 = s1.length(),ls2 = s2.length();\n        for(int i=0;i<ls1;i++){\n            map.put(s1.charAt(i),map.getOrDefault(s1.charAt(i),0)+1);\n        }\n        for(int i=0;i<=ls2-ls1;i++){\n            String str = s2.substring(i,i+ls1);\n            HashMap<Character,Integer> maps2 = new HashMap<>();\n            for(int j=0;j<ls1;j++){                \n                maps2.put(str.charAt(j),maps2.getOrDefault(str.charAt(j),0)+1);\n            }\n            if(map.equals(maps2)) return true;            \n        }\n        return false;\n    }\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string","has_notes":false,"flag_type":1}