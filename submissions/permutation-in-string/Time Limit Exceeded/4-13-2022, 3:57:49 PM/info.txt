{"id":679497819,"question_id":567,"lang":"java","lang_name":"Java","time":"2 years, 2 months","timestamp":1649836669,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/679497819/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"// class Solution {\n//     public boolean checkInclusion(String s1, String s2) {\n        \n//         List<String> list1 = new ArrayList<>();\n//         for(char ss : s1.toCharArray()){\n//             list1.add(String.valueOf(ss));\n//         }\n        \n//         char[] chArr = s2.toCharArray();\n//         for(int c=0; c<chArr.length-s1.length()+1; c++){\n            \n//             if(list1.contains(String.valueOf(chArr[c]))){\n                \n//                 List<String> copy = new ArrayList<>();\n//                  for(char ss : s1.toCharArray()){\n//                     copy.add(String.valueOf(ss));\n//                 }\n               \n//                 boolean res = true;\n                \n//                 for(int i=0; i<list1.size(); i++){\n                \n//                     if(!copy.contains(String.valueOf(chArr[i+c]))){\n//                         res = false;\n//                         break;\n//                     }\n                    \n//                     copy.remove(String.valueOf(chArr[i+c]));\n//                 }\n                \n//                 if(res) \n//                     return true;\n//             }\n            \n            \n//         }\n        \n//         return false;\n        \n//     }\n// }\n\n\npublic class Solution {\n    boolean flag = false;\n    \n    public boolean checkInclusion(String s1, String s2) {\n        permute(s1, s2, 0);\n        return flag;\n    }\n    \n    public String swap(String s, int i0, int i1) {\n        if (i0 == i1)\n            return s;\n        String s1 = s.substring(0, i0);\n        String s2 = s.substring(i0 + 1, i1);\n        String s3 = s.substring(i1 + 1);\n        return s1 + s.charAt(i1) + s2 + s.charAt(i0) + s3;\n    }\n    \n    void permute(String s1, String s2, int l) {\n        if (l == s1.length()) {\n            if (s2.indexOf(s1) >= 0)\n                flag = true;\n        } else {\n            for (int i = l; i < s1.length(); i++) {\n                s1 = swap(s1, l, i);\n                permute(s1, s2, l + 1);\n                s1 = swap(s1, l, i);\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"permutation-in-string","has_notes":false,"flag_type":1}