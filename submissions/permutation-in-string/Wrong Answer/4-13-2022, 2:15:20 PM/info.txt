{"id":679451519,"question_id":567,"lang":"java","lang_name":"Java","time":"2 years, 2 months","timestamp":1649830520,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/679451519/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        \n        List<String> list1 = new ArrayList<>();\n        for(char ss : s1.toCharArray()){\n            list1.add(String.valueOf(ss));\n        }\n        \n        char[] chArr = s2.toCharArray();\n        \n        //  for(char cc : chArr){\n        //     System.out.println(cc);\n        // }\n        for(int c=0; c<chArr.length-s1.length(); c++){\n            \n            \n           System.out.println(\"Entry :0 c=\"+c +  \" chArr=\"+chArr[c]);\n            if(list1.contains(String.valueOf(chArr[c]))){\n                \n                 \n                \n                List<String> copy = new ArrayList<>();\n                 for(char ss : s1.toCharArray()){\n                    copy.add(String.valueOf(ss));\n                }\n               \n                \n                boolean res = true;\n                \n                for(int i=0; i<list1.size(); i++){\n                    \n                \n                    if(!copy.contains(String.valueOf(chArr[i+c]))){\n                        res = false;\n                        break;\n                    }\n                    \n                     for(String cc : copy){\n                        System.out.println(cc);\n                    }\n                    System.out.println();\n                    \n                       System.out.println(chArr[i+c]);   System.out.println();\n                    // copy.remove(\"b\");\n                    copy.remove(String.valueOf(chArr[i+c]));\n                }\n                \n                if(res) \n                    return true;\n            }\n            \n            \n        }\n        \n        return false;\n        \n    }\n}","compare_result":"11100001011101111111111111011111011111111111111111111111111111111111100000000000000000000000000000000000000","title_slug":"permutation-in-string","has_notes":false,"flag_type":1}