{"id":684021451,"question_id":567,"lang":"java","lang_name":"Java","time":"2 years, 1 month","timestamp":1650443116,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/684021451/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"class Solution {\n    public boolean checkInclusion(String s1, String s2) {\n        \n        List<String> perm = new ArrayList<>();\n        perm = permute(\"\", s1, perm);\n        \n        for(String p : perm){\n            if(s1.contains(p))\n                return true;\n        }\n        \n        \n        return false;\n    }\n    \n    private List<String> permute(String prefix, String postfix, List<String> perm){\n        \n\n        \n        \n        if(postfix.length()==0){\n            perm.add(prefix);\n            System.out.println(prefix);\n            \n        }else{\n            \n            for(int i=0;i<postfix.length(); i++){\n                \n                permute(  prefix+postfix.charAt(i)\n                        , postfix.substring(0, i) + postfix.substring( i+1 , postfix.length())\n                        , perm);\n            }\n            \n        }\n        \n       \n        return perm;\n        \n    }\n}","compare_result":"10111110100110100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"permutation-in-string","has_notes":false,"flag_type":1}