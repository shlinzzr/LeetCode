{"id":939397029,"question_id":572,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682410731,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/939397029/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n        if(root==null)\n            return false;\n        \n        if(root==null && subRoot==null)\n            return true;\n        \n        if(root==null || subRoot==null)\n            return false;\n        \n        if(isSameTree(root, subRoot)){\n            return true;\n        }\n        \n        return isSameTree(root.left, subRoot) || isSameTree(root.right, subRoot);\n        \n            \n    }\n    \n    private boolean isSameTree(TreeNode root, TreeNode subRoot){\n        \n        \n        if(root==subRoot)\n            return true;\n        \n        if(root==null || subRoot==null)\n            return false;\n        \n        if(root.val != subRoot.val)\n            return false;\n        \n        boolean left = isSameTree(root.left, subRoot.left);\n        boolean right = isSameTree(root.right, subRoot.right);\n        \n        return left && right;\n    }\n}","compare_result":"11111111111001111111111111111111100000000000000000000001000100110010000010000010000000000001000000000000100000001111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}