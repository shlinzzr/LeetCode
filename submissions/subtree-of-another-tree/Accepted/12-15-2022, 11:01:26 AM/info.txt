{"id":859964808,"question_id":572,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671073286,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/859964808/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"42.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n     \n        if(root==null && subRoot==null)\n            return true;\n        \n        if(root==null || subRoot==null)\n            return false;\n        \n        if(isSameTree(root, subRoot)){\n            return true;\n            \n        }\n        \n        return (isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot));\n        \n        \n    }\n    \n    private boolean isSameTree(TreeNode root, TreeNode sub){\n        \n        if(root==null && sub==null)\n            return true;\n        \n        if(root==null || sub==null)\n            return false;\n        \n        \n        if(root.val== sub.val){\n            \n            boolean left= isSameTree(root.left, sub.left);\n            boolean right= isSameTree(root.right, sub.right);\n            \n            return left && right;\n        }else\n            return false;\n            \n            \n    }\n    \n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}