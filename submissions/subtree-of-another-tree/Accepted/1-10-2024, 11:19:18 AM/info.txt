{"id":1142017338,"question_id":572,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704856758,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1142017338/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n     \n        if(root==null && subRoot==null)\n            return true;\n        \n        if(root==null || subRoot==null)\n            return false;\n        \n        if(isSameTree(root, subRoot))\n            return true;\n        \n        return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot);    \n    }\n    \n    private boolean isSameTree(TreeNode a, TreeNode b){\n        \n        \n        if(a==null && b==null)\n            return true;\n        \n        if(a==null || b==null)\n            return false;\n        \n        if(a.val!=b.val)\n            return false;\n        \n        return isSameTree(a.left, b.left) && isSameTree(a.right, b.right);\n    }\n    \n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false,"flag_type":1}