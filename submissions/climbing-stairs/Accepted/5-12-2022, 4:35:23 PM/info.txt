{"id":697974324,"question_id":70,"lang":"java","lang_name":"Java","time":"2 years, 1 month","timestamp":1652344523,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/697974324/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"40.7 MB","code":"public class Solution {\n    // public int climbStairs(int n) {\n    //     int[] dp = new int[n + 1];\n    //     if (n == 1) {\n    //         return 1;\n    //     }\n    //     if (n == 2) {\n    //         return 2;\n    //     }\n    //     dp[0] = 0;\n    //     dp[1] = 1;\n    //     dp[2] = 2;\n    //     for (int i = 3; i <= n; i++) {\n    //       dp[i] = dp[i-1] + dp[i - 2];\n    //     }\n    //     return dp[n];\n    // }\n    \n    public int climbStairs(int n) {\n    \n        if(n<=3)\n            return n;\n        \n        int a = 0, b =1, res = 0;\n        \n        \n        for(int i=0; i<n; i++){\n            res = a+b;\n            a=b;\n            b=res;\n        }\n        \n        return res;\n    \n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false,"flag_type":1}