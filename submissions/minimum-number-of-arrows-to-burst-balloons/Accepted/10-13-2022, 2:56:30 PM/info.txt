{"id":821456236,"question_id":452,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665644190,"status":10,"status_display":"Accepted","runtime":"170 ms","url":"/submissions/detail/821456236/","is_pending":"Not Pending","title":"Minimum Number of Arrows to Burst Balloons","memory":"95.9 MB","code":"class Solution {\n    public int findMinArrowShots(int[][] points) {\n        Arrays.sort(points, (p1,p2)->p1[0]==p2[0]? 0 : p1[0]>p2[0]? 1:-1);\n        \n//         for(int[] p : points){\n//             System.out.print(p[0] + \",\");\n//         }\n\n//         System.out.println();\n        \n        int[] prev = points[0];\n        int cnt =0;\n        \n        for(int i=1; i<points.length; i++){\n            int[] p = points[i];\n            \n            if(p[0]<=prev[1]){\n                cnt++;\n                prev[1] = Math.min(prev[1], p[1]);\n                \n                \n            }else{\n                prev = p;\n            }\n        }\n        \n        \n        // System.out.println(Integer.MIN_VALUE);\n        // System.out.println(Integer.MAX_VALUE);\n        \n        return points.length-cnt;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-arrows-to-burst-balloons","has_notes":false,"flag_type":1}