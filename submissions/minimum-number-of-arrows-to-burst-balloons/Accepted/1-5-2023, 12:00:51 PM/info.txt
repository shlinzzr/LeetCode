{"id":871645806,"question_id":452,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672891251,"status":10,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/871645806/","is_pending":"Not Pending","title":"Minimum Number of Arrows to Burst Balloons","memory":"96.7 MB","code":"class Solution {\n    public int findMinArrowShots(int[][] points) {\n        int len = points.length;\n        \n\n        Arrays.sort(points, (a,b)->Integer.compare(a[1], b[1]));\n        \n        int[] prev = new int[2];\n        prev[0] = points[0][0];\n        prev[1] = points[0][1];\n        \n        int cnt=1;\n        for(int i=1; i<len ;i++){\n            \n            int[] p = points[i];\n            \n            // System.out.println(prev[1] + \" \" + p[0]);\n            \n            if(prev[1]>=p[0]){\n                // System.out.println(i + \" cont\");\n                continue;\n            }else{\n                cnt++;\n                // prev[0] = Math.max(p[0], prev[0]);\n                prev[1] = p[1];\n            }\n        }\n        \n        return cnt;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-arrows-to-burst-balloons","has_notes":false,"flag_type":1}