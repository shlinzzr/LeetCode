{"id":1270129273,"question_id":472,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1716877623,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1270129273/","is_pending":"Not Pending","title":"Concatenated Words","memory":"47.8 MB","code":"class Solution {\t \n    public List<String> findAllConcatenatedWordsInADict(String[] words) {\n   \n        //sort the array in asc order of word length, since longer words are formed by shorter words.\n        Arrays.sort(words, (a,b) -> a.length() - b.length());\n        \n        List<String> result = new ArrayList<>();\n        \n        //list of shorter words \n        HashSet<String> preWords = new HashSet<>();\n        \n        for(int i=0; i< words.length; i++){\n            //Word Break-I problem.\n            if(wordBreak(words[i], preWords)) result.add(words[i]);\n            preWords.add(words[i]);\n        }\n        return result;\n    }\n\n     public boolean wordBreak(String s, Set<String> set) {\n\n        Set<Integer> lenSet= new HashSet<>();\n        for(String w : set){\n            lenSet.add(w.length());\n        }\n\n        int len = s.length();\n        boolean[] dp = new boolean[len+1];\n        dp[0] = true;\n\n        for(int i=1; i<=len; i++){\n            for(int wLen : lenSet){\n                if(i-1+wLen<=len){\n                    String sub = s.substring(i-1, i-1+wLen);\n                    if(dp[i-1] && set.contains( sub )){\n                        dp[i-1+wLen]=true;\n                    }\n                }\n            }\n        }\n\n\n        return dp[len];\n    }\n    \n    private boolean wordBreak(String s, HashSet<String> preWords){\n        if(preWords.isEmpty()) return false;\n        \n        boolean[] dp = new boolean[s.length() + 1];\n        dp[0] = true;\n        \n        for(int i = 1; i <= s.length(); i++){\n            for(int j = 0; j < i; j++){\n                if(dp[j] && preWords.contains(s.substring(j, i))){\n                    dp[i] = true;\n                    break;\n                }\n            }\n        }\n        return dp[s.length()];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"concatenated-words","has_notes":false,"flag_type":1}