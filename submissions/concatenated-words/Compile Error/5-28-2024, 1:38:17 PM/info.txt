{"id":1270088478,"question_id":472,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1716874697,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1270088478/","is_pending":"Not Pending","title":"Concatenated Words","memory":"N/A","code":"class Solution {\n\n    TrieNode root;\n\n    class TrieNode {\n        TrieNode[] arr;\n        boolean isWord;\n\n        int wordCnt = 0;\n\n\n        public TrieNode(){\n            arr = new TrieNode[26];\n        }\n    }\n    public List<String> findAllConcatenatedWordsInADict(String[] words) {\n        root = new TrieNode();\n\n        List<String> res = new ArrayList<>();\n\n        \n        // buildmap\n        for(String w : words){\n            TrieNode curr = root;\n            for(char ch : w.toCharArray()){\n                if(curr[ch-'a']==null){\n                    curr[ch-'a'] = new TrieNode();\n                }\n                curr = curr[ch-'a'];\n            }\n            curr.isWord = true;\n        }\n\n        // find map\n        for(String w : words){\n            TrieNode curr = root;\n            int cnt = 0;\n            for(char ch : w.toCharArray()){\n                curr = curr.arr[ch-'a'];\n                if(curr.isWord) cnt++;\n            }\n            \n            if(curr.isWord)\n            \n        }  \n\n\n    }\n}","compare_result":null,"title_slug":"concatenated-words","has_notes":false,"flag_type":1}