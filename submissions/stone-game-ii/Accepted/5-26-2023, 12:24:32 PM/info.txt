{"id":957465239,"question_id":1240,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685075072,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/957465239/","is_pending":"Not Pending","title":"Stone Game II","memory":"43.5 MB","code":"class Solution {\n    \n    int[][] dp = new int[101][101];\n    int[] suf = new int[101];\n    \n    public int stoneGameII(int[] piles) {\n        int n = piles.length;\n        int M = 1;\n    \n        suf[n] = 0;\n        for (int i=n-1; i>=0; i--)\n            suf[i] = suf[i+1]+piles[i];\n        \n        return solve(0, 1, piles);\n    }\n    \n    private int solve(int i, int M, int[] piles)\n    {\n        if (i==piles.length) return 0;\n        if (dp[i][M]!=0)\n            return dp[i][M];\n        \n        int sum = 0;\n        for (int x=1; x<=2*M; x++)\n        {\n            if (i+x-1>=piles.length) \n                break;\n            sum += piles[i+x-1];            \n            dp[i][M] = Math.max(dp[i][M], sum + suf[i+x] - solve(i+x, Math.max(x,M), piles));\n        }\n        return dp[i][M];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-ii","has_notes":false,"flag_type":1}