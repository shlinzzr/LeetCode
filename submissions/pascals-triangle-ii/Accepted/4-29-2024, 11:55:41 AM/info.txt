{"id":1244606201,"question_id":119,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714362941,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1244606201/","is_pending":"Not Pending","title":"Pascal's Triangle II","memory":"40.8 MB","code":"class Solution {\n    public List<Integer> getRow(int rowIndex) {\n        \n        /*\n        1\n        1 1\n        1 2 1\n        1 3 3 1\n        1 4 6 4 1\n        \n        \n        */\n        \n        rowIndex++;\n        \n        \n        List<Integer> list = new ArrayList<>();\n        \n        int[] dp = new int[rowIndex];\n        dp[0] = 1;\n        for(int i=1; i<=rowIndex; i++){\n            \n            int[] tmp = Arrays.copyOf(dp, i);\n            for(int j=0; j<i ; j++){\n                \n                dp[j] = (j-1>=0 ? tmp[j-1] :0 ) + tmp[j];\n                \n                \n            }\n            \n            // for(int d: dp){\n            //     System.out.print(d + \" ,\");\n            // }\n            // System.out.println();\n        }\n        \n        for(int d: dp){\n            list.add(d);\n        }\n        \n        return list;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"pascals-triangle-ii","has_notes":false,"flag_type":1}