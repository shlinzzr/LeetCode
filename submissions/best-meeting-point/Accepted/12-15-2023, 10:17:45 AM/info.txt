{"id":1119989745,"question_id":296,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702606665,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1119989745/","is_pending":"Not Pending","title":"Best Meeting Point","memory":"46.4 MB","code":"class Solution {\n    public int minTotalDistance(int[][] grid) {\n        int h= grid.length;\n        int w = grid[0].length;\n\n        List<Integer> xList = new ArrayList<>();\n        List<Integer> yList = new ArrayList<>();\n        List<int[]> list = new ArrayList<>();\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                if(grid[i][j]==1){\n                    xList.add(j);\n                    yList.add(i);\n                    list.add(new int[]{i, j});\n                }\n            }\n        }\n\n        Collections.sort(xList);\n        Collections.sort(yList);\n        int x = xList.get(xList.size()/2);\n        int y = yList.get(yList.size()/2);\n\n        int res = 0;\n        for(int[] p : list){\n            res += Math.abs(p[0]-y) + Math.abs(p[1]-x);\n        }\n\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"best-meeting-point","has_notes":false,"flag_type":1}