{"id":1122192896,"question_id":296,"lang":"java","lang_name":"Java","time":"5 months, 4 weeks","timestamp":1702865048,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1122192896/","is_pending":"Not Pending","title":"Best Meeting Point","memory":"46.8 MB","code":"class Solution {\n    public int minTotalDistance(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n\n        List<Integer> xlist = new ArrayList<>();\n        List<Integer> ylist = new ArrayList<>();\n        List<int[]> list = new ArrayList<>();\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                if(grid[i][j]==1){\n                    xlist.add(j);\n                    ylist.add(i);\n                    list.add(new int[]{i, j});\n                }\n            }\n        }\n\n        Collections.sort(xlist);\n        Collections.sort(ylist);\n\n        int r = ylist.get(ylist.size()/2);\n        int c = xlist.get(xlist.size()/2);\n\n        int res= 0 ;\n\n        for(int[] p : list){\n            res+= Math.abs(r-p[0]) + Math.abs(c-p[1]);\n        }\n\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"best-meeting-point","has_notes":false,"flag_type":1}