{"id":1277333595,"question_id":1559,"lang":"java","lang_name":"Java","time":"1 week, 1 day","timestamp":1717498332,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/1277333595/","is_pending":"Not Pending","title":"Cherry Pickup II","memory":"45.7 MB","code":"class Solution {\n    public int cherryPickup(int[][] grid) {\n        \n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int[][][] dp = new int[h+1][w+2][w+2]; // i, x1, x2\n        \n        for(int i=0; i<=h; i++){\n            for(int j=0; j<=w+1; j++){\n                Arrays.fill(dp[i][j], Integer.MIN_VALUE/2);\n            }\n        }\n        \n        dp[0][1][w] = grid[0][0] + grid[0][w-1];\n        System.out.println(0 + \" \" + dp[0][1][w]);\n        int max = Integer.MIN_VALUE;\n        \n        for(int i=1; i<h; i++){\n            for(int x1=1; x1<=w; x1++){\n                for(int x2=1; x2<=w; x2++){\n                    \n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1-1][x2-1]);\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1-1][x2]);\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1-1][x2+1]);\n\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1][x2-1]);\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1][x2]);\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1][x2+1]);\n\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1+1][x2-1]);\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1+1][x2]);\n                    dp[i][x1][x2] = Math.max(dp[i][x1][x2], dp[i-1][x1+1][x2+1]);\n                    \n                    if(x1==x2) \n                        dp[i][x1][x2]+= grid[i][x1-1];\n                    else \n                        dp[i][x1][x2] += grid[i][x1-1] + grid[i][x2-1];\n                    \n                    max = Math.max(max, dp[i][x1][x2]);\n                }\n            }\n            // System.out.println(i + \" \" + max);\n        }\n        \n        \n        return max;\n        \n        \n            \n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"cherry-pickup-ii","has_notes":false,"flag_type":1}