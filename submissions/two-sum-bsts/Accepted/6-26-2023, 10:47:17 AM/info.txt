{"id":979690957,"question_id":1150,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1687747637,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/979690957/","is_pending":"Not Pending","title":"Two Sum BSTs","memory":"43.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {\n        HashSet<Integer> set = new HashSet();\n        helper(root1, set);\n        \n        return helper2(root2, set, target);\n        \n    }\n    \n    private boolean helper2(TreeNode r2, HashSet<Integer> set, int target){\n        \n        if(r2==null)\n            return false;\n        \n        int find = target-r2.val;\n        \n        if(set.contains(find))\n            return true;\n        \n        \n        \n        \n        return helper2(r2.left,set,target) || helper2(r2.right, set, target);\n        \n        \n        \n    }\n    \n    \n    private void helper(TreeNode r1, HashSet<Integer> set){\n        if(r1==null)\n            return;\n        \n        \n        set.add(r1.val);\n        \n        helper(r1.left, set);\n        helper(r1.right,set);\n    }\n        \n}\n\n\n","compare_result":"1111111111111111111","title_slug":"two-sum-bsts","has_notes":false,"flag_type":1}