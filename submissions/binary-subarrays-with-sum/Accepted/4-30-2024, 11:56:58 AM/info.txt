{"id":1245419687,"question_id":966,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714449418,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1245419687/","is_pending":"Not Pending","title":"Binary Subarrays With Sum","memory":"52.5 MB","code":"class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n\r\n        int len =  nums.length;\r\n\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        map.put(0, 1);\r\n\r\n\r\n        int res= 0 ;\r\n        int cur = 0 ;\r\n        for(int i=0; i<len; i++){\r\n\r\n            int n = nums[i];\r\n            cur+=n;\r\n            if(map.containsKey(cur-goal)){\r\n                res += map.get(cur-goal);\r\n            }\r\n            map.put(cur, map.getOrDefault(cur,0)+1);\r\n        }\r\n\r\n        return res;\r\n        \r\n    }\r\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-subarrays-with-sum","has_notes":false,"flag_type":1}