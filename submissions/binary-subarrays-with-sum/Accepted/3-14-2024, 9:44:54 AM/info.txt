{"id":1203043099,"question_id":966,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710380694,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1203043099/","is_pending":"Not Pending","title":"Binary Subarrays With Sum","memory":"52.7 MB","code":"class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        int len = nums.length;\r\n\r\n\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        map.put(0,1);\r\n        int res = 0 ;\r\n        int sum = 0 ;\r\n        for(int i=0; i<len; i++){\r\n            sum+= nums[i];\r\n\r\n            if(map.containsKey(sum-goal)){\r\n                res += map.get(sum-goal);\r\n            }\r\n\r\n            map.put(sum, map.getOrDefault(sum,0)+1);\r\n\r\n        }\r\n\r\n        return res;\r\n    }\r\n}\r\n\r\n// 1 1 2 2 3","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-subarrays-with-sum","has_notes":false,"flag_type":1}