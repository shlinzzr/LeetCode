{"id":1135262641,"question_id":2709,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704255995,"status":10,"status_display":"Accepted","runtime":"1028 ms","url":"/submissions/detail/1135262641/","is_pending":"Not Pending","title":"Count the Number of Square-Free Subsets","memory":"65.2 MB","code":"class Solution {\n    \n    int M = (int) 1e9+7;\n    long[][] dp = new long[1001][1025]; // [length of nums][2^10 of primes]\n     \n    int[] primes = new int[]{2,3,5,7,11,13,17,19,23,29};\n    public int squareFreeSubsets(int[] nums) {\n        int n = nums.length;\n\n        dp[0][0]=1;\n\n        long res = 0;\n        for(int i=1; i<=n; i++){\n            for(int state=0; state<(1<<10); state++){\n                \n\n                if(nums[i-1]==1){\n                    dp[i][state] = dp[i-1][state] *2 %M;\n                }else{\n                    //not select nums[i-1]  : base case\n                    dp[i][state] = dp[i-1][state];\n\n                    // select nums[i-1]\n                    int s = encode(nums[i-1]);\n                    if(s!=-1 && (state & s)==s){\n                        dp[i][state] =  (dp[i][state] + dp[i-1][state-s])%M;\n                    }\n                }\n\n                if(i==n){\n                    res = (res + dp[i][state] )%M;\n                }\n            }\n        }\n\n        return (int)(res+M-1)%M; // 減去什麼都不選\n    }\n\n    private int encode(int x){\n\n        int s = 0;\n        for(int i=0; i<10; i++){\n            int cnt=0; \n            while(x%primes[i]==0){\n                cnt++;\n                x/=primes[i];\n            }\n\n            if(cnt>1){\n                return -1;\n            }else if(cnt==1){\n                s += (1<<i);\n            }\n        }\n\n        return s;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"count-the-number-of-square-free-subsets","has_notes":false,"flag_type":1}