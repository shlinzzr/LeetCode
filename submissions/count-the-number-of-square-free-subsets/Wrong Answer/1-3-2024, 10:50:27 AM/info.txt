{"id":1135197655,"question_id":2709,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704250227,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1135197655/","is_pending":"Not Pending","title":"Count the Number of Square-Free Subsets","memory":"N/A","code":"class Solution {\n\n    int M = (int) 1e9+7;\n    public int squareFreeSubsets(int[] nums) {\n        int len = nums.length;\n\n        boolean[] isSquFree = new boolean[len];\n        int cnt=0;\n        for(int i=0; i<len; i++){\n            int n = nums[i];\n            int sq =(int)Math.sqrt(n);\n            boolean isSqu =  n==1 ? false : sq*sq==n;\n            boolean notSqu = !isSqu;\n            isSquFree[i] = notSqu;\n\n            //  System.out.println( (sq*sq==n) + \" \" + notSqu);\n\n            if(notSqu) cnt++;\n        }\n        int res = 0;\n        int prod =1 ;\n        for(int i=0; i<cnt; i++){\n            prod *= 2 %M;\n        }\n        return cnt>0 ? prod -1: res;\n        // System.out.println(cnt);\n\n        // return (int)Math.pow(2,cnt)-1;\n\n    }\n}","compare_result":"11000000000000000000000000000000000000000100","title_slug":"count-the-number-of-square-free-subsets","has_notes":false,"flag_type":1}