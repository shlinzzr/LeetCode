{"id":1124955677,"question_id":2201,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703150072,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1124955677/","is_pending":"Not Pending","title":"Valid Arrangement of Pairs","memory":"N/A","code":"class Solution {\n    public int[][] validArrangement(int[][] pairs) {\n        int len = pairs.length;\n        int[][] res = new int[len][];\n      \n        HashMap<Integer, List<Integer>> map = new HashMap<>();\n\n        HashMap<Integer, Integer> out = new HashMap<>();\n        HashMap<Integer, Integer> in = new HashMap<>();\n\n\n        for(int i=0; i<len; i++){\n            map.putIfAbsent(pairs[i][0], new ArrayList<>());\n            map.get(pairs[i][0]).add(i);\n\n            out.put(pairs[i][0], out.getOrDefault(pairs[i][0], 0)+1);\n            in.put(pairs[i][1], in.getOrDefault(pairs[i][1], 0)+1);\n        }\n\n         //find st point;\n        int st = pairs[0][0];\n        for(int key : out.keySet()){\n            if(out.getOrDefault(key, 0)-in.getOrDefault(key,0)==1){\n                st = key;\n                break;\n            }\n        }\n\n        for(int i : map.get(st)){\n            boolean[] seen = new boolean[len];\n            seen[i]=true;\n            if(dfs(pairs, i, map, seen, res, 0)){\n                return res;\n            }\n        }\n        \n\n        return res;\n        \n    }\n\n    private boolean dfs(int[][] pairs, int i, HashMap<Integer, List<Integer>> map, boolean[] seen ,int[][] res , int idx){\n\n        int len = pairs.length;\n       \n        \n        int[] cur = pairs[i];\n        res[idx]=cur;\n\n        if(idx==len-1) return true;\n\n        // for(int[] r : res){\n        //     if(r!=null)\n        //     System.out.print(\"{\"+r[0]+\",\"+r[1]+\"},\");\n        // }System.out.println();\n\n        for(int next : map.getOrDefault(cur[1], new ArrayList<>())){\n\n            // System.out.println(\"cur=[\"+cur[0]+\",\"+cur[1]+ \"], next=\"+next);\n\n            if(seen[next]==false){\n                seen[next]=true;\n                if(dfs(pairs, next, map, seen, res, idx+1))\n                    return true;\n                seen[next]=false;\n            }\n        }\n\n        return false;\n\n\n    }\n}","compare_result":"111111111111111111100000000000000000000","title_slug":"valid-arrangement-of-pairs","has_notes":false,"flag_type":1}