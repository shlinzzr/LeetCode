{"id":1023594869,"question_id":1710,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692245049,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1023594869/","is_pending":"Not Pending","title":"Find Servers That Handled Most Number of Requests","memory":"N/A","code":"class Solution {\n    public List<Integer> busiestServers(int k, int[] arrival, int[] load) {\n        int[] count = new int[k];\n        boolean[] isBusy = new boolean[k];\n        \n        HashMap<Integer, TreeMap<Integer, Integer>> map = new HashMap<>(); // serverid, <st, ed>\n        // ok\n        // ----|>---<|---insert---|>----<|--\n        //     st   ed            st.   ed\n        //.   (if ed null, st must null),   (if st null, ed must null) && (if ed exist, st must< insert)&& (if st not null, ed must > st)\n        \n        // fail\n        // ---<|--|>--insert---<|--|>--\n        //    ed  st           ed  st\n        //   (ed null or ed<st)    (st null or st>ed)\n        \n        int len = arrival.length;\n        \n        for(int i=0; i<len; i++){\n            int st = arrival[i];\n            int ed = st+load[i];\n            \n            boolean found = false;\n            int id =0;\n            for(int j=0; j<k; j++ ){\n                \n                id = (i+j)%k;\n                map.putIfAbsent(id, new TreeMap<>());\n                \n                Integer prevSt = map.get(id).lowerKey(st);\n                if(prevSt==null){\n                    map.get(id).put(st, ed);\n                    found=true;\n                    break;\n                }else{\n                    int prevEd = map.get(id).get(prevSt);\n                    if(prevEd<=st){\n                        map.get(id).put(st, ed);\n                        found = true;\n                        break;\n                    }else{\n                        // server is busy\n                    }\n                }\n            }\n            \n            if(found==false) // all server busy\n            {\n                continue;\n            }\n            \n            count[id]++;\n        }\n        \n        // for(int c: count){\n        //     System.out.print(c + \",\");    \n        // }\n        // System.out.println();\n        \n        \n        int max= 0;\n        List<Integer> res = new ArrayList<>();\n        for(int i=0; i<k; i++){\n            if(count[i]>max){\n                max = count[i];\n                res = new ArrayList<>();\n                res.add(i);\n            }else if(count[i]==max){\n                res.add(i);\n            }\n        }\n\n        return res;\n            \n            \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000","title_slug":"find-servers-that-handled-most-number-of-requests","has_notes":false,"flag_type":1}