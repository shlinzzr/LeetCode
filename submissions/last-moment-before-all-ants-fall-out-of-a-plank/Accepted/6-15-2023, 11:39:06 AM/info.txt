{"id":971567657,"question_id":1627,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686800346,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/971567657/","is_pending":"Not Pending","title":"Last Moment Before All Ants Fall Out of a Plank","memory":"43.5 MB","code":"class Solution {\n    public int getLastMoment(int n, int[] left, int[] right) {\n        \n        \n        int rightMost = 0;\n        int leftMost = n;\n        \n        for(int l : left){\n            rightMost = Math.max(rightMost, l);\n        }\n        \n        for(int r: right){\n            leftMost = Math.min(leftMost, r);\n        }\n        \n        \n        return  Math.max(n-leftMost, rightMost);\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"last-moment-before-all-ants-fall-out-of-a-plank","has_notes":false,"flag_type":1}