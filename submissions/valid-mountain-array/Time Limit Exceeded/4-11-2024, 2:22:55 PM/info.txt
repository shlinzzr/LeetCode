{"id":1229176449,"question_id":978,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712816575,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1229176449/","is_pending":"Not Pending","title":"Valid Mountain Array","memory":"N/A","code":"class Solution {\n    public boolean validMountainArray(int[] arr) {\n        \n        \n        int len = arr.length, st=1, ed=len-2;\n        \n        if(len<3) return false;\n        \n        while(st<ed){\n            int mid = st+(ed-st)/2;\n            \n            if(arr[mid]>arr[mid-1] && arr[mid]>arr[mid+1]){\n                if(ckm(arr, st)==false) return false;\n            }else if(arr[mid]<arr[mid+1]){\n                st = mid+1;\n            }else if(arr[mid-1]> arr[mid]){\n                ed = mid-1;\n            }\n        }\n        \n        if(ckm(arr, st)==false) return false;\n        \n        if(arr[st]>arr[st-1] && arr[st]>arr[st+1]){\n            return true;\n        }\n         \n        \n        \n        \n        return false;\n        \n    }\n    \n    private boolean ckm(int[] arr, int st){\n        \n        int len = arr.length;\n         for(int i=1; i<st; i++){\n            \n            if(arr[i-1]>=arr[i])return false;\n            \n        }\n        \n        for(int i=st; i<len-1; i++){\n            if(arr[i]<=arr[i+1]) return false;\n        }\n        \n        return true;\n    }\n}","compare_result":"11000000000000000000000000000000000000000000000000000","title_slug":"valid-mountain-array","has_notes":false,"flag_type":1}