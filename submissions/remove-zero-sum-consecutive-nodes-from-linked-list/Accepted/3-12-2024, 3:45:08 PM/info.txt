{"id":1201315337,"question_id":1267,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710229508,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1201315337/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"44.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n        public ListNode removeZeroSumSublists(ListNode head) {\n        ListNode dummy = new ListNode(0), cur = dummy;\n        dummy.next = head;\n        int prefix = 0;\n        Map<Integer, ListNode> m = new HashMap<>();\n        while (cur != null) {\n            prefix += cur.val;\n            if (m.containsKey(prefix)) {\n                cur =  m.get(prefix).next;\n                int p = prefix + cur.val;\n                while (p != prefix) {\n                    m.remove(p);\n                    cur = cur.next;\n                    p += cur.val;\n                }\n                m.get(prefix).next = cur.next;\n            } else {\n                m.put(prefix, cur);\n            }\n            cur = cur.next;\n        }\n        return dummy.next;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}