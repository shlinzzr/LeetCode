{"id":1201351153,"question_id":1267,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710233056,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1201351153/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"44.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeZeroSumSublists(ListNode head) {\n\n        ListNode dummy = new ListNode(0);\n        dummy.next = head;\n        ListNode curr = dummy;\n\n        HashMap<Integer, ListNode > map = new HashMap<>();\n        int presum = 0;\n        while(curr!=null){\n            presum += curr.val;\n            if(map.containsKey(presum)){\n                ListNode to_del = map.get(presum).next;\n                int p = presum + to_del.val;\n                while(p!=presum){\n                    map.remove(p);\n                    to_del=to_del.next;\n                    p+=to_del.val;\n                }\n                map.get(presum).next = to_del.next;\n            }else{\n                map.put(presum, curr);\n            }\n            curr = curr.next;\n        }\n\n        return dummy.next;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false,"flag_type":1}