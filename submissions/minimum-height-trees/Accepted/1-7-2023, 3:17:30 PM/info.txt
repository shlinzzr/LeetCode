{"id":873122059,"question_id":310,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673075850,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/873122059/","is_pending":"Not Pending","title":"Minimum Height Trees","memory":"55.6 MB","code":"class Solution {\n    public List<Integer> findMinHeightTrees(int n, int[][] edges) {\n        \n        if (n == 1) return Collections.singletonList(0);\n        \n        List<Set<Integer>> adjList = new ArrayList<>();\n        \n        for(int i=0; i<n;i++) \n            adjList.add(new HashSet<>());\n        \n        for(int[] arr:edges){\n            adjList.get(arr[0]).add(arr[1]);\n            adjList.get(arr[1]).add(arr[0]);\n        }\n        \n        List<Integer> leaves = new ArrayList<>();\n        for(int i=0; i<adjList.size(); i++){\n            Set<Integer> set =adjList.get(i);\n            if(set.size()==1){\n                leaves.add(i);\n            }\n        }\n        \n        \n        while(n>2){\n            n-=leaves.size();\n            List<Integer> newLeaves = new ArrayList<>();\n            for(int leaf : leaves){\n                \n                int adj = adjList.get(leaf).iterator().next();\n                adjList.get(adj).remove(leaf);\n                if (adjList.get(adj).size() == 1) \n                    newLeaves.add(adj);\n                \n               \n            }\n            leaves = newLeaves;\n             \n        }\n        \n        \n        return leaves;\n        \n        \n         \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-height-trees","has_notes":false,"flag_type":1}