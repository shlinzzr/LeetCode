{"id":1099302951,"question_id":1040,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1700042359,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1099302951/","is_pending":"Not Pending","title":"Maximum Binary Tree II","memory":"40.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoMaxTree(TreeNode root, int val) {\n        if(root==null){\n            return new TreeNode(val);\n        }else if(root.val<val){\n            TreeNode newRoot = new TreeNode(val);\n            newRoot.left = root;\n            return newRoot;\n        }else if(root.val>val){\n            root.right = insertIntoMaxTree(root.right, val);\n            return root;\n        }\n\n        return null;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree-ii","has_notes":false,"flag_type":1}