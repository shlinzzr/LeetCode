{"id":805786783,"question_id":718,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663818122,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/805786783/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"N/A","code":"class Solution {\n    public int findLength(int[] nums1, int[] nums2) {\n        int st1=0, st2=0, len1=nums1.length, len2=nums2.length;\n        \n        int max = 0;\n        for(int i=0; i<len1; i++){\n            \n            for(int j=0; j<len2; j++){\n                \n                for(int k=0;  k+i<len1 && k+j<len2 && nums1[i+k]==nums2[k+j]; k++){\n                    \n                    \n                    \n                    max = Math.max(k+1,max);\n                    // System.out.println(\" i=\"+i+\" j=\"+j+\" m=\"+max);\n                }\n            }\n            \n        }\n        \n        return max;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111110000000","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}