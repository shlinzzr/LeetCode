{"id":805918649,"question_id":718,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663831501,"status":10,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/805918649/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"82.6 MB","code":"class Solution {\n    public int findLength(int[] nums1, int[] nums2) {\n        // dp[i][j] = dp[i-1][j-1] + 1\n        // 求 max dp[i][j];\n        int[][] dp = new int[nums1.length][nums2.length];\n        \n        int max=0;\n        for(int i=0; i<nums1.length; i++){\n            for(int j=0; j<nums2.length; j++){\n                \n                if(nums1[i]==nums2[j]){\n                    if(i>0 && j>0){\n                        dp[i][j]=dp[i-1][j-1]+1;\n                    }else{\n                        dp[i][j]=1;\n                    }\n                }\n                \n                max = Math.max(dp[i][j], max);\n                \n            }\n        }\n    \n        return max;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}