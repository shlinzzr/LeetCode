{"id":805791924,"question_id":718,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663818624,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/805791924/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"51 MB","code":"class Solution {\n    public int findLength(int[] A, int[] B) {\n        \n         // dp[i][j] +1  = dp[i+1][j+1]\n        // ans: max(dp[i][j]);\n        \n        int ans = 0;\n        int[][] dp = new int[A.length + 1][B.length + 1];\n        for (int i = A.length - 1; i >= 0; --i) {\n            for (int j = B.length - 1; j >= 0; --j) {\n                if (A[i] == B[j]) {\n                    dp[i][j] = dp[i+1][j+1] + 1;\n                    if (ans < dp[i][j]) ans = dp[i][j];\n                }\n            }\n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}