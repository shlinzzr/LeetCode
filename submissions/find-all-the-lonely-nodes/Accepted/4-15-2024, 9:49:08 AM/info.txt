{"id":1232652757,"question_id":1609,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1713145748,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1232652757/","is_pending":"Not Pending","title":"Find All The Lonely Nodes","memory":"44.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> getLonelyNodes(TreeNode root) {\n        List<Integer> res= new ArrayList<>();\n        helper(root, res, false);\n        return res;\n    }\n\n    private void helper(TreeNode node, List<Integer> res, boolean isLonely){\n        if(node==null) return;\n\n        if(isLonely) res.add(node.val);\n\n\n        \n        helper(node.left, res, node.right==null);\n        helper(node.right, res, node.left==null);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-all-the-lonely-nodes","has_notes":false,"flag_type":1}