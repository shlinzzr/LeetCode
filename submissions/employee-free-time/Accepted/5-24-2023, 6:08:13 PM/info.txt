{"id":956366592,"question_id":761,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684922893,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/956366592/","is_pending":"Not Pending","title":"Employee Free Time","memory":"45.4 MB","code":"/*\n// Definition for an Interval.\nclass Interval {\n    public int start;\n    public int end;\n\n    public Interval() {}\n\n    public Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\n    public List<Interval> employeeFreeTime(List<List<Interval>> schedule) {\n        List<Interval> res = new ArrayList<>();\n        \n        PriorityQueue<Interval> pq = new PriorityQueue<>(\n            (i1, i2) -> i1.start==i2.start ? i1.end-i2.end : i1.start-i2.start\n        );\n        \n        for(List<Interval> list : schedule){\n            for(Interval i1 : list){\n                pq.add(i1);\n            }\n        }\n        List<Interval> list = new ArrayList<>();\n        while(!pq.isEmpty())\n            list.add(pq.poll());\n        \n        \n        if(list.size()==1)\n            return res;\n        \n        \n        Interval prev = list.get(0);\n        for(int i=1; i<list.size(); i++){\n            \n            Interval curr = list.get(i);\n            \n            if(prev.end<curr.start){\n                prev.start = prev.end;\n                prev.end = curr.start;\n                res.add(prev);\n            }else{\n                curr.end = Math.max(prev.end, curr.end);\n            }\n            prev = curr;\n        }\n        \n        return res;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"employee-free-time","has_notes":false,"flag_type":1}