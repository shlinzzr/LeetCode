{"id":1269207930,"question_id":761,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1716797654,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1269207930/","is_pending":"Not Pending","title":"Employee Free Time","memory":"45.6 MB","code":"/*\n// Definition for an Interval.\nclass Interval {\n    public int start;\n    public int end;\n\n    public Interval() {}\n\n    public Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\n    public List<Interval> employeeFreeTime(List<List<Interval>> schedule) {\n\n        List<Interval> res = new ArrayList<>();\n\n        Map<Integer, Integer> map = new HashMap<>();\n        for(List<Interval> list : schedule){\n            for(Interval it : list){\n\n                map.put(it.start, map.getOrDefault(it.start, 0) +1);\n                map.put(it.end, map.getOrDefault(it.end, 0) -1);\n            }\n        }\n\n        List<Integer> keys = new ArrayList<>(map.keySet());\n        Collections.sort(keys);\n\n        int prev = -1;\n        int cur =0 ;\n        for(int x : keys){\n\n            if(cur==0 && prev!=-1){\n                Interval it = new Interval(prev, x);\n                res.add(it);\n            }\n            cur += map.get(x);\n            prev = x;\n        }\n\n        return res;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"employee-free-time","has_notes":false,"flag_type":1}