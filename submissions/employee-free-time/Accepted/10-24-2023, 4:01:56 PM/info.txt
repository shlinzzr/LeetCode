{"id":1082826241,"question_id":761,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1698134516,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1082826241/","is_pending":"Not Pending","title":"Employee Free Time","memory":"44.9 MB","code":"/*\n// Definition for an Interval.\nclass Interval {\n    public int start;\n    public int end;\n\n    public Interval() {}\n\n    public Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\n    public List<Interval> employeeFreeTime(List<List<Interval>> schedule) {\n        List<Interval> res = new ArrayList<>();\n        \n        List<Interval> list = new ArrayList<>();\n        for(List<Interval> sch : schedule){\n            for(Interval i1 : sch){\n                list.add(i1);\n            }\n        }\n        Collections.sort(list, (a, b) -> a.start==b.start ? a.end-b.end : a.start-b.start);\n        \n        // edge case\n        if(list.size()==1)\n            return res;\n        \n        \n        Interval prev = list.get(0);\n        for(int i=1; i<list.size(); i++){\n            \n            Interval curr = list.get(i);\n            \n            if(prev.end < curr.start){\n                Interval val = new Interval(prev.end, curr.start);\n                res.add(val);\n                \n            }else{\n                curr.end = Math.max(prev.end, curr.end);\n            }\n            \n            prev= curr;\n        }\n        \n        \n        \n        return res;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"employee-free-time","has_notes":false,"flag_type":1}