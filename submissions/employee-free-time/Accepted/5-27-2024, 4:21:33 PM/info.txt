{"id":1269212926,"question_id":761,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1716798093,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1269212926/","is_pending":"Not Pending","title":"Employee Free Time","memory":"45.8 MB","code":"/*\n// Definition for an Interval.\nclass Interval {\n    public int start;\n    public int end;\n\n    public Interval() {}\n\n    public Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\n    public List<Interval> employeeFreeTime(List<List<Interval>> sche) {\n\n        List<Interval> res = new ArrayList<>();\n\n        List<Interval> all = new ArrayList<>();\n        for(List<Interval> sub : sche){\n            all.addAll(sub);\n        }\n\n        Collections.sort(all, (a,b)-> a.start!=b.start ? a.start-b.start : a.end-b.end);\n\n        if(all.isEmpty()) return res;\n\n        Interval prev = all.get(0);\n        for(int i=1; i<all.size(); i++){\n            Interval curr = all.get(i);\n\n            if(prev.end<curr.start){\n                Interval it = new Interval(prev.end, curr.start);\n                res.add(it);\n                prev = curr;\n                continue;\n\n            }else if(prev.end>= curr.start) {\n                prev.end = Math.max(prev.end, curr.end);\n            }\n        }\n\n        return res;\n\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"employee-free-time","has_notes":false,"flag_type":1}