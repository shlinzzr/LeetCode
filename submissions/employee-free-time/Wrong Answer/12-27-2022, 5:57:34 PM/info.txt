{"id":866272425,"question_id":761,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672135054,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866272425/","is_pending":"Not Pending","title":"Employee Free Time","memory":"N/A","code":"/*\n// Definition for an Interval.\nclass Interval {\n    public int start;\n    public int end;\n\n    public Interval() {}\n\n    public Interval(int _start, int _end) {\n        start = _start;\n        end = _end;\n    }\n};\n*/\n\nclass Solution {\n    public List<Interval> employeeFreeTime(List<List<Interval>> schedule) {\n        List<Interval> res = new ArrayList<>();\n        \n        PriorityQueue<Interval> pq = new PriorityQueue<>(\n            (i1, i2) -> i1.start==i2.start ? i1.end-i2.end : i1.start-i2.start\n        );\n        \n        for(List<Interval> list : schedule){\n            for(Interval i1 : list){\n                pq.add(i1);\n            }\n        }\n        List<Interval> list = new ArrayList<>();\n        while(!pq.isEmpty())\n            list.add(pq.poll());\n        \n        \n        if(list.size()==1)\n            return res;\n        \n        \n        Interval curr = list.get(0);\n        for(int i=1; i<list.size(); i++){\n            \n            Interval next = list.get(i);\n            \n            if(curr.end<next.start){\n                curr.start = curr.end;\n                curr.end = next.start;\n                res.add(curr);\n            }\n            curr=next;\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"1111111111110000000000000000000000000000001111111111","title_slug":"employee-free-time","has_notes":false,"flag_type":1}