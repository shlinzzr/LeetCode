{"id":914768714,"question_id":2657,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678766060,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/914768714/","is_pending":"Not Pending","title":"Minimum Time to Complete All Tasks","memory":"N/A","code":"class Solution {\n    public int findMinimumTime(int[][] tasks) {\n        int[] slot= new int[2001];\n        \n        HashMap<Integer, List<Integer>> map = new HashMap<>(); // slot, taskId;\n        \n        int total=0;\n        for(int j=0; j<tasks.length; j++){\n            int[] t = tasks[j];\n            \n            for(int i=t[0], i<=t[2]; i++){\n                slot[i]++;\n            }\n            \n            map.putIfAbsent(i, new ArrayList<>());\n            map.get(i).add(j);\n            \n            total+= t[2];\n        }\n        \n        PriorityQueue<int[]> pq = new PriorityQueue(\n            (a,b) -> b[1]-a[1]\n        );\n        \n        for(int i=0; i<2001; i++){\n            pq.offer(new int[]{i, slot[i]});\n        }\n        \n        while(!pq.isEmpty() && total>0){\n            \n            int[] p = pq.poll();\n            \n            \n            \n            \n            \n        }\n        \n        \n        \n        \n    }\n}","compare_result":null,"title_slug":"minimum-time-to-complete-all-tasks","has_notes":false,"flag_type":1}