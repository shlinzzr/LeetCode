{"id":1143892801,"question_id":136,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1705033911,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1143892801/","is_pending":"Not Pending","title":"Single Number","memory":"46 MB","code":"class Solution {\n    public int singleNumber(int[] nums) {\n        \n        int xor = 0;\n        for(int n : nums){\n            xor^=n;\n        }\n        \n        return xor;\n//         int len = nums.length;\n        \n        \n//         // [2,2,1]  // val should be on the pos val-1 => pos i should be val i+1\n        \n//         for(int i=0; i<len; i++){\n            \n//             if(nums[nums[i]-1]==nums[i]) return nums[i];\n//             while(nums[nums[i]-1]!=nums[i]){\n//                 swap(nums, i, nums[i]-1);\n                \n//             }\n//         }\n//         return -1;\n        \n//     }\n    \n//     private void swap(int[] nums, int a, int b){\n//         int t = nums[a];\n//         nums[a] = nums[b];\n//         nums[b] = t;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"single-number","has_notes":false,"flag_type":1}