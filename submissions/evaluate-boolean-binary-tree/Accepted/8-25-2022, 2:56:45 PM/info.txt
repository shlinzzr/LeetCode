{"id":782858465,"question_id":2416,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1661410605,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/782858465/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"46.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean evaluateTree(TreeNode root) {\n    \n        if(root.val <2)\n            return root.val==0? false : true;\n        \n        boolean left = evaluateTree(root.left);\n        boolean right = evaluateTree(root.right);\n        \n        if(root.val==2)\n            return left || right;\n        else \n            return left && right;\n        \n    }\n    \n    \n    \n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"flag_type":1}