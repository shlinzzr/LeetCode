{"id":939266203,"question_id":2413,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682390418,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/939266203/","is_pending":"Not Pending","title":"Smallest Number in Infinite Set","memory":"43.4 MB","code":"class SmallestInfiniteSet {\n\n    int curr;\n    TreeSet<Integer> set;\n    \n    public SmallestInfiniteSet() {\n        set = new TreeSet<>();\n        curr=1;\n    }\n    \n    public int popSmallest() {\n        \n        boolean rmset = false;\n        \n        int res = 0;\n        for(int n : set){\n            res = n;\n            \n            if(curr==res){\n                res = curr;\n                curr++;\n                rmset = true;\n            }\n            \n            \n            else if(curr<res){\n                res = curr;\n                curr++;\n            }else\n                rmset = true;\n            \n            break;\n        }\n        \n        \n        if(set.isEmpty()){\n            res= curr;\n            curr++;\n        }\n        \n        \n        if(rmset)\n            set.remove(res);\n        \n        return res;\n    }\n    \n    public void addBack(int num) {\n        set.add(num);\n    }\n}\n\n/**\n * Your SmallestInfiniteSet object will be instantiated and called as such:\n * SmallestInfiniteSet obj = new SmallestInfiniteSet();\n * int param_1 = obj.popSmallest();\n * obj.addBack(num);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-number-in-infinite-set","has_notes":false,"flag_type":1}