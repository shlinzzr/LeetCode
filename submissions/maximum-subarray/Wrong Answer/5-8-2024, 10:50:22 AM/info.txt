{"id":1252270864,"question_id":53,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715136622,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1252270864/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n        // kadane's algo\n        \n        int len = nums.length;\n\n        int maxSum = 0 , curMax = 0;\n        for(int n : nums){\n            curMax = Math.max(curMax+n, n);\n            maxSum = Math.max(curMax, maxSum);\n        }\n\n        return maxSum;\n\n        \n        // int cur = 0;\n        // int max = nums[0];\n        // for(int n : nums){\n        //     if(cur<0) cur=0;\n        //     cur+=n;\n        //     max = Math.max(max, cur);\n        // }\n        \n        // return max;\n       \n        \n        \n        \n    }\n}","compare_result":"111101001110111111010111111111110111111111011110111111111011111111111110111111111111111111111111011111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111110111111111101","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}