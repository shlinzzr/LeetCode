{"id":1263575601,"question_id":53,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1716257825,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1263575601/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"57 MB","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n        // kadane's algo\n        \n        int len = nums.length;\n\n        // int max = nums[0], cur = 0;\n        // for(int n : nums){\n        //     cur = Math.max(cur+n, n);\n        //     max = Math.max(cur, max);\n        // }\n\n        // return max;\n\n        \n        int cur = 0;\n        int max = nums[0];\n        for(int n : nums){\n            if(cur<0) cur=0;\n            cur+=n;\n            max = Math.max(max, cur);\n        }\n        \n        return max;\n       \n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}