{"id":764844342,"question_id":53,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659598099,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/764844342/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"75.8 MB","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n//         int curr =0, max=Integer.MIN_VALUE;\n//         for(int i=0; i<nums.length; i++){\n//             int n = nums[i];\n            \n//             if(n>0){\n//                 if(curr<0){\n//                     curr=0;\n//                 }\n//             }else{\n//                 if(curr<n)\n//                     curr=0;\n//             }\n//             curr+=n;\n//             max = Math.max(max, curr);\n//         }\n        \n//         return max;\n        \n        \n        int max = Integer.MIN_VALUE;\n        int sum=0;\n           \n        for(int i=0; i<nums.length; i++){\n            \n            if(sum<0)\n                sum = nums[i];\n            else \n                sum = sum + nums[i];\n            \n            max = Math.max(max, sum);\n        }\n        return max;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}