{"id":678167886,"question_id":53,"lang":"java","lang_name":"Java","time":"2 years, 2 months","timestamp":1649662471,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/678167886/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"73.7 MB","code":"class Solution {\n//     public int maxSubArray(int[] nums) {\n     \n        \n//         int max = Integer.MIN_VALUE;\n        \n//         for(int i=0; i<nums.length; i++){\n//             int sum = 0;\n//             for(int j=i; j< nums.length; j++){\n                \n//                 sum = sum + nums[j];\n//                 if(sum>max)\n//                     max=sum;\n            \n//             }\n//         }\n//         return max;\n//     }\n    \n       public int maxSubArray(int[] nums) {\n     \n        // sum(0,i) = a[i] + (sum(0,i-1) < 0 ? 0 : sum(0,i-1))\n                \n           \n        int max = Integer.MIN_VALUE;\n        int sum=0;\n           \n        for(int i=0; i<nums.length; i++){\n            \n            if(sum<0)\n                sum = nums[i];\n            else \n                sum = sum + nums[i];\n            \n            max = Math.max(max, sum);\n        }\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}