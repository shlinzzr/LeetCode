{"id":1148561683,"question_id":160,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705474570,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1148561683/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"48.8 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        //boundary check\n        if(headA == null || headB == null) return null;\n        \n        ListNode a = headA;\n        ListNode b = headB;\n        \n        //if a & b have different len, then we will stop the loop after second iteration\n        while( a != b){\n            //for the end of first iteration, we just reset the pointer to the head of another linkedlist\n            a = a == null? headB : a.next;\n            b = b == null? headA : b.next;    \n        }\n        \n        return a;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}