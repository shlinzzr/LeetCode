{"id":880289330,"question_id":328,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1674011864,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/880289330/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode oddEvenList(ListNode head) {\n        ListNode oddhead = null;\n        ListNode evenhead= null;\n        ListNode oddcurr = null;\n        ListNode evencurr= null;\n        \n        \n        \n        if(head==null)\n            return null;\n        else{\n            if(head.val%2==0){\n                evenhead=head;\n                evencurr=head;\n            }else{\n                oddhead=head;\n                oddcurr=head;\n            }\n        }      \n        \n        \n        \n        ListNode curr = head;\n        while(curr!=null){\n\n            ListNode next= curr.next;\n            curr.next=null;\n            \n            if(curr.val%2==0){\n                \n                if(evenhead==null){\n                    evenhead=curr;\n                    evencurr=curr;\n                }else{\n                    evencurr.next=curr;\n                    evencurr=curr;\n                }\n            }else{\n                if(oddhead==null){\n                    oddhead=curr;\n                    oddcurr=curr;\n                }else{\n                    oddcurr.next=curr;\n                    oddcurr=curr;\n                }\n            }            \n            curr=next;\n        }\n        \n        if(oddhead==null)\n            return evenhead;\n        \n        if(evenhead==null)\n            return oddhead;\n        \n        if(head.val%2==0){\n            evencurr.next=oddhead;\n            return evenhead;\n        }else{\n            oddcurr.next=evenhead;\n            return oddhead;\n        }\n        \n    \n            \n            \n    }\n}","compare_result":"1011010101111111101111111011111111011111111111111111011111111111100000","title_slug":"odd-even-linked-list","has_notes":false,"flag_type":1}