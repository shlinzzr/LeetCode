{"id":1075526325,"question_id":3150,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697341421,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1075526325/","is_pending":"Not Pending","title":"Shortest and Lexicographically Smallest Beautiful String","memory":"41.8 MB","code":"class Solution {\n    public String shortestBeautifulSubstring(String s, int k) {\n        \n        \n        List<String> list = new ArrayList<>();\n        int st=0;\n        for(int ed=0; ed<s.length(); ed++){\n            \n            char ch = s.charAt(ed);\n            if(ch=='1')\n                k--;\n            \n            if(k>0)\n                continue;\n            \n            \n            \n            while(st<s.length() && (k<0 || s.charAt(st)=='0')  ){\n                char chst = s.charAt(st++);\n                if(chst=='1')\n                    k++;\n            }\n            \n            String sub = s.substring(st, ed+1);\n            if(!list.isEmpty() && list.get(0).length()>sub.length())\n                list = new ArrayList<>();\n            \n            if(list.isEmpty() || list.get(0).length()==sub.length())\n                list.add(sub);\n            \n        }\n        \n        Collections.sort(list);\n        \n        return list.isEmpty() ? \"\" : list.get(0);\n        \n    }\n}","compare_resulttitle_slug":"shortest-and-lexicographically-smallest-beautiful-string","has_notes":false,"flag_type":1}