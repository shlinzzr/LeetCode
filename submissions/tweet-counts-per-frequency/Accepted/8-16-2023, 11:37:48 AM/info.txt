{"id":1022627330,"question_id":1470,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692157068,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/1022627330/","is_pending":"Not Pending","title":"Tweet Counts Per Frequency","memory":"53.8 MB","code":"class TweetCounts {\n    private Map<String, TreeMap<Integer, Integer>> map;\n    \n    public TweetCounts() {\n        map = new HashMap<>();\n    }\n    \n    public void recordTweet(String tweetName, int time) {\n        \n        int min = time/60;\n        int hour = min/60;\n        int day = hour/24;\n        \n        map.putIfAbsent(tweetName, new TreeMap<>());\n        TreeMap<Integer, Integer> tmap = map.get(tweetName);\n        tmap.put(time, tmap.getOrDefault(time, 0)+1);\n        \n    }\n    \n    public List<Integer> getTweetCountsPerFrequency(String freq, String tweetName, int startTime, int endTime) {\n        if (!map.containsKey(tweetName)) \n            return null;\n        \n        List<Integer> res = new LinkedList<>();\n        \n        int interval = 0;\n        if (freq.equals(\"minute\")) {\n            interval = 60;\n        } else if (freq.equals(\"hour\")) {\n            interval = 3600;\n        } else {\n            interval = 86400;\n        }\n        \n        int size = ((endTime - startTime) / interval) +1;\n        \n        int[] buckets = new int[size];\n        \n        TreeMap<Integer, Integer> tweetMap = map.get(tweetName);\n        \n        for (Map.Entry<Integer, Integer> entry : tweetMap.subMap(startTime, endTime + 1).entrySet()) {\n            \n            int index = (entry.getKey() - startTime) / interval;\n            buckets[index] += entry.getValue();\n        }\n        \n        for (int num : buckets) res.add(num);\n        \n        return res;\n    }\n}\n\n/**\n * Your TweetCounts object will be instantiated and called as such:\n * TweetCounts obj = new TweetCounts();\n * obj.recordTweet(tweetName,time);\n * List<Integer> param_2 = obj.getTweetCountsPerFrequency(freq,tweetName,startTime,endTime);\n */","compare_result":"1111111111111111111111","title_slug":"tweet-counts-per-frequency","has_notes":false,"flag_type":1}