{"id":1120157822,"question_id":638,"lang":"java","lang_name":"Java","time":"6 months","timestamp":1702624937,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1120157822/","is_pending":"Not Pending","title":"Shopping Offers","memory":"N/A","code":"class Solution {\n    public int shoppingOffers(List<Integer> price, List<List<Integer>> special, List<Integer> needs) {\n        // special[i] : 第i offer\n        // special[i][j=0~n-1] 第i個offer中item j 的數量\n        // special[i][n] : price of #i offer\n\n        int nonSpecialPrice =0;\n\n        for(int k=0; k<special.size(); k++){\n            int specialCnt = Integer.MAX_VALUE;\n            for(int i=0; i<needs.size(); i++){\n                if(special.get(k).get(i)==0) continue;\n                specialCnt = Math.min(specialCnt, needs.get(i)/special.get(k).get(i));\n                \n                if(k==0)\n                    nonSpecialPrice += price.get(i)*needs.get(i);\n            }\n\n            int maxSpecialPrice = 0;\n            for(int i=0; i<needs.size(); i++){\n                maxSpecialPrice += (needs.get(i)-specialCnt*special.get(k).get(i))*price.get(i);\n            }\n\n            nonSpecialPrice = Math.min(maxSpecialPrice, nonSpecialPrice);\n        }\n\n\n        \n\n       return nonSpecialPrice;\n\n\n        \n    }\n\n}","compare_result":"00111111100100010010000101101110110001000000000000000000000000000","title_slug":"shopping-offers","has_notes":false,"flag_type":1}