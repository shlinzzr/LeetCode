{"id":867432817,"question_id":179,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672307671,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/867432817/","is_pending":"Not Pending","title":"Largest Number","memory":"41.7 MB","code":"class Solution {\n    public String largestNumber(int[] nums) {\n        \n        int len = nums.length;\n        \n        String[] arr = new String[len];\n        \n        for(int i=0; i<len ; i++){\n            arr[i] = String.valueOf(nums[i]);\n        }\n        \n        Arrays.sort(arr, new Comparator<String>(){\n           public int compare(String a, String b){\n               String sa = a+b;\n               String sb = b+a;\n               return sb.compareTo(sa);\n           }\n        });\n        \n        \n        if(arr[0].equals(\"0\"))\n            return \"0\";\n        \n        StringBuilder res = new StringBuilder();\n        for(String s : arr){\n            res.append(s);\n        }\n        \n        \n        \n        \n        return res.toString();\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-number","has_notes":false,"flag_type":1}