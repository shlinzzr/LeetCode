{"id":821538911,"question_id":179,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665655276,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/821538911/","is_pending":"Not Pending","title":"Largest Number","memory":"43.9 MB","code":"class Solution {\n    public String largestNumber(int[] nums) {\n        String[] arr = new String[nums.length];\n        for(int i=0; i<nums.length; i++){\n            arr[i] = String.valueOf(nums[i]);\n        }\n        \n        Arrays.sort(arr, new MyComparator());\n       \n        if (arr[0].equals(\"0\")) {\n            return \"0\";\n        }\n        \n        StringBuilder sb = new StringBuilder();\n        for(String s:arr){\n            sb.append(s);\n        }\n        \n        return sb.toString();\n        \n    }\n    \n    \n    class MyComparator implements Comparator<String>{\n        @Override\n        public int compare(String a, String b){\n            \n           String order1 = a + b;\n           String order2 = b + a;\n           return order2.compareTo(order1);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-number","has_notes":false,"flag_type":1}