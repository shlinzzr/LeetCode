{"id":757017143,"question_id":2299,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658819545,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/757017143/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"240.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeNodes(ListNode head) {\n\n        ListNode curr = head;\n        //     while(head.next!=null){\n        //     System.out.println(\"->\" + head.val);\n        //     head = head.next;\n        // }\n        \n        while(curr!=null){\n            \n         \n            moveHead(curr);\n            appendVal(curr);\n            \n            curr = curr.next;\n            \n        }\n        \n        // cut tail\n        curr = head;\n        while(curr!=null &&curr.next!=null){\n            if(curr.next.val==0)\n                curr.next = null;\n            curr = curr.next;\n        }\n        \n        \n        \n        \n        \n        return head;\n        \n        \n    }\n    \n    private ListNode moveHead(ListNode head){ \n         while(head.next!=null && head.val==0)\n            head = head.next;\n        \n         return head;\n    }\n    \n    private ListNode appendVal(ListNode head){\n         while(head.next!=null && head.next.val!=0){\n            head.val += head.next.val;\n            head.next = head.next.next;\n         }\n        \n        return head;\n            \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros","has_notes":false,"flag_type":1}