{"id":757007829,"question_id":2299,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658818737,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/757007829/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeNodes(ListNode head) {\n\n        ListNode rt = new ListNode()\n        rt.next = head;\n        \n       \n        \n        \n        while(head.next!=null){\n            \n            if(head.next.val==0)\n                moveHead(head.next);\n            else\n                head.next = appendVal(head.next);\n            \n        }\n        \n        return rt.next;\n        \n        \n    }\n    \n    private ListNode moveHead(ListNode head){  // head must be 0\n         while(head.next!=null && head.next.val==0)\n            head = head.next;\n        \n         return head;\n    }\n    \n    private ListNode appendVal(ListNode head){\n         while(head.next!=null && head.next.val!=0){\n            head.val += head.next.val;\n            head.next = head.next.next;\n         }\n        \n        return head;\n            \n    }\n    \n}","compare_result":null,"title_slug":"merge-nodes-in-between-zeros","has_notes":false,"flag_type":1}