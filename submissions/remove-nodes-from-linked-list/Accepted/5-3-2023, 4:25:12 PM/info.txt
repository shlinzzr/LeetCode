{"id":943698366,"question_id":2573,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683102312,"status":10,"status_display":"Accepted","runtime":"240 ms","url":"/submissions/detail/943698366/","is_pending":"Not Pending","title":"Remove Nodes From Linked List","memory":"61.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeNodes(ListNode head) {\n        \n        Set<ListNode> rmList = new HashSet<>();\n        \n        Stack<ListNode> st = new Stack<>();\n        ListNode curr = head;\n        \n        while(curr!=null){\n            \n            while(!st.isEmpty() && st.peek().val<curr.val){\n                rmList.add(st.pop());\n            }\n            \n            st.push(curr);\n            curr = curr.next;\n        }\n        \n        ListNode prev = null;\n        curr = head;\n        \n        while(curr!=null){\n            \n            if(rmList.contains(curr)){\n                \n                if(prev==null){\n                    head = curr.next;\n                }else{\n                    \n                    prev.next = curr.next;\n                }\n                \n            }else{\n                \n                prev= curr;\n                \n            }\n            curr=curr.next;\n            \n        }\n        \n        return head;\n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"remove-nodes-from-linked-list","has_notes":false,"flag_type":1}