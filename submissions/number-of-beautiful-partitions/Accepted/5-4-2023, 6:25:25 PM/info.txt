{"id":944298440,"question_id":2569,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683195925,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/944298440/","is_pending":"Not Pending","title":"Number of Beautiful Partitions","memory":"51.3 MB","code":"class Solution {\n    public int beautifulPartitions(String s, int K, int minLength) {\n        int len = s.length();\n        s = \"#\"+s;\n        \n        int M = (int)1e9+7;\n        \n        long[][] dp =  new long[len+1][K+1];\n        \n        dp[0][0] = 1;\n        for (int j=1; j<=K; j++)\n        {\n            long sum = 0;\n            for (int i=1; i<=len; i++)            \n            {    \n                if (i-minLength>=0 && !isprime(s.charAt(i-minLength)) && isprime(s.charAt(i-minLength+1)))\n                {\n                    sum += dp[i-minLength][j-1];\n                    sum %= M;\n                }\n                if (!isprime(s.charAt(i))) {\n                    dp[i][j] = sum;                    \n                }                \n            }\n        }\n        return (int)dp[len][K];\n    }\n                    \n    private boolean isprime(char ch)\n    {\n        return ch == '2' || ch == '3' || ch == '5' || ch == '7';\n    }     \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-beautiful-partitions","has_notes":false,"flag_type":1}