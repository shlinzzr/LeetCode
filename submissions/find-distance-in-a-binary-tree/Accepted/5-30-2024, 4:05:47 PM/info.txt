{"id":1272167144,"question_id":1883,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717056347,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1272167144/","is_pending":"Not Pending","title":"Find Distance in a Binary Tree","memory":"46.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findDistance(TreeNode root, int p, int q) {\n        TreeNode lca = find(root, p, q);\n\n        int left = getDepth(lca, p, 0);\n        int right = getDepth(lca, q, 0);\n\n\n        // System.out.println(left + \" \" + right+ \" \" +lca.val);\n\n        return left+right;\n    }\n\n    private int getDepth(TreeNode node, int p, int lv){\n        if(node==null) return Integer.MAX_VALUE/2;\n\n        if(node.val==p) return lv;\n\n        int left = getDepth(node.left, p, lv+1);\n        int right = getDepth(node.right, p, lv+1);\n\n        return Math.min(left, right);\n\n        \n\n\n\n    }\n\n    private TreeNode find(TreeNode node , int p, int q){\n        if(node==null) return null;\n        if(node.val==p || node.val==q)\n            return node;\n\n        TreeNode left = find(node.left, p, q);\n        TreeNode right = find(node.right, p, q);\n        if(left!=null&& right!=null)return node;\n\n        return left==null ? right : left;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"find-distance-in-a-binary-tree","has_notes":false,"flag_type":1}