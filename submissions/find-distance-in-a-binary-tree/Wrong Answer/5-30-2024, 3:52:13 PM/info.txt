{"id":1272158306,"question_id":1883,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717055533,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1272158306/","is_pending":"Not Pending","title":"Find Distance in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findDistance(TreeNode root, int p, int q) {\n        \n\n        // find lca\n        // cal distance of [lca, p] + [lca, q]\n        if(p==q) return 0;\n\n        return helper(root, p, q);\n    }\n\n\n    private int helper(TreeNode node, int p, int q){\n        if(node==null) return -1;\n\n        if(node.val==p || node.val==q){\n            return 1;\n        }\n\n        int left = helper(node.left, p, q);\n        int right = helper(node.right, p, q);\n\n        if(left>0 && right>0)\n            return left + right;\n\n     \n\n        int res  = 1 + (left>0 ? left : right);\n\n        // System.out.println(node.val + \" \" + left + \" \" + right + \" \" + res);\n\n        return res;\n    }\n}","compare_result":"11110111000010000000001000000000000000000000000000000000001","title_slug":"find-distance-in-a-binary-tree","has_notes":false,"flag_type":1}