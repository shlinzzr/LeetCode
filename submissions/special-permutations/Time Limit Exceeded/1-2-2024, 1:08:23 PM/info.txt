{"id":1134306727,"question_id":2848,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704172103,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1134306727/","is_pending":"Not Pending","title":"Special Permutations","memory":"N/A","code":"class Solution {\n    int MOD = (int)1e9+7;\n    int[][] dp ;\n    public int specialPerm(int[] nums) {\n        int n = nums.length;\n        dp = new int[n][1<<n];\n        return dfs(0,nums,0)%MOD;\n    }\n    public int dfs(int prevIndex, int[] nums, int mask){\n        if(((1<<nums.length)-mask)==1) return 1;\n        if(dp[prevIndex][mask]!=0) return dp[prevIndex][mask];\n        int count = 0;\n        for(int j=0;j<nums.length;j++){\n            if((mask & (1<<j)) != 0) continue;\n            if(mask==0 || nums[prevIndex]%nums[j]==0 || nums[j]%nums[prevIndex]==0){\n                count = count%MOD + dfs(j,nums,(mask|(1<<j)))%MOD;\n            }\n        }\n        return dp[prevIndex][mask]=count%MOD;\n    }\n}\n","compare_resulttitle_slug":"special-permutations","has_notes":false,"flag_type":1}