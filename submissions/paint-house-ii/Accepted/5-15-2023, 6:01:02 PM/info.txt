{"id":950704130,"question_id":265,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684144862,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/950704130/","is_pending":"Not Pending","title":"Paint House II","memory":"42.6 MB","code":"class Solution {\n    public int minCostII(int[][] costs) {\n        if (costs == null || costs.length == 0) return 0;\n            //https://www.youtube.com/watch?v=bw3-SP3jd30\n        int h = costs.length, w = costs[0].length;\n        // min1 is the index of the 1st-smallest cost till previous house\n        // min2 is the index of the 2nd-smallest cost till previous house\n        int min1 = -1;\n        int min2 = -1;\n        \n        for (int i = 0; i < h; i++) {\n            int last1 = min1;\n            int last2 = min2;\n            \n            min1 = -1; \n            min2 = -1;\n            \n            for (int j = 0; j < w; j++) {\n                if (j != last1) {\n                    // current color j is different to last min1\n                    costs[i][j] += last1 < 0 ? 0 : costs[i - 1][last1];\n                } else {\n                    costs[i][j] += last2 < 0 ? 0 : costs[i - 1][last2];\n                }\n                \n                \n                \n                // find the indices of 1st and 2nd smallest cost of painting current house i\n                if (min1 < 0 || costs[i][j] < costs[i][min1]) {\n                    min2 = min1; \n                    min1 = j;\n                    \n                } else if (min2 < 0 || costs[i][j] < costs[i][min2]) {\n                    min2 = j;\n                }\n            }\n        }\n        \n        return costs[h - 1][min1];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-ii","has_notes":false,"flag_type":1}