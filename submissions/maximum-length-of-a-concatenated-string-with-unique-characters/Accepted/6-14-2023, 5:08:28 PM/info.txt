{"id":970979181,"question_id":1360,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686733708,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/970979181/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"47.6 MB","code":"class Solution {\n    \n    int max = 0;\n    \n    public int maxLength(List<String> arr) {\n        \n        List<String> res = new ArrayList<>();\n        \n        \n        helper(arr, res , \"\", 0);\n        int max = 0; \n        \n        for(String r : res){\n            max = Math.max(max, r.length());\n        }\n        \n        \n        return max;\n    }\n    \n    private void helper(List<String> arr,List<String> res , String curr, int st ){\n        \n        if(st>=arr.size())\n            return;\n        \n        for(int i=st; i<arr.size(); i++){\n             int[] check = new int[26];\n            \n             for(char ch : curr.toCharArray()){\n                check[ch-'a']++;\n             }\n            \n            for(char ch : arr.get(i).toCharArray()){\n                check[ch-'a']++;\n            }\n            \n            boolean dul = false;\n            for(int c: check){\n                if(c>1){\n                    dul=true;\n                }\n            }\n            \n            if(dul==false){\n                res.add(curr+arr.get(i));\n                helper(arr, res, curr+arr.get(i), i+1);\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}