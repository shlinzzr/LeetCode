{"id":970959300,"question_id":1360,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686731609,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/970959300/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"47.5 MB","code":"class Solution {\n    public int maxLength(List<String> arr) {\n        List<String> res = new ArrayList<>();\n        \n        dfs(arr, res, \"\", 0);\n        \n        int max = 0;\n        for(String s :res ){\n            // System.out.println(s);\n            max = Math.max(max, s.length());\n        }\n        \n        return max;\n    }\n    \n    private void dfs(List<String> arr, List<String> res, String curr, int st){\n        \n        if(st>arr.size())\n            return;\n        \n        res.add(curr);\n        for(int i=st; i<arr.size(); i++){\n            \n            boolean dulicate =false;\n            int[] check = new int[26];\n            for(char c : curr.toCharArray()){\n                check[c-'a']++;\n            }\n            \n            for(char c : arr.get(i).toCharArray()){\n                check[c-'a']++;\n            }\n            \n            for(int c : check){\n                if(c>1)\n                    dulicate=true;\n            }\n            \n            \n            if(!dulicate)\n                dfs(arr, res, curr+arr.get(i), i+1);\n        }\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}