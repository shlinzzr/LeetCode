{"id":1154414083,"question_id":1360,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705999588,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1154414083/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"48.3 MB","code":"class Solution {\n    public int maxLength(List<String> arr) {\n        List<String> res = new ArrayList<>();\n\n        helper(arr, 0, \"\", res);\n        int max =0;\n        for(String r : res){\n            max = Math.max(max, r.length());\n        }\n        return max;\n    }\n\n    private void helper(List<String> arr, int idx, String curr, List<String> res){\n        if(idx==arr.size()){\n            return;\n        }\n\n        for(int i=idx; i<arr.size(); i++){\n\n           \n            int[] check = new int[26];\n            for(char ch : curr.toCharArray())\n                check[ch-'a']++;\n            \n            for(char ch : arr.get(i).toCharArray())\n                check[ch-'a']++;\n            \n\n            boolean dul= false;\n            for(int c : check){\n                if(c>1) dul=true;\n            }\n\n            if(dul) continue;\n\n            res.add(curr+arr.get(i));\n            helper(arr, i+1, curr+arr.get(i), res);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}