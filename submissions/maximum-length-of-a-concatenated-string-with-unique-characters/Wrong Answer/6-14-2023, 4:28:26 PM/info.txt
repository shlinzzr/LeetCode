{"id":970956522,"question_id":1360,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686731306,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/970956522/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"class Solution {\n    \n    int max = 0;\n    \n    public int maxLength(List<String> arr) {\n        \n        helper(arr, 0, new int[26]);\n        return max;\n    }\n    \n    private void helper(List<String> arr, int st, int[]curr){\n        \n        int val = 0;\n        for(int c : curr){\n            if(c==1)\n                val++;\n        }\n        max = Math.max(max, val);\n        \n        for(int i=st; i<arr.size(); i++){\n            String s = arr.get(i);\n            \n            boolean valid = true;\n            for(char ch : s.toCharArray()){\n                curr[ch-'a']++;\n                \n                if(curr[ch-'a']>1){\n                    valid=false;\n                }\n            }\n            \n            if(valid)\n                helper(arr, i+1, curr);\n            \n            helper(arr, i+1, curr);\n            for(char ch : s.toCharArray()){\n                curr[ch-'a']--;\n            }\n            \n        }\n        \n        \n    }\n}","compare_result":"11111111110011111110110001111000000010011001011101100110111010110100100011101101011111110","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}