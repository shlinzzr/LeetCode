{"id":1154359570,"question_id":1360,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705994469,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1154359570/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"class Solution {\n\n    int[] parent;\n    int[] weight;\n\n    public int maxLength(List<String> arr) {\n\n        int len = arr.size();\n        parent = new int[len];\n        weight = new int[len];\n\n        for(int i=0;i<len; i++){\n            parent[i] = i;\n            weight[i] = arr.get(i).length();\n        }\n\n        for(int i=0; i<len; i++){\n            for(int j=i+1; j<len; j++){\n\n                String a = arr.get(i);\n                String b = arr.get(j);\n\n                int[] charr = new int[26];\n                for(char cha : a.toCharArray()){\n                    charr[cha-'a']++;\n                }\n                boolean merge=false;\n                for(char chb : b.toCharArray()){\n                    if(charr[chb-'a']>0){\n                        merge=true;\n                        break;\n                    }\n                }\n\n                if(merge){\n                    union(i, j);\n                }\n            }\n        }\n\n        int res = 0;\n        for(int i=0; i<len; i++){\n\n            if(parent[i]==i){\n                res+= weight[i];\n            }\n        }\n\n        return res;\n    }\n\n    private int find(int x){\n        if(parent[x]!=x){\n            parent[x] = find(parent[x]);\n        }\n        return parent[x];\n    }\n\n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n        if(a==b) return ;\n\n        if(weight[a]>=weight[b]){\n            parent[b] = a;\n            weight[b] = weight[a];\n\n        }else{\n            parent[a] = b;\n            weight[a] = weight[b];\n        }\n    }\n}","compare_result":"11101101111011010111110111110100100111111001011100100111111001101011111110111101110110000","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}