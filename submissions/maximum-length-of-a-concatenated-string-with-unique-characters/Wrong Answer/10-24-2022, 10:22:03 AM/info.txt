{"id":828989812,"question_id":1360,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666578123,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/828989812/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"class Solution {\n    public int maxLength(List<String> arr) {\n        List<String> res = new ArrayList<>();\n        \n        dfs(arr, res, \"\", 0);\n        \n        int max = 0;\n        for(String s :res ){\n            // System.out.println(s);\n            max = Math.max(max, s.length());\n        }\n        \n        return max;\n    }\n    \n    private void dfs(List<String> arr, List<String> res, String curr, int st){\n        \n        if(st>arr.size())\n            return;\n        \n        res.add(curr);\n        for(int i=st; i<arr.size(); i++){\n            \n            boolean exist = false;\n            for(char c : arr.get(i).toCharArray()){\n                if(curr.contains(String.valueOf(c)) )\n                    exist=true;\n            }\n            if(!exist)\n                dfs(arr, res, curr+arr.get(i), i+1);\n        }\n        \n    }\n}","compare_result":"11101111111011111111110111111100100111111001011101100111111011111111111111111101111111011","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}