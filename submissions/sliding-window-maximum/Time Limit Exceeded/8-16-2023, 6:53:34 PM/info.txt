{"id":1022918854,"question_id":239,"lang":"java","lang_name":"Java","time":"10 months","timestamp":1692183214,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1022918854/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        \n        // PriorityQueue O(NlgN) : TLE\n        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        \n        for(int i=0; i<nums.length; i++){\n            pq.offer(nums[i]);\n            \n            if(i-k+1>=0){\n                res[i-k+1] = pq.peek();\n                pq.remove(nums[i-k+1]);\n            }\n        }\n        return res;\n        \n        \n//         // TreeMap O(NlgN)\n//         TreeMap<Integer, Integer> map = new TreeMap<>(); // nums[i], cnt \n//         int len = nums.length;\n//         int[] res = new int[len-k+1];\n        \n//         int windowSize=0;\n//         for(int i=0; i<len ;i++){\n//             int cur = nums[i];\n//             map.put(cur, map.getOrDefault(cur, 0)+1);\n//             windowSize++;\n            \n//             if(windowSize>k){\n//                 map.put(nums[i-k], map.get(nums[i-k])-1);\n//                 windowSize--;\n             \n//                 if(map.get(nums[i-k])==0) // 要用map來存 才能保留key\n//                     map.remove(nums[i-k]);\n//             }\n            \n//             if(i+1-k>=0){\n//                 res[i+1-k] = map.lastKey();\n//             }\n//         }\n        \n//         return res;\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111100000000000000","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}