{"id":956828349,"question_id":239,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684986210,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/956828349/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int len = nums.length;\n        \n        ArrayDeque<Integer> dq = new ArrayDeque(); // poll head, offer last\n        \n        int[] res = new int[len-k+1];\n        \n        \n        for(int i=0; i<len; i++){\n            \n            int curr = nums[i];\n            \n            while(!dq.isEmpty() && nums[dq.peekLast()]<curr){\n                dq.pollLast();\n            }\n            \n            dq.offer(i);\n            \n            \n            int idx = i-k+1;\n            if(idx>=0){\n                res[idx] = nums[dq.peek()];\n            }\n            \n            if(i-dq.peek()==k)\n                dq.poll();\n        }\n        \n        \n        \n        \n        \n        \n        return res;\n        \n    }\n}","compare_result":"110110011101000010011000001101100010010101000000001","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}