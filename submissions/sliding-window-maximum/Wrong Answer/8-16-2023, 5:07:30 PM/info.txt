{"id":1022848533,"question_id":239,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692176850,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1022848533/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        // TreeSet (nlogn)\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        \n        TreeSet<Integer> set = new TreeSet<>();\n        for(int i=0; i<len; i++){ // O(N)\n            \n            set.add(nums[i]); // O(logN)\n            if(set.size()>k){\n                set.remove(nums[i-k]);\n            }\n            \n            if(set.size()>=k){\n                res[i-k+1]=set.last();\n            }\n            \n        }\n        \n        return res;\n        \n        \n        \n        \n        \n        \n//         int len = nums.length;\n        \n//         ArrayDeque<Integer> dq = new ArrayDeque(); //idx   // poll head, offer last\n        \n//         // =====> tail   ======>.   head\n        \n//         int[] res = new int[len-k+1];\n        \n//         for(int i=0; i<len; i++){\n            \n            \n            \n            \n//             int cur = nums[i];\n            \n            \n            \n//             while(!dq.isEmpty() && nums[dq.peekLast()]<cur){\n//                 dq.pollLast();\n//             }\n            \n            \n//             if(dq.isEmpty())\n//                 dq.offer(i);\n            \n            \n            \n            \n//             if(i+1-k>=0){\n//                 res[i+1-k] = dq.peek();\n//             }\n            \n            \n            \n            \n            \n//         }\n        \n        \n        \n        \n    }\n}","compare_result":"111111111100010010100100101000001011000000000110100","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}