{"id":1022882410,"question_id":239,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692179936,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1022882410/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        // TreeMap\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        \n        for(int i=0; i<len ;i++){\n            int cur = nums[i];\n            map.put(cur, map.getOrDefault(cur, 0)+1);\n            \n            if(map.size()>k){\n                map.put(nums[i-k], map.get(nums[i-k])-1);\n                if(map.get(nums[i-k])==0)\n                    map.remove(nums[i-k]);\n            }\n            \n            if(i+1-k>=0){\n                res[i+1-k] = map.lastKey();\n            }\n        }\n        \n        return res;\n        \n        \n        \n    }\n}","compare_result":"111111111111011111111111111111111111110101101110101","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}