{"id":1022889729,"question_id":239,"lang":"java","lang_name":"Java","time":"10 months","timestamp":1692180592,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1022889729/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        TreeSet<Integer> set = new TreeSet<>();\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        \n        \n        List<Integer> list = new ArrayList<>();\n        \n        for (int i=0; i<len; i++)\n        {\n            \n            while (set.size()>k)\n                set.remove(set.lower(nums[i])); //照c++ function translate to java應該是ceiling, 照演算法邏輯判斷 應該是floor\n            \n            set.add(nums[i]);\n            \n            if (set.size()<k) continue;\n            list.add(set.last());\n            \n        }\n        \n        for(int i=0; i<list.size(); i++){\n            res[i] = list.get(i);\n        }\n        \n        \n        \n        return res;\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        //         TreeMap<Integer, Integer> map = new TreeMap<>();\n        // int len = nums.length;\n        // int[] res = new int[len-k+1];\n//         for(int i=0; i<len ;i++){\n//             int cur = nums[i];\n//             map.put(cur, map.getOrDefault(cur, 0)+1);\n            \n//             if(map.size()>k){\n//                 map.put(nums[i-k], map.get(nums[i-k])-1);\n//                 if(map.get(nums[i-k])==0)\n//                     map.remove(nums[i-k]);\n//             }\n            \n//             if(i+1-k>=0){\n//                 res[i+1-k] = map.lastKey();\n//             }\n//         }\n        \n//         return res;\n        \n        \n        \n    }\n}","compare_result":"110110011101000000000000000000000000000000000000000","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}