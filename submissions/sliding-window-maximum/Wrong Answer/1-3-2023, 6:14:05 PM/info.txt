{"id":870361912,"question_id":239,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672740845,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/870361912/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        int ri=0;\n        Deque<Integer> q = new ArrayDeque<>();\n        \n//         q.offer(1);\n//         q.offer(2);\n//         q.offer(3);\n        \n//         System.out.println(q.peek());\n//         System.out.println(q.peek());\n//         q.peek();\n//         for(int i : q){\n//             System.out.print(i + \",\");\n//         }\n        \n        \n\t\tfor (int i = 0; i < nums.length; i++) {\n\t\t\t\n            while(!q.isEmpty() && q.size()> k){\n                q.poll();\n            }\n            \n            while(!q.isEmpty() && q.peek()<nums[i]){\n                q.poll();\n            }\n            \n            q.offer(nums[i]);\n            if(i>=k-1)\n                res[i-k+1] = q.peek();\n            \n            \n            \n\t\t\t// // remove numbers out of range k\n\t\t\t// while (!q.isEmpty() && q.peek() < i - k + 1) {\n\t\t\t// \tq.poll();\n\t\t\t// }\n\t\t\t// // remove smaller numbers in k range as they are useless\n\t\t\t// while (!q.isEmpty() && nums[q.peekLast()] < nums[i]) {\n\t\t\t// \tq.pollLast();\n\t\t\t// }\n\t\t\t// // q contains index... r contains content\n\t\t\t// q.offer(i);\n\t\t\t// if (i >= k - 1) {\n\t\t\t// \tres[ri++] = nums[q.peek()];\n\t\t\t// }\n\t\t}\n\t\treturn res;\n        \n        \n    }\n}","compare_result":"110110011100000010011000001101100010000100000000001","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}