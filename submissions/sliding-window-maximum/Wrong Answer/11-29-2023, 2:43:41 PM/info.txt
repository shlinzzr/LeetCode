{"id":1108701008,"question_id":239,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701240221,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1108701008/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int len = nums.length;\n\n        int[] res = new int[len-k+1];\n        Deque<Integer> dq = new ArrayDeque<>();\n\n        for(int i=0; i<len; i++){\n            int n = nums[i];\n\n            while(!dq.isEmpty() && nums[dq.peekLast()]<n){\n                dq.pollLast();\n            }\n\n            while(!dq.isEmpty() && dq.peek()-i>=k){\n                dq.pollFirst();\n            }\n\n            dq.offerLast(i);\n            if(i-k+1>=0)\n                res[i-k+1] = nums[dq.peek()];\n\n        }\n\n        return res;\n    }\n}","compare_result":"110110011101000010011000001101100010010101000000001","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}