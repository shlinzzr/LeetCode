{"id":1108701116,"question_id":239,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701240233,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1108701116/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"62.7 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int len = nums.length;\n\n        int[] res = new int[len-k+1];\n        Deque<Integer> dq = new ArrayDeque<>();\n\n        for(int i=0; i<len; i++){\n            int n = nums[i];\n\n            while(!dq.isEmpty() && nums[dq.peekLast()]<n){\n                dq.pollLast();\n            }\n\n            while(!dq.isEmpty() && i-dq.peek()>=k){\n                dq.pollFirst();\n            }\n\n            dq.offerLast(i);\n            if(i-k+1>=0)\n                res[i-k+1] = nums[dq.peek()];\n\n        }\n\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}