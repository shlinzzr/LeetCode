{"id":1022902906,"question_id":239,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692181769,"status":10,"status_display":"Accepted","runtime":"453 ms","url":"/submissions/detail/1022902906/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"57.4 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        TreeMap<Integer, Integer> map = new TreeMap<>(); // val, idx\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        \n        int cnt=0;\n        for(int i=0; i<len ;i++){\n            int cur = nums[i];\n            map.put(cur, map.getOrDefault(cur, 0)+1);\n            cnt++;\n            // System.out.println(\"i=\" +i + \" cur=\"+ cur + \" set=\" + map.keySet());\n            \n            int del = i-k;\n            if(cnt>k){\n                \n                // System.out.println(\"del i=\" + i + \" k=\" + k +\" nums[del]=\"+nums[del]);\n                \n                map.put(nums[del], map.get(nums[del])-1);\n                cnt--;\n                if(map.get(nums[del])==0)\n                    map.remove(nums[del]);\n            }\n            \n            \n            /*\n     x x x\n[-7,-8,7,5,7,1,6,0]\n4\n            \ni=0 cur=-7 set=[-7]\ni=1 cur=-8 set=[-8, -7]\ni=2 cur=7 set=[-8, -7, 7]\ni=3 cur=5 set=[-8, -7, 5, 7]\ni=4 cur=7 set=[-8, -7, 5, 7]\ni=5 cur=1 set=[-8, -7, 1, 5, 7]\ndel i=5 k=4 nums[del]=-8\ni=6 cur=6 set=[-7, 1, 5, 6, 7]\ndel i=6 k=4 nums[del]=7\ndel i=6 k=4 nums[del]=5\ni=7 cur=0 set=[-7, 0, 1, 6, 7]\ndel i=7 k=4 nums[del]=5\n\n*/\n            \n            \n            \n            if(i+1-k>=0){\n                res[i+1-k] = map.lastKey();\n            }\n        }\n        \n        return res;\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}