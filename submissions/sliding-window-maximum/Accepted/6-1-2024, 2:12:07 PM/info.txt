{"id":1273890955,"question_id":239,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1717222327,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/1273890955/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"58.4 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n\n        Deque<Integer> dq = new ArrayDeque<>();\n\n        int len = nums.length;\n\n        int[] res = new int[len-k+1];\n\n        for(int i=0; i<len; i++){\n            int cur = nums[i];\n\n            while(!dq.isEmpty() && nums[dq.peekLast()]< cur){\n                dq.pollLast();\n            }\n            dq.offerLast(i);\n\n            if(i-k+1<0) continue;\n\n            res[i-k+1] = nums[dq.peek()];\n\n            if(dq.peek()<=i-k+1){\n                dq.pollFirst();\n            }\n        }\n\n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}