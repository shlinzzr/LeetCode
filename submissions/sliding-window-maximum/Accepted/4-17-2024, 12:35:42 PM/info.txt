{"id":1234543528,"question_id":239,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713328542,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/1234543528/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"64 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        Deque<Integer> dq = new ArrayDeque<>();\n\n        // head  1 3 -1 -3 5 3 6 7  tail\n\n        for(int i=0; i<len; i++){\n\n            while(!dq.isEmpty() && nums[i]> nums[ dq.peekLast()]){\n                dq.pollLast();\n            }\n\n            dq.offer(i);\n\n            if(i-k+1>=0){\n                res[i-k+1] = nums[dq.peek()];    \n            }\n\n            if(dq.peek()==i-k+1)\n                dq.poll();\n        }\n\n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}