{"id":956361098,"question_id":239,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684922198,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/956361098/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"63.2 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int len = nums.length;\n        \n        ArrayDeque<Integer> dq = new ArrayDeque<>();\n        \n        int[] res = new int[len-k+1];\n        \n        int idx = 0;\n        \n        for(int i=0; i<len; i++){\n            \n            int curr = nums[i];\n            \n            while(!dq.isEmpty() && curr >= nums[dq.peekLast()]){\n                dq.removeLast();\n            }\n            \n            dq.offer(i);\n            \n            if(i>=k-1){\n                res[idx++] = nums[dq.peek()];\n            }\n            \n            if(i-dq.peek()+1>= k){\n                dq.poll();\n            }\n        }\n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}