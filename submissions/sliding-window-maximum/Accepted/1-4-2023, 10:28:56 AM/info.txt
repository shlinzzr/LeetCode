{"id":870852716,"question_id":239,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672799336,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/870852716/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"150.3 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int len = nums.length;\n        int j=0;\n        ArrayDeque<Integer> dq = new ArrayDeque();\n        \n        int[] res = new int[len-k+1];\n        \n        for(int i=0; i<len; i++){\n            \n            while(!dq.isEmpty() && nums[i]>=nums[dq.peekLast()])\n                dq.pollLast();\n            \n            \n            // dq.offer(nums[i]);\n            dq.addLast(i);\n            \n            if(i+1 >=k) res[j++] = nums[dq.peekFirst()];\n            \n            if(i-dq.peekFirst()+1>=k) dq.removeFirst();\n            \n            \n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}