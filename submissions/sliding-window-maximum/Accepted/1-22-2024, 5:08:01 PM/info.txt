{"id":1153423520,"question_id":239,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705914481,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/1153423520/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"59.3 MB","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        int len = nums.length;\n        \n        int[] res = new int[len-k+1];\n        \n        Deque<Integer> dq = new ArrayDeque<>();\n        \n        for(int i=0; i<len; i++){\n            \n            while(!dq.isEmpty() && nums[dq.peekLast()]<= nums[i])\n                dq.pollLast();\n            \n          \n           \n            dq.offerLast(i);\n            \n              // System.out.println(i + \" \" + dq);\n            \n            if(i-k+1>=0){\n                res[i-k+1] = nums[dq.peek()];\n            }\n            \n            while(!dq.isEmpty() && dq.peek()<=i-k+1){\n                dq.poll();\n            }\n            \n            \n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}