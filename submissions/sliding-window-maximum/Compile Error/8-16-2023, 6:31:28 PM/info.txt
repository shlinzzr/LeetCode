{"id":1022904211,"question_id":239,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692181888,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1022904211/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        \n        TreeSet<Integer> set = new TreeSet<>(); // nums[i]\n        int len = nums.length;\n        int[] res = new int[len-k+1];\n        \n        int windowSize=0;\n        for(int i=0; i<len ;i++){\n            \n            set.add(nums[i]);\n            windowSize++;\n            \n            if(windowSize>k){\n                set.remove(i-k);\n                windowSize--;\n            }\n            \n            if(i+1-k>=0){\n                res[i+1-k] = map.lastKey();\n            }\n        }\n        \n        return res;\n        \n    }\n}","compare_result":null,"title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}