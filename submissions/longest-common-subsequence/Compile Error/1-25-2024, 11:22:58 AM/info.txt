{"id":1156106640,"question_id":1250,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706152978,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1156106640/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"N/A","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int m = text1.length();\n        int n = text2.length();\n        int[][] dp = new int[m+1][n+1];\n\n        for(int i=1; i<=m; i++){\n            for(int j=1; j<=n; j++){\n               \n                if(text1.charAt(i-1)==text2.charAt(j-1)){\n                    p[i][j] = dp[i-1][j-1] +1;\n                }else{\n                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);\n                }\n            }\n        }\n\n        return dp[m][n];\n    }\n}","compare_result":null,"title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}