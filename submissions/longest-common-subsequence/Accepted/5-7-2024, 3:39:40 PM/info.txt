{"id":1251566919,"question_id":1250,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715067580,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1251566919/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"50.9 MB","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n\n        int len1 = text1.length();\n        int len2 = text2.length();\n\n        int[][] dp = new int[len1+1][len2+1];\n\n        for(int i=1; i<=len1; i++){\n            for(int j=1; j<=len2; j++){\n\n                if(text1.charAt(i-1)==text2.charAt(j-1)){\n                    dp[i][j] = 1 + dp[i-1][j-1];\n                }else{\n                    dp[i][j] = Math.max(dp[i-1][j-1], Math.max(dp[i-1][j], dp[i][j-1]));\n                }\n            }\n        }\n\n        return dp[len1][len2];\n        \n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}