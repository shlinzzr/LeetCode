{"id":1004294845,"question_id":325,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690361197,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/1004294845/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"69.3 MB","code":"class Solution {\n    public int maxSubArrayLen(int[] nums, int k) {\n        int len = nums.length;\n        \n        for(int i=1; i<len; i++){\n            nums[i] += nums[i-1];\n        }\n        \n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0,-1);\n        int max = 0;\n        \n        for(int i=0; i<len; i++){\n            \n            if(map.containsKey(nums[i]-k))\n                max = Math.max(max, i-map.get(nums[i]-k));\n            \n            if(!map.containsKey(nums[i]))\n                map.put(nums[i], i);\n        }\n        \n        return max;\n        \n        \n    }\n      \n}","compare_result":"111111111111111111111111111111111111","title_slug":"maximum-size-subarray-sum-equals-k","has_notes":false,"flag_type":1}