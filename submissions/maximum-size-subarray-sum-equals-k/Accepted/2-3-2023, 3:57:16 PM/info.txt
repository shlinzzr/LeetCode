{"id":890566860,"question_id":325,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675411036,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/890566860/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"80.9 MB","code":"class Solution {\n    public int maxSubArrayLen(int[] nums, int k) {\n        int len = nums.length;\n        \n        int sum=0;\n        int max=0;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();// val, idx\n        for(int i=0; i<len; i++){\n            \n            sum+=nums[i];\n            nums[i]=sum;\n            if(sum==k){\n                max = i+1;\n            }else{\n                \n                if(map.containsKey(sum-k)){\n                    max = Math.max(max, i-map.get(sum-k));\n                }\n                \n            }\n            \n            if(!map.containsKey(sum))\n                map.put(sum, i);\n        }\n        \n        return max;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"maximum-size-subarray-sum-equals-k","has_notes":false,"flag_type":1}