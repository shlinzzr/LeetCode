{"id":892526654,"question_id":325,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675672815,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/892526654/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"75.6 MB","code":"class Solution {\n    public int maxSubArrayLen(int[] nums, int k) {\n        int len = nums.length;\n        \n        for(int i=1; i<len; i++){\n            nums[i]+= nums[i-1];\n        }\n        \n        int max=0;\n        \n        HashMap<Integer, Integer> map = new HashMap<>(); // val, idx\n        map.put(0,-1);\n        for(int i=0; i<len; i++){\n            \n            if(!map.containsKey(nums[i]))\n                map.put(nums[i], i);\n            \n            if(map.containsKey(nums[i]-k)){\n                max=Math.max(max, i-map.get(nums[i]-k));\n            }\n            \n            \n        }\n        \n        return max;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"maximum-size-subarray-sum-equals-k","has_notes":false,"flag_type":1}