{"id":877159759,"question_id":2364,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673577209,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/877159759/","is_pending":"Not Pending","title":"Longest Path With Different Adjacent Characters","memory":"N/A","code":"class Solution {\n    public int longestPath(int[] parent, String s) {\n        HashMap<Integer, List<Integer>> map = new HashMap<>();\n        \n        int len = parent.length;\n        for(int i=0; i<len; i++) map.put(i, new ArrayList<>());\n        \n        \n        \n        int p=0;\n        for(int i=0; i<parent.length; i++){\n            if(parent[i]==-1)\n                continue;\n            \n            map.get(i).add(parent[i]);\n            map.get(parent[i]).add(i);\n        }\n        \n        \n        \n        \n        int max =0;\n        \n\n        \n        for(int i=0; i<len; i++){\n            int path=1;\n            boolean[] seen = new boolean[len];\n            Queue<Integer> q = new LinkedList<>();\n            q.add(i);\n            seen[i]=true;\n            \n            // System.out.println(i + \" \" + max);\n            \n            while(!q.isEmpty()){\n                \n                for(int j=q.size(); j>0; j--){\n                    int curr = q.poll();\n                    for(int next : map.get(curr)){\n                       \n                        if(seen[next]==false && s.charAt(next)!=s.charAt(curr)){\n                            // System.out.println( \"curr=\" + curr + \" \" + next);\n                            q.offer(next);\n                            seen[next]=true;\n                        }\n\n                    }    \n                }\n                \n                max = Math.max(max, path);\n                path++;\n            }\n        }\n        \n        return max;\n    }\n}","compare_result":"111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-path-with-different-adjacent-characters","has_notes":false,"flag_type":1}