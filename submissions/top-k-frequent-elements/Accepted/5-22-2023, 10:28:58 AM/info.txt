{"id":954820107,"question_id":347,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684722538,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/954820107/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"48.3 MB","code":"class Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n     \n        HashMap<Integer, Integer> map = new HashMap<>();\n        for(int n : nums){\n            map.put(n, map.getOrDefault(n, 0)+1);\n        }\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> b[1] - a[1]\n        );\n        \n        \n        for(Map.Entry<Integer, Integer> en : map.entrySet()){\n            pq.offer(new int[]{en.getKey(), en.getValue()});\n        }\n        \n        int[] res = new int[k];\n        int i=0;\n        while(k>0){\n            \n            res[i] = pq.poll()[0];\n            \n            i++;\n            k--;\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111","title_slug":"top-k-frequent-elements","has_notes":false,"flag_type":1}