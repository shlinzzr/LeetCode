{"id":854956496,"question_id":347,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670235369,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/854956496/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"50.5 MB","code":"class Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        for(int n: nums){\n            map.put(n, map.getOrDefault(n, 0)+1);    \n        }\n        \n        \n        PriorityQueue<Map.Entry<Integer, Integer>> pq = new PriorityQueue<>(\n            (a, b) -> a.getValue()-b.getValue()\n        );\n        \n        for(Map.Entry<Integer, Integer> en : map.entrySet()){\n            // System.out.println(en.getKey()+ \", \" + en.getValue());\n            pq.add(en);\n            if(pq.size()>k)\n                pq.poll();\n        }\n        \n        int[] res = new int[k];\n        \n        int i=0;\n        while(pq.size()>0){\n            res[i] = pq.poll().getKey();\n            i++;\n        }\n        \n        \n        return res;\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111","title_slug":"top-k-frequent-elements","has_notes":false,"flag_type":1}