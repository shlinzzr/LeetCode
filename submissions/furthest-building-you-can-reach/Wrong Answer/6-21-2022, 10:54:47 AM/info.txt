{"id":727249666,"question_id":1762,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1655780087,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/727249666/","is_pending":"Not Pending","title":"Furthest Building You Can Reach","memory":"N/A","code":"class Solution {\n    public int furthestBuilding(int[] heights, int bricks, int ladders) {\n        \n        int[] maxGap = new int[ladders];  // int new[1]\n            \n            \n        for(int i=0; i<heights.length; i++){\n            \n            if( i==heights.length-1 || heights[i] > heights[i+1]){\n                continue;\n            \n            }else{\n                int needBricks = heights[i+1] - heights[i];\n                \n                if(needBricks>maxGap[0]){\n                    handleMaxGap(maxGap, needBricks);\n                }\n                \n                if(needBricks < bricks){\n                    bricks -= needBricks;\n                }else{\n                    break;\n                }\n            }\n        }\n        \n        \n        for(int i=0; i<heights.length; i++){\n            \n           if(i==heights.length-1 || heights[i] > heights[i+1]){\n                continue;\n            \n            }else{\n                int needBricks = heights[i+1] - heights[i];\n                \n                if( checkUseLadders(maxGap, needBricks) ){\n                    continue;\n                    \n                }else if(needBricks < bricks){\n                    bricks -= needBricks;\n                    \n                }else{\n                    return i;\n                }\n            }\n        }\n        \n        return heights.length-1;\n        \n        \n    }\n    \n    private boolean checkUseLadders(int[] maxGap, int ins){\n        \n        for(int i=maxGap.length-1; i>=0 ; i--){\n            if(maxGap[i]==ins){\n                maxGap[i] = -1;\n                return true;\n            } \n        }\n        \n        return false;\n        \n        \n    }\n    \n    private void handleMaxGap(int[] maxGap, int ins){\n        \n        for(int i=maxGap.length-1; i>=0 ; i--){\n            \n            if(ins > maxGap[i]){\n                int swp = maxGap[i];\n                maxGap[i] = ins;\n                ins = swp;\n            }\n            \n        }\n        \n        \n    }\n    \n \n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"furthest-building-you-can-reach","has_notes":false,"flag_type":1}