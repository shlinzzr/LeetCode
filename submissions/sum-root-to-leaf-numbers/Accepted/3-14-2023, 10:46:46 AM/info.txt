{"id":914741530,"question_id":129,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678762006,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/914741530/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"39.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumNumbers(TreeNode root) {\n        \n        return helper(root, 0);\n    }\n    \n    private int helper(TreeNode root, int curr){\n        \n        if(root==null)\n            return curr;\n        \n        curr=curr*10+ root.val;\n        \n        if(root.left==null && root.right==null)\n            return curr;\n        \n        int left = root.left==null? 0 : helper(root.left, curr);\n        int right = root.right==null ? 0 :helper(root.right, curr);\n        \n        return left+right;\n        \n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"flag_type":1}