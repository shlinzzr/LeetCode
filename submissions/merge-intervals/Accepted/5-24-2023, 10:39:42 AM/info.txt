{"id":956164947,"question_id":56,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684895982,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/956164947/","is_pending":"Not Pending","title":"Merge Intervals","memory":"45.6 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        \n        Arrays.sort(intervals, (a,b)->a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        \n        int len = intervals.length;\n        \n        \n        \n        \n        List<int[]> list = new ArrayList<>();\n        \n        \n        for(int i=0; i<len; i++){\n\n            int[] curr = intervals[i];\n            \n            int j=i+1;\n            \n            while(j<len && intervals[j][0]<=curr[1]){\n                curr[0] = Math.min(curr[0], intervals[j][0]);\n                curr[1] = Math.max(curr[1], intervals[j][1]);\n                j++;\n            }\n            \n            list.add(curr);\n            \n            i=j-1;\n            \n        }\n        \n        int[][] res = new int[list.size()][];\n        for(int i=0; i<list.size(); i++){\n            res[i]=list.get(i);\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}