{"id":1076546231,"question_id":56,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697448512,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1076546231/","is_pending":"Not Pending","title":"Merge Intervals","memory":"45.3 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        Arrays.sort(intervals, (a,b)-> a[0]!=b[0] ? a[0]-b[0] : a[1]-b[1]);\n\n        List<int[]> list = new ArrayList<>();\n\n\n        int len = intervals.length;\n\n        int i =0;\n        while(i<len){\n            int[] curr = intervals[i];\n            i++;\n            while(i<len && curr[1]>=intervals[i][0]){\n                curr[0] = Math.min(curr[0], intervals[i][0]);\n                curr[1] = Math.max(curr[1], intervals[i][1]);\n                i++;\n            }\n\n            list.add(new int[]{curr[0], curr[1]});\n        }\n\n        int[][] res= new int[list.size()][];\n        for(int j=0; j<list.size(); j++){\n            res[j] = list.get(j);\n        }\n\n        return res;\n    }\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}