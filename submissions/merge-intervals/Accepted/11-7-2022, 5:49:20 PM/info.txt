{"id":838609843,"question_id":56,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667814560,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/838609843/","is_pending":"Not Pending","title":"Merge Intervals","memory":"47.5 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        List<int[]> list = new ArrayList<>();\n        \n        Arrays.sort(intervals, (i1, i2) -> Integer.compare(i1[0], i2[0]));\n        \n        \n        int[] prev = null;\n        \n        for(int[] curr : intervals){\n            \n            if(prev==null){\n                prev=curr;\n                continue;\n            }\n            \n            if(prev[1]>=curr[0])\n                prev[1] = Math.max(curr[1], prev[1]);\n            else{\n                list.add(prev);\n                prev=curr;\n            }\n        }\n        \n        list.add(prev);\n        \n        \n        \n        \n        return list.toArray(new int[list.size()][]);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}