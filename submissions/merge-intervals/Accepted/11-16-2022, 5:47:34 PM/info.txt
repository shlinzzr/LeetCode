{"id":844475234,"question_id":56,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668592054,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/844475234/","is_pending":"Not Pending","title":"Merge Intervals","memory":"55.2 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        Arrays.sort(intervals, \n            (i1,i2) -> i1[0]-i2[0]                    \n                   );\n        \n        \n        int[] curr = null;\n        \n        List<int[]> list = new ArrayList<>();\n        for(int[] sec : intervals){\n            \n            if(curr==null){\n                curr = sec;\n                continue;\n            }\n            \n            if(sec[0]<=curr[1]){\n                curr[1] = Math.max(curr[1],sec[1]);\n            }else{\n                list.add(curr);\n                curr = sec;\n            }\n        }\n        \n        list.add(curr);\n        int[][] res = new int[list.size()][2];\n        \n        for(int i=0; i<list.size(); i++){\n            res[i]=list.get(i);\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}