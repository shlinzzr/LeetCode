{"id":844475003,"question_id":56,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668592022,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/844475003/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        Arrays.sort(intervals, \n            (i1,i2) -> i1[0]-i2[0]                    \n                   );\n        \n        \n        int[] curr = null;\n        \n        List<int[]> list = new ArrayList<>();\n        for(int[] sec : intervals){\n            \n            if(curr==null){\n                curr = sec;\n                continue;\n            }\n            \n            if(sec[0]<=curr[1]){\n                curr[1] = sec[1];\n            }else{\n                list.add(curr);\n                curr = sec;\n            }\n        }\n        \n        list.add(curr);\n        int[][] res = new int[list.size()][2];\n        \n        for(int i=0; i<list.size(); i++){\n            res[i]=list.get(i);\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"11111111110011100000100000110011011110100101100001001111101111101000011001000100101100000101101010000010000010011101110000000000100001000000000100000000000000000000000101","title_slug":"merge-intervals","has_notes":false,"flag_type":1}