{"id":1267319515,"question_id":56,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1716629237,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1267319515/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n\n        Arrays.sort(intervals, (a,b)-> a[0]!=b[0] ? a[0]-b[0] : a[1]-b[1]);\n        int len = intervals.length;\n        int[] prev = intervals[0];\n\n        List<int[]> list = new ArrayList<>();\n\n        for(int i=1; i<len; i++){\n            int[] cur = intervals[i];\n\n            if(cur[0]>prev[1]){\n                list.add(new int[]{prev[0], prev[1]});\n                prev = cur;\n\n            }else{\n                prev[1] = Math.max(prev[1], cur[1]);             \n            }\n\n               if(i==len-1)\n                    list.add(prev);\n        }\n\n        int[][] res = new int[list.size()][2];\n        for(int i=0; i<list.size();i++){\n            res[i] = list.get(i);\n        }\n\n        return res;\n\n    }\n}","compare_result":"11011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}