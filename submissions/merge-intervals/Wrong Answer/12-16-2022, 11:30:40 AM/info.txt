{"id":860467805,"question_id":56,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1671161440,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/860467805/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        Arrays.sort(intervals, (a,b)->(a[0]==b[0]?a[1]-b[1] : a[0]-b[0]));\n        \n        List<int[]> list = new ArrayList<>();\n        \n        int len = intervals.length;\n        \n        int[] prev = null;\n        for(int i=0; i<len-1; i++){\n            \n            if(intervals[i][1]<intervals[i+1][0]){\n                list.add(intervals[i]);\n            }else{\n                intervals[i+1][0] = intervals[i][0];\n            }\n        }\n        list.add(intervals[len-1]);\n        \n        int[][] res = new int[list.size()][2];\n        for(int i=0; i<list.size(); i++){\n            res[i] = list.get(i);\n        }\n        \n        \n        return res;\n        \n    }\n}","compare_result":"11111111110011101110111110111111111111110111111111111111101111111011111111110111101101110111111010101110101111111111110110011101100001001100010110000000000000000000000111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}