{"id":1052406068,"question_id":56,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695020530,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1052406068/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        Arrays.sort(intervals, (a,b)-> a[1]-b[1]);\n        List<int[]> list = new ArrayList<>();\n        \n        \n        for(int i=0; i<intervals.length; i++){\n            \n            int[] prev = intervals[i];\n            i++;\n            \n            while(i<intervals.length && intervals[i][0] < prev[1]){\n                prev[0] = Math.min(prev[0], intervals[i][0]);\n                prev[1] = Math.max(prev[1], intervals[i][1]);\n                i++;\n            }\n            \n            list.add(new int[]{prev[0], prev[1]});            \n            i--;\n            \n        }\n        \n        int[][] res = new int[list.size()][];\n        for(int i=0; i<list.size(); i++){\n            res[i] = list.get(i);\n        }\n        \n        \n        return res;\n        \n        \n    }\n}","compare_result":"10111111011111000000000000000011000000000000000000000000000000000000010000000000000000000000100000000000000000000010010001000100100000000010000101000000000000000000001100","title_slug":"merge-intervals","has_notes":false,"flag_type":1}