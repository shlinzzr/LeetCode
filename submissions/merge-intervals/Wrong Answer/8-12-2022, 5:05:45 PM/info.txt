{"id":771762568,"question_id":56,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660295145,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/771762568/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        List<List<Integer>> list = new ArrayList<>();\n        \n        int[] prev = null;\n        \n        for(int[] curr : intervals){\n            \n            \n            if(prev==null){\n                prev=curr;\n                continue;\n            }\n            System.out.println(prev[0] + \",\" + prev[1] + \" \" +curr[0] + \",\"+curr[1]);\n            \n            \n            if(prev[1] >= curr[0]){\n                prev[1]=Math.max(prev[1], curr[1]);\n                \n            }else{\n                List<Integer> temp = new ArrayList<>();\n                temp.add(prev[0]);\n                temp.add(prev[1]);\n                \n                list.add(temp);\n                prev = curr;\n            }\n        }\n        \n        List<Integer> temp = new ArrayList<>();\n        temp.add(prev[0]);\n        temp.add(prev[1]);\n        list.add(temp);\n        \n        int[][] res = new int[list.size()][2];\n        for(int i = 0; i < list.size(); i++){\n            \n            System.out.println(list.get(i).get(0) + \" \" + list.get(i).get(1));\n            \n            \n          res[i][0] = list.get(i).get(0);  \n            res[i][1] = list.get(i).get(1);  \n        } \n        \n        return res;\n        \n    }\n}","compare_result":"1111111000100000000000000000000001000000000000000000000000000000000000000000000000000000001000000000001000000010110000000000000000001000001000101000000000000000000000000","title_slug":"merge-intervals","has_notes":false,"flag_type":1}