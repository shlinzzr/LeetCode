{"id":956163132,"question_id":56,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684895664,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/956163132/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        \n        Arrays.sort(intervals, (a,b)->a[1]-b[1]);\n        \n        int len = intervals.length;\n        \n        \n        \n        \n        List<int[]> list = new ArrayList<>();\n        \n        \n        for(int i=0; i<len; i++){\n\n            int[] curr = intervals[i];\n            \n            int j=i+1;\n            \n            while(j<len && intervals[j][0]<=curr[1]){\n                curr[0] = Math.min(curr[0], intervals[j][0]);\n                curr[1] = Math.max(curr[1], intervals[j][1]);\n                j++;\n            }\n            \n            list.add(curr);\n            \n            i=j-1;\n            \n        }\n        \n        int[][] res = new int[list.size()][];\n        for(int i=0; i<list.size(); i++){\n            res[i]=list.get(i);\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"11111111111111101111110110101011111000100110110001110111100111111101010001010100100101101110101010101010100011111111110011000100110001011010010111000000000000000000001101","title_slug":"merge-intervals","has_notes":false,"flag_type":1}