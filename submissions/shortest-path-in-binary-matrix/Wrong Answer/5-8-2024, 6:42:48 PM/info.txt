{"id":1252564861,"question_id":1171,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715164968,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1252564861/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"N/A","code":"class Solution {\n    public int shortestPathBinaryMatrix(int[][] grid) {\n        \n        if(grid[0][0]==1) return -1;\n        \n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int[][] dp = new int[h+1][w+1];\n        for(int i=0; i<=h; i++){\n            Arrays.fill(dp[i], Integer.MAX_VALUE);\n        }\n        dp[0][0] = 0;\n        \n        for(int i=1; i<=h; i++){\n            for(int j=1; j<=w; j++){\n                \n                if(grid[i-1][j-1]==1) continue;\n                \n                if(dp[i-1][j-1]!=Integer.MAX_VALUE) dp[i][j] = 1 + Math.min(dp[i][j], dp[i-1][j-1]);\n                if(dp[i][j-1]  !=Integer.MAX_VALUE) dp[i][j] = 1 + Math.min(dp[i][j], dp[i][j-1]);\n                if(dp[i-1][j]  !=Integer.MAX_VALUE) dp[i][j] = 1 + Math.min(dp[i][j], dp[i-1][j]);\n                \n            }\n        }\n        \n        return dp[h][w] == Integer.MAX_VALUE ? -1 : dp[h][w];\n        \n        \n    }\n}","compare_result":"101100010101011111111111000000000000001000100100001100000000100101111100100000000000000010","title_slug":"shortest-path-in-binary-matrix","has_notes":false,"flag_type":1}