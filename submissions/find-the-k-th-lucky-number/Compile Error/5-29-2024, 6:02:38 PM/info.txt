{"id":1271284311,"question_id":3030,"lang":"java","lang_name":"Java","time":"2 weeks","timestamp":1716976958,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1271284311/","is_pending":"Not Pending","title":"Find The K-th Lucky Number","memory":"N/A","code":"class Solution {\n    public String kthLuckyNumber(int k) {\n\n        // 4, 7, 44, 47, 74, \n        // 0, 1, 00, 01, 10, 11 ...\n        // 2^1, +  2^2,+  2^3 + ...\n\n        // 2 + 4 + 8 + 16 + ...\n\n        // N=1 N=2\n        // N=1 : 2^(N+1)-2\n        // N=2 : 2^(2+1)-2= 6\n        //\n\n        // find the first N s.t.   2^(N+1)-2 > k\n\n        // long state = 0L\n        // 1010010100001 個\n        //\n        StringBuilder sb = new StringBuilder();\n        while(k>0){\n\n            if(k%2==0){\n                \n            }\n\n        }\n        int n = find(k);\n\n        for(int )\n\n\n\n\n\n\n        \n    }\n\n    private int find(int k){\n        int st=0, ed =30;\n\n        while(st<ed){ // 0, 1\n            int mid = st+(ed-st)/2; // 0\n            int val = Math.pow(2, mid+1)-2;\n\n            if(val==k){\n                return mid;\n\n            }else if(val>k){\n                ed = mid; \n            }else {\n                st = mid+1;\n            }\n        }\n\n        return st;\n\n    }\n}","compare_result":null,"title_slug":"find-the-k-th-lucky-number","has_notes":false,"flag_type":1}