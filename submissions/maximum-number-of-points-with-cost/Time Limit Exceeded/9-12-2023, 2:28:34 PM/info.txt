{"id":1047205937,"question_id":2067,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694500114,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1047205937/","is_pending":"Not Pending","title":"Maximum Number of Points with Cost","memory":"N/A","code":"class Solution {\n    public long maxPoints(int[][] points) {\n\n        int h = points.length;\n        int w = points[0].length;\n\n        long[] dp = new long[w];\n        for(int j=0; j<w; j++){\n            dp[j] = (long)points[0][j];\n        } \n\n        for(int i=1; i<h; i++){\n\n            long[] tmp = new long[w];\n\n\n            for(int j=0; j<w; j++){\n                tmp[j] = dp[j] + (long)points[i][j];\n                // dp[j] = dp[j] + points[i][j];\n\n                for(int k=0; k<w; k++){\n                    tmp[j] = Math.max(tmp[j], dp[k]+(long)points[i][j] - Math.abs(k-j));\n                }\n            }\n\n\n\n            dp = tmp;\n            // for(int j=0; j<w; j++){\n            //     System.out.print(dp[j]+\",\");\n            // }\n            // System.out.println();\n        }\n\n        long res = 0;\n        for(int j=0; j<w; j++){\n            res = Math.max(res, dp[j]);\n        }\n\n        return res;\n\n\n    }\n}\n/*\n[[0,3,0,4,2]\n,[5,4,2,4,1]\n,[5,0,0,5,1]\n,[2,0,1,0,3]]\n\n*/","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-points-with-cost","has_notes":false,"flag_type":1}