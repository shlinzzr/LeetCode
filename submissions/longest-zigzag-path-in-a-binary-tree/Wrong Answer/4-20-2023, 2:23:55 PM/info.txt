{"id":936753439,"question_id":1474,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1681971835,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936753439/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int max = 0;\n    \n    public int longestZigZag(TreeNode root) {\n        \n        int left = helper(root, true, 0);\n        int right = helper(root, false, 0);\n        \n         max = Math.max(max, left);\n        max = Math.max(max, right);\n        \n        return max;\n        \n    }\n    \n    private int helper(TreeNode root, boolean prevRight, int curr){\n        \n        if(root==null)\n            return curr;\n        \n        \n        if(prevRight){\n            if(root.left!=null){\n                int res = helper(root.left, !prevRight, curr+1);\n                max = Math.max(max, res);\n            }\n            \n            int res = helper(root.right, prevRight, 0);\n            max = Math.max(max, res);\n            \n        }else if(prevRight==false){\n            \n            if(root.right!=null){\n                int res = helper(root.right, !prevRight, curr+1);\n                max = Math.max(max, res);\n            }\n            \n            int res = helper(root.left, prevRight, 0);\n            max = Math.max(max, res);\n        }\n        \n        return max;\n    }\n}","compare_result":"0010000000000000000000000000000000000000000000000000000000","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}