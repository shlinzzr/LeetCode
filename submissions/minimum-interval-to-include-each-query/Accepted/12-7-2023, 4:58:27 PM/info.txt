{"id":1114231044,"question_id":1977,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701939507,"status":10,"status_display":"Accepted","runtime":"107 ms","url":"/submissions/detail/1114231044/","is_pending":"Not Pending","title":"Minimum Interval to Include Each Query","memory":"96.3 MB","code":"class Solution {\n\n    class Inter{\n        int left;\n        int right;\n        int size;\n        public Inter(int left, int right){\n            this.left=left;\n            this.right=right;\n            this.size = right-left+1;\n        }\n    }\n\n    public int[] minInterval(int[][] intervals, int[] queries) {\n\n          //append index in query\n        int[][] queriesWithIndex = new int[queries.length][2];\n        for(int i = 0; i < queries.length; i++){\n            queriesWithIndex[i] = new int[]{queries[i], i};\n        }\n        Arrays.sort(queriesWithIndex, (a, b) -> (a[0] - b[0]));\n\n\n        int len = intervals.length;\n        int[] ans = new int[queries.length];\n        Arrays.sort(intervals, (a,b)-> a[0]-b[0]);\n\n        PriorityQueue<Inter> pq =new PriorityQueue<>(\n            (a,b)-> a.size-b.size\n        );\n        int idx= 0;\n        for(int j=0; j<queries.length; j++){\n\n            int cur = queriesWithIndex[j][0];\n            int queryIndex = queriesWithIndex[j][1];\n\n            // int cur = queries[j];\n            while(idx<len && intervals[idx][0]<=cur){\n                pq.offer(new Inter(intervals[idx][0], intervals[idx][1]));\n                idx++;\n            }\n\n            while(!pq.isEmpty() && pq.peek().right < cur){\n                 pq.poll();\n            }\n\n            ans[queryIndex]= pq.isEmpty() ? -1 : pq.peek().size ;\n\n            // if(pq.isEmpty()){\n            //     ans[queryIndex] = -1;\n            // }else{\n\n            //     List<Inter> list = new ArrayList<>();\n            //     while(!pq.isEmpty() && (cur < pq.peek().left || pq.peek().right<cur)){\n            //         list.add(pq.poll());\n            //     }\n            //     if(pq.isEmpty()){\n            //         ans[queryIndex] = -1;\n            //     }else{\n            //         ans[queryIndex] = pq.peek().size;\n            //     }\n\n            //     for(int i=0; i<list.size(); i++)\n            //         pq.offer(list.get(i));\n            // }\n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111","title_slug":"minimum-interval-to-include-each-query","has_notes":false,"flag_type":1}