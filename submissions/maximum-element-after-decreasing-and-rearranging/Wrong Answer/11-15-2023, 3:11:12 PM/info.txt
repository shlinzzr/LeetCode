{"id":1099223315,"question_id":1956,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1700032272,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1099223315/","is_pending":"Not Pending","title":"Maximum Element After Decreasing and Rearranging","memory":"N/A","code":"class Solution {\n    public int maximumElementAfterDecrementingAndRearranging(int[] arr) {\n        int len = arr.length;\n\n        Arrays.sort(arr);\n\n        for(int i=1; i<len; i++){\n            while(arr[i]-arr[i-1]>1){\n                arr[i]--;\n            }\n        }\n\n        return arr[len-1];\n    }\n}","compare_result":"1110000000000000000000000000000000000000000000000","title_slug":"maximum-element-after-decreasing-and-rearranging","has_notes":false,"flag_type":1}