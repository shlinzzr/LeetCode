{"id":1157243968,"question_id":149,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706259754,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/1157243968/","is_pending":"Not Pending","title":"Max Points on a Line","memory":"44.4 MB","code":"class Solution {\n    public int maxPoints(int[][] points) {\n        int len = points.length;\n        \n        if(len<=2)\n            return len;\n        \n        int res =0 ;\n        \n        for(int i=0; i<len; i++){\n            \n            HashMap<String, Integer> map = new HashMap<>();\n            int dulpicate = 1;\n            int max = 0;\n            \n            for(int j=i+1; j<len; j++){\n                \n                int deltaX = points[i][0]-points[j][0];\n                int deltaY = points[i][1]-points[j][1];\n                \n                if(deltaX==0 && deltaY==0){\n                    dulpicate++;\n                    continue;\n                }\n                \n                int gcd = gcd(deltaX, deltaY);\n                int dx = deltaX/gcd;\n                int dy = deltaY/gcd;\n                    \n                String key = dx+\",\"+dy;\n                map.put(key, map.getOrDefault(key,0)+1);\n                \n                max = Math.max(max, map.get(key));\n            }\n            \n            res = Math.max(res, max+dulpicate);\n        }\n        \n        return res;\n    }\n    \n    private int gcd(int a, int b){\n        if(b==0) return a;\n        return gcd(b, a%b);\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"max-points-on-a-line","has_notes":false,"flag_type":1}