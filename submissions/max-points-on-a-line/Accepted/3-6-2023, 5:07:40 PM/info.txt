{"id":910055637,"question_id":149,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678093660,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/910055637/","is_pending":"Not Pending","title":"Max Points on a Line","memory":"43.3 MB","code":"class Solution {\n    public int maxPoints(int[][] points) {\n        int len = points.length;\n        \n        if(len<=2)\n            return len;\n        \n        int solution = 0;\n        \n        for (int i = 0; i < points.length; i++)\n        {\n            Map<String, Integer> map = new HashMap<>();\n            int duplicate = 0;\n            int max = 0;\n            for (int j = i + 1; j < points.length; j++)\n            {\n                int deltaX = points[j][0] - points[i][0];\n                int deltaY = points[j][1] - points[i][1];\n                \n                if (deltaX == 0 && deltaY == 0)\n                {\n                    duplicate++;\n                    continue;\n                }\n                \n                int gcd = gcd(deltaX, deltaY);\n                int dX = deltaX / gcd;\n                int dY = deltaY / gcd;\n                \n                map.put(dX + \",\" + dY, map.getOrDefault(dX + \",\" + dY, 0) + 1);\n                max = Math.max(max, map.get(dX + \",\" + dY));\n            }\n            \n            solution = Math.max(solution, max + duplicate + 1);\n        }\n        \n        return solution;\n    }\n    \n    public int gcd(int a, int b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a%b);\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"max-points-on-a-line","has_notes":false,"flag_type":1}