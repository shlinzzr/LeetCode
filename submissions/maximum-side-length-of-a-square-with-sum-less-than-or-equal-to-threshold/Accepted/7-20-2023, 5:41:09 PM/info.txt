{"id":999212471,"question_id":1413,"lang":"java","lang_name":"Java","time":"10 months, 4 weeks","timestamp":1689846069,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/999212471/","is_pending":"Not Pending","title":"Maximum Side Length of a Square with Sum Less than or Equal to Threshold","memory":"55.3 MB","code":"class Solution {\n    public int maxSideLength(int[][] mat, int threshold) {\n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int st =1, ed = Math.min(h,w);\n        \n        \n        int[][] presum = getPresum(mat);\n        \n        while(st<ed){\n            \n            int mid = st+(ed-st+1)/2;\n            \n            boolean bool = isOk(presum, mid, threshold);\n            \n            // System.out.println(st + \" \" + ed +\" \" + mid + \" bool=\"+ bool );\n            \n            if(bool){\n                st = mid;\n            }else{\n                ed = mid-1;\n            }\n        }\n        // System.out.println(\"quit while loop\");\n        \n        // System.out.println(st + \" \" + isOk(presum, st-1, threshold) + \" \" + isOk(presum, st, threshold));\n        \n        if( isOk(presum, st, threshold)){\n            return st;\n        }else{\n            if(st-1>0 && isOk(presum, st-1, threshold))\n                return st-1;\n        }\n        \n        return 0;\n        \n        \n    }\n    \n    \n    private int[][] getPresum(int[][] mat){\n        \n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int[][] presum = new int[h][w];\n        \n        for(int i=0; i<h; i++){\n            \n            for(int j=0; j<w; j++){\n                presum[i][j] = mat[i][j] + (i>0? presum[i-1][j]:0) + (j>0? presum[i][j-1]:0) - (i>0&&j>0? presum[i-1][j-1]:0);\n            }\n        }\n        \n        // System.out.println(\"presum:\");\n        // for(int i=0; i<h; i++){\n        //     for(int j=0; j<w; j++){\n        //         System.out.print(presum[i][j] + \",\");\n        //     }\n        //     System.out.println();\n        // }\n        \n        \n        return presum;\n    }\n    \n    \n    private boolean isOk(int[][] presum, int mid ,int threshold){\n        \n        int h = presum.length;\n        int w = presum[0].length;\n        \n        // System.out.println(\"isOk :\" + mid);\n        \n        for(int i=mid-1; i<h; i++){\n            for(int j=mid-1; j<w; j++){\n                \n                int sum = presum[i][j] - (i-mid>0? presum[i-mid][j] : 0) - (j-mid>0? presum[i][j-mid]:0) + (i-mid>0 && j-mid>0 ? presum[i-mid][j-mid] : 0);\n                if(sum<=threshold){\n                    // System.out.println(\"isOk :\" + mid + \" true  sum=\" + sum);\n                    return true;\n                }\n                    \n            }\n        }\n        \n        // System.out.println(\"isOk :\" + mid + \" false\");\n        return false;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold","has_notes":false,"flag_type":1}