{"id":1231181076,"question_id":85,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1713016811,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1231181076/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"45.1 MB","code":"class Solution {\n    public int maximalRectangle(char[][] matrix) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n\n        int max =0;\n        int[] arr = new int[w];\n        for(int i=0; i<h; i++){\n            \n            for(int j=0; j<w; j++){\n                if(matrix[i][j]=='1'){\n                    arr[j]++;\n                }else\n                    arr[j]=0;\n            }\n\n            max = Math.max(max, largestRectangleArea(arr));\n        }\n        return max;\n    }\n\n\n    // 84. Largest Rectangle in Histogram\n\n     public int largestRectangleArea(int[] arr) {\n\n        int len = arr.length;\n        int[] nextSmaller = new int[len];\n        Arrays.fill(nextSmaller, len);\n        Stack<Integer> st = new Stack<>();\n        for(int i=0; i<len; i++){\n\n            while(!st.isEmpty() && arr[st.peek()]>arr[i]){\n                nextSmaller[st.pop()] = i;\n            }\n            st.push(i);\n        }\n\n        int[] prevSmaller = new int[len];\n        Arrays.fill(prevSmaller, -1);\n        for(int i=len-1; i>=0; i--){\n\n            while(!st.isEmpty() && arr[st.peek()]>arr[i]){\n                prevSmaller[st.pop()] = i;\n            }\n            st.push(i);\n        }\n\n\n        int max = 0;\n        for(int i=0; i<len; i++){\n            max = Math.max(max, (nextSmaller[i] - prevSmaller[i]-1)*arr[i]);\n        }\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle","has_notes":false,"flag_type":1}