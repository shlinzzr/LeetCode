{"id":1275464072,"question_id":3384,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1717344210,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/1275464072/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Word K-Periodic","memory":"45.2 MB","code":"class Solution {\n    public int minimumOperationsToMakeKPeriodic(String word, int k) {\n\n        Map<String, Integer> map = new HashMap<>();\n\n\n        int max = 0;\n        int len = word.length();\n        for(int i=0; i<len; i+=k){\n\n            String sub = word.substring(i, i+k);\n\n            map.put(sub, map.getOrDefault(sub,0)+1);\n\n            if(map.get(sub)>max){\n                max = map.get(sub);\n            }\n        }   \n\n\n        // ab ab ab ab cd cd cd cd\n\n        int all = len/k;\n\n        return all-max;\n        \n    }\n}","compare_resulttitle_slug":"minimum-number-of-operations-to-make-word-k-periodic","has_notes":false,"flag_type":1}