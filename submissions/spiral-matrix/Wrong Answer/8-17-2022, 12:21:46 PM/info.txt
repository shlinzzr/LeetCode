{"id":775736123,"question_id":54,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660710106,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/775736123/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"N/A","code":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        boolean[][] bool = new boolean[h][w];\n        \n        List<Integer> res = new ArrayList<>();\n        \n        int cnt =0;\n        helper(matrix, res, 0, 0, bool, cnt);\n        \n        return res;\n    }\n    \n    \n    private void helper(int[][] matrix, List<Integer> res, int r, int c, boolean[][] bool, int cnt){\n        \n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        if(r>=h || r<0 || c>=w || c<0 || bool[r][c]==true)\n            return;\n        \n        res.add(matrix[r][c]);\n        bool[r][c]=true;\n        \n        int[][] dir = new int[][] {{0,1}, {1,0}, {0,-1}, {-1, 0}};\n        int d = cnt %4;\n        \n        while(cnt < r*c){\n            helper(matrix, res, r+dir[d][0], c+dir[d][1], bool, cnt);\n            cnt++;    \n        }\n        \n        \n        /*Input\n[[1,2,3,4],\n [5,6,7,8],\n[9,10,11,12],\n[13,14,15,16]]\n\n\n*/\n        //[1,2,3,4,8,12,16,15,14,13,9,10,11,7,6,5]\n        \n    }\n    \n}","compare_result":"00100000000000000000000","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}