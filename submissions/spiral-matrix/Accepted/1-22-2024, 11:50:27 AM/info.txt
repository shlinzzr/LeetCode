{"id":1153179840,"question_id":54,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705895427,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1153179840/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"41.3 MB","code":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        \n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int top = 0, left =0, right= w-1, bottom = h-1;\n        \n        \n        List<Integer> list = new ArrayList<>();\n        while(top<=bottom && left<=right){\n            for(int j=left; j<=right; j++){\n                list.add(matrix[top][j]);\n            }\n            top++;\n            if(top>bottom) break;\n            \n            for(int i=top; i<=bottom; i++){\n                list.add(matrix[i][right]);\n            }\n            right--;\n            \n            if(left>right) break;\n            \n            for(int j=right; j>=left; j--){\n                list.add(matrix[bottom][j]);\n            }\n            bottom--;\n            if(top>bottom) break;\n            \n            for(int i=bottom; i>=top; i--){\n                list.add(matrix[i][left]);\n            }\n            left++;\n            if(left>right) break;\n        }\n        \n        return list;\n        \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}