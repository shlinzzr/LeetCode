{"id":867832271,"question_id":54,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672368098,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/867832271/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"40.2 MB","code":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> res = new ArrayList<>();\n        \n        int h = matrix.length;        \n        int w = matrix[0].length;\n        \n        int top=0, bottom=h-1, left=0, right=w-1;\n        while(top<=bottom && left<=right){\n            \n            for(int i=left;i<=right; i++){\n                res.add(matrix[top][i]);\n            }\n            top++;\n            if( top>bottom || left>right) break;\n            \n            // System.out.println(top+ \" \"+right);\n            for(int i=top; i<=bottom; i++){\n                res.add(matrix[i][right]);\n            }\n            right--;\n            if( top>bottom || left>right) break;\n            \n            \n            for(int i=right; i>=left; i--){\n                res.add(matrix[bottom][i]);\n            }\n            bottom--;\n            if( top>bottom || left>right) break;\n            \n            \n            for(int i=bottom; i>=top; i--){\n                res.add(matrix[i][left]);\n            }\n            left++;\n            if( top>bottom || left>right) break;\n                \n            \n        }\n        \n        return res;\n        \n    }\n}","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}