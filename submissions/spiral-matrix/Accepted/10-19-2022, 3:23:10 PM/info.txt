{"id":825760405,"question_id":54,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666164190,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/825760405/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"41.6 MB","code":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> res = new ArrayList<Integer>();\n        if(matrix.length == 0 || matrix[0].length == 0) return res;\n        \n        int top = 0;\n        int bottom = matrix.length-1;\n        int left = 0;\n        int right = matrix[0].length-1;\n        \n        while(true){\n            for(int i = left; i <= right; i++) res.add(matrix[top][i]);\n            top++;\n            if(left > right || top > bottom) break;\n            \n            for(int i = top; i <= bottom; i++) res.add(matrix[i][right]);\n            right--;\n            if(left > right || top > bottom) break;\n            \n            for(int i = right; i >= left; i--) res.add(matrix[bottom][i]);\n            bottom--;\n            if(left > right || top > bottom) break;\n            \n            for(int i = bottom; i >= top; i--) res.add(matrix[i][left]);\n            left++;\n            if(left > right || top > bottom) break;\n        }\n        \n        return res;\n    }\n    \n}\n","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}