{"id":931177313,"question_id":2240,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681117049,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/931177313/","is_pending":"Not Pending","title":"Intervals Between Identical Elements","memory":"69 MB","code":"class Solution {\n    public long[] getDistances(int[] arr) {\n        int len = arr.length;\n        \n        long[] res = new long[len];\n        \n        HashMap<Integer, List<Integer>> map = new HashMap<>(); // val , List<idx>\n        for(int i=0; i<len ;i++){\n            map.putIfAbsent(arr[i], new ArrayList<>());\n            map.get(arr[i]).add(i);\n        }\n        \n        for(Map.Entry<Integer, List<Integer>> en : map.entrySet()){\n            \n            List<Integer> list = en.getValue();\n            long sum = 0;\n            for(int i=0; i<list.size(); i++){\n                sum+= list.get(i)-list.get(0);\n            }\n            \n            res[list.get(0)]=sum;\n            \n            for(int i=1; i<list.size(); i++){\n                \n                sum += (list.get(i)-list.get(i-1))*i;\n                sum -= (list.get(i)-list.get(i-1)) * (list.size()-i);\n                res[list.get(i)]=sum;\n            }\n        }\n                        \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"intervals-between-identical-elements","has_notes":false,"flag_type":1}