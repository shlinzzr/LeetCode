{"id":1134451032,"question_id":526,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704184260,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/1134451032/","is_pending":"Not Pending","title":"Beautiful Arrangement","memory":"40.3 MB","code":"class Solution {\n\n    int[] dp ;\n    int cnt =0 ;\n    public int countArrangement(int n) {\n        dp = new int[n+1];\n        // if(n<=3) return n;\n\n        boolean[] seen = new boolean[n+1];\n        dfs(n, seen, 1);\n        return cnt;\n    }\n\n    private void dfs(int n, boolean[] seen, int agg){\n        // if(n<=3) return n;\n\n        if(agg==n+1){\n            cnt++;\n        } \n\n        int res = 0 ;\n        for(int i=1; i<=n; i++){\n            if(!seen[i] && (i%agg==0 || agg%i==0 )){\n                // int newState = state | (i<<i);\n                seen[i]=true;\n                dfs(n, seen, agg+1);\n                seen[i] = false;\n            }\n        }\n\n        return ;\n    }\n}","compare_result":"111111111111111","title_slug":"beautiful-arrangement","has_notes":false,"flag_type":1}