{"id":1134456688,"question_id":526,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704184768,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1134456688/","is_pending":"Not Pending","title":"Beautiful Arrangement","memory":"48 MB","code":"class Solution {\n    int dp[][],n;\n    public int countArrangement(int _n) {\n        n=_n;\n        if(n<=1) return n;\n        dp=new int[n+1][1<<(n+1)];\n        for(int i=0;i<=n;i++)\n            Arrays.fill(dp[i],-1);\n        return rec(1,0);\n    }\n    public int rec(int place,int state)\n    {\n        if(place==n+1)\n        {\n            return 1;\n        }\n        if(dp[place][state]!=-1) return dp[place][state];\n        int ans=0;\n        for(int i=1;i<=n;i++)\n        {\n            if((state & (1<<i))==0 && (i%place==0 || place%i==0))\n            {\n                ans+=rec(place+1,state|(1<<i));\n            }\n        }\n        return dp[place][state]=ans;\n    }\n}","compare_result":"111111111111111","title_slug":"beautiful-arrangement","has_notes":false,"flag_type":1}