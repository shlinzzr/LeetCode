{"id":845045591,"question_id":2508,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668668442,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/845045591/","is_pending":"Not Pending","title":"Maximum Sum of an Hourglass","memory":"N/A","code":"class Solution {\n    public int maxSum(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int[][] dp = new int[h][w];\n        dp[0][0] = grid[0][0];\n        \n        for(int i=0; i<h;i++){\n            for(int j=0; j<w; j++){\n                \n                if(i==0 && j>0)\n                    dp[0][j] = dp[0][j-1] + grid[i][j]; \n                \n                else if(j==0 && i>0)\n                    dp[i][0] = dp[i-1][0] + grid[i][j];\n                \n                else if(i>0 && j>0)\n                    dp[i][j]= dp[i-1][j] + dp[i][j-1] + grid[i][j];\n            }\n        }\n        \n        for(int [] d : dp){\n            for(int dd : d){\n                System.out.print(dd + \",\");\n            }\n            System.out.println();\n        }\n        \n        \n        int max = Integer.MIN_VALUE;\n        \n        for(int i=2; i<h; i++){\n            for(int j=2; j<w; j++){\n                \n                int sqSum = dp[i][j] + dp[i-1][j-1] - dp[i-1][j] - dp[i][j-1];\n                int glassSum = sqSum -grid[i-1][j] - grid[i-1][j-2];\n                \n                System.out.println(i + \",\" + j + \" glassSum=\" + glassSum + \" sqSum=\"+sqSum);\n                \n                max = Math.max(max, glassSum);\n                \n                \n                \n            }\n        }\n        \n        return max;\n        \n        \n    }\n}","compare_result":"00000000000000000000001000000000000000000","title_slug":"maximum-sum-of-an-hourglass","has_notes":false,"flag_type":1}