{"id":845055269,"question_id":2508,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668669648,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/845055269/","is_pending":"Not Pending","title":"Maximum Sum of an Hourglass","memory":"53.5 MB","code":"class Solution {\n    public int maxSum(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n         if(h<3 || w<3)\n            return 0;\n        \n        int[][] dp = new int[h][w];\n        dp[0][0] = grid[0][0];\n        \n        for(int i=0; i<h;i++){\n            for(int j=0; j<w; j++){\n                \n                if(i==0 && j>0)\n                    dp[0][j] = dp[0][j-1] + grid[i][j]; \n                \n                else if(j==0 && i>0)\n                    dp[i][0] = dp[i-1][0] + grid[i][j];\n                \n                else if(i>0 && j>0)\n                    dp[i][j]= dp[i-1][j] + dp[i][j-1] + grid[i][j] - dp[i-1][j-1];\n            }\n        }\n        \n//         for(int [] d : dp){\n//             for(int dd : d){\n//                 System.out.print(dd + \",\");\n//             }\n//             System.out.println();\n//         }\n//         /*\n// 6,8,9,12,\n// 10,20,30,47,\n// 19,41,79,133,\n// 23,65,146,288,\n// 2,2 glassSum=23 sqSum=28\n// 2,3 glassSum=30 sqSum=37\n// 3,2 glassSum=26 sqSum=43\n// 3,3 glassSum=79 sqSum=88\n// */\n        \n        \n        int max = Integer.MIN_VALUE;\n        \n        for(int i=2; i<h; i++){\n            for(int j=2; j<w; j++){\n                \n                int sqSum = dp[i][j] ;\n                \n                if(i-3>=0) sqSum -= dp[i-3][j];\n                if(j-3>=0) sqSum -= dp[i][j-3];\n                if(i-3>=0 && j-3>=0) sqSum +=dp[i-3][j-3];\n                \n                int glassSum = sqSum-grid[i-1][j] - grid[i-1][j-2];\n                \n                // System.out.println(i + \",\" + j + \" glassSum=\" + glassSum + \" sqSum=\"+sqSum);\n                \n                max = Math.max(max, glassSum);\n                \n                \n            }\n        }\n        \n        return max;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"maximum-sum-of-an-hourglass","has_notes":false,"flag_type":1}