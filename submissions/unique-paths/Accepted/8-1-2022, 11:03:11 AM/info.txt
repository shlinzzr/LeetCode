{"id":761969242,"question_id":62,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659322991,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/761969242/","is_pending":"Not Pending","title":"Unique Paths","memory":"40.9 MB","code":"// class Solution {\n//     public int uniquePaths(int m, int n) {\n//         if((m==2 && n==1) ||( n==2&&m==1))\n//             return 1;\n        \n//         if(m==2 && n==2)\n//             return 2;\n            \n            \n//         int totalpath = 0;\n        \n//         for(int i=0; i<n; i++){\n//             for(int j=0; j<m; j++){\n                \n//                 if(i==0 && j==0)        \n//                     continue;\n                \n//                 totalpath += uniquePaths(m-j, n-i);\n                \n//             }\n//         }\n        \n//         return totalpath;\n        \n//     }\n// }\n\nclass Solution {\n    public int uniquePathsUtil(int m, int n, int[][] dp) {\n        if(m == 1 || n == 1) return 1;\n        if(dp[m][n] != 0)\n            return dp[m][n];\n        return dp[m][n] = uniquePathsUtil(m-1, n, dp) + uniquePathsUtil(m, n-1, dp);\n    }\n    public int uniquePaths(int m, int n) {\n        int dp[][] = new int[m+1][n+1];\n        return uniquePathsUtil(m, n, dp);\n                \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false,"flag_type":1}