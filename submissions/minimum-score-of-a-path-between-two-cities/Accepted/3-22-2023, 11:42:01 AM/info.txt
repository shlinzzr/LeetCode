{"id":919878804,"question_id":2582,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679456521,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/919878804/","is_pending":"Not Pending","title":"Minimum Score of a Path Between Two Cities","memory":"97.9 MB","code":"class Solution {\n    \n    int[] Father = new int[100005];\n    public int FindFather(int x)\n    {\n        if (Father[x]!=x)\n            Father[x] = FindFather(Father[x]);\n        return Father[x];\n    }\n    \n    public void Union(int x, int y)\n    {\n        x = Father[x];\n        y = Father[y];\n        if (x<y) Father[y] = x;\n        else Father[x] = y;\n    }     \n    \n    \n    \n    public int minScore(int n, int[][] roads) {\n        \n       for (int i=1; i<=n; i++)\n            Father[i] = i;\n        \n       for(int[] road : roads){\n            int a = road[0], b = road[1], d = road[2];\n            if (FindFather(a)!=FindFather(b))\n                Union(a,b);            \n        }\n        \n        int ret = Integer.MAX_VALUE;\n        for(int[] road : roads){\n            int a = road[0], b = road[1], d = road[2];\n            if (FindFather(a)==FindFather(1))\n                ret = Math.min(ret, d);\n        }\n        \n        return ret;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-score-of-a-path-between-two-cities","has_notes":false,"flag_type":1}