{"id":943570508,"question_id":2582,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683084258,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/943570508/","is_pending":"Not Pending","title":"Minimum Score of a Path Between Two Cities","memory":"120.5 MB","code":"class Solution {\n    public int minScore(int n, int[][] roads) {\n        \n        UnionFind uf = new UnionFind(n+1);\n        \n        int len = roads.length;\n        \n        \n        for(int i=0; i<len; i++){\n            \n            int a = roads[i][0];\n            int b = roads[i][1];\n            int dis = roads[i][2];\n            \n            if(uf.find(a)!=uf.find(b)){\n                uf.union(a, b, dis);\n            }\n        }\n        \n        int ans = Integer.MAX_VALUE;\n        \n        for(int i=0; i<len; i++){\n            \n            \n            if(uf.find(1)==uf.find(roads[i][0]))\n                ans = Math.min(ans, roads[i][2]);\n        }\n        \n        return ans;\n    }\n    \n    \n    class UnionFind{\n        \n        int[] parent;\n        int[] weight;\n        \n        public UnionFind(int n){\n            parent = new int[n];\n            weight = new int[n];\n            Arrays.fill(weight, -1);\n            for(int i=0; i<n; i++){\n                parent[i] = i;\n            }\n            \n        }\n        \n        public int find(int x){\n            if(parent[x] == x)\n                return x;\n            parent[x] = find(parent[x]);\n            \n            return parent[x];\n        }\n        \n        \n        public void union(int a, int b, int w){\n            int ra = find(a);\n            int rb = find(b);\n            \n            if(ra==rb)\n                return ;\n            \n            if(ra<=rb){\n                parent[rb] = ra;\n                weight[rb] = Math.min(weight[rb], w);\n            }else{\n                parent[ra] = rb;\n                weight[ra] = Math.min(weight[ra], w);\n            }\n            \n        }\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"minimum-score-of-a-path-between-two-cities","has_notes":false,"flag_type":1}