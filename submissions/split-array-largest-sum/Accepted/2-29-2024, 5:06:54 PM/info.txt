{"id":1189523594,"question_id":410,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1709197614,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1189523594/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"40.8 MB","code":"class Solution {\n    public int splitArray(int[] nums, int k) {\n        \n        int len = nums.length;\n        \n        \n        int st = 0;\n        int ed = 0;\n        for(int n: nums){\n            st= Math.max(st, n);\n            ed+=n;\n        }\n        \n        while(st<ed){\n            \n            int mid = st+(ed-st)/2;\n            if(check(nums, k, mid)){\n                ed = mid;\n                \n            }else{\n                st = mid+1;\n            }\n            \n        }\n        \n        return st;\n        \n    }\n    \n    \n    private boolean check(int[] nums, int k, int capacity){\n        \n        \n        int sum=0, cnt=1;\n        for(int i=0; i<nums.length; i++){\n            \n            if(sum+nums[i]>capacity){\n                sum=nums[i];\n                cnt++;// before i\n            }else{\n                sum+=nums[i];\n            }\n            \n            if(cnt>k)\n                return false;\n        }\n        \n        return true;\n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}