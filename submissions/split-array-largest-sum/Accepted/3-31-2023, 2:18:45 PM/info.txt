{"id":925222550,"question_id":410,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680243525,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/925222550/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"41.2 MB","code":"class Solution {\n    public int splitArray(int[] nums, int k) {\n        \n        \n        int left = 0;\n        int right = 0;\n        for(int n: nums){\n            left= Math.max(left, n);\n            right+=n;\n        }\n        \n        while(left<right){\n            \n            int mid = left+(right-left)/2;\n            \n            if( check(nums, k, mid) ){\n                right=mid;\n            }else\n                left=mid+1;\n        }\n        \n        return left;\n        \n        \n    }\n    \n \n    private boolean check(int[] nums, int k, int capacity){\n        \n        \n        int sum=0, cnt=1;\n        for(int i=0; i<nums.length; i++){\n            \n            if(sum+nums[i]>capacity){\n                sum=nums[i];\n                cnt++;\n            }else{\n                sum+=nums[i];\n            }\n            \n            if(cnt>k)\n                return false;\n        }\n        \n        return true;\n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}