{"id":1046182174,"question_id":3092,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694404333,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1046182174/","is_pending":"Not Pending","title":"Minimum Moves to Spread Stones Over Grid","memory":"N/A","code":"class Solution {\n    \n    int[][] oneStep = new int[][]{{0,1},{1,0},{0,-1},{-1,0}};\n    int[][] twoStep = new int[][]{{0,2},{2,0},{0,-2},{-2,0}, {1,1}, {-1,-1},{1,-1},{-1,1}};  \n    int[][] threeStep = new int[][]{{1,2},{2,1},{1,-2},{-2,1}};  \n    int[][] fourStep = new int[][]{{2,2},{-2,-2},{2,-2},{-2,2}};  \n    \n    \n    public int minimumMoves(int[][] grid) {\n        \n        int max = 0;\n        \n        int[] p = new int[2];\n\n        \n        int cnt=0;\n        \n        for(int i=0; i<3; i++){\n            for(int j=0;j<3; j++){\n                \n                if(grid[i][j]>max){\n                    max = grid[i][j];\n                    p[0]=i;\n                    p[1]=j;\n                }\n                \n                if(grid[i][j]!=1)\n                    cnt++;\n            }\n        }\n        // System.out.println(p[0]+ \" \" + p[1]);\n        \n        if(max==1)\n            return 0;\n        \n        \n        // find nearest 0\n        for(int[] d : oneStep){\n            \n            int r = p[0]+d[0];\n            int c = p[1]+d[1];\n            \n            if(r<0 || c<0 || r>=3 || c>=3 || grid[r][c]!=0)\n                continue;\n            \n            grid[r][c]+=1;\n            grid[p[0]][p[1]]-=1;\n            \n            return 1 + minimumMoves(grid);\n        }\n        \n         for(int[] d : twoStep){\n            \n            int r = p[0]+d[0];\n            int c = p[1]+d[1];\n            \n            if(r<0 || c<0 || r>=3 || c>=3 || grid[r][c]!=0)\n                continue;\n            \n            grid[r][c]+=1;\n            grid[p[0]][p[1]]-=1;\n            \n            return 2 + minimumMoves(grid);\n        }\n        \n        for(int[] d : threeStep){\n            \n            int r = p[0]+d[0];\n            int c = p[1]+d[1];\n            \n            if(r<0 || c<0 || r>=3 || c>=3 || grid[r][c]!=0)\n                continue;\n            \n            grid[r][c]+=1;\n            grid[p[0]][p[1]]-=1;\n            \n            return 3 + minimumMoves(grid);\n        }\n           \n        for(int[] d : fourStep){\n            \n            int r = p[0]+d[0];\n            int c = p[1]+d[1];\n            \n            if(r<0 || c<0 || r>=3 || c>=3 || grid[r][c]!=0)\n                continue;\n            \n            grid[r][c]+=1;\n            grid[p[0]][p[1]]-=1;\n            \n            return 4 + minimumMoves(grid);\n        }\n        \n        return -1;\n        \n    }\n}","compare_resulttitle_slug":"minimum-moves-to-spread-stones-over-grid","has_notes":false,"flag_type":1}