{"id":1022760867,"question_id":1612,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692168709,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1022760867/","is_pending":"Not Pending","title":"Avoid Flood in The City","memory":"N/A","code":"class Solution {\n    public int[] avoidFlood(int[] rains) {\n        int len = rains.length;\n        int[] res = new int[len];\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        HashSet<Integer> flood = new HashSet<>();\n        \n        for(int i=0; i<len; i++){\n            \n            int r = rains[i];\n            \n            if(r==0){\n                \n                \n                int t=i+1;\n                \n                boolean flag=false;\n                while(t<len){\n                    if(rains[t]!=0 && map.containsKey(rains[t])){\n                        flag=true;\n                        res[i] = map.get(rains[t]);\n                        map.remove(rains[t]);\n                        break;\n                    }\n                    t++;\n                }\n                \n                if(flag==false){\n                    \n                    for(int key: map.keySet()){\n                          flag=true;\n                            res[i] = map.get(key);\n                            map.remove(key);\n                    }\n                }\n                \n                \n            }else{\n                \n                if(map.containsKey(r)){\n                    flood.add(r);\n                }\n                res[i]=-1;\n                map.put(r,r);\n            }\n            // System.out.println(i+ \" \"  + map.keySet());\n            \n        }\n        \n        \n        return !flood.isEmpty()? new int[0] : res;\n        \n        \n        \n    }\n}","compare_result":"1110111111110100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"avoid-flood-in-the-city","has_notes":false,"flag_type":1}