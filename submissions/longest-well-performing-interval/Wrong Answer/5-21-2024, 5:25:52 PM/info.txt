{"id":1263856975,"question_id":1219,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716283552,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1263856975/","is_pending":"Not Pending","title":"Longest Well-Performing Interval","memory":"N/A","code":"class Solution {\n    public int longestWPI(int[] hours) {\n\n        int len = hours.length;\n        int sum=0; \n        int max = 0;\n\n        //.    9,9,6,0,6,6,9]\n        //sum. 1 2 1\n        int prev = -1;\n\n        for(int i=0; i<len; i++){\n            sum+= hours[i]>8 ? 1 : -1;\n\n            if(sum<0){\n                sum = 0;\n                prev = i;\n            \n            }else if(sum>0){\n                max = Math.max(max, i-prev);\n            }\n        }\n\n\n        sum=0;\n        prev= len;\n        for(int i=len-1; i>=0; i--){\n            sum+= hours[i]>8 ? 1 : -1;\n            if(sum<0){\n                sum = 0;\n                prev = i;\n            }else if(sum>0){\n                max = Math.max(max, prev-i);\n                // System.out.println(i + \" \" + prev);\n            }\n        }\n\n        return max;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111011111111111010000110110010100010000000100110100001","title_slug":"longest-well-performing-interval","has_notes":false,"flag_type":1}