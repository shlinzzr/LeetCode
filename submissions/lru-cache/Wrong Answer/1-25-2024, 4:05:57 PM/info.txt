{"id":1156304415,"question_id":146,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706169957,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1156304415/","is_pending":"Not Pending","title":"LRU Cache","memory":"N/A","code":"class LRUCache {\n\n    class Node{\n        Node prev;\n        Node next;\n        int key;\n        int val;\n        public Node(int key, int val){\n            this.key=key;\n            this.val=val;\n        }\n        public Node(){}\n    }\n    \n    int capacity;\n    Map<Integer, Node> map;\n    List<Integer> list;\n    \n    Node head;\n    Node tail;\n    \n    public LRUCache(int capacity) {\n        this.capacity = capacity;\n        map = new HashMap<>();\n        list = new ArrayList<>();\n        \n        head = new Node();\n        tail = new Node();\n        head.next = tail;\n        tail.prev = head;\n    }\n    \n    public int get(int key) {\n        \n        if(!map.containsKey(key)) return -1;\n        \n        Node node = map.get(key);\n        \n        delete(node);\n        add(node);\n        \n        return node.val;\n        \n    }\n    \n    private void delete(Node node){\n        Node next = node.next;\n        Node prev = node.prev;\n        prev.next = next;\n        node.prev = prev;\n        map.remove(node.key);\n    }\n    \n    private void add(Node node){\n        Node next = head.next;\n        node.next = next;\n        next.prev = node;\n        node.prev = head;\n        head.next = node;\n        map.put(node.key, node);\n    }\n    \n        \n    \n    public void put(int key, int value) {\n        \n        if(map.containsKey(key)){\n            Node node = map.get(key);\n            delete(node);\n            node.val = value;\n            add(node);\n            \n        }else{\n            \n            if(map.size()==capacity){\n                delete(tail.prev);\n            }\n            \n            Node node = new Node(key, value);\n            add(node);\n            \n        }\n        \n    }\n}\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache obj = new LRUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */","compare_result":"0111001100100100000001","title_slug":"lru-cache","has_notes":false,"flag_type":1}