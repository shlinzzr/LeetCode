{"id":890549043,"question_id":1982,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675408521,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/890549043/","is_pending":"Not Pending","title":"Remove Duplicates From an Unsorted Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteDuplicatesUnsorted(ListNode head) {\n        List<Integer> list = new ArrayList<>();\n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        \n        ListNode curr = head;\n        while(curr!=null){\n            map.put(curr.val, map.getOrDefault(curr.val, 0)+1);\n            curr=curr.next;\n        }\n        \n        ListNode prev=null;\n        curr=head;\n        while(curr!=null){\n            \n            if(map.get(curr.val)>1){\n                curr=curr.next;\n                prev.next=null;\n                continue;\n            }\n            \n            if(prev==null){\n                head=curr;\n            }else{\n                prev.next=curr;\n            }\n            \n            prev=curr;\n            curr=curr.next;\n        }\n        \n        return head;\n        \n        \n        // ListNode ret = new ListNode();\n//         curr = ret;\n//         for(int i=0; i<list.size(); i++){\n//             ListNode node = new ListNode(list.get(i));\n//             curr.next=node;\n//             curr=curr.next;\n//         }\n        \n        // return ret;\n        \n    }\n}","compare_result":"10000000000000000000000000000000000000","title_slug":"remove-duplicates-from-an-unsorted-linked-list","has_notes":false,"flag_type":1}