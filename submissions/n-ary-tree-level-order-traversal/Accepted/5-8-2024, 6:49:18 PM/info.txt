{"id":1252568463,"question_id":764,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715165358,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1252568463/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"44.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<List<Integer>> levelOrder(Node root) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(res, root, 1);\n        return res;\n    }\n    \n    private void helper(List<List<Integer>> res,  Node root, int lv){\n        \n        if(root==null)\n            return;\n        \n        if(res.size()<lv){\n            res.add(new ArrayList<>());\n        }\n        \n        res.get(lv-1).add(root.val);\n        \n        for(Node child : root.children){\n            helper(res, child, lv+1);    \n        }\n        \n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-level-order-traversal","has_notes":false,"flag_type":1}