{"id":831955722,"question_id":240,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666947101,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/831955722/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        boolean res = false;\n        \n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int r=0, c=0, pr=-1, pc=-1,ppr=-1,ppc=-1;\n        \n        while(r!=ppr && c!=ppc){\n            ppr=pr;\n            ppc=pc;\n            pc=c;\n            pr=r;\n            \n            r = findRow(matrix, target, pc);\n            c = findCol(matrix, target, pr);\n            \n            if(matrix[r][pc] ==target || matrix[pr][c]==target || matrix[r][c]==target)\n                return true;\n            \n            // System.out.println(\"r=\"+r + \" c=\"+c + \" pr=\"+pr + \" pc=\"+pc);\n        }\n        \n        return false;\n        \n    }\n    \n     /*\n    [[ 1, 4, 7, 11, 15],\n     [ 2, 5, 8, 12, 19],\n     [ 3, 6, 9, 16, 22],\n     [10,13,14, 17, 24],\n     [18,21,23, 26, 30]]\n     \n    20\n    */\n    \n    \n    private int findRow(int[][] matrix, int target, int j){\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int st=0, ed=h-1;\n        while(st<ed){\n            int mid = st + (ed-st)/2;\n            \n            if(matrix[mid][j]==target)\n                return mid;\n            \n            else if(matrix[mid][j]>target)\n                \n                ed=mid-1;\n            else\n                st=mid+1;\n        }\n        return st;\n        \n    }\n    \n     private int findCol(int[][] matrix, int target, int i){\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int st=0, ed=w-1;\n        while(st<ed){\n            int mid = st + (ed-st)/2;\n            \n            if(matrix[i][mid]==target)\n                return mid;\n            \n            else if(matrix[i][mid]>target)\n                \n                ed=mid-1;\n            else\n                st=mid+1;\n        }\n        return st;\n        \n    }\n    \n   \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111110101111110111111111111111111111111111100111110110111101101111101011","title_slug":"search-a-2d-matrix-ii","has_notes":false,"flag_type":1}