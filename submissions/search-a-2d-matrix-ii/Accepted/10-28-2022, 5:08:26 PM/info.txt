{"id":831962506,"question_id":240,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666948106,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/831962506/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"58.1 MB","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        boolean res = false;\n        \n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int i=0, j=w-1;\n        \n        while(i<h && j>=0){\n            \n            if(matrix[i][j]==target)\n                return true;\n            \n            else if(matrix[i][j]>target){\n                j--;\n            }else{\n                i++;\n            }\n        }\n        \n        return false;\n        \n    }\n    \n     /*\n    [[ 1, 4, 7, 11, 15],\n     [ 2, 5, 8, 12, 19],\n     [ 3, 6, 9, 16, 22],\n     [10,13,14, 17, 24],\n     [18,21,23, 26, 30]]\n     \n    20\n    [[1,2,3,4,5],\n     [6,7,8,9,10],\n     [11,12,13,14,15],\n     [16,17,18,19,20],\n     [21,22,23,24,25]]\n19\n\n\n [[1,3,5,7,9]\n,[2,4,6,8,10]\n,[11,13,15,17,19]\n,[12,14,16,18,20]\n,[21,22,23,24,25]]\n13\n    */\n    \n    private int findRow(int[][] matrix, int target, int j){\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int st=0, ed=h-1;\n        while(st<ed){\n            int mid = st + (ed-st)/2;\n            \n            if(matrix[mid][j]==target)\n                return mid;\n            \n            else if(matrix[mid][j]>target)\n                \n                ed=mid-1;\n            else\n                st=mid+1;\n        }\n        \n        if(st>0 && matrix[st][j]>target)\n            return st-1;\n        \n        return st;\n        \n    }\n    \n     private int findCol(int[][] matrix, int target, int i){\n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n        int st=0, ed=w-1;\n        while(st<ed){\n            int mid = st + (ed-st)/2;\n            \n            if(matrix[i][mid]==target)\n                return mid;\n            \n            else if(matrix[i][mid]>target)\n                \n                ed=mid-1;\n            else\n                st=mid+1;\n        }\n         \n        if(st>0 && matrix[i][st]>target)\n            return st-1;\n         \n        return st;\n        \n    }\n    \n   \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii","has_notes":false,"flag_type":1}