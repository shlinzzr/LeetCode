{"id":1240610366,"question_id":1052,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1713946352,"status":10,"status_display":"Accepted","runtime":"847 ms","url":"/submissions/detail/1240610366/","is_pending":"Not Pending","title":"Campus Bikes","memory":"104.4 MB","code":"class Solution {\n    public int[] assignBikes(int[][] workers, int[][] bikes) {\n        int n = workers.length;\n        int m = bikes.length;\n        \n        PriorityQueue<int[]> pq= new PriorityQueue<>( //wi, bi, dis\n            (a,b)-> a[2]==b[2]? (a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]) : a[2]-b[2]\n        );\n        \n        for(int i=0; i<n; i++){\n            for(int j=0; j<m; j++){\n                pq.offer(new int[]{i, j, getDis(workers[i], bikes[j])});\n            }\n        }\n        \n        int[] res = new int[n];\n        \n        Set<Integer> seen_w = new HashSet<>();\n        Set<Integer> seen_b = new HashSet<>();\n        while(!pq.isEmpty()){\n            \n            int[] p = pq.poll();\n            int wi = p[0];\n            int bi = p[1];\n            \n            \n            if(!seen_w.contains(wi) && !seen_b.contains(bi)){\n                seen_b.add(bi);\n                seen_w.add(wi);\n                res[wi] = bi;\n                \n            }\n        }\n        \n        return res;\n        \n    }\n    \n    \n    private int getDis(int[] a, int[] b){\n        return Math.abs(a[0]-b[0])+Math.abs(a[1]-b[1]);\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"campus-bikes","has_notes":false,"flag_type":1}