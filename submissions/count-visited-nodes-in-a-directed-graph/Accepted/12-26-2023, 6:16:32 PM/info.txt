{"id":1128778726,"question_id":3140,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703585792,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/1128778726/","is_pending":"Not Pending","title":"Count Visited Nodes in a Directed Graph","memory":"67.6 MB","code":"class Solution {\n    public int[] countVisitedNodes(List<Integer> edges) {\n        int n = edges.size();\n        int[] indeg = new int[n];\n        for(int i=0; i<n; i++){\n            indeg[edges.get(i)]++;\n        }\n        Queue<Integer> q = new LinkedList<>();\n        for(int i=0; i<n; i++){\n            if(indeg[i]==0)\n                q.offer(i);\n        }\n\n\n        int[] res = new int[n];\n\n        while(!q.isEmpty()){\n\n            int siz = q.size();\n            while(siz-->0){\n                int p = q.poll();\n\n                int next = edges.get(p);\n                indeg[next]--;\n                if(indeg[next]==0){\n                    q.offer(next);\n                }\n            }\n        }\n\n        // for(int i=list.size()-1; i>=0; i--){\n        //     List<Intege> sub = list.get(i);\n        //     for(int b : sub){\n        //         res[b] = i+1;\n        //     }\n        // }\n        \n        for(int i=0; i<n; i++){\n            if(indeg[i]==0) continue;\n            if(res[i]!=0) continue;\n\n            int j=i;\n            int len = 1;\n            while(edges.get(j)!=i){\n                len++;\n                j = edges.get(j);\n            }\n\n            j=i;\n            while(edges.get(j)!=i){\n                res[j] = len;\n                j = edges.get(j);\n            }\n        }\n\n        for(int i=0; i<n; i++){\n            if(indeg[i]!=0) continue;\n\n            dfs(i, res, edges);\n        }\n\n        return res;\n\n\n\n\n    }\n\n    private int dfs(int i, int[] res, List<Integer> edges){\n        if(res[i]!=0)\n            return res[i];\n        res[i] = dfs(edges.get(i), res , edges)+1;\n        return res[i];\n\n    }\n}","compare_resulttitle_slug":"count-visited-nodes-in-a-directed-graph","has_notes":false,"flag_type":1}