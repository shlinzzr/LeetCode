{"id":1007417788,"question_id":2856,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690691418,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1007417788/","is_pending":"Not Pending","title":"Count Complete Subarrays in an Array","memory":"43.6 MB","code":"class Solution {\n    \n    public int countCompleteSubarrays(int[] nums) {\n        \n         HashSet<Integer> set = new HashSet<>();\n        for(int n : nums){\n            set.add(n);\n        }\n        \n        int k = set.size();\n        System.out.println( atMost(nums, k));\n        \n        return atMost(nums, k)- atMost(nums, k-1);\n    }\n    \n    private int atMost(int[] nums, int k){\n        \n        int cnt= 0;\n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        int st=0;\n        for(int ed=0; ed<nums.length; ed++){\n            \n            map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n            \n            while(map.size()>k){\n                map.put(nums[st], map.getOrDefault(nums[st], 0)-1);\n                if(map.get(nums[st])==0)\n                    map.remove(nums[st]);\n                st++;\n            }\n            \n            cnt += ed-st+1;\n        }\n        \n        return cnt;\n        \n        \n    }\n    \n    \n    \n    \n    int res = 0;\n    /*\n    private void helper(int[] nums,  HashMap<Integer, Integer> map, int target, int st){\n        \n        if(map.size()==target){\n            res++;\n            for(int k : map.keySet()){\n                System.out.print(k + \":\" + map.get(k) + \", \");\n            }\n              System.out.println();\n            return;\n        }\n            \n        \n        for(int i=st; i<nums.length; i++){\n            \n            map.put(nums[i], map.getOrDefault(nums[i],0)+1);\n            helper(nums, map, target, i+1);\n            map.put(nums[i], map.get(nums[i])-1);\n            if(map.get(nums[i])<=0)\n                map.remove(nums[i]);\n        }\n        \n        \n        \n    }*/\n    \n    \n//     public int countCompleteSubarrays(int[] nums) {\n//         int len = nums.length;\n//         HashSet<Integer> set = new HashSet<>();\n//         for(int n : nums){\n//             set.add(n);\n//         }\n        \n//         int siz = set.size();\n        \n//         LinkedHashMap<Integer, Integer> map = new LinkedHashMap<>();\n//         List<Integer> list= new ArrayList<>();\n//         int st=0;\n//         for(int ed=0; ed<len; ed++){\n            \n//             map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n//             list.add(nums[ed]);\n//             if(map.size()<siz)\n//                 continue;\n            \n//            for(int j=ed; j<len && map.containsKey(nums[j]); j++){\n               \n//                 for(int k : map.keySet()){\n//                     System.out.print(k + \":\" + map.get(k) + \", \");\n//                 }\n//                   System.out.println();\n               \n               \n//                 System.out.println(list);\n               \n               \n//                res++;\n//            }\n            \n//             map.put(nums[st], map.getOrDefault(nums[st], 0)-1);\n            \n//             if(map.get(nums[st])==0)\n//                 map.remove(nums[st]);\n//             st++;\n//             list.remove(0);\n            \n            \n//         }\n        \n//         return res;\n            \n        \n//     }\n}","compare_resulttitle_slug":"count-complete-subarrays-in-an-array","has_notes":false,"flag_type":1}