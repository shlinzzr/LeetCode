{"id":1007396400,"question_id":2856,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1690689345,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1007396400/","is_pending":"Not Pending","title":"Count Complete Subarrays in an Array","memory":"N/A","code":"class Solution {\n    \n    \n    int res = 0;\n    /*\n    private void helper(int[] nums,  HashMap<Integer, Integer> map, int target, int st){\n        \n        if(map.size()==target){\n            res++;\n            for(int k : map.keySet()){\n                System.out.print(k + \":\" + map.get(k) + \", \");\n            }\n              System.out.println();\n            return;\n        }\n            \n        \n        for(int i=st; i<nums.length; i++){\n            \n            map.put(nums[i], map.getOrDefault(nums[i],0)+1);\n            helper(nums, map, target, i+1);\n            map.put(nums[i], map.get(nums[i])-1);\n            if(map.get(nums[i])<=0)\n                map.remove(nums[i]);\n        }\n        \n        \n        \n    }*/\n    \n    \n    public int countCompleteSubarrays(int[] nums) {\n        int len = nums.length;\n        HashSet<Integer> set = new HashSet<>();\n        for(int n : nums){\n            set.add(n);\n        }\n        \n        int siz = set.size();\n        \n        LinkedHashMap<Integer, Integer> map = new LinkedHashMap<>();\n        \n        // helper(nums, map, target, 0);\n        // return res;\n        \n        int res= 0;\n        \n//         int ed =0;\n//         for(int st=0; st<len; st++){\n            \n            \n//              System.out.println(\"st=\"+st+ \" res=\"+res);\n//             for(int k : map.keySet()){\n//                 System.out.print(k + \":\" + map.get(k) + \", \");\n//             }\n//               System.out.println();\n            \n            \n            \n            \n//             while(ed<len && map.size()<siz){\n                \n//                  if(map.size()==siz)\n//                     res++;\n                \n//                 map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n//                 ed++;\n                \n               \n//             }\n            \n//            map.put(nums[st], map.getOrDefault(nums[st], 0)-1);\n//            if(map.get(nums[st])==0)\n//                 map.remove(nums[st]);\n            \n//         }\n        \n//         return res;\n        \n        \n        int st=0;\n        for(int ed=0; ed<len; ed++){\n            \n            map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n            if(map.size()<=siz)\n                continue;\n            \n            while(st<=ed && map.size()==siz){\n               \n                res += (ed-1)\n                \n                map.put(nums[st], map.getOrDefault(nums[st],0)-1);\n                if(map.get(nums[st])==0)\n                    map.remove(nums[st]);\n                \n                st++;\n            }\n        }\n        \n        return res;\n            \n        \n    }\n}","compare_result":null,"title_slug":"count-complete-subarrays-in-an-array","has_notes":false,"flag_type":1}