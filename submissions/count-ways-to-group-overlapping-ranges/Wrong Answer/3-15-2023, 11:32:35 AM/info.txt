{"id":915393913,"question_id":2651,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678851155,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/915393913/","is_pending":"Not Pending","title":"Count Ways to Group Overlapping Ranges","memory":"N/A","code":"class Solution {\n    public int countWays(int[][] ranges) {\n        Arrays.sort(ranges, (a,b)->a[0]==b[0] ? a[0]-b[0] : a[1]-b[1]);\n        \n        List<int[]> list = new ArrayList<>();\n        \n        int[] curr = ranges[0];\n        int i=1;\n        \n        while(i<ranges.length){\n            if(curr[1]<ranges[i][0]){\n                while(curr[1]<ranges[i][0]){\n                    curr[1]=ranges[i][1];\n                    i++;\n                }   \n                i--;\n            }else{\n                curr=ranges[i];\n                \n            }\n            \n\n            list.add(curr);    \n            i++;\n        }\n            \n        \n        int siz = list.size();\n        return siz;\n            \n    }\n}","compare_result":"00000000000000000000000000000000","title_slug":"count-ways-to-group-overlapping-ranges","has_notes":false,"flag_type":1}