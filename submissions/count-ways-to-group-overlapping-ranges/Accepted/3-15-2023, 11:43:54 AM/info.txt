{"id":915398552,"question_id":2651,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678851834,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/915398552/","is_pending":"Not Pending","title":"Count Ways to Group Overlapping Ranges","memory":"101.6 MB","code":"class Solution {\n   public int countWays(int[][] ranges) {\n        int res = 1, last = -1, mod = (int)1e9 + 7;\n        Arrays.sort(ranges, (a, b) -> a[0] - b[0]);\n        for (int[] r: ranges) {   \n            if (last < r[0])\n                res = res * 2 % mod;\n            last = Math.max(last, r[1]);\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"count-ways-to-group-overlapping-ranges","has_notes":false,"flag_type":1}