{"id":1284378667,"question_id":1217,"lang":"java","lang_name":"Java","time":"2Â days","timestamp":1718071630,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1284378667/","is_pending":"Not Pending","title":"Relative Sort Array","memory":"42.3 MB","code":"class Solution {\n    public int[] relativeSortArray(int[] arr1, int[] arr2) {\n        Set<Integer> set = new HashSet<>();\n        for(int a2: arr2){\n            set.add(a2);\n        }\n        \n        List<Integer> list2 = new ArrayList<>();\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for(int a1 : arr1){\n            if(set.contains(a1))\n                map.put(a1, map.getOrDefault(a1,0)+1);\n            else list2.add(a1);\n        }\n        \n        Collections.sort(list2);\n        \n        List<Integer> list = new ArrayList<>();\n        for(int a2 : arr2){\n            \n            int loop = map.get(a2);\n            while(loop-->0)\n                list.add(a2);\n        }\n        \n        list.addAll(list2);\n        \n        \n        \n       \n        int[] res = new int[list.size()];\n        for(int i=0; i<list.size(); i++){\n            res[i] = list.get(i);\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111","title_slug":"relative-sort-array","has_notes":false,"flag_type":1}