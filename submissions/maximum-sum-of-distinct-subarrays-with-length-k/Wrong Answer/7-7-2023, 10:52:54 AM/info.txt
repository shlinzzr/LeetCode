{"id":988240314,"question_id":2552,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688698374,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/988240314/","is_pending":"Not Pending","title":"Maximum Sum of Distinct Subarrays With Length K","memory":"N/A","code":"class Solution {\n    public long maximumSubarraySum(int[] nums, int k) {\n        int len = nums.length;\n        HashSet<Integer> set = new HashSet<>();\n        \n        long max = 0;\n        \n        int sum=0;\n        \n        int st =0;\n        for(int ed=0; ed<len; ed++){\n            \n            sum += nums[ed];\n            \n            while(st<=ed-k || (st<ed && set.contains(nums[ed]))){\n                int nst = nums[st];\n                set.remove(nst);\n                sum -= nst;\n                st++;\n            }\n            \n            set.add(nums[ed]);\n            \n            if(ed-st+1==k)\n                max = Math.max(max, sum);\n            \n                        \n            \n            \n        }\n        \n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111001111111111011111111111111","title_slug":"maximum-sum-of-distinct-subarrays-with-length-k","has_notes":false,"flag_type":1}