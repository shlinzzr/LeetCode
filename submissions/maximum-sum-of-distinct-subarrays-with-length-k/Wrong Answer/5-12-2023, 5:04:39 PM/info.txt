{"id":948919686,"question_id":2552,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683882279,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/948919686/","is_pending":"Not Pending","title":"Maximum Sum of Distinct Subarrays With Length K","memory":"N/A","code":"class Solution {\n    public long maximumSubarraySum(int[] nums, int k) {\n        int len = nums.length;\n        \n        \n        HashSet<Integer> set = new HashSet<>();\n        \n        int sum=0;\n        int max = 0;\n        Integer prev = null;\n        int st=0;\n        for(int ed=0; ed<len; ed++){\n            \n            \n            if(set.contains(nums[ed])){\n                set = new HashSet<>();\n                sum=0;\n                st=ed;\n            }\n            \n            \n            set.add(nums[ed]);\n            sum += nums[ed];\n            if(ed-st+1<k){\n                continue;\n            }\n            \n            max = Math.max(max, sum);\n            \n            set.remove(nums[st]);\n            sum-=nums[st++];\n        }\n        \n        return max;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111001111111111011110101111111","title_slug":"maximum-sum-of-distinct-subarrays-with-length-k","has_notes":false,"flag_type":1}