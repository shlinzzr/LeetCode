{"id":1142298757,"question_id":773,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704882250,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1142298757/","is_pending":"Not Pending","title":"Logical OR of Two Binary Grids Represented as Quad-Trees","memory":"44.6 MB","code":"/*\n// Definition for a QuadTree node.\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n\n    public Node() {}\n\n    public Node(boolean _val,boolean _isLeaf,Node _topLeft,Node _topRight,Node _bottomLeft,Node _bottomRight) {\n        val = _val;\n        isLeaf = _isLeaf;\n        topLeft = _topLeft;\n        topRight = _topRight;\n        bottomLeft = _bottomLeft;\n        bottomRight = _bottomRight;\n    }\n};\n*/\nclass Solution {\n    public Node intersect(Node a, Node b) {\n        if(a.isLeaf){\n            return a.val ? a : b;\n        }\n        if(b.isLeaf){\n            return b.val ? b : a;\n        }\n        a.topLeft = intersect(a.topLeft,b.topLeft);\n        a.topRight = intersect(a.topRight,b.topRight);\n        a.bottomLeft = intersect(a.bottomLeft,b.bottomLeft);\n        a.bottomRight = intersect(a.bottomRight,b.bottomRight);\n\n        if (a.topLeft.isLeaf && a.topRight.isLeaf \n            && a.bottomLeft.isLeaf && a.bottomRight.isLeaf\n            && a.topLeft.val == a.topRight.val \n            && a.topRight.val == a.bottomLeft.val \n            && a.bottomLeft.val == a.bottomRight.val) {\n            return new Node(true,a.topLeft.val);\n        }\n        return a;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"logical-or-of-two-binary-grids-represented-as-quad-trees","has_notes":false,"flag_type":1}