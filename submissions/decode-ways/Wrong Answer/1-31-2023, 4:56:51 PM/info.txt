{"id":888643798,"question_id":91,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675155411,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/888643798/","is_pending":"Not Pending","title":"Decode Ways","memory":"N/A","code":"class Solution {\n    public int numDecodings(String s) {\n        int len = s.length();\n        int[] dp = new int[len+1];\n        dp[0]=1; // 組成0 digit only 1 way\n        dp[1]=1;\n        for(int i=2; i<=len; i++){ //len=2\n            char ch = s.charAt(i-1);\n            if(i<len){\n                char nxt = s.charAt(i);\n                if(nxt=='0'){\n                    dp[i]=dp[i-1];\n                    i++;\n                    continue;\n                }\n            }\n            \n            if(ch-'0'>2){\n                dp[i]=dp[i-1];\n                continue;\n            }\n            \n            if(i==len-3 && s.charAt(i+1)=='0'){\n                dp[i]=dp[i-1];\n                continue;\n            }\n            \n            dp[i]=dp[i-1]*2;\n            \n        }\n        \n        return dp[len];\n    }\n}\n\n\n// always consider 2 digits:\n\n// i, i+1  \n//     0. -> must take 2 digit\n    \n// 1/2  -> might be 1 digit or 2 digit\n\n// 3+  must be only 1 digit\n","compare_result":"10001110101100001000000000100001101001011111100000000110001100011111110001111111000111111100011111110001111111000111111100011111101110000110110110011111110011010111010011111101100000011001010010001101011010111001011101110110110101000000000101000000000010100000100110101","title_slug":"decode-ways","has_notes":false,"flag_type":1}