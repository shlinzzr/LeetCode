{"id":1273121446,"question_id":91,"lang":"java","lang_name":"Java","time":"1 week, 5 days","timestamp":1717144874,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1273121446/","is_pending":"Not Pending","title":"Decode Ways","memory":"41.8 MB","code":"class Solution {\n    public int numDecodings(String s) {\n        \n        int len = s.length();\n\n        return helper(s, 0, new HashMap<>());\n    }\n\n    private int helper(String s, int idx, Map<Integer,Integer> memo){\n        if(idx==s.length()) return 1;\n        if(memo.containsKey(idx)) return memo.get(idx);\n\n        char ch = s.charAt(idx);\n\n        int res = 0;\n        if(ch=='0') return 0;\n        else if(ch=='1'){\n            res += helper(s, idx+1, memo);\n            if(idx+1<s.length()){\n                res+= helper(s, idx+2, memo);\n            }\n        }else if(ch=='2'){\n            res += helper(s, idx+1, memo);\n            if(idx+1<s.length()){\n                char ch2 = s.charAt(idx+1);\n                if(ch2>='0' && ch2<='6'){\n                    res+= helper(s, idx+2, memo);\n                }\n            }\n            \n        }else{\n            res += helper(s, idx+1, memo);\n        }\n\n        memo.put(idx, res);\n        return res;\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways","has_notes":false,"flag_type":1}