{"id":1127794828,"question_id":91,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703470807,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1127794828/","is_pending":"Not Pending","title":"Decode Ways","memory":"41.9 MB","code":"class Solution {\n\n    Map<Integer, Integer> memo = new HashMap<>();\n\n    public int numDecodings(String s) {\n        return helper(0, s);\n    }\n    \n    private int helper(int idx, String str) {\n        // Have we already seen this substring?\n        if (memo.containsKey(idx)) {\n            return memo.get(idx);\n        }\n        \n        // If you reach the end of the string\n        // Return 1 for success.\n        if (idx == str.length()) {\n            return 1;\n        }\n\n        // If the string starts with a zero, it can't be decoded\n        if (str.charAt(idx) == '0') {\n            return 0;\n        }\n\n        if (idx == str.length() - 1) {\n            return 1;\n        }\n\n\n        int ans = helper(idx + 1, str);\n        if (Integer.parseInt(str.substring(idx, idx + 2)) <= 26) {\n             ans += helper(idx + 2, str);\n         }\n\n        // Save for memoization\n        memo.put(idx, ans);\n\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways","has_notes":false,"flag_type":1}