{"id":1236448460,"question_id":91,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713519062,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1236448460/","is_pending":"Not Pending","title":"Decode Ways","memory":"42 MB","code":"class Solution {\n\n    Map<Integer, Integer> memo = new HashMap<>();\n\n    public int numDecodings(String s) {\n        if(s == null || s.length() == 0) \n            return 0;\n        int n = s.length();\n        int[] dp = new int[n];\n        dp[0] = s.charAt(0) != '0' ? 1 : 0;\n        for(int i = 1; i < n; i++) {\n            int oneDigit = (int) (s.charAt(i)-'0');\n            if(oneDigit >= 1 && oneDigit <= 9) {\n                dp[i] += dp[i-1];\n            }\n            \n            int twoDigit = Integer.valueOf(s.substring(i-1, i+1));\n            if(twoDigit >= 10 && twoDigit <= 26) {\n                dp[i] += i >=2 ? dp[i-2] : 1;\n            }\n        }\n        return dp[n-1];\n\n            // return recur(0, s);\n    }\n    \n    private int recur(int idx, String str) {\n        // Have we already seen this substring?\n        if (memo.containsKey(idx)) {\n            return memo.get(idx);\n        }\n        \n        // If you reach the end of the string\n        // Return 1 for success.\n        if (idx == str.length()) {\n            return 1;\n        }\n\n        // If the string starts with a zero, it can't be decoded\n        if (str.charAt(idx) == '0') {\n            return 0;\n        }\n\n        if (idx == str.length() - 1) {\n            return 1;\n        }\n\n\n        int ans = recur(idx + 1, str);\n        if (Integer.parseInt(str.substring(idx, idx + 2)) <= 26) {\n             ans += recur(idx + 2, str);\n         }\n\n        // Save for memoization\n        memo.put(idx, ans);\n\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways","has_notes":false,"flag_type":1}