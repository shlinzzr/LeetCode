{"id":764860441,"question_id":235,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659599650,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/764860441/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"43.1 MB","code":"// /**\n//  * Definition for a binary tree node.\n//  * public class TreeNode {\n//  *     int val;\n//  *     TreeNode left;\n//  *     TreeNode right;\n//  *     TreeNode(int x) { val = x; }\n//  * }\n//  */\n\n// class Solution {\n//     public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n\n//         if(root==null)\n//             return null;\n        \n//         if(root==p && root==q)\n//             return root;\n        \n//         boolean pIsLeft = isAncestor(root.left, p);\n//         boolean qIsRight = isAncestor(root.right, q);\n        \n//         while(!(pIsLeft && qIsRight)){\n            \n            \n            \n            \n//             if( pIsLeft && !qIsRight)\n//                 root= root.left;\n//             else{\n//                 root=root.right;\n//             }\n            \n            \n            \n//             pIsLeft = (root.left ==null) false : isAncestor(root.left, p);\n//             qIsRight = isAncestor(root.right, q);\n            \n//         }\n        \n//         return root;\n        \n       \n        \n//     }\n    \n    \n//     private boolean isAncestor(TreeNode root, TreeNode p){\n        \n//         if(root==null)\n//             return false;\n        \n//         if(root==p)\n//             return true;\n        \n//         return isAncestor(root.left, p) || isAncestor(root.right, p);\n//     }\n// }\n\n\npublic class Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root.val > p.val && root.val > q.val){\n            return lowestCommonAncestor(root.left, p, q);\n        }else if(root.val < p.val && root.val < q.val){\n            return lowestCommonAncestor(root.right, p, q);\n        }else{\n            return root;\n        }\n    }\n}\n","compare_result":"1111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}