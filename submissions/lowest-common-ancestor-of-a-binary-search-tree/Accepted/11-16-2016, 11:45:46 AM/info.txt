{"id":82765953,"question_id":235,"lang":"c","lang_name":"C","time":"7 years, 6 months","timestamp":1479267946,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/82765953/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     struct TreeNode *left;\r\n *     struct TreeNode *right;\r\n * };\r\n */\r\nstruct TreeNode* lowestCommonAncestor(struct TreeNode* root, struct TreeNode* p, struct TreeNode* q) {\r\n  \r\n    if(p->val < root->val && q->val < root->val) \r\n        return lowestCommonAncestor(root->left, p, q);\r\n    else if(p->val > root->val && q->val > root->val) \r\n        return lowestCommonAncestor(root->right, p, q);\r\n    \r\n  \r\n    return root;\r\n}","compare_result":null,"title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}