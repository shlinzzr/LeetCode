{"id":764855636,"question_id":235,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659599175,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/764855636/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n\n        if(root==null)\n            return null;\n        \n        boolean pIsLeft = isAncestor(root.left, p);\n        boolean qIsRight = isAncestor(root.right, q);\n        \n        while(!(pIsLeft && qIsRight)){\n            \n            if( pIsLeft && !qIsRight)\n                root= root.left;\n            else{\n                root=root.right;\n            }\n            \n            pIsLeft = isAncestor(root.left, p);\n            qIsRight = isAncestor(root.right, q);\n            \n        }\n        \n        return root;\n        \n       \n        \n    }\n    \n    \n    private boolean isAncestor(TreeNode root, TreeNode p){\n        \n        if(root==null)\n            return false;\n        \n        if(root==p)\n            return true;\n        \n        return isAncestor(root.left, p) || isAncestor(root.right, p);\n    }\n}","compare_result":"1000000000000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}