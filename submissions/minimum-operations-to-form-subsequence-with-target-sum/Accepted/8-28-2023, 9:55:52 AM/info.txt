{"id":1033664378,"question_id":3025,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693187752,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1033664378/","is_pending":"Not Pending","title":"Minimum Operations to Form Subsequence With Target Sum","memory":"43.8 MB","code":"class Solution {\n    public int minOperations(List<Integer> nums, int target) {\n        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)->b-a);\n        long sum=0;\n        long count=0;\n        for(int x:nums)\n        {\n            pq.offer(x);\n            sum+=x;\n        }\n        // if sum is less than target impossible to  achieve this target\n        if(sum<target)\n            return -1;\n        // starting from highest element in priority queue\n        while(!pq.isEmpty())\n        {\n            int val=pq.poll();\n            sum-=(long)val;\n            // if val less than target update target\n            if(val<=target)\n            {\n                target-=val;\n            }\n            // if val is greater than target but it sum is less than target \n            // we will break the val into 2 half and increase count and update our sum\n            // if sum is greater than target it is not possoble to achieve this target this means \n            // we will delete or not using this number \n            else if(val>target && sum<target)\n            {\n                count++;\n                pq.offer(val/2);\n                pq.offer(val/2);\n                sum+=(long)val;\n            }\n        }\n        return (int)count;\n    }\n}","compare_resulttitle_slug":"minimum-operations-to-form-subsequence-with-target-sum","has_notes":false,"flag_type":1}