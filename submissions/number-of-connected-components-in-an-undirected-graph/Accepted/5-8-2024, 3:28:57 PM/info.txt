{"id":1252450897,"question_id":323,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715153337,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1252450897/","is_pending":"Not Pending","title":"Number of Connected Components in an Undirected Graph","memory":"44.3 MB","code":"class Solution {\n    public int countComponents(int n, int[][] edges) {\n        int[] parent = new int[n];\n        \n        for(int i=0; i<n; i++) \n            parent[i] = i;\n        \n        int cnt = n;\n        for(int[] e : edges){\n            \n            int root = find(parent, e[0]);\n            int node = find(parent, e[1]);\n            \n            if(root!=node){\n                parent[node] = root;\n                cnt--;\n            }\n        }\n        return cnt;\n    }\n    \n    private int find(int[] parent, int x){\n        if(parent[x]==x)\n            return x;\n        \n        parent[x] = find(parent, parent[x]);\n        return parent[x];\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"number-of-connected-components-in-an-undirected-graph","has_notes":false,"flag_type":1}