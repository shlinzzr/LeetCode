{"id":1281774454,"question_id":3413,"lang":"java","lang_name":"Java","time":"4 days, 11 hours","timestamp":1717860944,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1281774454/","is_pending":"Not Pending","title":"Find The First Player to win K Games in a Row","memory":"N/A","code":"class Solution {\n    \n    class Gamer{\n        int idx;\n        int lv;\n        int cnt=0;\n        \n        public Gamer(int idx, int lv){\n            this.idx = idx;\n            this.lv = lv;\n        }\n            \n    }\n    public int findWinningPlayer(int[] skills, int k) {\n        // 1. 後面有兩個smaller\n        // 2. 前面沒有比較大的, 前面跟後面都至少有一個比較小的\n        //prev Greater == -1 and nextGreater-i>k-1\n        int len = skills.length;\n        \n        \n        \n        // [4,2,6,3,9], k = 2\n        \n        \n        int max= 0;\n        for(int i=0; i<len-k; i++){\n            for(int j=i+1; j<len; j++){\n                if(skills[j]>skills[i]){\n                    i=j-1;\n                    break;\n                }\n                \n                if(i==0) {\n                    if(j-i+1>=k+1) { return i;}\n                }\n                    \n                else {\n                    if(j-i+1>=k) return i;\n                }\n                    \n            }\n            \n        }\n        int res= 0 ;\n        for(int i=0; i<len; i++){\n            if(skills[i]>max){\n                res = i;\n                max = skills[i];\n            }\n        }\n        \n        return res;\n        \n        // [x x x x  last |x xx x] \n        //  ^            \n        \n//         Stack<Integer> st= new Stack<>();\n//         int[] nextGreater = new int[len];\n//         for(int i =0; i<len; i++){\n//             while(!st.isEmpty() && skills[st.peek()]<skills[i] ){\n//                 nextGreater[st.pop()] = i;\n//             }\n//             st.push(i);            \n//         }\n        \n        \n//         int[] prevGreater = new int[len];\n//         Arrays.fill(prevGreater, -1);\n//         for(int i=len-1; i>=0; i--){\n//             while(!st.isEmpty() && skills[i]>skills[st.peek()]){\n//                 prevGreater[st.pop()] = i;\n//             }\n//             st.push(i);\n//         }\n        \n        \n//         //0 1 2 3\n//         //^   ^  \n//         for(int i=0; i<len; i++){\n//             if(i==0)\n//                 if(prevGreater[i]==-1 && nextGreater[i]-i>=k+1) return i;\n//             else\n//                 if(prevGreater[i]==-1 && nextGreater[i]-i>=k) return i;\n//         }\n        \n        \n    }\n}","compare_resulttitle_slug":"find-the-first-player-to-win-k-games-in-a-row","has_notes":false,"flag_type":1}