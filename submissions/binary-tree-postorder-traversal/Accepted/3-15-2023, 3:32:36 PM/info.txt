{"id":915503620,"question_id":145,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678865556,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/915503620/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"40.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> postorderTraversal(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n        helper(root,res);\n        return res;\n    }\n    \n    private void helper( TreeNode root, List<Integer>res ){\n        \n        if(root==null)\n            return;\n        \n        helper(root.left, res);\n      \n        helper(root.right, res);\n          res.add(root.val);\n    \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}