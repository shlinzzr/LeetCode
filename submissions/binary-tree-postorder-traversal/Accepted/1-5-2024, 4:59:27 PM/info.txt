{"id":1137456913,"question_id":145,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1704445167,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1137456913/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"41.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> postorderTraversal(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n        postorder(root, res);\n        return res;\n    }\n\n    private void postorder(TreeNode root, List<Integer> list ){\n        if(root==null) return;\n       \n        postorder(root.left, list);\n        postorder(root.right, list);\n         list.add(root.val);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}