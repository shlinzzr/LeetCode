{"id":1124002881,"question_id":511,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703054119,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1124002881/","is_pending":"Not Pending","title":"All Paths from Source Lead to Destination","memory":"46.5 MB","code":"class Solution {\n    public boolean leadsToDestination(int n, int[][] edges, int source, int destination) {\n        \n        \n        Map<Integer, List<Integer>> graph = new HashMap<>();\n        Map<Integer, Boolean> visited = new HashMap<>();\n        \n        for(int i=0; i< edges.length; i++){\n            int src = edges[i][0];\n            int tar = edges[i][1];\n\n            graph.putIfAbsent(src, new ArrayList<>());\n            graph.get(src).add(tar);   \n        }\n        \n        boolean result = dfs(graph, visited, source, destination);\n        \n        return result;\n\n    }\n    \n    \n    public boolean dfs(Map<Integer, List<Integer>> graph,  Map<Integer, Boolean> visited, int start, int destination ){\n        \n        if(visited.containsKey(start))\n            return visited.get(start);\n    \n        // to check the below condition \n        // node with no outgoing edges should be equal to destination\n        \n        if(start == destination && graph.get(destination) ==null)\n            return true;\n        \n         if(start == destination && graph.get(destination).size() > 0)\n            return false;\n        \n        \n        // if any node has no outgoing edges and it is not destination then return false'\n         if(start != destination && graph.get(start) ==null)\n            return false;\n        \n       \n        \n         visited.put(start, false);\n        \n        for(int neighbour:  graph.getOrDefault(start, new ArrayList<>())){\n            \n            boolean result = dfs(graph, visited, neighbour, destination);\n            \n            if(!result)\n                return false;\n        }\n        \n        visited.put(start, true);\n        \n        return true;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"all-paths-from-source-lead-to-destination","has_notes":false,"flag_type":1}