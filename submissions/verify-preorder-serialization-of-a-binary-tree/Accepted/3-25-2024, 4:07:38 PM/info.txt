{"id":1213289835,"question_id":331,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711354058,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1213289835/","is_pending":"Not Pending","title":"Verify Preorder Serialization of a Binary Tree","memory":"43.4 MB","code":"class Solution {\n\n    // class Node{\n    //     Node left;\n    //     Node right;\n    //     int val;\n    //     public Node(val){\n    //         this.val=val;\n    //     }\n    // }\n\n\n    public boolean isValidSerialization(String preorder) {\n\n        String[] arr = preorder.split(\",\");\n        int len = arr.length;\n\n        int deg =1;\n\n        for(int i=0; i<len ;i++){\n            String s = arr[i];\n\n            if(--deg<0) \n                return false;\n\n            if(!\"#\".equals(s)){ \n                deg+=2;\n            }\n        }\n\n        return deg ==0;\n\n        \n    }\n\n    // private boolean helper(char[] arr, int idx){\n\n    //     int val = arr[idx];\n    //     Node node = new Node(val);\n\n\n\n\n    // }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verify-preorder-serialization-of-a-binary-tree","has_notes":false,"flag_type":1}