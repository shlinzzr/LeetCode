{"id":1213288840,"question_id":331,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711353956,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1213288840/","is_pending":"Not Pending","title":"Verify Preorder Serialization of a Binary Tree","memory":"N/A","code":"class Solution {\n\n    // class Node{\n    //     Node left;\n    //     Node right;\n    //     int val;\n    //     public Node(val){\n    //         this.val=val;\n    //     }\n    // }\n\n\n    public boolean isValidSerialization(String preorder) {\n\n        String[] arr = preorder.split(\",\");\n        int len = arr.length;\n        if(len==0 || \"#\".equals(preorder)){\n            return true;\n        } \n\n        int deg =1;\n\n        for(int i=0; i<len ;i++){\n            String s = arr[i];\n\n            if(\"#\".equals(s)){\n                deg--;\n            }else {\n                deg++;\n            }\n            System.out.print(deg+ \",\");\n        }\n\n        return deg==0;\n\n    // 9,3,4,#,#,1,#,#,2,#,6,#,#\n    // 2 3 4 3 2 3 2 1 2 1 2 1 0\n        \n    }\n\n    // private boolean helper(char[] arr, int idx){\n\n    //     int val = arr[idx];\n    //     Node node = new Node(val);\n\n\n\n\n    // }\n}","compare_result":"11111111111111111111100000111011111111111111111111001011111101110101111101111101011111101101111111011110001111111101011111110111111101011110001001011001","title_slug":"verify-preorder-serialization-of-a-binary-tree","has_notes":false,"flag_type":1}