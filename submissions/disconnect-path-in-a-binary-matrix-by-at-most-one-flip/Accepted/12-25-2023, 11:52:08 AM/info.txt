{"id":1127829683,"question_id":2641,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703476328,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1127829683/","is_pending":"Not Pending","title":"Disconnect Path in a Binary Matrix by at Most One Flip","memory":"56.7 MB","code":"class Solution {\n    public boolean isPossibleToCutPath(int[][] grid) {\n        int h = grid.length;\n        int w = grid[0].length;\n\n\n\n\n        // how to find bottleneck\n        // bfs & find single dir node\n        // sol : greedy like : \n        // find top-right most v.s. bottom-left most line \n        // if it hit critical point then we've found the point we can flip\n\n        // first we cut tree here \n        for(int i=h-1; i>=0; i--){\n            for(int j=w-1; j>=0; j--){\n\n                if(i==h-1 && j==w-1) continue;\n                if( (i+1>=h || grid[i+1][j]==0) && (j+1>=w || grid[i][j+1]==0 ))\n                    grid[i][j] = 0; // cut tree\n            }\n        }\n        if(grid[0][0]==0) return true;\n\n        \n        // second, check top-right most & bottom-left most\n        int x1=0, y1=0, x2=0, y2=0;\n\n        // total steps : h-1 + w-1 -1\n        for(int i=0; i<h+w-3; i++){\n            \n            //go down first\n            if(y1+1<h && grid[y1+1][x1]==1)\n                y1++;\n            else \n                x1++;\n            \n            //go right first\n            if(x2+1<w && grid[y2][x2+1]==1){\n                x2++;\n            }else{\n                y2++;\n            }\n\n            if(x1==x2 && y1==y2)\n                return true;\n        }\n\n        return false;\n\n\n        \n\n\n\n\n\n\n        // int[][] dp = new int[h][w];\n        // for(int i=0; i<h; i++){\n        //     dp[i][0]= i==0? grid[0][0] : dp[i-1][0]+grid[i][0];\n        // }\n\n        // for(int j=0; j<w; j++){\n        //     dp[0][j] = j==0 ? grid[0][0] = \n        // }\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"disconnect-path-in-a-binary-matrix-by-at-most-one-flip","has_notes":false,"flag_type":1}