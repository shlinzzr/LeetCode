{"id":1108583855,"question_id":2196,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701226862,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1108583855/","is_pending":"Not Pending","title":"Reverse Nodes in Even Length Groups","memory":"68.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseEvenLengthGroups(ListNode head) {\n\n        ListNode prev = new ListNode();\n        ListNode curr = head;\n        List<ListNode> list = new ArrayList<>();\n        list.add(head);\n        int cnt = 0;\n        int target = 1;\n\n        while(curr!=null){\n\n            cnt++;\n            ListNode next = curr.next;\n\n            if(cnt==target){\n                curr.next = null;\n                if(next!=null)\n                    list.add(next);\n                target++;\n                cnt=0;\n            }\n\n            curr = next;\n        }\n\n        ListNode dummy = new ListNode();\n        curr = dummy;\n        for(int i=0; i<list.size(); i++){\n          \n            ListNode node = list.get(i);\n    //          System.out.println();\n    //     System.out.println(\"node:\");\n            cnt = 0;\n            ListNode cur = node;\n            while(cur!=null){\n                cnt++;\n                cur=cur.next;\n            }\n\n\n    // // System.out.println();\n    // //     System.out.println(\"tail:\");\n    // //         ListNode tail =  reverse(node);\n            \n    // //          cur = tail;\n    // //         while(cur!=null){\n    // //             System.out.println(cur.val);\n    // //             prev= cur;\n    // //             cur=cur.next;\n    // //         }\n    // //          reverse(prev);\n\n            \n\n            if(cnt%2==1 ){\n                curr.next = node;\n                while(node!=null){\n                    curr = node;\n                    node = node.next;\n                }\n            }else{\n                node = reverse(node);\n                curr.next = node;\n                while(node!=null){\n                    curr = node;\n                    node = node.next;\n                }\n            }\n        }\n\n        return dummy.next;\n\n\n        \n    }\n\n    private ListNode reverse(ListNode node){\n        ListNode prev = null;\n        ListNode curr = node;\n        while(curr!=null){\n            ListNode next = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = next;\n        }\n\n        return prev;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-even-length-groups","has_notes":false,"flag_type":1}