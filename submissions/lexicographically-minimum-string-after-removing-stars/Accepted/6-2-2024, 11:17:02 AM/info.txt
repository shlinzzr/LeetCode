{"id":1274771315,"question_id":3445,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1717298222,"status":10,"status_display":"Accepted","runtime":"145 ms","url":"/submissions/detail/1274771315/","is_pending":"Not Pending","title":"Lexicographically Minimum String After Removing Stars","memory":"47.3 MB","code":"class Solution {\n    public String clearStars(String s) {\n        int del = 0;\n        \n        for(char ch : s.toCharArray()){\n            if(ch=='*') del++;\n        }\n        \n        \n        if(del==0) return s;\n        \n        boolean[] bool = new boolean[s.length()];\n        Arrays.fill(bool, true);\n        \n        TreeMap<Character, List<Integer>> map = new TreeMap<>();\n        // Map<Integer, Integer> imap = new HashMap<>();\n        \n        for(int i=0; i<s.length(); i++){\n            char ch = s.charAt(i);\n            if(ch=='*'){\n                \n                // System.out.println(map);\n                \n                char f = map.firstKey();\n                int idx = map.get(f).remove(map.get(f).size()-1);\n                if(map.get(f).size()==0) map.remove(f);\n                bool[idx]=false;\n                \n                \n            }else{\n                // imap.put(ch, i);\n                map.putIfAbsent(ch, new ArrayList<>());\n                map.get(ch).add(i);\n            }\n            \n        }\n        \n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<s.length(); i++){\n            char ch = s.charAt(i);\n            if(map.containsKey(ch) && bool[i]){\n                sb.append(ch);\n                \n                \n                // map.put(ch, map.get(ch)-1)\n                // if(map.get(ch)==0) map.remove(ch);\n            }\n            \n            \n        }\n        \n        return sb.toString();\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lexicographically-minimum-string-after-removing-stars","has_notes":false,"flag_type":1}