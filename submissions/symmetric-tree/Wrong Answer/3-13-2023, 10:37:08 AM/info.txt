{"id":914119442,"question_id":101,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678675028,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/914119442/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        \n        if(root==null)\n            return true;\n        \n        if(root.left==null || root.right==null){\n            if(root.left!=null || root.right!=null){\n                return false;\n            }\n        }\n        \n        if(root.left!=null || root.right!=null){\n            \n            if(root.left==null || root.right==null || (root.left.val!=root.right.val)){\n                return false;\n            }\n            \n            boolean left_sub = isSymmetric(root.left);\n            boolean right_sub = isSymmetric(root.right);\n            \n            return left_sub && right_sub;\n            \n        }\n        \n        return true;\n        \n        \n    }\n}","compare_result":"0111111111010111110110101010110001100111101111011111111110110111101100011011000111111111010011110111100101101101111011010111100010011100101111010000111001101011000110001001111100111100110011010111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}