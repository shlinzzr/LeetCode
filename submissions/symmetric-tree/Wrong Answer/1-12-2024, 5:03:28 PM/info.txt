{"id":1144082534,"question_id":101,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1705050208,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1144082534/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> list= new ArrayList<>();\n    int idx = 0;\n    boolean res = true;\n    \n    public boolean isSymmetric(TreeNode root) {\n        \n        if(root==null) return true;\n        preorder(root.left);\n        postorder(root.right);\n        return res;\n    }\n    \n    private void preorder(TreeNode root){\n        if(root==null) return ;\n        list.add(root.val);\n        preorder(root.left);\n        preorder(root.right);\n    }\n    \n    private void postorder(TreeNode root){\n        if(root==null) return ;\n        if(res==false) return;\n        if(idx>=list.size() || list.get(idx++)!=root.val) {\n            res = false;\n            return;\n            \n        }\n        preorder(root.right);\n        preorder(root.left);\n    }\n}","compare_result":"1000101111101000001011010101001110011000010000100000000001001000010011100100111000000000101100001000011010010010101100101000011111101011010000101111000111010100111001111111000011000011001100101011000","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}