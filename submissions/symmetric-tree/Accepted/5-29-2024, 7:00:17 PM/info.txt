{"id":1271327123,"question_id":101,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1716980417,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1271327123/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"41.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n\n        if(root==null) return true;\n        return helper(root.left, root.right);\n\n       \n    }\n\n    private boolean helper(TreeNode p, TreeNode q){\n\n\n        if(p==null && q==null) return true;\n        if(p==null || q==null) return false;\n\n        if(p.val!=q.val) return false;\n\n        boolean left = helper(p.left, q.right);\n        boolean right= helper(p.right, q.left);\n\n        return left && right;\n\n\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}