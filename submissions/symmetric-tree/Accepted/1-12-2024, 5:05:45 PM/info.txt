{"id":1144083902,"question_id":101,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1705050345,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1144083902/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"42.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        return helper(root, root);\n    }\n    \n    private boolean helper(TreeNode p, TreeNode q){\n        if(p==null && q==null) return true;\n        \n        if(p==null || q==null ) return false;\n        \n        if(p.val!=q.val) return false;\n        \n        return helper(p.left, q.right) && helper(p.right, q.left);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}