{"id":803477989,"question_id":101,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1663571906,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/803477989/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"42.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        \n        \n        boolean res = true;\n        if(root.left!=null || root.right!=null)\n            res = res && helper(root.left, root.right);\n        \n        return res;\n    }\n    \n    private boolean helper(TreeNode left, TreeNode right){\n        \n        if(left==null || right==null)\n            return false;\n        if(left.val!=right.val)\n            return false;\n        \n        \n        boolean res=true;\n        if(left.right!=null || right.left!=null)\n           res = res && helper(left.right, right.left);\n        \n        if(left.left!=null || right.right!=null)\n            res = res &&  helper(left.left, right.right);\n        \n\n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}