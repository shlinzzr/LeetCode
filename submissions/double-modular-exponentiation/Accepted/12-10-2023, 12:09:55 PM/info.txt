{"id":1116203231,"question_id":3234,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702181395,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1116203231/","is_pending":"Not Pending","title":"Double Modular Exponentiation","memory":"45.3 MB","code":"import java.math.BigInteger;\n\nclass Solution {\n    public List<Integer> getGoodIndices(int[][] arr, int target) {\n        List<Integer> al = new ArrayList<>();\n        BigInteger ten = new BigInteger(\"10\");\n        for(int i=0; i<arr.length; i++){\n            // long calc = Math.pow(Math.pow(arr[i][0], arr[i][1]) % 10, arr[i][2])%arr[i][3];\n            BigInteger a = new BigInteger(arr[i][0]+\"\");\n            int b = arr[i][1];\n            int c = arr[i][2];\n            int m = arr[i][3];\n            BigInteger x = a.pow(b);\n            BigInteger y = x.mod(ten);\n            BigInteger z = y.pow(c);\n            BigInteger d = new BigInteger(m+\"\");\n            BigInteger res = z.mod(d);            \n            \n            if(res.intValue() == target)\n                al.add(i);\n        }\n        \n        return al;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"double-modular-exponentiation","has_notes":false,"flag_type":1}