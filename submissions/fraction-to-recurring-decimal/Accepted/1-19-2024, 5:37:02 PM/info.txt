{"id":1150576462,"question_id":166,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705657022,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1150576462/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"40.6 MB","code":"public class Solution {\n    public String fractionToDecimal(int numerator, int denominator) {\n        \n        if (numerator == 0) {\n            return \"0\";\n        }\n        \n        StringBuilder sb = new StringBuilder();\n        \n        // \"+\" or \"-\"\n        sb.append(((numerator > 0) ^ (denominator > 0)) ? \"-\" : \"\");\n        \n        long num = Math.abs((long)numerator);\n        long den = Math.abs((long)denominator);\n        \n        // integral part\n        sb.append(num / den); // 4/333==0\n        num %= den; // num=4\n        if (num == 0) {\n            return sb.toString();\n        }\n        \n        // fractional part\n        sb.append(\".\"); // sb= \"0.\"\n        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        map.put(num, sb.length()); // 存餘數, (4, 2)\n        \n        while (num != 0) {\n            // System.out.println(num + \" \" + den + \" \" +  sb.length() );\n            // System.out.println(map.keySet());\n            num *= 10; // 4*10==40 ...  40*10==400 ... 67*10==670\n            sb.append(num / den); // [40/333==0, sb=\"0.0\"] [400/333==1, sb=\"0.01\"], [670/333==2, sb=\"0.012\"]\n            num %= den; // [40%333==40], [400%333==67], [670%333==4]\n            if (map.containsKey(num)) {  // map.containsKey(4)==true\n                int index = map.get(num); // idx==2\n                sb.insert(index, \"(\"); // sb.insert(2, '(') ... \n                sb.append(\")\");   //  ==>  0.012 => 0.(012)\n                break;\n            }\n            else {\n                map.put(num, sb.length()); // (40, 3), (67, 4)\n            }\n        }\n        return sb.toString();\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"fraction-to-recurring-decimal","has_notes":false,"flag_type":1}