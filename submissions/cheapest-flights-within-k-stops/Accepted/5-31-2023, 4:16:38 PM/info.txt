{"id":960805089,"question_id":803,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685520998,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/960805089/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"43.9 MB","code":"class Solution {\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        int[] cost = new int[n];\n        Arrays.fill(cost, Integer.MAX_VALUE);\n        cost[src]=0;\n        \n        \n        int len = flights.length;\n        \n        \n        for(; k>=0; k--){\n            \n            int[] temp = Arrays.copyOf(cost, n);\n            \n            for(int i=0; i<len; i++){\n            \n                int st = flights[i][0];\n                int ed = flights[i][1];\n                int p  = flights[i][2];\n\n                if(cost[st]!=Integer.MAX_VALUE){\n                    temp[ed] = Math.min(temp[ed], cost[st]+p);\n                }\n            }\n            \n            cost = temp;\n        }\n        \n        \n        \n        \n        \n        return cost[dst]==Integer.MAX_VALUE? -1 : cost[dst];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}