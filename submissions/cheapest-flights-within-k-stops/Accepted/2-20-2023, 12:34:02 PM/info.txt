{"id":901327488,"question_id":803,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676867642,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/901327488/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"43.8 MB","code":"class Solution {\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        int[] cost = new int[n];\n        Arrays.fill(cost, Integer.MAX_VALUE);\n        cost[src]=0;\n        \n        \n        for(int i=0; i<=k; i++){\n            \n            int[] temp = Arrays.copyOf(cost, n);\n            \n            for(int j=0; j<flights.length; j++){\n            \n                int sc = flights[j][0];\n                int dt = flights[j][1];\n                int price = flights[j][2];\n                \n                if(cost[sc]!=Integer.MAX_VALUE){\n                    temp[dt] = Math.min(temp[dt], cost[sc]+price);\n                }                               \n            }\n            \n            cost = temp;\n            \n        }\n        \n        \n       return cost[dst]==Integer.MAX_VALUE ? -1 : cost[dst];\n        \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}