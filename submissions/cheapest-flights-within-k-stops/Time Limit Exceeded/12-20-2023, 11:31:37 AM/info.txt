{"id":1123880326,"question_id":803,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703043097,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1123880326/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution {\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        int len = flights.length;\n        HashMap<Integer, HashMap<Integer, Integer>> g = new HashMap<>();\n        for(int[] f: flights){\n            int from = f[0];\n            int to = f[1];\n            int price = f[2];\n            g.putIfAbsent(from, new HashMap<>());\n            g.get(from).put(to, price);\n        }\n\n        \n        int[] arr = new int[n];\n        Arrays.fill(arr, Integer.MAX_VALUE);\n        arr[src] = 0;\n        Queue<Integer> q = new LinkedList<>();\n        q.offer(src);\n        \n        while(!q.isEmpty() && k-->=0){//2 , 1\n\n            int[] tmp = Arrays.copyOfRange(arr, 0, n);\n            int siz = q.size(); // 1 ,2 \n            for(int i=0; i<siz; i++){ \n                int p = q.poll();  \n\n                HashMap<Integer, Integer> adj = g.getOrDefault(p, new HashMap<>());  // 1 2\n                for(int next : adj.keySet()){\n                    tmp[next] = Math.min(tmp[next], arr[p]+adj.get(next)); // arr[1]=1 , arr[2]=5\n\n                    q.offer(next);\n                }\n            }\n\n            arr = tmp;\n        }\n\n        return arr[dst]==Integer.MAX_VALUE ? -1 : arr[dst];\n\n    }\n}","compare_result":"11111111111111111111111111110000000000000000000000000","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}