{"id":829637373,"question_id":803,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666665882,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/829637373/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"import java.util.Map; \nimport java.util.AbstractMap;\nimport java.util.AbstractMap.SimpleEntry;\n\nclass Solution {\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        \n        HashMap<Integer, HashMap<Integer, Integer>> adj = new HashMap<>();\n        \n        for(int[] f : flights){\n            int s = f[0];\n            int d = f[1];\n            int p = f[2];\n            \n            HashMap<Integer, Integer> map = adj.getOrDefault(s, new HashMap<Integer, Integer>());\n            map.put(d, p);\n            adj.put(s, map);\n        }\n        \n        \n        \n        return dfs(adj, src, dst, k);\n        \n    }\n    \n    \n    private int dfs(HashMap<Integer, HashMap<Integer, Integer>> adj, int src, int dst, int k){\n        \n        Queue<int[]> queue = new LinkedList<>();\n        \n        int[] srcEntry = new int[]{src, 0};\n        // Map.Entry<Integer, Integer> srcEntry = new Map.Entry<Integer, Integer>(src, 0);\n        queue.add(srcEntry);\n        \n        int min = Integer.MAX_VALUE;\n        \n        while(!queue.isEmpty() && k+1>0){\n            int siz = queue.size();\n            while(siz>0){\n                \n                int[] curr = queue.poll();\n                int st = curr[0];\n                int currPrice = curr[1];\n                \n                HashMap<Integer, Integer> adjMap = adj.get(st);\n                if(adjMap!=null){\n                    for(Map.Entry<Integer, Integer> en : adjMap.entrySet()){\n                        \n                        int ed = en.getKey();\n                        int price = en.getValue();\n                        if(ed==dst)\n                            min = Math.min(min, price+currPrice);\n                        \n                        if(price+currPrice>min)\n                            continue;\n                        \n                        int[] obj =  new int[]{ed, price+currPrice};\n                        queue.offer(obj);\n                    }                  \n                    \n                }\n                \n                siz--;\n            }\n            k--;\n        }\n        \n         return min==Integer.MAX_VALUE? -1: min;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111100000","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}