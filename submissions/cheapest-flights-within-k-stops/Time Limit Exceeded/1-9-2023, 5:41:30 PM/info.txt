{"id":874641498,"question_id":803,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673257290,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/874641498/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution {\n   public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n        Map<Integer, Map<Integer, Integer>> prices = new HashMap<>();\n        for (int[] f : flights) {\n            if (!prices.containsKey(f[0])) prices.put(f[0], new HashMap<>());\n            prices.get(f[0]).put(f[1], f[2]);\n        }\n        Queue<int[]> pq = new PriorityQueue<>((a, b) -> (Integer.compare(a[0], b[0])));\n        pq.add(new int[] {0, src, k + 1});\n        while (!pq.isEmpty()) {\n            int[] top = pq.remove();\n            int price = top[0];\n            int city = top[1];\n            int stops = top[2];\n            if (city == dst) return price;\n            if (stops > 0) {\n                Map<Integer, Integer> adj = prices.getOrDefault(city, new HashMap<>());\n                for (int a : adj.keySet()) {\n                    pq.add(new int[] {price + adj.get(a), a, stops - 1});\n                }\n            }\n        }\n        return -1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111100000","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}