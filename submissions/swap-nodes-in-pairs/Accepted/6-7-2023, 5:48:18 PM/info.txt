{"id":965793978,"question_id":24,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686131298,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/965793978/","is_pending":"Not Pending","title":"Swap Nodes in Pairs","memory":"40.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        \n        if(head==null || head.next==null)\n            return head;\n        \n        ListNode dummy = new ListNode();\n        dummy.next = head;\n        ListNode prev = dummy;\n        \n        ListNode s1 = head;\n        ListNode s2 = head.next;\n        \n        while(s1!=null && s2!=null){\n            \n            ListNode ns1 = s2.next;\n            ListNode ns2 = ns1==null? null : s2.next.next;\n            \n            prev.next = s2;\n            s2.next = s1;\n            s1.next=ns1;\n            \n            prev = s1;\n            s2 = ns2;\n            s1 = ns1;\n                \n        }\n        \n        return dummy.next;\n        \n        \n/*\ndummy \\\nprev  - > head -> node  -> new s1 -> new s2\n           s1      s2\n           \nprev -> s2 -> s1\n              prev\n\n*/\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"swap-nodes-in-pairs","has_notes":false,"flag_type":1}