{"id":835257158,"question_id":76,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667379199,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/835257158/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"class Solution {\n    public String minWindow(String s, String t) {\n        \n        HashMap<Character, Integer> map = new HashMap<>();  // record the \"need\" cnt;\n        for(int i=0; i<t.length(); i++){\n            map.put(t.charAt(i), map.getOrDefault(t.charAt(i), 0)+1);\n        }\n        \n        /*\n        A:1, B:1, C:1\n        */\n        \n        int left = 0;\n        int minLeft = 0;\n        int minLen = s.length()+1;\n        int havaCnt = 0;\n        for(int right = 0; right < s.length(); right++){\n            if(map.containsKey(s.charAt(right))){\n                map.put(s.charAt(right),map.get(s.charAt(right))-1); // A:0\n                if(map.get(s.charAt(right)) >= 0){   \n                    havaCnt ++;  // sum up the \"have\" cnt;   // have=1;\n                }\n                while(count == t.length()){\n                    if(right-left+1 < minLen){\n                        minLeft = left;\n                        minLen = right-left+1;\n                    }\n                    if(map.containsKey(s.charAt(left))){\n                        map.put(s.charAt(left),map.get(s.charAt(left))+1); // A:1\n                        if(map.get(s.charAt(left)) > 0){ // \n                            havaCnt --;  // haveCnt-- => to force the haveCnt < needCnt if()\n                        }\n                    }\n                    left ++ ;\n                }\n            }\n        }\n        if(minLen>s.length())  \n        {  \n            return \"\";  \n        }  \n\n        return s.substring(minLeft,minLeft+minLen);\n        \n//         // bf--> TLE\n//         int[] arr = new int[s.length()];\n//         for(int i=0; i<s.length(); i++){\n//             HashMap<Character, Integer> cp = new HashMap<>(map);\n            \n//             for(int j=i; j<s.length(); j++){\n//                 char c = s.charAt(j);\n//                 if(cp.containsKey(c) && cp.get(c)>0){\n\n//                     if(cp.get(c)==1)\n//                         cp.remove(c);\n//                     else\n//                         cp.put(c, cp.get(c)-1);\n                    \n//                     if(cp.size()==0){\n//                         arr[i] = j-i+1;\n//                         break;\n//                     }\n                        \n//                 }                \n//             }\n//         }\n        \n//         String res =\"\";\n//         int min = Integer.MAX_VALUE;\n//         for(int i=0; i<arr.length; i++){\n//             if(min>arr[i] && arr[i]!=0){\n//                 min = arr[i];\n//                 res = s.substring(i, i+min);\n//             }\n//         }\n        \n//         return res;\n    \n        \n    }       \n}","compare_result":null,"title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}