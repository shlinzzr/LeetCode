{"id":965768051,"question_id":52,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686128295,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/965768051/","is_pending":"Not Pending","title":"N-Queens II","memory":"39.2 MB","code":"class Solution {\n    \n    int res = 0;\n    char[][] mat ;\n    public int totalNQueens(int n) {\n        \n        mat = new char[n][n];\n        \n        for(char[] arr : mat){\n            Arrays.fill(arr, '.');\n        }\n        \n        helper(0, n);\n        \n        return res;\n    }\n    \n    private void helper(int i, int n){\n        \n        if(i==n){\n            res++;\n            return;\n        }\n        \n        for(int j=0; j<n; j++){\n            \n            if(isValid(i, j, n)){\n                mat[i][j]='Q';\n                helper(i+1, n);\n                mat[i][j] = '.';\n            }\n        }\n    }\n    \n    private boolean isValid(int i, int j, int n){\n        \n        for(int k=0; k<n; k++){\n            if(mat[i][k]=='Q') return false;\n            if(mat[k][j]=='Q') return false;\n        }\n        \n        int k=0;\n        while(i-k>=0 && j-k>=0){\n            if(mat[i-k][j-k]=='Q') return false;\n            k++;\n        }\n        \n        \n        k=0;\n        while(i-k>=0 && j+k<n){\n            if(mat[i-k][j+k]=='Q') return false;\n            k++;\n        }\n        \n        return true;\n        \n        \n    }\n}","compare_result":"111111111","title_slug":"n-queens-ii","has_notes":false,"flag_type":1}