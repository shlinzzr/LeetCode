{"id":1218783223,"question_id":3344,"lang":"java","lang_name":"Java","time":"2 months, 1 week","timestamp":1711854287,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1218783223/","is_pending":"Not Pending","title":"Minimize Manhattan Distances","memory":"N/A","code":"class Solution {\n    public int minimumDistance(int[][] points) {\n        \n        \n        Arrays.sort(points, (a,b) -> a[0]+a[1]-b[0]-b[1]);\n        int len = points.length;\n        \n        // for(int[] p :points)\n        //     System.out.println(p[0]+\" \" + p[1]);\n        \n        return getDis(points[0], points[len-1]);\n        \n        \n        \n    }\n    \n    private int getDis(int[] a, int[] b){\n        \n        return Math.abs(a[0]-b[0])+  Math.abs(a[1]-b[1]);\n    }\n}","compare_resulttitle_slug":"minimize-manhattan-distances","has_notes":false,"flag_type":1}