{"id":1253270055,"question_id":297,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715234045,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1253270055/","is_pending":"Not Pending","title":"Serialize and Deserialize Binary Tree","memory":"45.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        if(root==null) return \"null,\";\n\n        String res = root.val + \",\";\n        res += serialize(root.left);\n        res += serialize(root.right);\n        return res;\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        Queue<String> q = new LinkedList<>(Arrays.asList(data.split(\",\")));\n        \n        return helper(q);\n        \n    }\n\n    private TreeNode helper(Queue<String> q){\n\n        if(q.isEmpty()) return null;\n\n        String p = q.poll();\n        if(\"null\".equals(p)) return null;\n        TreeNode node = new TreeNode(Integer.valueOf(p));\n        node.left = helper(q);\n        node.right = helper(q);\n        return node;\n\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec ser = new Codec();\n// Codec deser = new Codec();\n// TreeNode ans = deser.deserialize(ser.serialize(root));","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-binary-tree","has_notes":false,"flag_type":1}