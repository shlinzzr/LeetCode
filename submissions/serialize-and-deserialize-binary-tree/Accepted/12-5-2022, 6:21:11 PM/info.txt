{"id":854958239,"question_id":297,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670235671,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/854958239/","is_pending":"Not Pending","title":"Serialize and Deserialize Binary Tree","memory":"52 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        StringBuilder sb = new StringBuilder();\n        serialHelper(root, sb);\n        return sb.toString();\n    }\n    \n    private void serialHelper(TreeNode root, StringBuilder sb){\n        if(root==null){\n            sb.append(\"null,\");\n            return;\n        }\n        sb.append(root.val).append(\",\");\n        \n        serialHelper(root.left, sb);\n        serialHelper(root.right, sb);\n    }\n    \n    \n    public TreeNode deserialize(String data) {\n        return deserial(new LinkedList<>(Arrays.asList(data.split(\",\"))));\n    }\n    \n    // Use queue to simplify position move\n    private TreeNode deserial(Queue<String> q) {\n        String val = q.poll();\n        if (\"null\".equals(val)) return null;\n        TreeNode root = new TreeNode(Integer.valueOf(val));\n        root.left = deserial(q);\n        root.right = deserial(q);\n        return root;\n    }\n    \n\n//     // Decodes your encoded data to tree.\n//     public TreeNode deserialize(String data) {\n//         String[] arr = data.split(\",\");\n//         if(arr.length==0)\n//             return null;\n        \n//         TreeNode root = deserializeHelper(root, arr);\n        \n//         return root;\n//     }\n    \n//     private TreeNode deserializeHelper(TreeNode root, String[] arr){\n//         if(root==null)\n//             return null;\n//     }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec ser = new Codec();\n// Codec deser = new Codec();\n// TreeNode ans = deser.deserialize(ser.serialize(root));","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-binary-tree","has_notes":false,"flag_type":1}