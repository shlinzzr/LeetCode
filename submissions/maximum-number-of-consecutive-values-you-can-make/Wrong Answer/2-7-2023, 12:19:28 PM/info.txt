{"id":893075711,"question_id":1930,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675743568,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/893075711/","is_pending":"Not Pending","title":"Maximum Number of Consecutive Values You Can Make","memory":"N/A","code":"class Solution {\n    public int getMaximumConsecutive(int[] coins) {\n        \n        int total=0;\n        TreeMap<Integer, Integer> temp = new TreeMap<>(); \n        int len = coins.length;\n        for(int i=0; i<len; i++){\n            total+=coins[i];\n            temp.put(coins[i], temp.getOrDefault(coins[i], 0)+1);\n        }\n        \n        \n       \n        \n        \n        int max =1;\n        for(int i=1; i<=total; i++){\n            \n            TreeMap<Integer, Integer> map = new TreeMap<>(temp);\n            \n            int sum = i ;\n            \n            boolean succ = true;\n            while(sum>0){\n                Integer key = map.floorKey(sum);\n                \n                System.out.println(i +\" \"  +sum + \" \" +key);\n                System.out.println(i +\" \"  +sum + \" \" + (map.get(key)>0));\n                if(key!=null && map.get(key)>0){\n                    map.put(key, map.get(key)-1);\n                    System.out.println(map.get(key));\n                    sum-=key;\n                    \n                }else{\n                    succ=false;\n                    break;\n                }   \n                \n               \n            }\n            \n            if(succ==false)\n                break;\n            \n             max=Math.max(max,i+1);\n            \n        }\n        \n        return max;\n        \n    }\n}","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-number-of-consecutive-values-you-can-make","has_notes":false,"flag_type":1}