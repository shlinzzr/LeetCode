{"id":893067932,"question_id":1930,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675742574,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/893067932/","is_pending":"Not Pending","title":"Maximum Number of Consecutive Values You Can Make","memory":"N/A","code":"class Solution {\n    public int getMaximumConsecutive(int[] coins) {\n        \n        int total=0;\n        TreeMap<Integer, Integer> map = new TreeMap<>(); \n        int len = coins.length;\n        for(int i=0; i<len; i++){\n            total+=coins[i];\n            map.put(coins[i], map.getOrDefault(coins[i], 0)+1);\n            \n            // System.out.println(coins[i] + \" \"+ map.get(coins[i]) );\n            \n            \n        }\n        \n        \n        int max =1;\n        for(int i=1; i<=total; i++){\n            \n            int key = map.floorKey(i);\n            // System.out.println(i + \" \"+ key + \" \" + max);\n            \n            if(map.floorKey(i)!=null && map.get(map.floorKey(i))>0){\n                // map.put(key, map.get(map.floorKey(i))-1);\n                max++;\n            }else{\n                break;\n            }\n            \n        }\n        \n        return max;\n        \n    }\n}","compare_result":"011100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-number-of-consecutive-values-you-can-make","has_notes":false,"flag_type":1}