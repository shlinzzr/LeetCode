{"id":839842969,"question_id":1690,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667965853,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/839842969/","is_pending":"Not Pending","title":"Maximum Length of Subarray With Positive Product","memory":"58.7 MB","code":"class Solution {\n    \n    // huifeng我大哥。https://www.youtube.com/watch?v=9WE8uAtdJGk\n    \n    public int getMaxLen(int[] nums) {\n        \n        int res = 0;\n        \n        for(int i=0; i<nums.length;i++){\n            \n            if(nums[i]==0) continue; // split by 0\n            \n            int j=i;\n            int negCnt =0;\n            int k=-1; // the first neg\n            \n            while(j<nums.length && nums[j]!=0){\n                \n                if(nums[j]<0)\n                    negCnt++;\n                \n                if(negCnt%2==0){\n                    res = Math.max(res , j-i+1);\n                }else if(k!=-1){\n                    res = Math.max(res, j-k);\n                }\n                \n                if(k==-1 && nums[j]<0)\n                    k = j;\n                \n                j++;\n                \n            }\n            i=j;\n            \n        }\n        \n        \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-subarray-with-positive-product","has_notes":false,"flag_type":1}