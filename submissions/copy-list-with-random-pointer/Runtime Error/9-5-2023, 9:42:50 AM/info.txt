{"id":1040807132,"question_id":138,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1693878170,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1040807132/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        Node newHead = new Node(head.val);\n        \n        HashMap<Node, Node> map = new HashMap<>(); // org, copied\n        \n        map.put(head, newHead);\n        \n\n        Node copy = newHead;\n        Node org = head;\n        while(org!=null){\n            \n            org=org.next;\n            \n            if(org!=null){\n                Node node  = new Node(org.val);\n                copy.next = node;\n                \n                map.put(org, node);\n                \n                copy=copy.next;\n            }\n        }\n        \n        org = head;\n        copy = newHead;\n        while(org!=null){\n            \n            copy.random = map.get(org.random);\n            copy = copy.next;\n            org = org.next;\n        }\n        \n        return newHead;\n    }\n}","compare_result":"1110000000000000000","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}