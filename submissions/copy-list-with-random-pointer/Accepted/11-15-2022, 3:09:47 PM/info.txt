{"id":843755812,"question_id":138,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668496187,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/843755812/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"45.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        \n        \n        \n        \n        if(head==null)\n            return null;\n        \n        \n        Map<Node, Node> map = new HashMap<>();\n        \n        Node node = new Node(head.val);\n        Node res = node;\n        Node curr = head;\n        \n        while(curr!=null){\n            \n            \n            map.put(curr, node);\n            \n            if(curr.next!=null){\n                node.next = new Node(curr.next.val);\n                \n            }\n            node = node.next;\n            curr = curr.next;\n        }\n        \n        node=res;\n        curr=head;\n        while(curr!=null){\n            \n            if(curr.random!=null){\n                node.random=map.get(curr.random);\n            }\n            node = node.next;\n            curr=curr.next;\n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}