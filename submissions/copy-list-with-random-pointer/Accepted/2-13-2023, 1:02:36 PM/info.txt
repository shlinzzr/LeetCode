{"id":896943150,"question_id":138,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1676264556,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/896943150/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"42 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        if(head==null)\n            return null;\n        \n        Node curr = head;\n        Node node = new Node(head.val);\n        Node res = node;\n        \n        \n        Map<Node, Node > map = new HashMap<>(); // real, copied\n        \n        while(curr!=null){\n            map.put(curr, node);\n            if(curr.next!=null){\n                node.next = new Node(curr.next.val);\n            }\n            \n            node = node.next;\n            curr= curr.next;\n        }\n        \n        curr = head;\n        node = res;\n        \n        while(curr!=null){\n            \n            if(curr.random!=null){\n                node.random=map.get(curr.random);\n            }\n            \n            node = node.next;\n            curr= curr.next;\n        }\n        \n        return res;\n\n        \n    }\n}","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}