{"id":1253364479,"question_id":1101,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715241763,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1253364479/","is_pending":"Not Pending","title":"Parallel Courses","memory":"45.6 MB","code":"class Solution {\n    public int minimumSemesters(int n, int[][] relations) {\n        int len = relations.length;\n\n        int[] indeg = new int[n];\n        List<Integer>[] adjs = new ArrayList[n];\n        for(int i=0; i<n; i++){\n            adjs[i] = new ArrayList<>();\n        }\n\n\n        for(int i=0; i<len; i++){\n            int[] r = relations[i];\n            indeg[r[1]-1]++; \n            adjs[r[0]-1].add(r[1]-1);\n\n        }\n\n        Queue<Integer> q= new LinkedList<>();\n        for(int i=0; i<n; i++){\n            if(indeg[i]==0){\n                q.offer(i);\n            }\n        }\n\n        int cnt= 0 ;\n        int step = 0;\n        while(!q.isEmpty()){\n            int siz = q.size();\n            step++;\n            while(siz-->0){\n                int p = q.poll();\n                cnt++;\n                for(int next : adjs[p]){\n                    indeg[next]--;\n                    if(indeg[next]==0){\n                        q.offer(next);\n                    }\n                }\n            }\n        }\n\n        return cnt==n ? step : -1;\n\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"parallel-courses","has_notes":false,"flag_type":1}