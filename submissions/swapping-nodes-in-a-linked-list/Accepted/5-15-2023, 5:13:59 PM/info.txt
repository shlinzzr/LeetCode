{"id":950683997,"question_id":528,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684142039,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/950683997/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"57.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapNodes(ListNode head, int k) {\n        ListNode a = head;\n        int t = k-1;\n        \n        while(t>0 && a!=null){\n            a=a.next;\n            t--;\n        }\n        \n        ListNode rev = reverse(head);\n        ListNode b = rev;\n        t = k-1;\n        while(t>0 && b!=null){\n            b=b.next;\n            t--;\n        }\n        \n        int  tmp = a.val;\n        a.val=b.val;\n        b.val = tmp;\n        \n        \n        head = reverse(rev);\n        \n        \n        return head;\n        \n        \n    }\n    \n    private ListNode reverse(ListNode head){\n        \n        ListNode prev = null;\n        ListNode curr = head;\n        \n        while(curr!=null){\n            \n            ListNode next = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = next;\n        }\n        \n        return prev;\n        \n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false,"flag_type":1}