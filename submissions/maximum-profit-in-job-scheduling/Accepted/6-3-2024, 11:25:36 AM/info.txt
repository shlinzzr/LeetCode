{"id":1275880564,"question_id":1352,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1717385136,"status":10,"status_display":"Accepted","runtime":"1393 ms","url":"/submissions/detail/1275880564/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"56.6 MB","code":"class Solution {\n    public int jobScheduling(int[] startTime, int[] endTime, int[] profit) {\n\n        int len = profit.length;\n        int[][] jobs = new int[len][];\n        for(int i=0; i<len; i++){\n            jobs[i] = new int[]{startTime[i], endTime[i], profit[i]};\n        }\n\n        Arrays.sort(jobs, (a, b)-> a[1]!=b[1] ? a[1]-b[1] : a[0]-b[0]);\n\n        int[] dp = new int[len+1];\n        Arrays.fill(dp, Integer.MIN_VALUE);\n        dp[0] = 0;\n\n        for(int i=1; i<=len; i++){\n\n            int[] cur = jobs[i-1];\n\n            dp[i] = Math.max(dp[i-1], cur[2]);\n\n            for(int j=i-1; j>0; j--){\n                if(jobs[j-1][1]<= cur[0]){\n                    dp[i] = Math.max(dp[i-1], dp[j]+cur[2]);\n                    break;\n                }\n            }\n        }\n\n        return dp[len];\n        \n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"maximum-profit-in-job-scheduling","has_notes":false,"flag_type":1}