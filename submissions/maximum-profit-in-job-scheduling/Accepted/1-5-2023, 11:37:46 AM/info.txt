{"id":871634490,"question_id":1352,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672889866,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/871634490/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"74.5 MB","code":"class Solution {\n    public int jobScheduling(int[] startTime, int[] endTime, int[] profit) {\n        int len = startTime.length;\n\n        int[][] jobs = new int[len][3];\n        \n        for(int i=0; i<len; i++){\n            int[] j = new int[]{startTime[i], endTime[i], profit[i]};\n            jobs[i] = j;\n        }\n        \n        // Arrays.sort(jobs, (a,b) -> a[1]==b[1]? b[2]-a[2]  : a[1]-b[1]);\n        Arrays.sort(jobs, (a,b) ->  a[1]-b[1]);\n            \n        \n        int dp[] = new int[len+1];\n        dp[0] = jobs[0][2];\n        for(int i=1; i<=len; i++){\n            dp[i] = Math.max(jobs[i-1][2], dp[i-1]);\n            \n            for(int j=i-1; j>0; j--){\n                if(jobs[j-1][1]<=jobs[i-1][0]){\n                    dp[i] = Math.max(dp[i], dp[j] + jobs[i-1][2]);\n                    break;\n                }\n            }\n        }\n        \n        int max = Integer.MIN_VALUE;\n        for(int d : dp){\n            max = Math.max(max, d);\n        }\n        \n        \n        return max;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"maximum-profit-in-job-scheduling","has_notes":false,"flag_type":1}