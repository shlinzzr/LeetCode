{"id":916642722,"question_id":2703,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679025366,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/916642722/","is_pending":"Not Pending","title":"Handling Sum Queries After Update","memory":"N/A","code":"class Solution {\n    public long[] handleQuery(int[] nums1, int[] nums2, int[][] queries) {\n        cal(nums1, nums2, queries[0]);\n        cal(nums1, nums2, queries[1]);\n        \n        long res = 0;\n        for(int i=0; i<nums2.length; i++){\n            res+=nums2[i];\n        }\n        \n        return new long[]{res};\n        \n        \n        \n        \n    }\n    \n    private void cal(int[] nums1, int[] nums2, int[] q){\n        \n        if(q[0]==1){\n            \n            for(int i=q[1]; i<=q[2]; i++){\n                if(nums1[i]==0){\n                    nums1[i]=1;\n                }else{\n                    nums1[i]=0;\n                }\n            }\n            \n        }else if(q[0]==2){\n            \n            for(int i=0; i<nums1.length;i++){\n                nums2[i] = nums2[i] + nums1[i] * q[1];\n            }\n            \n        }\n        \n        \n    }\n}","compare_result":"11010000100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"handling-sum-queries-after-update","has_notes":false,"flag_type":1}