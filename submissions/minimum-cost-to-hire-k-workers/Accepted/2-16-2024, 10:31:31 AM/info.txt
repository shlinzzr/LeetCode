{"id":1176545527,"question_id":887,"lang":"java","lang_name":"Java","time":"3 months, 4 weeks","timestamp":1708050691,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/1176545527/","is_pending":"Not Pending","title":"Minimum Cost to Hire K Workers","memory":"45.4 MB","code":"class Solution {\n\n    public class Worker{\n        int q;\n        int w;\n        double ratio;\n\n        public Worker(int q, int w){\n            this.q = q;\n            this.w = w;\n            this.ratio = this.w*1.0/this.q;\n        }\n    }\n\n\n    public double mincostToHireWorkers(int[] q, int[] w, int k) {\n        ArrayList<Worker> arr = new ArrayList<>();\n\n        int n = q.length;\n        for(int i=0; i<n; i++){\n            arr.add(new Worker(q[i],w[i]));\n        }\n\n        // sort worker by ratio(wage/quality) asc\n        Collections.sort(arr,(a,b)->Double.compare(a.ratio, b.ratio));\n\n         // sort pq by quality desc\n        PriorityQueue<Worker> pq = new PriorityQueue<>((a,b)->(b.q-a.q));\n\n        double ans = Double.MAX_VALUE;\n        double sum = 0;\n\n        for(var a : arr){\n            pq.add(a);\n            sum+=a.q;\n\n            if(pq.size()>k){\n                sum -= pq.poll().q;\n            }\n\n            if(pq.size()==k){\n                ans = Math.min(ans, sum*a.ratio);\n            }\n        }\n\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-hire-k-workers","has_notes":false,"flag_type":1}