{"id":822202537,"question_id":893,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665735534,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/822202537/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List<Integer> distanceK(TreeNode root, TreeNode target, int k) {\n        List<Integer> res = new ArrayList<>();\n        \n        HashMap<TreeNode, Set<TreeNode>> map = new HashMap<>();\n        \n        buildGraph(null, root, map);\n        \n        // for(TreeNode t : map.keySet()){\n        //     System.out.println(t.val);\n        // }\n           \n        Queue<TreeNode> queue = new LinkedList<>();\n        queue.offer(target);\n        \n        while(!queue.isEmpty() && k>0){\n            int size = queue.size();\n            for(int i=0; i<size; i++){\n                TreeNode curr = queue.poll();\n                if(map.containsKey(curr)){\n\n                    Set<TreeNode> set = map.get(curr);\n                    for(TreeNode n : set){\n                        queue.offer(n);\n                    }\n                }    \n            }\n            k--;\n        }\n        \n        while(!queue.isEmpty()){\n            TreeNode n = queue.poll();\n            if(n.val!=target.val)\n                res.add(n.val);\n        }\n        \n        \n        return res;\n        \n        \n        \n    }\n    \n    \n    private void buildGraph(TreeNode parent, TreeNode root, HashMap<TreeNode, Set<TreeNode>> map){\n        \n        if(parent!=null){\n            Set<TreeNode> setP = map.getOrDefault(parent, new HashSet<>());\n            setP.add(root);\n            map.put(parent, setP);\n            \n            Set<TreeNode> setR = map.getOrDefault(root, new HashSet<>());\n            setR.add(parent);\n            map.put(root, setR);\n        }\n\n        if(root.left!=null)\n            buildGraph(root, root.left, map);\n        \n        if(root.right!=null)\n            buildGraph(root, root.right, map);\n        \n    }\n}","compare_result":"111110101110100100111000101100010100000010000000000000000","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}