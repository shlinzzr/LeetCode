{"id":877309313,"question_id":893,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673597352,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/877309313/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public List<Integer> distanceK(TreeNode root, TreeNode target, int k) {\n        List<Integer> res = new ArrayList<>();\n        HashMap<TreeNode, List<TreeNode>> map = new HashMap<>();\n        buildMap(root, map);\n\n        \n        Set<TreeNode> seen = new HashSet<>();\n        Queue<TreeNode> q = new LinkedList<>();\n        q.offer(target);\n        seen.add(target);\n        \n        int step=1;\n        while(!q.isEmpty()){\n            \n            int siz = q.size();\n            for(int i=0; i<siz; i++){\n                \n                TreeNode p = q.poll();\n                \n                List<TreeNode> adjs = map.get(p);\n                for(TreeNode a : adjs){\n                    \n                    if(step==k && !seen.contains(a)){\n                        res.add(a.val);\n                    }else{\n                        \n                        if(!seen.contains(a)){\n                            q.offer(a);\n                            seen.add(a);\n                        }\n                    }\n                }\n            }\n            \n            step++;\n        }\n        \n        return res;\n        \n    }\n    \n    private void buildMap(TreeNode root,  HashMap<TreeNode, List<TreeNode>> map){\n        \n        if(root==null)\n            return;\n        \n        map.putIfAbsent(root, new ArrayList<>());\n        \n        if(root.left!=null){\n            map.get(root).add(root.left);\n            \n            map.putIfAbsent(root.left, new ArrayList<>());\n            map.get(root.left).add(root);\n            \n            buildMap(root.left, map);\n        }\n                 \n        if(root.right!=null){\n            \n            map.get(root).add(root.right);\n            \n            map.putIfAbsent(root.right, new ArrayList<>());\n            map.get(root.right).add(root);\n            \n            buildMap(root.right, map);\n        }\n        \n        \n    }\n}","compare_result":"111111101110101101111001111101011111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}