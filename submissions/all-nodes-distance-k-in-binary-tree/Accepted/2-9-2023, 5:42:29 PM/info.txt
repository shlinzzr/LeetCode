{"id":894613192,"question_id":893,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675935749,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/894613192/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"42.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    \n    Queue<TreeNode> q = new LinkedList<>();\n    \n    public List<Integer> distanceK(TreeNode root, TreeNode target, int k) {\n        HashMap<TreeNode, HashSet<TreeNode>> map = new HashMap<>();\n        buildMap(map, root, null, target);\n        HashSet<TreeNode> seen = new HashSet<>();\n        seen.add(target);\n        \n        while(!q.isEmpty() && k>0){\n            \n            int siz = q.size();\n            for(int i=0; i<siz; i++){\n                \n                TreeNode p = q.poll();\n                Set<TreeNode> set = map.get(p);\n                for(TreeNode node : set ){\n                    if(!seen.contains(node)){\n                        q.offer(node);\n                        seen.add(node);\n                    }\n                    \n                }\n            }\n            k--;\n        }\n        \n        List<Integer> res = new ArrayList<>();\n        for(TreeNode node : q){\n            res.add(node.val);\n        }\n        \n        return res;\n        \n    }\n    \n    \n    private void buildMap(HashMap<TreeNode, HashSet<TreeNode>> map, TreeNode root, TreeNode parent, TreeNode target){\n        \n        if(root==null)\n            return;\n        \n        if(root.val==target.val)\n            q.offer(root);\n        \n        HashSet<TreeNode> set = map.getOrDefault(root, new HashSet<>());\n        \n        if(parent!=null)     set.add(parent);\n        if(root.left!=null)  set.add(root.left);\n        if(root.right!=null) set.add(root.right);\n        \n        map.put(root, set);\n        \n        buildMap(map, root.left, root, target);\n        buildMap(map, root.right, root, target);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}