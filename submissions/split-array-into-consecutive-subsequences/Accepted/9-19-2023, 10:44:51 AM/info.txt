{"id":1053144774,"question_id":659,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695091491,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1053144774/","is_pending":"Not Pending","title":"Split Array into Consecutive Subsequences","memory":"45.2 MB","code":"class Solution {\n    public boolean isPossible(int[] nums) {\n        \n        //https://www.youtube.com/watch?v=uJ8BAQ8lASE\n        \n        Map<Integer, Integer> freq = new HashMap<>(), need = new HashMap<>();\n        for (int i : nums)\n            freq.put(i, freq.getOrDefault(i,0) + 1);\n\n        for (int i : nums) {\n            if (freq.get(i) == 0) {\n                //之前可能找到過了被幹掉 所以這case不用理\n                continue;\n            }\n                \n\n            else if (need.getOrDefault(i,0) > 0) { // 有需要找i優先給\n                need.put(i, need.get(i) - 1);\n                need.put(i+1, need.getOrDefault(i+1,0) + 1);\n            }   \n            else if (freq.getOrDefault(i+1,0) > 0 && freq.getOrDefault(i+2,0) > 0) { //找全局有沒有i+1, i+2有的話填need i+3\n                freq.put(i+1, freq.get(i+1) - 1);\n                freq.put(i+2, freq.get(i+2) - 1);\n                need.put(i+3, need.getOrDefault(i+3,0) + 1);\n            }\n            else \n                return false;\n           \n            freq.put(i, freq.get(i) - 1);\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"split-array-into-consecutive-subsequences","has_notes":false,"flag_type":1}