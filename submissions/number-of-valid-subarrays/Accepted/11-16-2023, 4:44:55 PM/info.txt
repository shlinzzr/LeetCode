{"id":1099963003,"question_id":1061,"lang":"java","lang_name":"Java","time":"6 months, 4 weeks","timestamp":1700124295,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1099963003/","is_pending":"Not Pending","title":"Number of Valid Subarrays","memory":"50.9 MB","code":"class Solution {\n    public int validSubarrays(int[] nums) {\n        int len = nums.length;\n\n        int[] nextSmaller = new int[len];\n        Arrays.fill(nextSmaller, len);\n        \n        Stack<Integer> st= new Stack<>();\n        for(int i=0; i<len; i++){\n            while(!st.isEmpty() && nums[st.peek()]>nums[i]){\n                nextSmaller[st.pop()] = i;\n            }\n            st.push(i);\n        }\n\n        int res = 0;\n        for(int i=0; i<len; i++){\n            res += nextSmaller[i]-i;\n        }\n\n        return res;\n\n\n        \n    }\n}\n\n\n/*\n[1 4 2 5 3 ]\n1 \n4\n2 \n5 \n3\n1 4 2 5 3\n1 4 2 5\n1 4 2 \n1 4\n2 5 3\n2 5\n\n [0 1 2 3 4] 5\n\n*/","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-valid-subarrays","has_notes":false,"flag_type":1}