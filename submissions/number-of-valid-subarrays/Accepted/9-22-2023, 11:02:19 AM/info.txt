{"id":1055923251,"question_id":1061,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695351739,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1055923251/","is_pending":"Not Pending","title":"Number of Valid Subarrays","memory":"52.5 MB","code":"class Solution {\n    // find next smaller element\n\n    public int validSubarrays(int[] nums) {\n        int len =nums.length;\n        int res = 0;\n\n        Stack<Integer> st = new Stack<>();\n\n        for(int i=0; i<len; i++){\n\n            while(!st.isEmpty() && nums[i]<nums[st.peek()]){\n                res += i-st.pop();\n            }\n\n            st.push(i);\n        }\n\n        while(!st.isEmpty()){\n            res += len-st.pop();\n        }\n\n        \n\n        return res;\n\n    }\n\n\n\n\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-valid-subarrays","has_notes":false,"flag_type":1}