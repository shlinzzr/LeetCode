{"id":989351097,"question_id":2870,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688828274,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/989351097/","is_pending":"Not Pending","title":"Longest Alternating Subarray","memory":"N/A","code":"class Solution {\n    public int alternatingSubarray(int[] nums) {\n        int len = nums.length;\n        \n//         int max= -1 ;\n//         int cur =1;\n//         int plus = nums[1] > nums[0] ? 1 : -1;\n//         for(int i=0; i<len-1; i++){\n            \n//             if(nums[i]==nums[i+1]-1 || nums[i]==nums[i+1]+1){\n//                 cur++;\n//             }\n            \n//             plus = -plus;\n//         }\n        \n        \n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        \n        for(int i=0; i<len; i++){\n            \n            int n = nums[i];\n            \n            map.put(n, map.getOrDefault(n, 0)+1);\n        }\n        \n        \n        \n        int max= 0;\n        List<Integer> list = new ArrayList<>(map.keySet());\n        for(int i=0; i<list.size()-1; i++){\n            \n            int cur = list.get(i);\n            int nxt = list.get(i+1);\n            \n            int min = Math.min(map.get(cur), map.get(nxt));\n           \n            max = Math.max(max, min);\n            \n        }\n        \n        return 2*max;\n        \n        \n        \n    }\n}","compare_resulttitle_slug":"longest-alternating-subarray","has_notes":false,"flag_type":1}