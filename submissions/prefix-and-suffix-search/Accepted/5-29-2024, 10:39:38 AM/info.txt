{"id":1270961041,"question_id":746,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1716950378,"status":10,"status_display":"Accepted","runtime":"251 ms","url":"/submissions/detail/1270961041/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"149 MB","code":"class TrieNode {\n    TrieNode[] children;\n    int idx;\n    public TrieNode() {\n        children = new TrieNode[27]; // 'a' - 'z' and '{'. 'z' and '{' are neighbours in ASCII table\n        idx = 0;\n    }\n}\n\npublic class WordFilter {\n    TrieNode root;\n    public WordFilter(String[] words) {\n        root = new TrieNode();\n        for (int idx = 0; idx < words.length; idx++) {\n            String word = words[idx] + \"{\";\n            for (int i = 0; i < word.length(); i++) {\n                TrieNode cur = root;\n                cur.idx = idx;\n                // 012345678910    \n                // apple{apple\n                // apple{ => word.length()=6\n                // i\n                // j , from i to 211\n    // add \"apple{apple\", \"pple{apple\", \"ple{apple\", \"le{apple\", \"e{apple\", \"{apple\" into the Trie Tree\n                for (int j = i; j < 2 * word.length() - 1; j++) {\n                    int k = word.charAt(j % word.length()) - 'a';\n                    if (cur.children[k] == null)\n                        cur.children[k] = new TrieNode();\n                    cur = cur.children[k];\n                    cur.idx = idx;\n                }\n            }\n        }\n    }\n    public int f(String prefix, String suffix) {\n        TrieNode cur = root;\n        for (char c: (suffix + '{' + prefix).toCharArray()) {\n            if (cur.children[c - 'a'] == null) {\n                return -1;\n            }\n            cur = cur.children[c - 'a'];\n        }\n        return cur.idx;\n    }\n}","compare_result":"11111111111111111","title_slug":"prefix-and-suffix-search","has_notes":false,"flag_type":1}