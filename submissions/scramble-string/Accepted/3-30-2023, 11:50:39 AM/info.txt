{"id":924583772,"question_id":87,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680148239,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/924583772/","is_pending":"Not Pending","title":"Scramble String","memory":"42.9 MB","code":"public class Solution {\n\tpublic boolean isScramble(String s1, String s2) {\n\t\tif (s1.length() != s2.length()) return false;\n\t\tint len = s1.length();\n\t\t/**\n\t\t * Let F(i, j, k) = whether the substring S1[i..i + k - 1] is a scramble of S2[j..j + k - 1] or not\n\t\t * Since each of these substrings is a potential node in the tree, we need to check for all possible cuts.\n\t\t * Let q be the length of a cut (hence, q < k), then we are in the following situation:\n\t\t * \n\t\t * S1 [   x1    |         x2         ]\n\t\t *    i         i + q                i + k - 1\n\t\t * \n\t\t * here we have two possibilities:\n\t\t *      \n\t\t * S2 [   y1    |         y2         ]\n\t\t *    j         j + q                j + k - 1\n\t\t *    \n\t\t * or \n\t\t * \n\t\t * S2 [       y1        |     y2     ]\n\t\t *    j                 j + k - q    j + k - 1\n\t\t * \n\t\t * which in terms of F means:\n\t\t * \n\t\t * F(i, j, k) = for some 1 <= q < k we have:\n\t\t *  (F(i, j, q) AND F(i + q, j + q, k - q)) OR (F(i, j + k - q, q) AND F(i + q, j, k - q))\n\t\t *  \n\t\t * Base case is k = 1, where we simply need to check for S1[i] and S2[j] to be equal \n\t\t * */\n\t\tboolean [][][] F = new boolean[len][len][len + 1];\n\t\tfor (int k = 1; k <= len; ++k)\n\t\t\tfor (int i = 0; i + k <= len; ++i)\n\t\t\t\tfor (int j = 0; j + k <= len; ++j)\n\t\t\t\t\tif (k == 1)\n\t\t\t\t\t\tF[i][j][k] = s1.charAt(i) == s2.charAt(j);\n\t\t\t\t\telse for (int q = 1; q < k && !F[i][j][k]; ++q) {\n\t\t\t\t\t\tF[i][j][k] = (F[i][j][q] && F[i + q][j + q][k - q]) || (F[i][j + k - q][q] && F[i + q][j][k - q]);\n\t\t\t\t\t}\n\t\treturn F[0][0][len];\n\t}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"scramble-string","has_notes":false,"flag_type":1}