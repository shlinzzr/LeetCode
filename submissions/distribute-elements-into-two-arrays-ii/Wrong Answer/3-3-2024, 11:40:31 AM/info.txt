{"id":1192224397,"question_id":3350,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1709437231,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1192224397/","is_pending":"Not Pending","title":"Distribute Elements Into Two Arrays II","memory":"N/A","code":"class Solution {\n    public int[] resultArray(int[] nums) {\n        \n         int len = nums.length;\n        \n        \n        List<Integer> list1 = new ArrayList<>();\n        List<Integer> list2 = new ArrayList<>();\n        Set<Integer> set1= new TreeSet<>();\n        Set<Integer> set2= new TreeSet<>();\n        \n        set1.add(nums[0]);\n        set2.add(nums[1]);\n        list1.add(nums[0]);\n        list2.add(nums[1]);\n        \n        for(int i=2; i<len; i++){\n            \n            if(greaterCount(new ArrayList<>(set1), nums[i]) ==  greaterCount(new ArrayList<>(set2), nums[i]) ){\n                \n                if(set1.size()<=set2.size()){\n                    set1.add(nums[i]);\n                    list1.add(nums[i]);\n                }else{\n                    set2.add(nums[i]);\n                    list2.add(nums[i]);\n                }\n                \n            \n            }else if(greaterCount(new ArrayList<>(set1), nums[i]) >  greaterCount(new ArrayList<>(set2), nums[i]) ){\n                set1.add(nums[i]);\n                list1.add(nums[i]);\n            } else{\n                set2.add(nums[i]);\n                list2.add(nums[i]);\n            }\n        }\n        \n        int idx=0, i1=0, i2=0;\n        \n        \n        // System.out.println(list1);\n        //   System.out.println(list2);\n        \n        while(i1<list1.size()){\n            nums[idx++] = list1.get(i1++);\n        }\n        \n        while(i2<list2.size()){\n            nums[idx++] = list2.get(i2++);\n        }\n        \n        \n        return nums;\n    }\n    \n    // [1, 3] , 3\n    private int greaterCount(List<Integer> list, int val){\n        \n        int st=0, ed= list.size()-1;\n        \n        while(st<ed){\n            \n            int mid = st+(ed-st)/2;\n            \n            if(list.get(mid)<=val){\n                st = mid+1;\n            }else{\n                ed = mid;\n            }\n            \n        }\n        \n        // System.out.println(\"greaterCount(\" + val + \"):\"+st);\n        \n        \n        if(list.get(st)>val) return list.size()-st;\n            \n            \n        return 0;\n        \n        \n        \n    }\n    \n}","compare_resulttitle_slug":"distribute-elements-into-two-arrays-ii","has_notes":false,"flag_type":1}