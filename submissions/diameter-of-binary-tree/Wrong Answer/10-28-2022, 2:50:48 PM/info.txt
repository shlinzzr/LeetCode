{"id":831902399,"question_id":543,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666939848,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/831902399/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int diameterOfBinaryTree(TreeNode root) {\n        \n        if(root==null)\n            return 0;\n        \n        return getH(root.left) + getH(root.right);\n            \n    }\n    \n    private int getH(TreeNode root){\n        if(root==null)\n            return 0;\n        \n        int left = getH(root.left);\n        int right = getH(root.right);\n        \n        return Math.max(left,right)+1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001011","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}