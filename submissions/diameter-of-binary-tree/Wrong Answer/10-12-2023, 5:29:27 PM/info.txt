{"id":1073337826,"question_id":543,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697102967,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1073337826/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    int res = 0;\n\n    public int diameterOfBinaryTree(TreeNode root) {\n      \n        getDepth(root);\n        return res;\n    }\n\n    private int getDepth(TreeNode node){\n        if(node==null)\n            return 0;\n\n        int left = getDepth(node.left);\n        int right = getDepth(node.right);\n        res = Math.max(res, left+right+1);\n\n        return Math.max(left, right)+1;\n    }\n}","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}