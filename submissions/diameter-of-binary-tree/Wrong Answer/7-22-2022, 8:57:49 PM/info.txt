{"id":753728010,"question_id":543,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658494669,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/753728010/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int diameterOfBinaryTree(TreeNode root) {\n        int dia = findDepth(root.left, 0) + findDepth(root.right, 0);\n        \n        return dia;\n    }\n    \n    private int findDepth(TreeNode root, int d){\n        \n        if(root==null)\n            return d;\n        \n        return Math.max(findDepth(root.left, d++), findDepth(root.right, d++));\n        \n    }\n}","compare_result":"11110110100100101101001000000001100000100100100101100000100001001001111101010000000000000000000000000010","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}