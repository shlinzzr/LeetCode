{"id":1073336587,"question_id":543,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697102826,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1073336587/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"41.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    int res = 0;\n\n    public int diameterOfBinaryTree(TreeNode root) {\n        if(root==null)\n            return 0;\n\n        int leftDepth = getDepth(root.left);\n        int rightDepth = getDepth(root.right);\n        \n        int left = diameterOfBinaryTree(root.left);\n        int right = diameterOfBinaryTree(root.right);\n\n        return Math.max(Math.max(left, right), leftDepth+rightDepth);\n\n    }\n\n    private int getDepth(TreeNode node){\n        if(node==null)\n            return 0;\n\n        return Math.max(getDepth(node.left), getDepth(node.right))+1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}