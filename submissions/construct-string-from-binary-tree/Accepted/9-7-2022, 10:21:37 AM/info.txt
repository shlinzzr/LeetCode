{"id":793494737,"question_id":606,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1662517297,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/793494737/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"54.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    \n    public String tree2str(TreeNode root) {\n        String res =\"\";    \n        return helper(root, res);\n        \n    }\n    \n    private String helper(TreeNode root, String res){\n        \n        if(root==null)\n            return null;\n        \n        String left = helper(root.left, res);\n        String right = helper(root.right, res);\n        \n        if(right!=null && left==null)\n            left=\"\";\n        \n        \n        res += root.val + (left==null? \"\" : \"(\" + left + \")\" ) + (right==null? \"\" : \"(\" + right + \")\") ;\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-from-binary-tree","has_notes":false,"flag_type":1}