{"id":1114907413,"question_id":606,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1702019485,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1114907413/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public String tree2str(TreeNode root) {\n        StringBuilder sb = new StringBuilder();\n        helper(root, sb);\n        return sb.toString();\n    }\n\n    private void helper(TreeNode root, StringBuilder sb){\n\n        if(root==null)\n            return;\n        \n        sb.append(root.val);\n        if(root.left!=null){\n            sb.append(\"(\");\n            helper(root.left, sb);\n            sb.append(\")\");\n        }\n\n        if(root.right!=null){\n\n            if(root.left==null){\n                sb.append(\"()\");\n            }\n\n            sb.append(\"(\");\n            helper(root.right, sb);\n            sb.append(\")\");\n        }\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-from-binary-tree","has_notes":false,"flag_type":1}