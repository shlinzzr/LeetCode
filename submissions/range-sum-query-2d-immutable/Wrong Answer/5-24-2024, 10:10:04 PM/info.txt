{"id":1266701850,"question_id":304,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1716559804,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1266701850/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"N/A","code":"class NumMatrix {\n\n    int[][] presum;\n\n    public NumMatrix(int[][] matrix) {\n        int h= matrix.length; \n        int w = matrix[0].length;\n        presum= new int[h][w];\n        presum[0][0] = matrix[0][0];\n\n        for(int i=0; i<h; i++){\n            \n            for(int j=0; j<w; j++){\n                presum[i][j] =(i==0 || j==0) ? matrix[i][j] : presum[i-1][j] + presum[i][j-1]-presum[i-1][j-1];\n            }\n        }\n    }\n    \n    public int sumRegion(int row1, int col1, int row2, int col2) {\n\n        int all = presum[row2][col2];\n        int up = row1==0 ? 0 : presum[row1-1][col2];\n        int left = col1==0 ? 0 : presum[row2][col1-1];\n        int upLeft = (row1==0 || col1==0 ? 0 : presum[row1-1][col1-1]);\n        // int res = presum[row2][col2]-row1==0 ?  0 :presum[row1-1][col2] - col1==0 ? 0 : presum[row2][col1-1] + row1==0 || col1==0 ? 0 : presum[row1-1][col1-1];\n\n        return all - up -left + upLeft;\n    }\n}\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix obj = new NumMatrix(matrix);\n * int param_1 = obj.sumRegion(row1,col1,row2,col2);\n */","compare_result":"0100000000000000000000","title_slug":"range-sum-query-2d-immutable","has_notes":false,"flag_type":1}