{"id":1202349573,"question_id":2035,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710318662,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1202349573/","is_pending":"Not Pending","title":"Count Sub Islands","memory":"N/A","code":"class Solution {\n    public int countSubIslands(int[][] grid1, int[][] grid2) {\n        int h = grid1.length;\n        int w = grid1[0].length;\n        Set<String> seen = new HashSet<>();\n        int cnt= 0;\n\n        int[][] dirs = new int[][]{{0,1}, {1,0}, {0,-1}, {-1,0}};\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                if(grid2[i][j]==1 && grid1[i][j]==1 && !seen.contains(i+\"_\"+j)){\n\n                    Queue<int[]> q = new LinkedList<>();\n                    q.offer(new int[]{i, j});\n                    seen.add(i+\"_\"+j);\n\n                    boolean valid = true;\n                    while(!q.isEmpty()){\n                        int[] p = q.poll();\n\n                        for(int[] d : dirs){\n                            int r = d[0] + p[0];\n                            int c = d[1] + p[1];\n\n                            if(r<0 || c<0 || r>=h || c>=w || seen.contains(r+\"_\"+c) || grid2[r][c]==0 )\n                                continue;\n\n                            if(grid1[r][c]==0){\n                                valid = false;\n                                break;\n                            }\n\n                            q.offer(new int[]{r,c});\n                            seen.add(r+\"_\"+c);\n                        }\n                    }\n                    if(valid) cnt++;\n                }\n            }\n        }\n        return cnt;\n\n    }\n}","compare_result":"110100101000000000000000000000000000000000000000001111111","title_slug":"count-sub-islands","has_notes":false,"flag_type":1}