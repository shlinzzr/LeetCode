{"id":1232927029,"question_id":127,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1713173836,"status":10,"status_display":"Accepted","runtime":"921 ms","url":"/submissions/detail/1232927029/","is_pending":"Not Pending","title":"Word Ladder","memory":"44.6 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n\n        Set<String> seen = new HashSet<>();\n\n        Set<String> wordSet = new HashSet<>(wordList);\n        if(!wordSet.contains(endWord)) return 0;\n\n        if(beginWord.equals(endWord))   \n            return 1;\n\n        Queue<String> q = new LinkedList<>();\n        q.offer(beginWord);\n        seen.add(beginWord);\n        int step = 1;\n        while(!q.isEmpty()){\n            int size = q.size();\n            while(size-->0){\n\n                String cur = q.poll();\n                // System.out.println(cur + \" \" + step);\n\n                if(cur.equals(endWord)) return step;\n                for(String w : wordList){\n                    if(seen.contains(w)) continue;\n\n                    int diff = 0;\n                    boolean valid = true;\n                    for(int i=0; i<w.length(); i++){\n                        if(w.charAt(i)!=cur.charAt(i)){\n                            diff++;\n                            if(diff>1){\n                                valid = false;\n                                break;\n                            }\n                        }\n                    }\n                    \n                    if(!valid) continue;\n                        \n                    seen.add(w);\n                    q.offer(w);\n                }\n            }\n            step++;\n        }\n        return 0;\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}