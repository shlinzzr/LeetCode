{"id":1232932151,"question_id":127,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1713174354,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/1232932151/","is_pending":"Not Pending","title":"Word Ladder","memory":"47.9 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n\n        Set<String> seen = new HashSet<>();\n\n        Set<String> wordSet = new HashSet<>(wordList);\n        if(!wordSet.contains(endWord)) return 0;\n\n        if(beginWord.equals(endWord))   \n            return 1;\n\n        Queue<String> q = new LinkedList<>();\n        q.offer(beginWord);\n        seen.add(beginWord);\n        int step = 1;\n        while(!q.isEmpty()){\n            int size = q.size();\n            while(size-->0){\n\n                String cur = q.poll();\n\n                if(cur.equals(endWord)) return step;\n               \n                for(int i=0; i<cur.length(); i++){\n                    char[] arr = cur.toCharArray();\n                    for(char ch = 'a'; ch<='z'; ch++){\n                        arr[i] = ch;\n                        String next = new String(arr);\n                        if(wordSet.contains(next) && !seen.contains(next)){\n                           \n                            q.offer(next);\n                            seen.add(next);\n                        }\n                    }\n                }\n\n\n                // for(String w : wordList){ // to avoid O(n) of wordList, we use 'a'-'z' to check adj\n                //     if(seen.contains(w)) continue;\n\n                //     int diff = 0;\n                //     boolean valid = true;\n                //     for(int i=0; i<w.length(); i++){\n                //         if(w.charAt(i)!=cur.charAt(i)){\n                //             diff++;\n                //             if(diff>1){\n                //                 valid = false;\n                //                 break;\n                //             }\n                //         }\n                //     }\n                    \n                //     if(!valid) continue;\n                        \n                //     seen.add(w);\n                //     q.offer(w);\n                // }\n            }\n            step++;\n        }\n        return 0;\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}