{"id":898364336,"question_id":127,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676449883,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/898364336/","is_pending":"Not Pending","title":"Word Ladder","memory":"43.8 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        HashSet<String> set=new HashSet<>();\n        for(String t:wordList){\n            set.add(t);\n        }\n        if(!set.contains(endWord)){\n            return 0;\n        }\n        Queue<pair> q=new LinkedList<>();\n        q.add(new pair(beginWord,1));\n        while(!q.isEmpty()){\n            pair p=q.poll();\n            if(p.s.equals(endWord)){\n                return p.d;\n            }\n            String s=p.s;\n            for(int i=0;i<s.length();i++){\n                for(char a='a';a<='z';a++){\n                    char temp[]=s.toCharArray();\n                    temp[i]=a;\n                    if(set.contains(new String(temp))){\n                        q.add(new pair(new String(temp),p.d+1));\n                        set.remove(new String(temp));\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\nclass pair{\n    String s;\n    int d;\n    public pair(String t,int p){\n        s=t;\n        d=p;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}