{"id":1273763371,"question_id":127,"lang":"java","lang_name":"Java","time":"1 week, 5 days","timestamp":1717209917,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/1273763371/","is_pending":"Not Pending","title":"Word Ladder","memory":"47.4 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        Set<String> set = new HashSet<>(wordList);\n        if(!set.contains(endWord)) return 0;\n        if(beginWord.length()!=endWord.length()) return 0;\n\n        Queue<String> q= new LinkedList<>();\n        q.offer(beginWord);\n\n\n        Set<String> seen = new HashSet<>();\n        seen.add(beginWord);\n        int step = 1;\n        while(!q.isEmpty()){\n            int size = q.size();\n\n            while(size-->0){\n                String p = q.poll();\n\n                if(p.equals(endWord)) return step;\n\n\n                // if(s.length() is big, set size is small\n                // // use this method\n                // List<String> adjs = getNext(set, p);\n                // for(String next : adjs){\n                //     if(seen.contains(next)) continue;\n\n                //     q.offer(next);\n                //     seen.add(next);\n                // }\n\n                // if set size is big , s.length() is small \n                // use this method\n                char[] arr = p.toCharArray();\n                for(int i=0; i<arr.length; i++){\n                    char org = arr[i];\n                    for(char ch='a'; ch<='z';ch++){\n                        arr[i] = ch;\n                        String next = new String(arr);\n                        if(set.contains(next) && !seen.contains(next)){\n                            q.offer(next);\n                            seen.add(next);\n                        }   \n                    }\n                    arr[i]=org;\n                }\n\n\n\n            }\n            step++;\n        }\n        return 0;\n    }\n\n\n    private List<String> getNext(Set<String> set , String curr){\n\n        List<String> res = new ArrayList<>();\n\n        for(String s : set){\n            if(s.length()!=curr.length()) continue;\n            int diff = 0;\n            boolean match = true;\n            for(int i=0; i<s.length(); i++){\n                if(s.charAt(i)!=curr.charAt(i))\n                    diff++;\n                if(diff>1){\n                    match = false;\n                    break;\n                } \n            }\n\n            if(match) res.add(s);\n        }\n\n        return res;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}