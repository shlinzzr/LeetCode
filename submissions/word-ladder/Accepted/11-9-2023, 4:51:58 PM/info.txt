{"id":1095093142,"question_id":127,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1699519918,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/1095093142/","is_pending":"Not Pending","title":"Word Ladder","memory":"46.8 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        Set<String> set= new HashSet<>(wordList);\n        if(!set.contains(endWord))\n            return 0;\n\n        if(beginWord.length()!=endWord.length() )\n            return 0;\n\n        if(beginWord.equals(endWord))\n            return 1;\n\n        Set<String> seen = new HashSet<>();\n        seen.add(beginWord);\n        Queue<String> q = new LinkedList<>();\n        q.offer(beginWord);\n        int step=1;\n\n        \n\n        while(!q.isEmpty()){\n\n            int siz=q.size();\n            while(siz-->0){\n\n                String p = q.poll();\n\n                for(int i=0; i<p.length(); i++){\n\n                    char[] arr = p.toCharArray();\n\n                    for(int j=0; j<26; j++){\n                        arr[i] = (char) (j+'a');\n\n                        String t = new String(arr);\n\n                        if(t.equals(endWord))\n                            return step+1;\n\n                        if(set.contains(t) && !seen.contains(t)){\n                            seen.add(t);\n                            q.offer(t);\n                        }\n                    }\n                }\n            }\n            step++;\n        }\n\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}