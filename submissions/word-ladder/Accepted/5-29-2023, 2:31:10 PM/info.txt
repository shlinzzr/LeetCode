{"id":959403096,"question_id":127,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685341870,"status":10,"status_display":"Accepted","runtime":"746 ms","url":"/submissions/detail/959403096/","is_pending":"Not Pending","title":"Word Ladder","memory":"44 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        \n        if(beginWord.length()!=endWord.length())\n            return 0;\n        \n        if(!wordList.contains(endWord))\n            return 0;\n        \n        Queue<String> q = new LinkedList<>();\n        boolean[] bool = new boolean[wordList.size()];\n        \n        q.offer(beginWord);\n        \n        int step = 2;\n        \n        while(!q.isEmpty()){\n            \n            for(int j=q.size(); j>0; j--){ // loop step\n                \n                String p = q.poll();\n                for(int i=0; i<wordList.size(); i++){\n\n                    String next = wordList.get(i);\n                    \n                    if(bool[i] || p.length()!=next.length())\n                        continue;\n\n                    int diff = 0;    \n                    boolean add = true;\n                    for(int k=0; k<p.length(); k++){\n                        if(p.charAt(k)!=next.charAt(k)){\n\n                            if(diff==0)\n                                diff++;\n                            else{\n                                add = false;\n                                break;\n                            }\n                        }\n                    }\n                    \n                    if(add==false)\n                        continue;\n                    \n                    if(endWord.equals(next))\n                        return step;\n                    // System.out.println(p + \"->\" + next);\n                    q.offer(next);\n                    bool[i]=true;\n                }\n            }\n            // System.out.println();\n            step++;\n            \n            \n        }\n        return 0;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}