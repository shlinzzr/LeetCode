{"id":800909902,"question_id":127,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1663293036,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/800909902/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\n    \n    int cnt=0;\n    int[] res = new int[1];\n    \n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        \n        if(beginWord.equals(endWord))\n            return 0;\n        \n        if(!wordList.contains(endWord))\n            return 0;\n        \n        res[0] = Integer.MAX_VALUE;\n        \n        Set<String> history  = new HashSet<>();\n        history.add(beginWord);\n        \n      \n        cnt++;\n        \n        helper(beginWord, endWord, wordList,  history);\n        \n        return res[0];\n        \n        \n    }\n    \n    private void helper(String beginWord, String endWord, List<String> wordList, Set<String> history ){\n            \n        if(beginWord.equals(endWord)){\n            res[0] = Math.min(res[0], cnt);\n            return;\n        }\n        \n        \n        \n        Set<String> candidate = findCandidate(beginWord, wordList, history);\n        \n        if(candidate.size()==0)\n            return;\n        \n        \n        for(String can : candidate){\n            cnt++;\n            history.add(can);\n            helper(can, endWord, wordList, history);\n            history.remove(history.size()-1);\n            cnt--;\n        }\n            \n    }\n    \n    \n    \n    private Set<String> findCandidate(String s, List<String> wordList, Set<String> history){\n        Set<String> candidate = new HashSet<>();\n        \n        for(String word : wordList){\n            int cnt=0;\n            \n            if(s.length()!=word.length() || history.contains(word))\n                continue;\n            \n            for(int i=0; i<s.length(); i++){\n                if(s.charAt(i)!=word.charAt(i))\n                    cnt++;\n                \n                if(cnt>1)\n                    break;\n            }\n            \n            if(cnt==1)\n                candidate.add(word);\n        }\n        \n        return candidate;\n    }\n}","compare_result":"11101110111111101011110110111110100000000000000000","title_slug":"word-ladder","has_notes":false,"flag_type":1}