{"id":872523633,"question_id":127,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672994846,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/872523633/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        \n        HashMap<String, List<String>> map = new HashMap<>();\n        findNeb(beginWord, wordList, map);\n        for(String w : wordList){\n            findNeb(w, wordList, map);\n        }\n        \n        HashSet<String> seen = new HashSet<>();\n        Queue<String> q = new LinkedList<>();\n        q.add(beginWord);\n        seen.add(beginWord);\n        int step=0;\n        while(!q.isEmpty()){\n            for(int i=q.size(); i>0; i--){\n                \n                String p = q.poll();\n                List<String> nebs = map.get(p);\n                for(String n : nebs){\n                    if(seen.contains(n))\n                        continue;\n                    \n                    seen.add(n);\n                    q.offer(n);\n                }\n            }\n            step++;\n        }\n        \n        return step;\n        \n        \n    }\n    \n    \n    \n    private void findNeb(String s, List<String> wordList, HashMap<String, List<String>> map){\n        \n        int[] arr = new int[26];\n        for(char ch : s.toCharArray()){\n            arr[ch-'a']++;\n        }\n        \n        map.put(s, new ArrayList<>());\n        \n        int[] tmp = new int[26];\n        for(String w : wordList){\n            \n            System.arraycopy(arr, 0, tmp, 0, 26);\n            \n            for(char ch : w.toCharArray()){\n                tmp[ch-'a']--;\n            }\n            \n            int diff=0;\n            for(int t : tmp){\n                if(t!=0)\n                    diff++;\n                if(diff>2)\n                    continue;\n            }\n            \n            if(diff<=2 && diff!=0)\n                map.get(s).add(w);\n        }\n        \n    }\n}","compare_result":"10101010011110000000011000001101100000000000000000","title_slug":"word-ladder","has_notes":false,"flag_type":1}