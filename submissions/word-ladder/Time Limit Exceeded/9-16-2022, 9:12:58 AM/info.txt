{"id":800893037,"question_id":127,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1663290778,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/800893037/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\n    \n    \n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        \n        if(beginWord.equals(endWord))\n            return 0;\n        \n        if(!wordList.contains(endWord))\n            return 0;\n\n        \n        return helper(beginWord, endWord, wordList);\n        \n        \n    }\n    \n    private int helper(String beginWord, String endWord, List<String> wordList){\n        // System.out.println(\"\\nbeginWord=\"+beginWord+ \" cnt=\"+cnt);\n        \n        Set<String> history  = new HashSet<>();\n        Queue<String> queue = new LinkedList<>();\n        queue.offer(beginWord);\n        int cnt=0;\n        \n        while(!queue.isEmpty()){\n            cnt++;  \n            int size = queue.size();\n            for(int i = 0; i < size; i++){\n                String str = queue.poll();\n                \n                if(str.equals(endWord))\n                    return cnt;\n                \n                history.add(beginWord);\n\n                Set<String> candidate = findCandidate(str, wordList, history);\n                for(String can : candidate){\n                       queue.offer(can); \n                } \n            }\n        }\n            \n        return 0;\n    }\n    \n    \n    \n    private Set<String> findCandidate(String s, List<String> wordList, Set<String> history){\n        Set<String> candidate = new HashSet<>();\n        \n        for(String word : wordList){\n            int cnt=0;\n            \n            if(s.length()!=word.length() || history.contains(word))\n                continue;\n            \n            for(int i=0; i<s.length(); i++){\n                if(s.charAt(i)!=word.charAt(i))\n                    cnt++;\n                \n                if(cnt>1)\n                    break;\n            }\n            \n            if(cnt==1)\n                candidate.add(word);\n        }\n        \n        return candidate;\n    }\n}","compare_result":"11111111111111111000000000000000000000000000000000","title_slug":"word-ladder","has_notes":false,"flag_type":1}