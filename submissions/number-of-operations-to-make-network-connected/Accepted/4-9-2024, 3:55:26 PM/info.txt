{"id":1227434061,"question_id":1442,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712649326,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1227434061/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"61.3 MB","code":"class Solution {\n\n    int[] parent;\n    public int makeConnected(int n, int[][] connections) {\n\n        parent = new int[n];\n        for(int i=0; i<n; i++){\n            parent[i] = i;\n        }\n        int cnt = 1;\n        int op = 0;\n        for(int[] con : connections){\n            int a = con[0];\n            int b = con[1];\n            if(union(a,b)) cnt++;\n            else op++;\n        }\n        return op+cnt>=n ? n-cnt : -1;\n        \n    }\n    private boolean union(int a, int b){\n        a = find(a);\n        b = find(b);\n\n        if(a==b) return false;\n\n        if(a<b) parent[b] = a;\n        else parent[a] =b;\n        return true;\n    }\n\n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected","has_notes":false,"flag_type":1}