{"id":903403897,"question_id":1442,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1677140545,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/903403897/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"64.5 MB","code":"class Solution {\n    int[] parent;\n    public int makeConnected(int n, int[][] connections) {\n        Arrays.sort(connections, (a, b)-> a[0]-b[0]);\n       \n        if(connections.length<n-1)\n            return -1;\n        \n        int cnt = n;\n        parent = new int[n];\n        for (int i = 0; i < n; i++) parent[i] = i;\n        \n        for(int[] con : connections){\n            \n            int root = find(con[0]);\n            int node = find(con[1]);\n            \n            if(root!=node){\n                cnt--;\n                parent[node]= root;\n            }\n            \n        }\n        \n        return cnt-1;\n            \n        \n    }\n    \n    private int find(int x){\n        if(parent[x]==x)\n            return x;\n        parent[x] =  find(parent[x]);\n        return parent[x];\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected","has_notes":false,"flag_type":1}