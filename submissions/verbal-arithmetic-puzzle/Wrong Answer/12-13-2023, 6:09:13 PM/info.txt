{"id":1118745832,"question_id":1429,"lang":"java","lang_name":"Java","time":"6 months","timestamp":1702462153,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1118745832/","is_pending":"Not Pending","title":"Verbal Arithmetic Puzzle","memory":"N/A","code":"class Solution {\n\n    HashMap<Character, Integer> map = new HashMap<>();\n    boolean[] seen = new boolean[10];\n\n    public boolean isSolvable(String[] words, String result) {\n        List<String> list = new ArrayList<>();\n        for(String w : words){\n            if(w.length()>result.length()) return false;\n            list.add(new StringBuilder(w).reverse().toString());\n        }\n        result = new StringBuilder(result).reverse().toString();\n       \n        return helper(list, result, 0, 0, 0);\n\n    }\n\n    private boolean helper(List<String> list, String result, int i, int j, int sum){\n\n        if (j==result.length())\n        {\n            if (sum!=0) \n                return false;\n            if (result.length()>1 && map.get(result.charAt(result.length()-1))==0)\n                return false;\n            return true;\n        }\n\n\n\n        if(i==list.size()){\n            if(map.containsKey(result.charAt(j))){ //有用過這個char\n                if(map.get(result.charAt(j))!=sum%10){\n                    return false;\n                }else\n                    return helper(list, result, 0, j+1, sum/10);\n\n            }else{ //沒用過這個char\n\n                if(seen[sum%10]) return false; //但數字被用掉了\n\n                map.put(result.charAt(j), sum%10);\n                seen[sum%10]=true;\n                helper(list, result, 0, j+1, sum/10);\n                seen[sum%10]=false;\n                map.remove(result.charAt(j));\n\n                return false;\n            }\n        }\n\n        if (j>=list.get(i).length())\n        {            \n            return helper(list, result, i+1, j, sum);        \n        }   \n\n        char ch = list.get(i).charAt(j);\n        if(map.containsKey(ch)){\n\n            //consider leading zero\n            if( map.get(ch)==0 && list.get(i).length()>1 && j==list.get(i).length()-1)\n                return false;\n\n            return helper(list, result, i+1, j, sum+map.get(ch));\n\n        }else{\n            for(int d=0; d<=9; d++){\n                if(seen[d]) continue;\n\n                if(d==0 && list.get(i).length()>1 && j==list.get(i).length()-1) // consider leading zero\n                    continue;\n                \n                map.put(ch, d);\n                seen[d]=true;\n                if(helper(list, result, i+1, j, sum+d))\n                    return true;\n                map.remove(ch);\n                seen[d]=false;\n\n            }\n\n            return false;\n        }\n        // return true;\n\n    }\n}","compare_result":"0010011000001101111000000101111111","title_slug":"verbal-arithmetic-puzzle","has_notes":false,"flag_type":1}