{"id":923367282,"question_id":1025,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679971656,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/923367282/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"39.8 MB","code":"class Solution {\n    public int mincostTickets(int[] days, int[] costs) {\n        int len = days.length;\n        int lastDay = days[len-1];\n        int[] dp = new int[lastDay+1];   //dp[i] means up to i-th day the minimum cost of the tickets\n        boolean[] isTravelDays = new boolean[lastDay + 1];\n        // mark the travel days\n        for(int d : days) \n            isTravelDays[d] = true;\n    \n        for(int i = 1; i <= lastDay; i++) {\n            if(!isTravelDays[i]) { // no need to buy ticket if it is not a travel day\n                dp[i] = dp[i - 1];\n                continue;\n            }\n            // select which type of ticket to buy\n            dp[i] = costs[0] + dp[i - 1]; // 1-day\n            dp[i] = Math.min(costs[1]+dp[Math.max(i-7, 0)], dp[i]); // 7-day\n            dp[i] = Math.min(costs[2]+dp[Math.max(i-30, 0)], dp[i]); // 30-day\n        }\n        return dp[lastDay];\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets","has_notes":false,"flag_type":1}