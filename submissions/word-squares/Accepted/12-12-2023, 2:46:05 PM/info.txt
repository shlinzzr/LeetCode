{"id":1117830658,"question_id":425,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702363565,"status":10,"status_display":"Accepted","runtime":"2051 ms","url":"/submissions/detail/1117830658/","is_pending":"Not Pending","title":"Word Squares","memory":"61.5 MB","code":"class Solution {\n    public List<List<String>> wordSquares(String[] words) {\n        List<List<String>> res = new ArrayList<>();\n        int len = words.length;\n        backtrack(words, res, new ArrayList<>());\n        return res;\n    }\n\n    private void backtrack(String[] words, List<List<String>> res, List<String> curr){\n\n        int wordLen = words[0].length();\n\n        if(curr.size()==wordLen){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n\n        for(int i=0; i<words.length;i++){\n            String w = words[i];\n\n            if(isValid(curr, w)){\n                curr.add(w);\n                backtrack(words, res, curr);\n                curr.remove(curr.size()-1);\n            }\n        }\n    }\n\n    private boolean isValid(List<String> curr, String s ){\n\n        if(curr.isEmpty())\n            return true;\n\n        int siz = curr.size();\n        for(int j=0; j<siz; j++){\n            if(s.charAt(j)!=curr.get(j).charAt(siz)){\n                return false;\n            }\n        }\n\n        return true;\n    }   \n}\n\n/* \n\nb a l l \na r e a\nl e a d\nl a d y\n\n*/","compare_result":"11111111111111111","title_slug":"word-squares","has_notes":false,"flag_type":1}