{"id":1018266621,"question_id":2521,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1691742589,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/1018266621/","is_pending":"Not Pending","title":"Paths in Matrix Whose Sum Is Divisible by K","memory":"77.2 MB","code":"class Solution {\n    public int numberOfPaths(int[][] grid, int k) {\n        int h = grid.length;\n        int w = grid[0].length;\n       \n        int M = (int) 1e9+7;\n         \n        // dp[i][j][r] :  the number of distinct paths whose  sum % k ==r \n        \n        int[][][] dp = new int[h+1][w+1][k]; \n\n        \n        long sum = 0;\n        for (int i=0; i<h; i++)\n        {\n            sum += grid[i][0];\n            sum %= k;\n            dp[i][0][(int)sum] = 1;\n        }\n        \n        sum = 0;\n        for (int j=0; j<w; j++)\n        {\n            sum += grid[0][j];\n            sum %= k;\n            dp[0][j][(int)sum] = 1;\n        }\n        \n        for(int i=1; i<h; i++){\n            for(int j=1; j<w; j++){\n                for(int r=0; r<k; r++){\n                    \n                    // dp[i][j][r] = dp[i-1][j][t] + dp[i][j-1][t];\n                    // (t+grid[i][j]) %k = r\n                    \n                    int t = ((r-grid[i][j])%k + k)%k;\n                    dp[i][j][r] = dp[i-1][j][t] + dp[i][j-1][t];\n                    dp[i][j][r] %= M;       \n                }\n            }\n        }\n        \n        \n        return dp[h-1][w-1][0];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"paths-in-matrix-whose-sum-is-divisible-by-k","has_notes":false,"flag_type":1}