{"id":1272199130,"question_id":3423,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717059340,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1272199130/","is_pending":"Not Pending","title":"Maximum Sum of Subsequence With Non-adjacent Elements","memory":"N/A","code":"class Solution {\n   private static final int MOD = 1000000007;\n\n    public int maximumSumSubsequence(int[] nums, int[][] queries) {\n         int n = nums.length;\n       \n        long[] dp = new long[n];\n\n        dp[0] = Math.max(0, nums[0]);\n        if (n > 1) {\n            dp[1] = Math.max(dp[0], nums[1]);\n        }\n        for (int i = 2; i < n; i++) {\n            dp[i] = Math.max(dp[i - 1], dp[i - 2] + nums[i]);\n        }\n\n\n        long sum = 0;\n        for (int[] q : queries) {\n            int pos = q[0];\n            int value = q[1];\n            nums[pos] = value;\n\n            if (pos == 0) {\n                dp[0] = Math.max(0, nums[0]);\n                if (n > 1) {\n                    dp[1] = Math.max(dp[0], nums[1]);\n                }\n            } else if (pos == 1) {\n                dp[1] = Math.max(dp[0], nums[1]);\n            }\n            for (int i = Math.max(2, pos); i < n; i++) {\n                dp[i] = Math.max(dp[i - 1], dp[i - 2] + nums[i]);\n            }\n\n            sum = (sum + dp[n - 1]) % MOD;\n        }\n\n        return (int) sum;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"maximum-sum-of-subsequence-with-non-adjacent-elements","has_notes":false,"flag_type":1}