{"id":1053149183,"question_id":988,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695091968,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1053149183/","is_pending":"Not Pending","title":"Flip Equivalent Binary Trees","memory":"40.5 MB","code":"class Solution {\n    public boolean flipEquiv(TreeNode root1, TreeNode root2) {\n        if (root1 == null) return root2 == null;\n        if (root2 == null) return root1 == null;\n        if (root1.val != root2.val) return false;\n        return (flipEquiv(root1.left, root2.left) && flipEquiv(root1.right, root2.right)) || (\n            flipEquiv(root1.left, root2.right) && flipEquiv(root1.right, root2.left)\n        );\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flip-equivalent-binary-trees","has_notes":false,"flag_type":1}