{"id":1010996144,"question_id":1830,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1691051213,"status":10,"status_display":"Accepted","runtime":"111 ms","url":"/submissions/detail/1010996144/","is_pending":"Not Pending","title":"Count Good Meals","memory":"57.3 MB","code":"class Solution {\n\n    public int countPairs(int[] del) {\n        int M = (int) 1e9+7;\n        \n        Map<Integer, Long> map = new HashMap<>();\n        for(int d: del)\n            map.put(d, map.getOrDefault(d, 0L)+1);\n        \n        long count = 0;\n        \n        Set<Integer> set = new HashSet<>();\n        int cur=1;\n        for(int i=0; i<=21; i++){\n            set.add(cur);\n            cur*=2;\n        }\n        \n        \n        \n        for (int d: map.keySet()) {\n            \n            for (int p : set) {\n                \n                if (p-d==d) {\n                    long val = map.get(p-d);\n                    count += ((val-1) *val);\n                }\n\n                else if (map.containsKey(p-d))\n                    count += map.get(d) * map.get(p-d);\n            }\n        }\n        \n        return (int) ((count / 2) % M);\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-meals","has_notes":false,"flag_type":1}