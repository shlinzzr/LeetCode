{"id":1233848343,"question_id":32,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713261904,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1233848343/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"43 MB","code":"class Solution {\n    public int longestValidParentheses(String s) {\n\n        int len = s.length();\n        int max = 0 ;\n        Stack<Integer> st = new Stack<>();\n        st.push(-1); // set the pivot with last valid start pos\n        int left= 0 ;\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n\n            if(ch=='(') \n                st.push(i);\n            else{\n                st.pop(); // ignore curr valid pos, check the last valid pivot\n                if(st.isEmpty())\n                    st.push(i); // if st.isEmpty(), update the last valid pivot postion\n                else \n                    max= Math.max(max, i-st.peek());\n            }\n        }\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses","has_notes":false,"flag_type":1}