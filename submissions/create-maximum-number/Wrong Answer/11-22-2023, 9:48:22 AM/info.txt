{"id":1103850149,"question_id":321,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1700617702,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1103850149/","is_pending":"Not Pending","title":"Create Maximum Number","memory":"N/A","code":"class Solution {\n    public int[] maxNumber(int[] nums1, int[] nums2, int k) {\n\n\n\n\n\n        int m = nums1.length;\n        int n = nums2.length;\n        Stack<Integer> st = new Stack<>();\n        \n        int del = m+n-k;\n\n\n        int[] tmp1 = new int[m+n];\n        System.arraycopy(nums1, 0, tmp1, 0, m);\n        System.arraycopy(nums2, 0, tmp1, m, n);\n        int d= 0;\n\n        for(int i=0; i<m+n; i++){\n            while(!st.isEmpty() && st.peek()<tmp1[i] && d>del){\n                d++;\n                st.pop();\n            }\n            st.push(tmp1[i]);\n        }\n        while(d<del){\n            st.pop();\n            d++;\n        }\n        int[] res1= new int[st.size()];\n        int idx= 0;\n        for(int v: st){\n            System.out.print(v + \", \");\n            res1[idx++] = v;\n        }\n    \n        \n\n\n        /*\n            sec part\n        */\n        st.clear();\n\n System.out.println();\n System.out.println();\n System.out.println();\n System.out.println();\n        int[] tmp2 = new int[m+n];\n        System.arraycopy(nums2, 0, tmp2, 0, n);\n        System.arraycopy(nums1, 0, tmp2, n, m);\n        d= 0;\n\n        for(int i=0; i<m+n; i++){\n            while(!st.isEmpty() && st.peek()<tmp2[i] && d>del){\n                d++;\n                st.pop();\n            }\n            st.push(tmp2[i]);\n        }\n        while(d<del){\n            st.pop();\n            d++;\n        }\n        int[] res2= new int[st.size()];\n        idx= 0;\n        for(int v: st){\n            System.out.print(v + \", \");\n            res2[idx++] = v;\n        }\n\n        for(int i=0; i<res1.length; i++){\n            if(res1[i]>res2[i])\n                return res1;\n            \n        }\n\n        return res2;\n            \n\n        \n\n\n/*\n\n9 3 4 6\n9 6 5 2 5\n9 6 5 5\n\n*/\n\n        // int i=0,j=0,d=0;\n        // while(i<m && j<n){\n\n        //     int num= nums1[i]>nums2[j] ? nums1[i++] : nums2[j++];\n\n        //     while(!st.isEmpty() && st.peek()<num && d<del){\n        //         st.pop();\n        //         d++;\n        //     }\n        //     st.push(num);\n        // }\n\n        // while(i<m){\n        //     while(!st.isEmpty() && st.peek()<nums1[i] && d<del){\n        //         st.pop();\n        //         d++;\n        //     }\n        //     st.push(nums1[i]);\n        //     i++;\n        // }\n\n\n        // while(j<n){\n        //     while(!st.isEmpty() && st.peek()<nums2[j] && d<del){\n        //         st.pop();\n        //         d++;\n        //     }\n        //     st.push(nums2[j]);\n        //     j++;\n        // }\n\n\n\n        // while(d<del){\n        //     st.pop();\n        //     d++;\n        // }\n\n        // int[] res = new int[st.size()];\n        // int idx= 0;\n        // for(int v : st){\n        //     res[idx++]=v;\n        // }\n\n        // return res;\n\n    }\n}","compare_result":"01000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000","title_slug":"create-maximum-number","has_notes":false,"flag_type":1}