{"id":838611854,"question_id":735,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667814832,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/838611854/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"48.8 MB","code":"class Solution {\n   public int[] asteroidCollision(int[] asteroids) {\n       \n        if (asteroids == null) {\n            return null;\n        } else if (asteroids.length <= 1) {\n            return asteroids;\n        }\n        Stack<Integer> stack = new Stack<>();\n        for (int cur : asteroids) {\n            if (cur > 0) { // previous one does not matter, no collision forever\n                stack.push(cur);\n            } else {\n                while (!stack.isEmpty() && stack.peek() > 0 && -cur > stack.peek()) { // destroy the previous positive one(s) \n                    stack.pop();\n                }\n                if (stack.isEmpty() || stack.peek() < 0) {\n                    stack.push(cur);\n                } else if (stack.peek() == -cur) {\n                    stack.pop();\n                }\n            }\n        }\n        return stack.stream().mapToInt(i->i).toArray();\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}