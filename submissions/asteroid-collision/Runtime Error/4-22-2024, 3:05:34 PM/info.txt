{"id":1238834844,"question_id":735,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713769534,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1238834844/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"N/A","code":"class Solution {\n    public int[] asteroidCollision(int[] ast) {\n\n        int len = ast.length;\n\n        Stack<Integer> st = new Stack<>();\n\n        for(int i=0; i<len; i++){\n\n            int cur = ast[i];\n\n            if(st.isEmpty()){\n                st.push(cur);   \n            }else{\n\n                if(cur>0){\n                    st.push(cur);\n                }else{\n\n                    \n\n                    boolean add = true;\n                    while(!st.isEmpty()){\n\n                        if(st.peek()<Math.abs(cur)){\n                            st.pop();   \n                        }\n                        if(st.peek()==Math.abs(cur)){\n                            add=false;\n                            st.pop();\n                            break;\n                        }\n\n                        if(st.peek()>Math.abs(cur)){\n                            add=false;\n                            break;\n                        }\n                    }\n\n                    if(add) st.push(cur);\n                }\n            }\n        }        \n\n        int[] res = new int[st.size()];\n        for(int i=st.size()-1; i>=0; i--){\n            res[i] = st.pop();\n        }\n\n        return res;\n    }\n}","compare_result":"11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}