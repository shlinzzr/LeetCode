{"id":940377038,"question_id":2588,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682565123,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/940377038/","is_pending":"Not Pending","title":"Maximum Number of Points From Grid Queries","memory":"N/A","code":"class Solution {\n    public int[] maxPoints(int[][] grid, int[] queries) {\n        int h = grid.length;\n        int w = grid[0].length;\n        \n        int[][] dirs = new int[][]{{0,1}, {1,0}, {0,-1}, {-1,0}};\n        \n        int[] res = new int[queries.length];\n        \n        for(int i=0; i<queries.length; i++){\n            \n            int n = queries[i];\n            \n            int cnt =1;\n            if(n<=grid[0][0]){\n                res[i]=0;\n                continue;\n            }\n            \n            \n            boolean[][] bool = new boolean[h][w];\n            bool[0][0]=true;\n            Queue<int[]> q = new LinkedList<>(); \n            q.offer(new int[]{0,0});\n            \n            \n            \n            \n            \n            while(!q.isEmpty()){\n                int[] p = q.poll();\n                \n                for(int[] d: dirs){\n                    \n                    int r = d[0] + p[0];\n                    int c = d[1] + p[1];\n                    \n                    if(r<0 || c<0 || r>=h || c>=w || bool[r][c] || n<=grid[r][c])\n                        continue;\n                    \n                    q.offer(new int[]{r,c});\n                    bool[r][c]=true;\n                    cnt++;\n                }\n                \n            }\n            \n            res[i]=cnt;\n            \n        }\n        return res;\n    }\n}","compare_result":"111111111111111110000","title_slug":"maximum-number-of-points-from-grid-queries","has_notes":false,"flag_type":1}