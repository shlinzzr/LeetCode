{"id":1234475015,"question_id":588,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713321457,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1234475015/","is_pending":"Not Pending","title":"Design In-Memory File System","memory":"N/A","code":"class FileSystem {\n    TreeMap<String, TreeSet<String>> folders;\n    Map<String, String> files; // path, content\n    public FileSystem() {\n        folders = new TreeMap<>();\n        files = new HashMap<>();\n\n        folders.put(\"/\", \"/\");\n    }\n    \n    public List<String> ls(String path) {\n\n        if(files.contains(path)){ // is file\n            List<String> res = new ArrayList<>();\n\n\n        }\n\n        return new ArrayList<>(folders.getOrDefault(path, new TreeSet<>()));\n        \n    }\n    \n    public void mkdir(String path) {\n\n        String[] arr = path.split(\"/\");\n        int len = arr.length;\n        StringBuilder sb = new StringBuilder();\n\n        for(int i=0; i<len; i++){\n            sb.append(\"/\").append(arr[i]);\n\n            folders.putIfAbsent(sb.toString(), new TreeSet<>());\n        }\n\n\n        folders.putIfAbsent(path, new ArrayList<>());\n        \n    }\n    \n    public void addContentToFile(String filePath, String content) {\n        \n    }\n    \n    public String readContentFromFile(String filePath) {\n        \n    }\n}\n\n/**\n * Your FileSystem object will be instantiated and called as such:\n * FileSystem obj = new FileSystem();\n * List<String> param_1 = obj.ls(path);\n * obj.mkdir(path);\n * obj.addContentToFile(filePath,content);\n * String param_4 = obj.readContentFromFile(filePath);\n */","compare_result":null,"title_slug":"design-in-memory-file-system","has_notes":false,"flag_type":1}