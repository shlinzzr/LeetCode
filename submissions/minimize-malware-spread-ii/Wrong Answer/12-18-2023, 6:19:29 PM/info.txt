{"id":1122494574,"question_id":964,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1702894769,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1122494574/","is_pending":"Not Pending","title":"Minimize Malware Spread II","memory":"N/A","code":"class Solution {\n    // 1-2-3\n    // 1, 2 infected\n    // 1 3\n    public int minMalwareSpread(int[][] graph, int[] initial) {\n        int n = graph.length;\n        Arrays.sort(initial);\n        Set<Integer> mal = new HashSet<>();\n        for (int i : initial) {\n            mal.add(i);\n        }\n        \n        int num = -1;\n        int res = -1;\n        for (int i : initial) {\n            int save = 0;\n            Set<Integer> visited = new HashSet<>();\n            visited.add(i);\n            \n            for (int j = 0; j < n; j++) {\n                if (i != j && graph[i][j] == 1) {\n                    int tmp = dfs(j, mal, visited, graph);\n                    if (tmp < 0) continue;\n                    save += tmp;\n                }\n            }\n            \n            if (save > num) {\n                num = save;\n                res = i;\n            }\n        }\n        \n        return res;\n    }\n    \n    private int dfs(int node, Set<Integer> mal, Set<Integer> visited, int[][] graph) {\n        if (!visited.add(node)) return 0;\n        if (mal.contains(node)) return -1;\n        \n        int save = 1;\n        for (int j = 0; j < graph.length; j++) {\n            if (node != j && graph[node][j] == 1) {\n                int tmp = dfs(j, mal, visited, graph);\n                if (tmp < 0) {\n                    mal.add(node);\n                    return -1;\n                }\n                \n                save += tmp;\n            }\n        }\n        \n        return save;\n    }\n}\n         ","compare_result":"11111111111111111111111111111111111111111111011","title_slug":"minimize-malware-spread-ii","has_notes":false,"flag_type":1}