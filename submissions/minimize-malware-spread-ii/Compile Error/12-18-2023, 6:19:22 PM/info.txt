{"id":1122494514,"question_id":964,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1702894762,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1122494514/","is_pending":"Not Pending","title":"Minimize Malware Spread II","memory":"N/A","code":"class Solution {\n\n    class UnionFind{\n        \n        int[] parent;\n        int[] weight;\n        \n        public UnionFind(int n){\n            parent = new int[n];\n            weight = new int[n];\n            for(int i=0; i<n; i++){\n                parent[i]= i;\n            }\n        \n        }\n        public int find(int x){\n            \n            if(parent[x]!=x)\n                parent[x] = find(parent[x]);\n            \n            return parent[x];\n        }\n        \n        public void union(int a, int b){\n\n            a=find(a);\n            b=find(b);\n            \n            if(a==b)\n                return;\n            \n            if(weight[a]<=weight[b]){\n                weight[a]+=weight[b];\n                parent[b] = a;\n            }else{\n                weight[b]+=weight[a];\n                parent[a] = b;\n            }\n        }\n        \n    }\n\n    public int minMalwareSpread(int[][] graph, int[] initial) {\n        int n = graph.length;\n\n        UnionFind uf = new UnionFind(n);\n\n        int res = 0;\n        int maxWeight = 0;\n        int maxNode = initial[0];\n\n        boolean[] infected = new boolean[n];\n        for(int u: initial) infected[u] = true;\n\n         for(int i = 0; i < n; i++) {\n            if(!infected[i]) {\n                for(int j = i + 1; j < n; j++) {\n                    if(!infected[j] && graph[i][j] == 1) uf.union(i, j);\n                }\n            }\n        }\n        while(!q.isEmpty()){\n\n            int p = q.poll();\n\n            if(seen[p])\n                continue;\n            seen[p]=true;\n\n            for(int adj : graph[p]){\n\n                int roota = uf.find(p);\n                int rootb = uf.find(adj);\n                if(roota!=rootb){\n                    uf.union(roota, rootb);\n                    \n\n                    if(uf.weight[roota]>=maxWeight && roota<res){\n                        maxWeight = uf.weight[roota];\n                        res = roota;\n                    }\n\n                    if(uf.weight[roota]>=maxWeight && rootb<res){\n                        maxWeight = uf.weight[rootb];\n                        res = rootb;\n                    }\n                }\n\n            }\n\n        }\n\n        return res;\n\n\n\n    }\n}","compare_result":null,"title_slug":"minimize-malware-spread-ii","has_notes":false,"flag_type":1}