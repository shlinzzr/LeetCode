{"id":1277294602,"question_id":857,"lang":"java","lang_name":"Java","time":"1 week, 1 day","timestamp":1717495167,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1277294602/","is_pending":"Not Pending","title":"Positions of Large Groups","memory":"44.1 MB","code":"class Solution {\n    public List<List<Integer>> largeGroupPositions(String s) {\n        \n        List<List<Integer>> res= new ArrayList<>();\n        \n        int len = s.length();\n        char[] arr = s.toCharArray();\n        for(int i=0; i<len; i++){\n            for(int j=i; j<len-1; j++){\n                \n                if(arr[j]!=arr[j+1] || (arr[j]==arr[j+1] && j+1==len-1)){\n                    \n                    if((arr[j]==arr[j+1] && j+1==len-1)) j++;\n                    \n                    if(j-i+1>=3){\n                        List<Integer> list = new ArrayList<>();\n                        list.add(i);\n                        list.add(j);\n                        res.add(list);\n                    }\n                    i=j;\n                    break;\n                }\n            }\n        }\n        \n        return res;\n            \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"positions-of-large-groups","has_notes":false,"flag_type":1}