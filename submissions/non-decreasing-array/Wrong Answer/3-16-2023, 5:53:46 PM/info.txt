{"id":916180553,"question_id":665,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1678960426,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/916180553/","is_pending":"Not Pending","title":"Non-decreasing Array","memory":"N/A","code":"class Solution {\n    public boolean checkPossibility(int[] nums) {\n        boolean seen = false;\n        \n       \n        for(int i=0; i<nums.length-1; i++){\n            \n            if(nums[i]<=nums[i+1])\n                continue;\n            \n            if(seen)\n                 return false;\n            \n            \n            // chg front //  1   4   2\n                         // i-1  i  i+1\n                          \n            if(i==0 || nums[i-1]<=nums[i+1]) // i=0 is because there is no n-1 element to check\n                nums[i]= nums[i+1]; // shrink left\n            else\n                nums[i+1] = nums[i]; // or impove right\n            \n        }\n        return true;\n    }\n}","compare_result":"10011011111110111000101111101011011111101111111101011001000001000001000001011000000000000001000000000000000000000001000000000000000000000001000000000000000000000000000011000001000110110000001001100001111011100000011000010000001000100101000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"non-decreasing-array","has_notes":false,"flag_type":1}