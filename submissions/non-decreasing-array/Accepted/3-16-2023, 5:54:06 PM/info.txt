{"id":916180691,"question_id":665,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1678960446,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/916180691/","is_pending":"Not Pending","title":"Non-decreasing Array","memory":"44.1 MB","code":"class Solution {\n    public boolean checkPossibility(int[] nums) {\n        boolean seen = false;\n        \n       \n        for(int i=0; i<nums.length-1; i++){\n            \n            if(nums[i]<=nums[i+1])\n                continue;\n            \n            if(seen)\n                 return false;\n            \n            \n            // chg front //  1   4   2\n                         // i-1  i  i+1\n                          \n            if(i==0 || nums[i-1]<=nums[i+1]) // i=0 is because there is no n-1 element to check\n                nums[i]= nums[i+1]; // shrink left\n            else\n                nums[i+1] = nums[i]; // or impove right\n            seen=true;\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"non-decreasing-array","has_notes":false,"flag_type":1}