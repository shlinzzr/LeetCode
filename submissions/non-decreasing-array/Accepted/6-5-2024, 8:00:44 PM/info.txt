{"id":1278420933,"question_id":665,"lang":"java","lang_name":"Java","time":"1Â week","timestamp":1717588844,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1278420933/","is_pending":"Not Pending","title":"Non-decreasing Array","memory":"45.5 MB","code":"class Solution {\n    public boolean checkPossibility(int[] nums) {\n\n        int len = nums.length;\n        int cnt = 0;\n        // non-desc\n        // equal or asc\n        if(len==1) return true;\n\n        boolean seen = false;\n\n        int min = nums[1];\n        for(int i=0; i<len-1; i++){\n\n            if(nums[i]<=nums[i+1]){\n                continue;\n            }\n\n            if(seen) return false;\n\n            if(! (i==0 || nums[i-1]<=nums[i+1]) )// i=0 is because there is no n-1 element to check\n                // nums[i]= nums[i+1]; // shrink left\n\n                nums[i+1] = nums[i]; // or impove right\n            seen = true;\n        }\n\n        return cnt<=1;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"non-decreasing-array","has_notes":false,"flag_type":1}