{"id":898420590,"question_id":460,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1676457349,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/898420590/","is_pending":"Not Pending","title":"LFU Cache","memory":"N/A","code":"class LFUCache {\n    \n    class Node {\n        \n        Node prev;\n        Node next;\n        int val;\n        int key;\n        \n        public Node(){}\n        \n        public Node(int key, int val){\n            this.key = key;\n            this.val = val;\n        }\n        \n    }\n    \n    \n    HashMap<Integer, Integer> fmap;// key freq;\n    int capacity;\n    Node head;\n    Node tail;\n    HashMap<Integer, Node> nmap;\n    \n\n\n    public LFUCache(int capacity) {\n        this.capacity = capacity;\n        fmap = new HashMap<>();\n        nmap = new HashMap<>();\n        head = new Node();\n        tail = new Node();\n        head.next = tail;\n        tail.prev = head;\n        \n    }\n    \n    public int get(int key) {\n\n        if(!nmap.containsKey(key))\n            return -1;\n        \n        Node node = nmap.get(key);\n        \n        remove(nmap.get(key));\n        add(node);\n        \n        return node.val;\n    }\n    \n    private void add(Node node){\n        \n        Node next = head.next;\n        node.next = next;\n        next.prev = node;\n        node.prev = head;\n        head.next = node;\n        nmap.put(node.key, node);\n        \n        if(nmap.size()>capacity){\n            remove(tail.prev);\n        }\n        \n    }\n    \n    private void remove(Node node){\n        \n        if(!nmap.containsKey(node.key))\n            return;\n        \n        nmap.remove(node.key);\n        \n        Node next = node.next;\n        Node prev = node.prev;\n        prev.next = next;\n        next.prev = prev;\n    }\n    \n    public void put(int key, int value) {\n        \n        Node node = new Node(key, value);\n        \n        if(!nmap.containsKey(key)){\n            add(node);\n        }else{\n            remove(nmap.get(key));\n            add(node);\n        }\n            \n    }\n}\n\n/**\n * Your LFUCache object will be instantiated and called as such:\n * LFUCache obj = new LFUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */","compare_result":"1011111101111111000000101","title_slug":"lfu-cache","has_notes":false,"flag_type":1}