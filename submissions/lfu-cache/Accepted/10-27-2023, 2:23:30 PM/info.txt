{"id":1085161704,"question_id":460,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698387810,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/1085161704/","is_pending":"Not Pending","title":"LFU Cache","memory":"125.9 MB","code":"class LFUCache {\n\n    HashMap<Integer, Integer> valMap; // key, val\n    HashMap<Integer, Integer> freqMap; // key, freq\n    HashMap<Integer, LinkedHashSet<Integer>> keyList; // freq, LinkedHashSet<key1, key2 ...>\n    int capacity; \n    int min;\n    \n\n\n    public LFUCache(int capacity) {\n        valMap = new HashMap<>();\n        freqMap = new HashMap<>();\n        keyList = new HashMap<>();\n        this.capacity = capacity;\n        min= 0;\n    }\n    \n    public int get(int key) {\n        if(!valMap.containsKey(key))\n            return -1;\n\n        int freq = freqMap.get(key);\n        freqMap.put(key, freq+1);\n\n        if(freq==min && keyList.get(freq).size()==1){\n            min++;\n        }\n\n        keyList.get(freq).remove(key);\n        keyList.putIfAbsent(freq+1, new LinkedHashSet<>());\n        keyList.get(freq+1).add(key);\n\n        return valMap.get(key);\n    }\n    \n    public void put(int key, int value) {\n\n        if(valMap.containsKey(key)){\n            valMap.put(key, value);\n            get(key);\n            return;\n        }\n\n        if(valMap.size()==capacity){\n            for(int k : keyList.get(min)){\n                valMap.remove(k);\n                freqMap.remove(k);\n                keyList.get(min).remove(k);\n                if(keyList.get(min).isEmpty())\n                    keyList.remove(min);\n                break;\n            }\n        }\n\n        valMap.put(key, value);\n        freqMap.put(key, 1);\n        min =1;\n        keyList.putIfAbsent(1, new LinkedHashSet<>());\n        keyList.get(1).add(key);\n\n        \n    }\n}\n\n/**\n * Your LFUCache object will be instantiated and called as such:\n * LFUCache obj = new LFUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */","compare_result":"1111111111111111111111111","title_slug":"lfu-cache","has_notes":false,"flag_type":1}