{"id":1243765473,"question_id":3399,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714273322,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1243765473/","is_pending":"Not Pending","title":"Find the Integer Added to Array II","memory":"44.7 MB","code":"class Solution {\n    public int minimumAddedInteger(int[] nums1, int[] nums2) {\n        \n        int sum2 = 0;\n          Map<Integer, Integer> map2 = new HashMap<>();\n        for(int n : nums2){\n            sum2+= n;\n            \n            map2.put(n, map2.getOrDefault(n,0)+1);\n            \n        }\n        \n        \n        Map<Integer, Integer> map = new HashMap<>();\n        int sum1 = 0;\n        for(int n : nums1){\n            map.put(n, map.getOrDefault(n,0)+1);\n            sum1+= n;\n        }\n        \n       \n        \n        \n        Set<int[]> can = new LinkedHashSet<>();\n        \n        Arrays.sort(nums1);\n        \n        int len = nums2.length;\n        for(int i=0; i<nums1.length ; i++){\n            for(int j=i+1; j<nums1.length; j++){\n                    \n                // map.put(nums1[i], map.getOrDefault(nums1[i],0)-1);\n                // map.put(nums1[j], map.getOrDefault(nums1[j],0)-1);\n                // if(map.get(nums1[i])==0) map.remove(nums[i]);\n                // if(map.get(nums1[j])==0) map.remove(nums[j]);\n                    \n                // 3 3 5 5 \n                // 7 7 \n                // 16-3-3-14 == -4\n                \n                \n                if( (sum2 - (sum1-nums1[i]-nums1[j] ) )%len==0){\n                    \n                    int x = (sum2 - (sum1-nums1[i]-nums1[j] ) )/len;\n                    can.add(new int[]{x, i, j});\n                }\n                \n                // 4 5 7\n                // 5\n                // 5 - (16-5-4) == -2\n                \n                // 1 4 7 9\n                // 0 8\n                // 8- (21-1-4) == -8\n            }\n        }\n        \n        \n        for( int[] el : can){\n            \n            boolean match = true;\n            for(int i=0; i<nums1.length; i++){\n                \n                int x = el[0];\n                int a = el[1];\n                int b = el[2];\n                \n                if(i==a || i==b) continue;\n                \n                if(!map2.containsKey( nums1[i]+x)){\n                    match=false;\n                    break;\n                }\n                \n            }\n            \n            if(match) return el[0];\n        }\n        \n    \n        \n        \n        \n        return -1;\n    }\n}","compare_resulttitle_slug":"find-the-integer-added-to-array-ii","has_notes":false,"flag_type":1}