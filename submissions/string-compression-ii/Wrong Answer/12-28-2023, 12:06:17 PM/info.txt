{"id":1130211507,"question_id":1637,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703736377,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1130211507/","is_pending":"Not Pending","title":"String Compression II","memory":"N/A","code":"class Solution {\n    public int getLengthOfOptimalCompression(String s, int k) {\n        \n        //怎麼刪最划算\n        // 1. char cnt == 1  \"a\" => \"\"\n        // 2. char cnt == 2. \"a2\"=> \"a\"\n        List<Integer> list = new ArrayList<>();\n        int len = s.length();\n        int[] arr = new int[26];\n        int st =0;\n\n        int sum= 0 ;\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n            sum++;\n\n            if(i+1<len && s.charAt(i+1)!=ch){\n                list.add(sum);\n                sum=0;\n            }\n\n            if(i==len-1 && sum!=0){\n                list.add(sum);\n            }\n        }\n\n\n\n        for(int i=0; i<list.size() && k>0; i++){\n\n            if(list.get(i)==2){\n                k--;\n                list.set(i, 1);\n            }\n\n            if(k==0) break;\n\n            if(list.get(i)==1){\n                k--;\n                list.set(i, 0);\n            }\n        }\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>( // idx, cnt\n            (a,b)-> a[1]-b[1]\n        );\n\n        for(int i=0; i<list.size(); i++){\n            if(list.get(i)!=0) pq.offer(new int[]{i, list.get(i)});\n        }\n\n        while(k>0 && !pq.isEmpty()){\n            int[] p = pq.poll();\n            int idx = p[0];\n            int cnt = p[1];\n\n            if(k>=cnt){\n                k-=cnt;\n                list.set(idx, 0);\n            }else{\n                list.set(idx, list.get(idx)-k);\n                k=0;\n            }\n        }\n\n        System.out.println(list);\n\n        int res = 0;\n        for(int i=0; i<list.size(); i++){\n            if(list.get(i)>2){\n                // System.out.println(String.valueOf(list.get(i)).length());\n                res+=String.valueOf(list.get(i)).length()+1;\n            }\n                \n            else if(list.get(i)==2){\n                res += 2;\n            }else if(list.get(i)==1)\n                res += 1;\n        }\n\n        return res;\n\n    }\n}","compare_result":"101111010000101011110010011101110111010110101001100100000000100011000000000000000000000110000000000010000000000000100000000000000000000111111111","title_slug":"string-compression-ii","has_notes":false,"flag_type":1}