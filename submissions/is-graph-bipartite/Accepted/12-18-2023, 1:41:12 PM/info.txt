{"id":1122308219,"question_id":801,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1702878072,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/1122308219/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"44.2 MB","code":"class Solution {\n    public boolean isBipartite(int[][] graph) {\n        Set<Integer> seta = new HashSet<>();\n        Set<Integer> setb = new HashSet<>();\n\n        int n = graph.length;\n        boolean[] seen = new boolean[n];\n\n        for(int a=0; a<n; a++){\n\n            if(seta.contains(a) || setb.contains(a)) continue;\n\n            Queue<Integer> q = new LinkedList<>();\n            q.offer(a);\n\n            boolean aturn = true;\n            while(!q.isEmpty()){\n                int siz = q.size();\n                for(int i=0; i<siz; i++){\n                    int p = q.poll();\n                    seen[p]=true;\n\n                    for(int adj : graph[p]){\n\n\n                        if(aturn){\n                            if(seta.contains(adj)) return false;\n                            setb.add(adj);\n\n                            if(!seen[adj])\n                                q.offer(adj);\n\n                        }else{\n                            if(setb.contains(adj)) return false;\n                            seta.add(adj);\n                            if(!seen[adj])\n                                q.offer(adj);\n                        }\n\n                    }\n                }\n                aturn = !aturn;\n            }\n\n        // for(int i=0; i<n ; i++){\n        //     if(seen[i]==false)\n        //         return false;\n        // }\n        }\n\n\n        return true;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}