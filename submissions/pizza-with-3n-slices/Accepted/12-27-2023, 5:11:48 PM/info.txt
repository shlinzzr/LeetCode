{"id":1129557805,"question_id":1489,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703668308,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1129557805/","is_pending":"Not Pending","title":"Pizza With 3n Slices","memory":"45.1 MB","code":"class Solution {\n\n    public int maxSizeSlices(int[] slices) {\n        // like the house robber ii\n        //https://www.youtube.com/watch?v=Pkip_mJhiFk\n\n        int n = slices.length;\n\n        return Math.max(solve(1, n-1, n/3, slices), solve(2, n, n/3, slices));\n\n    }\n\n    private int solve(int st, int ed, int k, int[] slices){\n\n        int len = slices.length;\n\n        int[][] dp0 = new int[ed+1][k+1];\n        int[][] dp1 = new int[ed+1][k+1];\n\n        dp0[st][0] =0;\n        dp1[st][1] = slices[st-1];\n\n        for(int i=st; i<=ed; i++){\n            for(int j=1; j<=Math.min(k, i-st+1); j++){\n                dp0[i][j] = Math.max(dp1[i-1][j], dp0[i-1][j]);\n                dp1[i][j] = dp0[i-1][j-1] + slices[i-1];\n            }\n        }\n\n        return Math.max(dp0[ed][k], dp1[ed][k]);\n\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pizza-with-3n-slices","has_notes":false,"flag_type":1}