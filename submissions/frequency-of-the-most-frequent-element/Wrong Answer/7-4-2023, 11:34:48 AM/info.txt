{"id":985794402,"question_id":1966,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1688441688,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/985794402/","is_pending":"Not Pending","title":"Frequency of the Most Frequent Element","memory":"N/A","code":"class Solution {\n    \n    \n    //https://www.youtube.com/watch?v=c-Jt5jFKNv0\n    \n    public int maxFrequency(int[] nums, int k) {\n        int max = 1;\n        Arrays.sort(nums);\n        int len = nums.length;\n        \n        long curr =0;\n        \n        int st= 0 ;\n        for(int ed =1; ed<len; ed++){\n            \n            curr =+ (long) (ed-st)*(nums[ed]-nums[ed-1]);\n            while(curr>k){\n                \n                curr-=(nums[ed]-nums[st]);\n                st++;\n            }\n            \n            max = Math.max(max, ed-st+1);\n            \n            \n        }\n        \n        return max;\n        \n        /*\n        x x x x x [st x x ed-1, ed] window sum<k\n                             ^\n        when the ref \"ed-1\" need expand to \"ed\" : sum += (ed-1-st+1)*(nums[ed]-nums[ed-1])                     \n                             \n        if(sum>k)\n            sum-=nums[ed]-nums[st];\n        */\n        \n    }\n    \n    \n}","compare_result":"11110001000000000000000000000000000000000000000000000000000001011011111","title_slug":"frequency-of-the-most-frequent-element","has_notes":false,"flag_type":1}