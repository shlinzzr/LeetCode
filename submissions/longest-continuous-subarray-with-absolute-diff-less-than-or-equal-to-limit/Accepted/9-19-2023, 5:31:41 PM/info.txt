{"id":1053419307,"question_id":1549,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695115901,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1053419307/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"57.9 MB","code":"class Solution {\n    public int longestSubarray(int[] A, int limit) {\n\n        // Solution 2 : max-min Deque \n        // Time : O(n)\n        // Space : O(n)\n\n        Deque<Integer> qmax = new ArrayDeque<>();\n        Deque<Integer> qmin = new ArrayDeque<>();\n        qmax.add(0);\n        qmin.add(0);\n\n        int len = A.length;\n        int res = 1;\n        int ed=0;\n        int max = A[0];\n        int min = A[0];\n\n        for (int st = 0; st < len && ed<len; ++st) {\n\n            while(max-min <= limit){\n\n                res = Math.max(res, ed-st+1);\n                ed++;\n                if(ed>=len) break;\n\n                while(qmax.size()>0 && A[ed]>= A[qmax.peekLast()]){\n                    qmax.pollLast();\n                }\n                qmax.add(ed);\n                max = A[qmax.peek()];\n\n                while(qmin.size()>0 && A[ed]<=A[qmin.peekLast()]){\n                    qmin.pollLast();\n                }\n                qmin.add(ed);\n                min = A[qmin.peek()];\n\n            }\n\n            if(ed>=len) break;\n\n            if(qmax.size()>0 && qmax.peek()<=st){\n                qmax.poll();\n                max = A[qmax.peek()];\n            }\n\n            if(qmin.size()>0 && qmin.peek()<=st){\n                qmin.poll();\n                min = A[qmin.peek()];\n            }\n\n        }\n        return res;\n    }\n}\n\n\n\n\n        /*// Solution 1 : TreeMap + 2 pointer\n        // Time : O(nlgn)\n        // Space : O(n)\n\n        int len = nums.length;\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        map.put(nums[0], 1);\n\n        int res = 0;\n\n        int ed=0;\n        for(int st=0; st<len; st++){\n            while(map.lastKey()- map.firstKey()<=limit){\n                res = Math.max(res, ed-st+1);\n                ed++;\n\n                if(ed<len)\n                    map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n                else\n                    break;\n            }\n\n            map.put(nums[st], map.get(nums[st])-1);\n            if(map.get(nums[st])==0)\n                map.remove(nums[st]);\n        }\n\n        return res;\n    }\n}\n*/\n//[8,2,4,7]","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}