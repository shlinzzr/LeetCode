{"id":1108799704,"question_id":1549,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701252413,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/1108799704/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"57.9 MB","code":"class Solution {\n     public int longestSubarray(int[] nums, int limit) {\n        Deque<Integer> dq_max = new ArrayDeque<>();\n        Deque<Integer> dq_min = new ArrayDeque<>();\n        int st = 0;\n        int ed = 0;\n\n        for (; ed < nums.length; ed++) {\n            while (!dq_max.isEmpty() && nums[ed] > nums[dq_max.peekLast()]) \n                dq_max.pollLast();\n\n            while (!dq_min.isEmpty() && nums[ed] < nums[dq_min.peekLast()]) \n                dq_min.pollLast();\n\n            dq_max.offer(ed);\n            dq_min.offer(ed);\n\n            if (nums[dq_max.peek()] - nums[dq_min.peek()] > limit) {\n                if (nums[dq_max.peek()] == nums[st]) dq_max.poll();\n                if (nums[dq_min.peek()] == nums[st]) dq_min.poll();\n                st++;\n            }\n            \n        }\n        return ed-st;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}