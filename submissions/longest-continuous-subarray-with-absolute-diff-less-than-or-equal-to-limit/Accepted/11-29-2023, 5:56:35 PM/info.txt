{"id":1108795015,"question_id":1549,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701251795,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/1108795015/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"56.9 MB","code":"class Solution {\n     public int longestSubarray(int[] nums, int limit) {\n        Deque<Integer> dq_max = new ArrayDeque<>();\n        Deque<Integer> dq_min = new ArrayDeque<>();\n        int st = 0, ed=0;\n\n        for (; ed < nums.length; ed++) {\n            while (!dq_max.isEmpty() && nums[ed] > dq_max.peekLast()) \n                dq_max.pollLast();\n\n            while (!dq_min.isEmpty() && nums[ed] < dq_min.peekLast()) \n                dq_min.pollLast();\n\n            dq_max.offer(nums[ed]);\n            dq_min.offer(nums[ed]);\n\n            if (dq_max.peek() - dq_min.peek() > limit) {\n                if (dq_max.peek() == nums[st]) dq_max.poll();\n                if (dq_min.peek() == nums[st]) dq_min.poll();\n                st++;\n            }\n        }\n        return ed-st;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}