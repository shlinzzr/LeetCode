{"id":1108787941,"question_id":1549,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701250885,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/1108787941/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"55.6 MB","code":"class Solution {\n    public int longestSubarray(int[] nums, int limit) {\n        int len = nums.length;\n\n        int max = 0;\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        int st= 0;\n        for(int i=0; i<len; i++){\n            map.put(nums[i], map.getOrDefault(nums[i], 0)+1);\n\n            while(map.lastKey()-map.firstKey()>limit){\n                map.put(nums[st], map.getOrDefault(nums[st], 0)-1);\n                if(map.get(nums[st])==0)\n                    map.remove(nums[st]);\n                st++;\n            }\n\n            max = Math.max(max, i-st+1);\n        }\n\n        return max;\n\n        \n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}