{"id":1277113215,"question_id":1549,"lang":"java","lang_name":"Java","time":"1 week, 1 day","timestamp":1717481154,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/1277113215/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"56.8 MB","code":"class Solution {\n    public int longestSubarray(int[] nums, int limit) {\n\n        int len = nums.length;\n        TreeMap<Integer, Integer> map = new TreeMap<>(); // val, cnt\n        \n        int st = 0, ed;\n        for (ed = 0; ed < len; ed++) {\n            map.put(nums[ed], 1 + map.getOrDefault(nums[ed], 0));\n\n            if (map.lastKey() - map.firstKey() > limit) {\n                map.put(nums[st], map.get(nums[st]) - 1);\n                if (map.get(nums[st]) == 0)\n                    map.remove(nums[st]);\n                st++;\n            }\n        }\n        return ed-st;\n\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}