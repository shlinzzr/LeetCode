{"id":1053369850,"question_id":1549,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695111300,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1053369850/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"N/A","code":"class Solution {\n    public int longestSubarray(int[] nums, int limit) {\n        int len = nums.length;\n\n\n        int res = 0;\n\n        int ed=0;\n        for(int st=0; st<len; st++){\n\n\n//  System.out.println(\"st=\"+st);\n            ed=st;\n            int max = nums[ed];\n            int min = nums[ed];\n            while(ed<len && max-min<=limit){\n                ed++;\n                if(ed>=len){\n                    break;\n                }\n\n                max = Math.max(max, nums[ed]);\n                min = Math.min(min, nums[ed]);\n            }\n            ed--;\n            res = Math.max(res, ed-st+1);\n\n            // System.out.println(\"res=\"+res + \" \" + st + \" \"+ ed);\n        }\n\n        return res;\n    }\n}\n\n//[8,2,4,7]","compare_result":"1111111111111111111111111111111111111111111111111111111100000","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","has_notes":false,"flag_type":1}