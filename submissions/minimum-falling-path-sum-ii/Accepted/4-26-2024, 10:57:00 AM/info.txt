{"id":1242141491,"question_id":1224,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714100220,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/1242141491/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"51.6 MB","code":"class Solution {\n    public int minFallingPathSum(int[][] grid) {\n\n        int n = grid.length;\n\n        int[][] dp = new int[n][n]; // let dp be the minSum of the first i row with j col\n\n        for(int j=0; j<n; j++){\n            Arrays.fill(dp[j], Integer.MAX_VALUE);\n            dp[0][j] = grid[0][j];\n        }\n\n\n        for(int i=1; i<n; i++){\n\n            for(int j=0; j<n; j++){\n\n                // dp[i][j] = dp[i-1][j];\n\n                for(int k=0; k<n; k++){\n\n                    if(k==j) continue;\n\n                    dp[i][j] = Math.min(dp[i][j], dp[i-1][k] + grid[i][j]);\n                }\n            }\n        }\n\n        int min = dp[n-1][0];\n        for(int j=0; j<n; j++){\n            min = Math.min(min, dp[n-1][j]);\n        }\n\n\n        return min;\n\n\n        // for(int i=0; i<n; i++){\n\n        //     int min = grid[i][0];\n        //     for(int j=1; j<n; j++){\n        //         min = Math.min(min, grid[i][j]);\n        //     }\n\n        //     sum += min;\n\n        // }\n\n\n\n        \n    }\n}","compare_result":"1111111111111111","title_slug":"minimum-falling-path-sum-ii","has_notes":false,"flag_type":1}