{"id":1281622123,"question_id":523,"lang":"java","lang_name":"Java","time":"4 days, 12 hours","timestamp":1717855950,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1281622123/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"57.1 MB","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n        \n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        int len = nums.length;\n        \n        if(len<2) return false;\n\n        int sum = 0;\n\n        for(int i=0; i<len; i++){\n            sum += nums[i];\n            sum%=k;\n\n            if(map.containsKey(sum)){\n                if(i-map.get(sum)>1){\n                    return true;\n                }\n            }else{\n                map.put(sum, i);\n            }\n        }\n\n        return false;\n        \n\n\n        \n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}