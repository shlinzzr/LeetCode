{"id":1278362786,"question_id":523,"lang":"java","lang_name":"Java","time":"1Â week","timestamp":1717584155,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1278362786/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"57.6 MB","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n\n\n        int len = nums.length;\n        int sum = 0;\n        \n        Map<Integer,Integer> map = new HashMap<>(); // sum , idx\n        map.put(0, -1);\n    \n        \n        for(int i=0; i<len; i++){\n            sum += nums[i];\n            sum%=k;\n            // if(sum<0) sum+=k;\n\n            if(map.containsKey(sum)){\n                if(i-map.get(sum)>1)\n                    return true;\n            }else\n                map.put(sum, i);\n        }\n\n        return false;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}