{"id":1246157329,"question_id":523,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714531428,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1246157329/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"57.2 MB","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n\n        int len = nums.length;\n\n        Map<Integer,Integer> map = new HashMap<>();\n        map.put(0,-1);\n\n        int sum = 0 ;\n        for(int i=0; i<len; i++){\n            sum += nums[i];\n            sum %=k;\n\n            if(map.containsKey(sum)){\n                if(i-map.get(sum)>1) return true;\n            }else\n                map.put(sum, i);\n\n        }\n\n        return false;\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}