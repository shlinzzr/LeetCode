{"id":830375997,"question_id":523,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666752801,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/830375997/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1); // (mod, idx);\n        \n        for(int i=0; i<nums.length;i++){\n            int n = nums[i]%k;\n            if(map.containsKey(n) && i-map.get(n)>2){\n                return true;\n            }\n            \n            map.put(n , i);\n        }\n        \n        return false;\n        \n    }\n}","compare_result":"1111100001100000010011001100001010101011111111111111111111111111111111111111000000000011111110010","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}