{"id":1263594680,"question_id":523,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1716260069,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1263594680/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n\n\n        int len = nums.length;\n        int sum = 0;\n        \n        Map<Integer,Integer> map = new HashMap<>();\n        map.put(0, -1);\n    \n        \n        for(int i=0; i<len; i++){\n            sum += nums[i];\n            sum%=k;\n            if(sum<0) sum+=k;\n\n            if(map.containsKey(sum)){\n                if(map.get(sum)>0)\n                    return true;\n            }\n            map.put(sum, map.getOrDefault(sum, 0)+1);\n        }\n\n        return false;\n        \n    }\n}","compare_result":"111110100111111110000010010001101010111111111111111111111111111111111111111111111111111111111101101","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}