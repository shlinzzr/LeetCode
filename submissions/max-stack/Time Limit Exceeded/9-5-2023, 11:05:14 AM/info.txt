{"id":1040846429,"question_id":716,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1693883114,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1040846429/","is_pending":"Not Pending","title":"Max Stack","memory":"N/A","code":"class MaxStack {\n\n     // TLE\n    Stack<Integer> stack;\n    Stack<Integer> stack2;\n    int max;\n    \n    public MaxStack() {\n        max = Integer.MIN_VALUE;\n        stack = new Stack<Integer>();\n        stack2 = new Stack<Integer>();\n    }\n    \n    public void push(int x) {\n        // Only push the old maximum value when the current \n        // maximum value changes after pushing the new value x.\n        // \"==\" is included here so pop() implementation would be easier. \n        if (x >= max) {\n            stack.push(max);\n            max = x;\n        }\n        stack.push(x);\n    }\n    \n    public int pop() {\n        // if pop operation could result in the changing of the current maximum value, \n        // pop twice and change the current maximum value to the last maximum value.\n        int ret = stack.pop();\n        if (ret == max) {\n            max = stack.pop();\n        }\n        return ret;\n    }\n    \n    public int top() {\n        return stack.peek();\n    }\n    \n    public int peekMax() {\n        return max;\n    }\n    \n    public int popMax() {\n        int ret = max;\n        int tmp = pop();\n        // use stack2 to temporarily store the numbers before max appears.\n        while (tmp != ret) {\n            stack2.push(tmp);\n            tmp = pop();\n        }\n        while (!stack2.isEmpty())\n            push(stack2.pop());\n        return ret;\n    }\n        \n    }\n\n// /**\n//  * Your MaxStack object will be instantiated and called as such:\n//  * MaxStack obj = new MaxStack();\n//  * obj.push(x);\n//  * int param_2 = obj.pop();\n//  * int param_3 = obj.top();\n//  * int param_4 = obj.peekMax();\n//  * int param_5 = obj.popMax();\n//  */\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"max-stack","has_notes":false,"flag_type":1}