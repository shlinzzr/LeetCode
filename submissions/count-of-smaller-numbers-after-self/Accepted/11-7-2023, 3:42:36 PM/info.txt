{"id":1093441384,"question_id":315,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699342956,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/1093441384/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"61.8 MB","code":"class Solution {\n    \n    class Item{\n        int val;\n        int idx;\n        public Item(int val, int idx){\n            this.val= val;\n            this.idx =idx;\n        }\n    }\n    \n    public List<Integer> countSmaller(int[] nums) {\n        int len = nums.length;\n        \n        Item[] items = new Item[len];\n        for(int i = 0;i < len;i++) {\n            items[i] = new Item(nums[i], i);\n        }\n        \n        int[] arr = new int[len];\n        mergeSort(items, 0, len-1, arr);\n\n        List<Integer> list = new ArrayList<>();\n        for(int r : arr) \n            list.add(r);\n\n        return list;\n    }\n    \n   \n    private void mergeSort(Item[] items, int lo, int hi, int[] count){\n        if(lo>=hi) return;\n        int mid = lo + (hi-lo)/2;\n        mergeSort(items, lo, mid, count);\n        mergeSort(items, mid+1, hi, count);\n        mergeHalves(items, lo, mid, mid+1, hi, count);\n    }\n    \n    private void mergeHalves(Item[] items, int lo, int loEnd, int hi, int hiEnd, int[] count){\n        \n        int loIdx = lo, hiIdx=hi;\n        int len = hiEnd-lo+1;\n        Item[] sorted = new Item[len];\n        int idx =0;\n        \n        int smallerCounter = 0;\n        \n        while(loIdx<=loEnd && hiIdx<=hiEnd){\n            if(items[loIdx].val<=items[hiIdx].val){\n\n                count[items[loIdx].idx]+=smallerCounter; // 只有寫入loIdx 的時候才需要紀錄 count\n                sorted[idx++] = items[loIdx++];\n                \n            }else{\n                //    此時 items[lo] > items[hi]\n                // 表示原本array 右邊有比較小的數量＋＋\n                smallerCounter++; // 左邊大於右邊的時候 counter++\n                sorted[idx++] = items[hiIdx++]; // 把右邊寫入sorted。啥事也沒發生\n            }\n        }\n        \n        while(loIdx<=loEnd){ // 表示hiIdx已經走到底了, 已經不會有\n            count[items[loIdx].idx]+=smallerCounter;  // 只有寫入loIdx 的時候才需要紀錄 count\n            sorted[idx++] = items[loIdx++];\n        }\n        \n        while(hiIdx<=hiEnd){\n            \n            sorted[idx++] = items[hiIdx++];\n        }\n        \n        System.arraycopy(sorted, 0, items, lo, len);\n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-of-smaller-numbers-after-self","has_notes":false,"flag_type":1}