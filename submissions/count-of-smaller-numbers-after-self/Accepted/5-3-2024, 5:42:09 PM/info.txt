{"id":1248133496,"question_id":315,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714729329,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/1248133496/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"57.8 MB","code":"class Solution {\n\n    class Item{\n        int idx;\n        int val;\n        public Item(int idx, int val){\n            this.idx = idx;\n            this.val = val;\n        }\n    }\n    public List<Integer> countSmaller(int[] nums) {\n        List<Integer> res = new ArrayList<>();\n\n        int len = nums.length;\n\n        Item[] items = new Item[len];\n        for(int i=0; i<len ;i++){\n            items[i] = new Item(i, nums[i]);\n        }\n\n        int[] arr = new int[len];\n\n        mergeSort(items, 0, len-1, arr);\n\n        for(int i=0; i<arr.length;i++){\n            res.add(arr[i]);\n        }\n\n        return res;\n\n    }\n\n    private void mergeSort(Item[] items, int lo, int hi, int[] arr){\n\n        if(lo>=hi) return;\n\n        int mid = lo+(hi-lo)/2;\n        mergeSort(items, lo, mid, arr);\n        mergeSort(items, mid+1, hi, arr);\n        mergeHalves(items, lo, mid, mid+1, hi, arr);\n   }\n\n   private void mergeHalves(Item[] items, int lo, int loEnd, int hi, int hiEnd, int[] arr){\n\n        int len = hiEnd-lo+1;\n        Item[] sorted = new Item[len];\n        int idx = 0;\n\n        int loIdx=lo, hiIdx=hi;\n\n        int cnt = 0;\n\n        while(loIdx<=loEnd && hiIdx<=hiEnd){\n            if(items[loIdx].val<=items[hiIdx].val){\n                arr[items[loIdx].idx]+=cnt;\n                sorted[idx++] = items[loIdx++];\n            }else{\n                cnt++;\n                sorted[idx++] = items[hiIdx++];\n            }\n        }\n\n        while(loIdx<=loEnd){\n            arr[items[loIdx].idx]+=cnt;\n            sorted[idx++] = items[loIdx++];\n        }\n\n        while(hiIdx<=hiEnd){\n            sorted[idx++] = items[hiIdx++];\n        }\n\n        System.arraycopy(sorted, 0, items, lo, len);\n   }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-of-smaller-numbers-after-self","has_notes":false,"flag_type":1}