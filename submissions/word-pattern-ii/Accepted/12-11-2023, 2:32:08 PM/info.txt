{"id":1116995256,"question_id":291,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702276328,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1116995256/","is_pending":"Not Pending","title":"Word Pattern II","memory":"40.4 MB","code":"class Solution {\n    public boolean wordPatternMatch(String pattern, String s) {\n        Map<Character, String> map = new HashMap<>();\n        Set<String> set = new HashSet<>();\n    \n        return isMatch(s, 0, pattern, 0, map, set);\n    }\n\n    private boolean isMatch(String str, int i, String pat, int j, Map<Character, String> map, Set<String> set){ \n        // base case\n        int slen = str.length();\n        int plen = pat.length();\n\n        if (i == slen && j == plen) return true;\n        if (i == slen || j == plen) return false;\n        \n        // get current pattern character\n        char ch = pat.charAt(j);\n        \n        // if the pattern character exists\n        if (map.containsKey(ch)) {\n            String s = map.get(ch);\n            \n            // then check if we can use it to match str[i...i+s.length()]\n            if (!str.startsWith(s, i)) {\n                return false;\n            }\n            \n            // if it can match, great, continue to match the rest\n            return isMatch(str, i + s.length(), pat, j + 1, map, set);\n\n        }else{ // pattern character does not exist in the map\n\n            for (int k = i; k < str.length(); k++) {\n                String p = str.substring(i, k + 1);\n\n                if (set.contains(p)) {\n                    continue;\n                }\n\n                // create or update it\n                map.put(ch, p);\n                set.add(p);\n                \n                // continue to match the rest\n                if (isMatch(str, k + 1, pat, j + 1, map, set)) {\n                    return true;\n                }\n\n                // backtracking\n                map.remove(ch);\n                set.remove(p);\n            }\n            \n        }\n        \n       \n        // we've tried our best but still no luck\n        return false;\n  }\n}","compare_result":"11111111111111111111","title_slug":"word-pattern-ii","has_notes":false,"flag_type":1}