{"id":1262977491,"question_id":2165,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1716199954,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1262977491/","is_pending":"Not Pending","title":"Plates Between Candles","memory":"78.7 MB","code":"class Solution {\n    public int[] platesBetweenCandles(String s, int[][] queries) {\n        int len = s.length();\n        // s.length():N, queries.length:M\n        // treemap => O(MlogN + N)\n        // double presum => O(N + M)\n\n        int[] presum = new int[len];\n        int[] nums = new int[len];\n        int[] prev = new int[len];\n        int[] next = new int[len];\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for(int i=0; i<len; i++){ // O(N)\n            nums[i] = s.charAt(i)=='*' ? 1 : 0;\n            presum[i] = i==0 ? nums[i] : nums[i] + presum[i-1];\n\n            if(s.charAt(i)=='|'){\n                // map.put(i, presum[i]);\n                prev[i] = i;\n            }else{\n                prev[i]= i==0 ? -1 : prev[i-1];\n            }\n        }\n\n        for(int i=len-1; i>=0; i--){\n            if(s.charAt(i)=='|'){\n                next[i] = i;\n            }else{\n                next[i] = i==len-1? len : next[i+1];\n            }\n        }\n\n        int[] ans = new int[queries.length]; \n        for(int i=0; i<queries.length; i++){ //O(MlogN)\n            int[] q = queries[i];\n\n            int hi = prev[q[1]];\n            int lo = next[q[0]];\n            if(hi==-1 || lo==len || hi<=lo) continue;\n            ans[i] = presum[hi] - ((lo==0) ? 0 : presum[lo-1]);\n\n            // Integer h = map.floorKey(q[1]);\n            // Integer l = map.ceilingKey(q[0]);\n            // if(h==null || l==null || h<l) continue;\n            // ans[i] = map.get(h)-map.get(l);\n        }\n\n        return ans;\n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"plates-between-candles","has_notes":false,"flag_type":1}