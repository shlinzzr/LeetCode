{"id":1262965150,"question_id":2165,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1716198783,"status":10,"status_display":"Accepted","runtime":"107 ms","url":"/submissions/detail/1262965150/","is_pending":"Not Pending","title":"Plates Between Candles","memory":"77.7 MB","code":"class Solution {\n    public int[] platesBetweenCandles(String s, int[][] queries) {\n        int len = s.length();\n        int[] presum = new int[len];\n        int[] nums = new int[len];\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for(int i=0; i<len; i++){\n            nums[i] = s.charAt(i)=='*' ? 1 : 0;\n            presum[i] = i==0 ? nums[i] : nums[i] + presum[i-1];\n\n            if(s.charAt(i)=='|'){\n                map.put(i, presum[i]);\n            }\n        }\n\n        int[] ans = new int[queries.length]; \n        for(int i=0; i<queries.length; i++){\n            int[] q = queries[i];\n            Integer h = map.floorKey(q[1]);\n            Integer l = map.ceilingKey(q[0]);\n            if(h==null || l==null || h<l) continue;\n\n            ans[i] = map.get(h)-map.get(l);\n        }\n\n        return ans;\n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"plates-between-candles","has_notes":false,"flag_type":1}