{"id":1176749776,"question_id":984,"lang":"java","lang_name":"Java","time":"3 months, 3 weeks","timestamp":1708068575,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1176749776/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"N/A","code":"class Solution {\n    public int removeStones(int[][] stones) {\n        int len = stones.length;\n        \n//         Map<Integer, List<Integer>> cols = new HashMap<>();\n//         Map<Integer, List<Integer>> rows = new HashMap<>();\n        \n//         for(int[] st : stones){\n//             int x = st[0];\n//             int y = st[1];\n            \n//             cols.putIfAbsent(x, new ArrayList<>());\n//             rows.putIfAbsent(y, new ArrayList<>());\n            \n//             cols.get(x).add(y);\n//             rows.get(y).add(x);\n//         }\n        \n//         PriorityQueue<Map.Entry<Integer, List<Integer>>> pq = new PriorityQueue<>(\n//             (a,b) -> b.getValue().size() - a.getValue().size()\n//         );\n        \n//         pq.addAll(cols.entrySet());\n//         pq.addAll(rows.entrySet());\n        \n        \n            \n    }\n}","compare_result":null,"title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false,"flag_type":1}