{"id":1049138790,"question_id":984,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694682370,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/1049138790/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"43.7 MB","code":"class Solution {\n    HashMap<Integer, List<Integer>> rows = new HashMap<>();\n    HashMap<Integer, List<Integer>> cols = new HashMap<>();\n    HashMap<Integer, Integer> map = new HashMap<>();\n\n    public int removeStones(int[][] stones) {\n       \n        int len = stones.length;\n\n       \n        int h= 0;\n        int w = 0;\n\n\n\n        for(int i=0; i<len; i++){\n            int[] s = stones[i];\n            h= Math.max(h, s[0]+1);\n            w= Math.max(w, s[1]+1);\n            rows.putIfAbsent(s[0], new ArrayList<>());\n            cols.putIfAbsent(s[1], new ArrayList<>());\n            rows.get(s[0]).add(s[1]);\n            cols.get(s[1]).add(s[0]);\n        }\n\n\n        for(int[] s : stones){\n            int idx = s[0]*w + s[1];\n            map.put(idx, idx);\n        }\n\n\n        int rm = 0;\n\n        // union by row\n        for(int row : rows.keySet()){\n            List<Integer> list = rows.get(row);\n            int parent = (row)*w + list.get(0);\n            for(int c : list){\n                int idx = (row)*w + c;\n\n                if(find(idx)!=find(parent)){\n                    union(parent, idx);\n                    rm++;\n                }\n            }\n        }\n\n        // union by col\n        for(int col : cols.keySet()){\n            List<Integer> list = cols.get(col);\n            int parent = (list.get(0))*w + col;\n            for(int r : list){\n                int idx = (r)*w + col;\n                if(find(idx)!=find(parent)){\n                    union(parent, idx);\n                    rm++;\n                }\n            }\n        }\n\n        return rm;\n\n\n        /*\n        o r x\n        r x r\n        x r r\n        */\n    }\n\n\n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n\n        if(a==b)\n            return;\n\n        if(a<b){\n            map.put(b, a);\n        }else{\n            map.put(a, b);\n        }\n    }\n\n    private int find(int x){\n        if(map.get(x)!=x){\n            map.put(x, find(map.get(x)));\n        }\n\n        return map.get(x);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false,"flag_type":1}