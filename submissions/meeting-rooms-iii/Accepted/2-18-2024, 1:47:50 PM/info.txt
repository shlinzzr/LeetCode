{"id":1178584239,"question_id":2479,"lang":"java","lang_name":"Java","time":"3 months, 3 weeks","timestamp":1708235270,"status":10,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/1178584239/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"102.2 MB","code":"class Solution {\n    public int mostBooked(int n, int[][] meetings) {\n        long[] room = new long[n];\n\n        Arrays.sort(meetings, (a, b) -> a[0] - b[0]);\n\n        int len = meetings.length;\n\n        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        for(int i=0; i<n; i++){\n            pq.offer(i);\n        }\n\n        PriorityQueue<long[]> holding = new PriorityQueue<>( // idx, st , endTime\n            (a,b)-> (int)( a[2]==b[2] ? a[0]-b[0] : a[2]-b[2] )\n        );\n\n\n        for(int i=0; i<len; i++){\n            int[] m = meetings[i];\n            int st = m[0];\n            int ed = m[1];\n\n            while(!holding.isEmpty() && holding.peek()[2]<=st){\n                pq.offer( (int)holding.poll()[0] );\n            }\n\n            if(pq.isEmpty()){\n                long[] r = holding.poll();\n                room[(int)r[0]]++;\n                long offset = r[2]-st;\n                st += offset;\n                ed += offset;\n                holding.offer(new long[]{r[0], st, ed});\n\n            }else{\n                int r = pq.poll();\n                room[r]++;\n                holding.offer(new long[]{r, st, ed});\n            }\n        }\n\n        long max = 0;\n        int res = 0;\n        for(int i=n-1; i>=0; i--){\n            if(room[i]>=max){\n                max = room[i];\n                res = i;\n            }\n        }\n\n        return res;\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}