{"id":1280397186,"question_id":2479,"lang":"java","lang_name":"Java","time":"5 days, 17 hours","timestamp":1717752435,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1280397186/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"N/A","code":"class Solution {\n\n    class Room{\n        int free=0;\n        int cnt= 0 ;\n        int idx;\n\n        public Room(int idx){\n            this.idx=idx;\n        }\n    }\n    public int mostBooked(int n, int[][] meetings) {\n\n        Arrays.sort(meetings, (a,b)->a[0]-b[0]); // sort by stTime asc\n\n        System.out.println(Arrays.deepToString(meetings)); //[[2, 13], [3, 12], [7, 10], [17, 19], [18, 19]]\n\n        int len = meetings.length;\n\n        for(int i=0; i<len; i++){\n            int st = meetings[i][0];\n            int ed = meetings[i][1];\n            int duration = ed-st;\n            meetings[i][1]=duration;\n        }\n\n         System.out.println(Arrays.deepToString(meetings)); \n     \n\n        PriorityQueue<Room> rq = new PriorityQueue<>(\n            (a,b) ->  a.idx-b.idx\n        );\n\n        PriorityQueue<Room> hold = new PriorityQueue<>(\n            (a,b) ->  a.free!=b.free ? a.free - b.free : a.idx-b.idx\n        );\n\n        for(int i=0; i<n; i++){\n            Room room = new Room(i);\n            rq.offer(room);\n        }\n\n        for(int i=0; i<len; i++){\n             //[[2, 11], [3, 9], [7, 3], [17, 2], [18, 1]]\n\n            int[] mt = meetings[i];\n            int cur = mt[0]; // 2, 3, 7, 17\n\n            while(!hold.isEmpty() && hold.peek().free<=cur || rq.isEmpty()){\n                cur = Math.max(cur, hold.peek().free); // 17\n                rq.offer(hold.poll()); // r0 / r1 / r2\n            }\n\n\n\n            // if(!rq.isEmpty()){\n                Room room = rq.poll(); \n                room.cnt++; //r0.cnt=1, r1.cnt1, r2.cnt=1\n                room.free = cur + mt[1]; //r0.free = 13, r1.free=12,  r2.free=10\n                hold.offer(room); \n                //hold : r0.cnt=1.free=13, r1.cnt=1.free=12, r2.cnt=1.free=10\n\n            \n            \n            // }else{\n                \n            //     Room room = hold.poll();\n            //     cur = room.free;\n            //     room.free += mt[1];\n            //     room.cnt++;\n            //     hold.offer(room);\n            // }\n        }\n\n        int res = len;\n        int max = 0;\n        while(!rq.isEmpty()){\n            Room room = rq.poll();\n            if(room.cnt>max || (room.cnt==max && room.idx<res)){\n                max = room.cnt;\n                res = room.idx;\n            }\n        }\n        while(!hold.isEmpty()){\n            Room room = hold.poll();\n            if(room.cnt>max || (room.cnt==max && room.idx<res)){\n                max = room.cnt;\n                res = room.idx;\n            }\n        }\n\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111110011111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}