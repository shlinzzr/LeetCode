{"id":1035614729,"question_id":2450,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693367135,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1035614729/","is_pending":"Not Pending","title":"Minimum Replacements to Sort the Array","memory":"54.9 MB","code":"class Solution {\n    public long minimumReplacement(int[] nums) {\n        int len = nums.length;\n        long res = 0;        \n      \n        \n        // o o o o o y x\n        // o o o o o | d x x x x x x | x\n        //                 k copies\n        \n        for(int i=len-2; i>=0; i--){\n            \n            int x = (int)nums[i+1];\n            int y = (int)nums[i];\n            \n            if(y<=x){\n                continue;\n            }\n             \n            long k = y/x; \n            long d = y%x;\n            \n            if(d==0){\n                res+=k-1;\n                nums[i] = x;\n                continue;\n            }\n            \n            \n            // p 每個x砍p刀給d 變成 (x-p)\n            \n            // d有上限 : d+k*p <= x-p\n            //  =>  d + (k+1)*p <= x\n            long p = (x-d) / (k+1);\n            \n            long x2 = x - p;\n            long d2 = d + k*p;\n            \n            if (d2 < x2) // 還可以再微調 砍partial x2 給d 所以max 變成x2-1\n            {\n                nums[i] =(int)x2-1;                \n            }\n            else\n            {\n                nums[i] = (int)d2;\n            }\n            res += k;\n        }\n        \n        return res;\n            \n        \n        \n        \n        \n        \n        // 3 9 4 => 3 3 3 3 4 => \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"minimum-replacements-to-sort-the-array","has_notes":false,"flag_type":1}