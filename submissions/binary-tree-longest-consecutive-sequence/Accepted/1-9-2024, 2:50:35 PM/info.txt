{"id":1141195466,"question_id":298,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704783035,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1141195466/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"46 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max= 0;\n    public int longestConsecutive(TreeNode root) {\n\n        helper(root, 1);    \n\n        return max;\n    }\n\n\n    private void helper(TreeNode root, int cur){\n\n        if(root==null) return;\n        max = Math.max(cur, max);\n\n        if(root.left!=null){\n            if(root.left.val == root.val+1)\n                helper(root.left, cur+1);\n            else \n                helper(root.left, 1);\n        }\n\n        if(root.right!=null){\n            if(root.right.val == root.val+1)\n                helper(root.right, cur+1);\n            else \n                helper(root.right, 1);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence","has_notes":false,"flag_type":1}