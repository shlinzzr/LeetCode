{"id":1040878233,"question_id":298,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1693886760,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1040878233/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int max = 0;\n    \n    public int longestConsecutive(TreeNode root) {\n        if(root==null)\n            return 0;\n        \n        helper(root, 1);\n        return max; \n    }\n    \n    private void helper(TreeNode root, int cur){\n        if(root==null)\n            return;\n        \n        max = Math.max(max, cur);\n        \n        if(root.left!=null){\n            \n            if(root.left.val==root.val+1){\n                helper(root.left, cur+1);\n            }else{\n                helper(root.left, 1);\n            }\n        }\n        if(root.right!=null){\n            \n            if(root.right.val==root.val+1){\n                helper(root.right, cur+1);\n            }else{\n                helper(root.right, 1);\n            }\n        }\n        \n        \n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence","has_notes":false,"flag_type":1}