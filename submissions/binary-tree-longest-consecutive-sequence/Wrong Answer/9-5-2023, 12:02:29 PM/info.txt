{"id":1040876334,"question_id":298,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1693886549,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1040876334/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int longestConsecutive(TreeNode root) {\n        if(root==null)\n            return 0;\n        \n        int     left = longestConsecutive(root.left);\n        int     right = longestConsecutive(root.right);\n        \n        if(root.left==null || (root.left!=null && root.val+1==root.left.val))\n            left+=1;\n        if(root.right==null || (root.right!=null && root.val+1==root.right.val)){\n            right+=1;\n        }\n        \n        // System.out.println(\"root.val=\"+root.val+ \" lfet=\"+left + \" right=\"+right + \" res=\"+ (Math.max(left, right)+1));\n        \n        return Math.max(left, right);        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111100111111","title_slug":"binary-tree-longest-consecutive-sequence","has_notes":false,"flag_type":1}