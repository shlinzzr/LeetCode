{"id":747575137,"question_id":747,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1657868519,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/747575137/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        \n        //[1, 1, 44,  55, 1]\n        \n        // mincost[i] = cost[i] + Math.min(mincost[i-1], mincost[i-2])\n        // mincost[0] = cost[0];\n        // mincost[1] = cost[1];\n        // mincost[2] = cost[2] + min(cost[0], cost[1]);\n        \n        int n = cost.length;\n        return Math.min( helper(cost, n-1) , helper(cost, n-2) );\n    \n            \n    }\n    \n    private int helper(int[] cost, int i){\n        if(i<0)\n            return 0;\n        else if(i==0 || i==1)\n            return cost[i];\n        \n        \n        else \n            return cost[i] + Math.min(helper(cost, i-1), helper(cost, i-2));\n        \n        \n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}