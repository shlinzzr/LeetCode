{"id":845719230,"question_id":747,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1668761808,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/845719230/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"43.1 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int len = cost.length;\n        \n        int[] dp = new int[len+2];\n        dp[0]=0;\n        dp[1] = cost[0];\n        \n        for(int i=2; i<=len+1; i++){\n            dp[i] = (i==len+1? 0 : cost[i-1]) + Math.min(dp[i-1], dp[i-2]);\n            \n        }\n        \n        return dp[len+1];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}