{"id":1073938736,"question_id":747,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697165740,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1073938736/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"43 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int len = cost.length;\n\n        int[] dp = new int[len+1];\n\n        for(int i=2; i<=len; i++){\n            dp[i] = Math.min(dp[i-1]+cost[i-1], dp[i-2]+cost[i-2]);\n        }\n\n        return dp[len];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}