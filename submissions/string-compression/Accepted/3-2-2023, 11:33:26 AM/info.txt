{"id":907485935,"question_id":443,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1677728006,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/907485935/","is_pending":"Not Pending","title":"String Compression","memory":"42.1 MB","code":"class Solution {\n    public int compress(char[] chars) {\n        int i=0; \n        int len = chars.length;\n        \n        int res = 0;\n        \n        while(i<len){\n            \n            char ch = chars[i];\n            int num=0;\n            while(i<len && chars[i]==ch){\n                num++;\n                i++;\n            }\n\n            \n            chars[res++]=ch;\n            if(num==1){\n                continue;\n            }\n            \n            Stack<Integer> st = new Stack<>();\n            while(num>0){\n                st.push(num%10);\n                num/=10;\n            }\n            \n            while(!st.isEmpty()){\n                chars[res++] = (char)(st.pop()+'0');\n            }\n            \n            \n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression","has_notes":false,"flag_type":1}