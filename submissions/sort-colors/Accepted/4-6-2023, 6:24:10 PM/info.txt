{"id":928985202,"question_id":75,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680776650,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/928985202/","is_pending":"Not Pending","title":"Sort Colors","memory":"41.4 MB","code":"class Solution {\n    public void sortColors(int[] nums) {\n        int len = nums.length;\n        \n        mergeSort(nums, 0, len-1);\n    }\n    \n    private void mergeSort(int[] nums, int st, int ed){\n        \n        if(st>=ed)    return ;\n        \n        int mid = st+(ed-st)/2;\n        \n        mergeSort(nums, st, mid);\n        mergeSort(nums, mid+1, ed);\n        mergeHalves(nums, st, mid, mid+1, ed);\n    }\n    \n    private void mergeHalves(int[] nums, int left, int leftEnd, int right, int rightEnd){\n        \n        int[] tmp = new int[rightEnd-left+1];\n        int idx =0;\n        \n        int i = left;\n        int j = right;\n        \n        while(i<=leftEnd && j<=rightEnd){\n            \n            if(nums[i]<=nums[j]){\n                tmp[idx++] = nums[i++];\n            }else{\n                tmp[idx++] = nums[j++];\n            }\n        }\n        \n        while(i<=leftEnd){\n            tmp[idx++] = nums[i++];\n        }\n        \n        while(j<=rightEnd){\n            tmp[idx++] = nums[j++];\n        }\n        \n        idx=0;\n        for(i=left; i<=rightEnd; i++){\n            nums[i] = tmp[idx++];\n        }\n        // System.arraycopy(tmp, 0, nums, left, rightEnd-left+1);\n        \n    }\n}\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-colors","has_notes":false,"flag_type":1}