{"id":1272088186,"question_id":75,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717050023,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1272088186/","is_pending":"Not Pending","title":"Sort Colors","memory":"41.8 MB","code":"class Solution {\n    public void sortColors(int[] nums) {\n\n        mergesort(nums, 0, nums.length-1);\n        \n    }\n\n    private void mergesort(int[] nums, int st, int ed){\n        if(st>=ed) return;\n\n        int mid= st+(ed-st)/2;\n        mergesort(nums, st, mid);\n        mergesort(nums, mid+1, ed);\n        mergeHalves(nums, st, mid, mid+1, ed);\n    }\n\n    private void mergeHalves(int[] nums, int lo, int loEnd, int hi, int hiEnd){\n\n        int i=lo, j=hi;\n        int len = hiEnd-lo+1;\n\n        int[] tmp = new int[len];\n        int idx= 0;\n\n        while(i<=loEnd && j<=hiEnd){\n            if(nums[i]<=nums[j]){\n                tmp[idx++] = nums[i++];\n            }else{\n                tmp[idx++] = nums[j++];\n            }\n        }\n\n        while(i<=loEnd){\n            tmp[idx++] = nums[i++];\n        }\n\n        while(j<=hiEnd){\n            tmp[idx++] = nums[j++];\n        }\n\n        System.arraycopy(tmp, 0, nums, lo, len);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-colors","has_notes":false,"flag_type":1}