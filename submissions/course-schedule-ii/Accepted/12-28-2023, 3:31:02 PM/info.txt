{"id":1130343543,"question_id":210,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703748662,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1130343543/","is_pending":"Not Pending","title":"Course Schedule II","memory":"45 MB","code":"class Solution {\n    public int[] findOrder(int n, int[][] pre) {\n\n        int[] res = new int[n];\n        int[] indeg = new int[n];\n\n        HashMap<Integer, Set<Integer>> g = new HashMap<>();\n        for(int[] p : pre) {\n            int a = p[0];\n            int b = p[1];\n\n            indeg[a]++;\n\n            g.putIfAbsent(b , new HashSet<>());\n            g.get(b).add(a);\n        }\n\n        Queue<Integer> q = new LinkedList<>();\n        for(int i=0; i<n; i++){\n            if(indeg[i]==0)\n                q.offer(i);\n        }\n\n\n        int cnt= 0 ;\n        while(!q.isEmpty()){\n            int siz = q.size();\n            while(siz-->0){\n\n                int p = q.poll();\n                res[cnt++]= p;\n                for(int next : g.getOrDefault(p, new HashSet<>())){\n                    indeg[next]--;\n                    if(indeg[next]==0)\n                        q.offer(next);\n                }\n            }\n        }\n\n        return cnt==n ? res : new int[0];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false,"flag_type":1}