{"id":925233825,"question_id":210,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680245114,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/925233825/","is_pending":"Not Pending","title":"Course Schedule II","memory":"43.8 MB","code":"class Solution {\n    public int[] findOrder(int n, int[][] prereq) {\n        int[] inDeg = new int[n];\n        \n        HashMap<Integer, Set<Integer>> map = new HashMap<>();\n        \n        for(int[] pre : prereq){\n            \n            int need = pre[1];\n            int next = pre[0];\n            \n            inDeg[next]++;\n            map.putIfAbsent(need, new HashSet<>());\n            map.get(need).add(next);\n        }\n        \n        int[] res = new int[n];\n        boolean[] seen = new boolean[n];\n        int cnt=0;\n        while(cnt<n){\n            \n            boolean nextRound = false;\n            \n            for(int i=0; i<n;i++){\n                if(inDeg[i]==0 && seen[i]==false){\n                    seen[i]=true;\n                    nextRound=true;\n                    res[cnt++]=i;\n                    Set<Integer> set = map.getOrDefault(i, new HashSet<>());\n                    for(int s : set){\n                        inDeg[s]--;\n                    }\n                }\n            }\n            \n            if(nextRound==false){\n                return new int[0];\n            }\n        }\n        \n        return res;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false,"flag_type":1}