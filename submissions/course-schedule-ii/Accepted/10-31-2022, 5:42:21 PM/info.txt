{"id":833912476,"question_id":210,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1667209341,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/833912476/","is_pending":"Not Pending","title":"Course Schedule II","memory":"50 MB","code":"class Solution {\n    public int[] findOrder(int numCourses, int[][] prerequisites) {\n        \n        int[] res = new int[numCourses];\n        \n        int[] indeg = new int[numCourses];\n        \n        HashMap<Integer, List<Integer>> map = new HashMap<>();\n        \n        for(int[] p: prerequisites){\n            List<Integer> list = map.getOrDefault(p[1], new ArrayList<>());\n            list.add(p[0]);\n            map.put(p[1], list);\n            indeg[p[0]]++;\n        }\n        \n        Queue<Integer> q = new LinkedList<>();\n        int idx=0;\n        \n        for(int i=0; i<numCourses; i++){\n            if(indeg[i]==0){\n                q.offer(i);\n            }\n        }\n        \n        \n        while(!q.isEmpty()){\n            \n            int cur = q.poll();\n            List<Integer> list = map.getOrDefault(cur, new ArrayList<>());\n            for(int i: list){\n                indeg[i]--;\n                \n                if(indeg[i]==0)\n                    q.offer(i);\n            }\n            \n            res[idx++] = cur;\n        }\n        \n        for(int i=0; i<numCourses; i++){\n            if(indeg[i]>0)\n                return new int[0];\n        }\n         return res;\n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false,"flag_type":1}