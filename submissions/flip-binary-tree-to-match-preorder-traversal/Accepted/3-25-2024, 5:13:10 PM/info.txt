{"id":1213328042,"question_id":1011,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711357990,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1213328042/","is_pending":"Not Pending","title":"Flip Binary Tree To Match Preorder Traversal","memory":"41.7 MB","code":"class Solution {\n    List<Integer> flipped;\n    int index;\n    int[] voyage;\n\n    public List<Integer> flipMatchVoyage(TreeNode root, int[] voyage) {\n        flipped = new ArrayList();\n        index = 0;\n        this.voyage = voyage;\n\n        dfs(root);\n        if (!flipped.isEmpty() && flipped.get(0) == -1) {\n            flipped.clear();\n            flipped.add(-1);\n        }\n\n        return flipped;\n    }\n\n    public void dfs(TreeNode node) {\n        if (node != null) {\n            if (node.val != voyage[index++]) {\n                flipped.clear();\n                flipped.add(-1);\n                return;\n            }\n\n            if (index < voyage.length && node.left != null &&\n                    node.left.val != voyage[index]) {\n                flipped.add(node.val);\n                dfs(node.right);\n                dfs(node.left);\n            } else {\n                dfs(node.left);\n                dfs(node.right);\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flip-binary-tree-to-match-preorder-traversal","has_notes":false,"flag_type":1}