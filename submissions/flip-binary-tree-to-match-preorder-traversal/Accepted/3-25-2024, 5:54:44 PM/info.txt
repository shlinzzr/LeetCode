{"id":1213352231,"question_id":1011,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711360484,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1213352231/","is_pending":"Not Pending","title":"Flip Binary Tree To Match Preorder Traversal","memory":"42.1 MB","code":"class Solution {\n    List<Integer> flipped = new ArrayList<>();\n    int index =0;;\n    int[] voyage;\n    boolean isValid =true;\n\n    public List<Integer> flipMatchVoyage(TreeNode root, int[] voyage) {\n        this.voyage = voyage;\n\n        dfs(root);\n\n        if(!isValid) return Arrays.asList(-1);\n\n        return flipped;\n    }\n\n    public void dfs(TreeNode node) {\n\n        if(node==null || isValid==false)  return;\n\n        if (node.val != voyage[index++]) {\n            isValid = false;\n            return;\n        }\n\n        if (index < voyage.length && node.left != null && node.left.val != voyage[index]) {\n            //filp\n            flipped.add(node.val);\n            dfs(node.right);\n            dfs(node.left);\n        } else { // original\n            dfs(node.left);\n            dfs(node.right);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flip-binary-tree-to-match-preorder-traversal","has_notes":false,"flag_type":1}