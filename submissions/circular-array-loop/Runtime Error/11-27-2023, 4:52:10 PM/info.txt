{"id":1107313404,"question_id":457,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701075130,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1107313404/","is_pending":"Not Pending","title":"Circular Array Loop","memory":"N/A","code":"public class Solution {\n    public boolean circularArrayLoop(int[] nums) {\n        int n = nums.length;\n        for (int i = 0; i < n; i++) {\n            if (nums[i] == 0) {\n                continue;\n            }\n            // slow/fast pointer\n            int j = i, k = getIndex(i, nums);\n            while (nums[k] * nums[i] > 0 && nums[getIndex(k, nums)] * nums[i] > 0) {\n                if (j == k) {\n                    // check for loop with only one element\n                    if (j == getIndex(j, nums)) {\n                        break;\n                    }\n                    return true;\n                }\n                j = getIndex(j, nums);\n                k = getIndex(getIndex(k, nums), nums);\n            }\n            // loop not found, set all element along the way to 0\n            j = i;\n            int val = nums[i];\n            while (nums[j] * val > 0) {\n                int next = getIndex(j, nums);\n                nums[j] = 0;\n                j = next;\n            }\n        }\n        return false;\n    }\n    \n    public int getIndex(int i, int[] nums) {\n        int n = nums.length;\n        return i + nums[i] >= 0? (i + nums[i]) % n: n + ((i + nums[i]) % n);\n    }\n}","compare_result":"11111111111111111111111111110000000000000000","title_slug":"circular-array-loop","has_notes":false,"flag_type":1}