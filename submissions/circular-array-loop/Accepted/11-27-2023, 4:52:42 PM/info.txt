{"id":1107313648,"question_id":457,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701075162,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1107313648/","is_pending":"Not Pending","title":"Circular Array Loop","memory":"39.7 MB","code":"class Solution {\n    public boolean circularArrayLoop(int[] nums) {\n        for(int i = 0; i < nums.length; i++){\n            int slow, fast;\n            slow = fast = i;\n            boolean isForward = nums[i] > 0;\n            \n            while(true){\n                slow = getNextIndex(nums, slow, isForward);\n                if(slow == -1)\n                    break;\n                \n                fast = getNextIndex(nums, fast, isForward);\n                if(fast == -1)\n                    break;\n                \n                fast = getNextIndex(nums, fast, isForward);\n                if(fast == -1)\n                    break;\n                \n                if(slow == fast)\n                    return true;\n            }\n        }\n        return false;\n    }\n    \n    public int getNextIndex(int[] nums, int index, boolean curDirection){\n        \n        boolean direction = nums[index] >= 0;\n        if(direction != curDirection) return -1; // Shold be either forward/backward direction.\n        \n        int nextIndex = (index + nums[index]) % nums.length;\n        if(nextIndex < 0) nextIndex += nums.length;\n        \n        if(nextIndex == index) return -1; // to ignore case like [-1], [3,1,1] that have 1 element loop\n        \n        return nextIndex;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"circular-array-loop","has_notes":false,"flag_type":1}