{"id":1208892812,"question_id":687,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1710919004,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1208892812/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"47.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max = 0;\n    public int longestUnivaluePath(TreeNode root) {\n        \n        if(root==null)\n            return 0;\n            \n        dfs(root);\n        return max-1;\n    }\n\n    private int dfs(TreeNode node){\n        if(node==null)\n            return 0;\n\n        int left = dfs(node.left);\n        int right = dfs(node.right);\n\n        left = node.left!=null && node.left.val==node.val ? left: 0;\n        right = node.right!=null && node.right.val==node.val ? right: 0;\n\n        max = Math.max(max, 1+left+right);\n\n\n\n        return Math.max(left, right) + 1;\n\n    }\n\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-univalue-path","has_notes":false,"flag_type":1}