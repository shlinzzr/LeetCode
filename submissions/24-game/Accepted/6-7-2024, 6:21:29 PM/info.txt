{"id":1280438425,"question_id":679,"lang":"java","lang_name":"Java","time":"5 days, 16 hours","timestamp":1717755689,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1280438425/","is_pending":"Not Pending","title":"24 Game","memory":"44.9 MB","code":"class Solution {\n    public boolean judgePoint24(int[] cards) {\n\n        //光如何動筆 就卡住... ?  如何做dfs\n\n        //想法1. => 把所有card 加到list內 大亂鬥 直到剩一個\n\n        List<Double> list = new ArrayList<>();\n        for(int c: cards){\n            list.add((double) c);\n        }\n\n        return dfs(list);\n    }\n\n    private boolean dfs(List<Double> list){\n        if(list.size()==1){\n            if(Math.abs(list.get(0)-24.0) <0.001) return true; // 算精度 abs 不要漏\n            return false;\n        }\n\n        // find pair\n        for(int i=0; i<list.size(); i++){\n            for(int j=i+1; j<list.size(); j++){\n\n                List<Double> ans = cal(list.get(i), list.get(j));\n                for(double a : ans){\n                    List<Double> next = new ArrayList<>(list);\n                    next.remove(j); // j比較大要先刪\n                    next.remove(i); \n                    next.add(a);\n                    // for(int k=0; k<list.size(); k++){\n                    //     if(k!=i || k==j) continue;\n                    //     next.add(list.get(k));\n                    // }\n\n                    if(dfs(next)) return true;\n                }\n            }\n        }\n\n        return false;\n\n\n\n    }\n\n    private List<Double> cal(double a, double b){\n        List<Double> list = new ArrayList<>();\n        list.add(a+b);\n        list.add(a-b);\n        list.add(b-a);\n        list.add(a*b);\n        list.add(a/b);\n        list.add(b/a);\n        return list;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"24-game","has_notes":false,"flag_type":1}