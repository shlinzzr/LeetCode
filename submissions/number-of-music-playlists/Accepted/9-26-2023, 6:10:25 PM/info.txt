{"id":1059551996,"question_id":956,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1695723025,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1059551996/","is_pending":"Not Pending","title":"Number of Music Playlists","memory":"40.9 MB","code":"class Solution {\n\n    int M = (int) 1e9+7;\n\n    public int numMusicPlaylists(int n, int goal, int k) {\n        long[][] dp = new long[goal+1][n+1];\n        dp[0][0]=1;\n        for(int i=1; i<=goal; i++){\n            for(int j=1; j<=n; j++){\n                dp[i][j] = dp[i-1][j-1] * (n-j+1); // 選不同首歌\n                dp[i][j] += dp[i-1][j] * Math.max(0, j-k); //選同一首歌距離超過k\n                dp[i][j]  %= M;\n            }\n        }\n\n        return (int)dp[goal][n];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-music-playlists","has_notes":false,"flag_type":1}