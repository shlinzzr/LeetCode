{"id":1155205625,"question_id":10,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706070481,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1155205625/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"41.3 MB","code":"class Solution {\n    public boolean isMatch(String s, String p) {\n        int s_len = s.length();\n        int p_len = p.length();\n        \n        boolean[][] dp = new boolean[s_len+1][p_len+1];\n        dp[0][0]=true;\n    \n        for(int j=2; j<=p_len; j++){\n            if(p.charAt(j-1)=='*')\n                dp[0][j]=dp[0][j-2];\n        }\n        \n        \n        \n        for(int i=1; i<=s.length(); i++){\n            for(int j=1; j<=p.length();j++){\n                \n                if(p.charAt(j-1)=='.' || p.charAt(j-1)==s.charAt(i-1)){\n                    dp[i][j] = dp[i-1][j-1];\n                    \n                }else if(p.charAt(j-1)=='*'){\n                    \n                    if(dp[i][j-2]) // choose 0 char ,ignore last 2 pattern\n                        dp[i][j]=true;\n\n                    else if(p.charAt(j-2)=='.' || p.charAt(j-2)==s.charAt(i-1)){\n                        dp[i][j] = dp[i-1][j];\n                    }\n                }\n                \n                \n            }\n        }\n        \n        return dp[s.length()][p.length()];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regular-expression-matching","has_notes":false,"flag_type":1}