{"id":1004054983,"question_id":49,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690337709,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1004054983/","is_pending":"Not Pending","title":"Group Anagrams","memory":"47.7 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n         List<List<String>> res = new ArrayList<>();\n        HashMap<String, List<String>> map = new HashMap<>();\n        \n        for(String s : strs){\n            \n            String nor = normalize(s);\n            // System.out.println(s + \"=>\" + nor);\n            map.putIfAbsent(nor, new ArrayList<>());\n            map.get(nor).add(s);\n        }\n        \n        for(List<String> list : map.values()){\n            res.add(list);\n        }\n        \n        return res;\n        \n    }\n    \n    private String normalize(String s){\n        \n        int[] arr = new int[26];\n        \n        for(char ch : s.toCharArray()){\n            arr[ch-'a']++;\n        }\n        \n        String res = \"\";\n        for(int i=0; i<26; i++){\n            \n            for(int j=0; j<arr[i]; j++){\n                res += (char)(i+'a');\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}