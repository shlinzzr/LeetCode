{"id":831886771,"question_id":49,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666938004,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/831886771/","is_pending":"Not Pending","title":"Group Anagrams","memory":"45 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n         List<List<String>> res = new ArrayList<>();\n         HashMap<String , List<String>> map = new HashMap<>();\n        \n        for(String s : strs){\n            String org = getStr(s);\n            if(!map.containsKey(org)){\n                map.put(org, new ArrayList<>());\n            }\n            map.get(org).add(s);\n        }\n        \n        for(Map.Entry<String, List<String>> en : map.entrySet()){\n            res.add(en.getValue());\n        }\n        \n        return res;\n        \n        \n    }\n    \n    private String getStr(String s){\n        \n        int[] arr = new int[26];\n        for(char c : s.toCharArray()){\n            arr[c-'a']++;\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<26; i++){\n            while(arr[i]>0){\n                sb.append( (i+'a'));\n                arr[i]--;\n            }\n        }\n        \n        return sb.toString();\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}