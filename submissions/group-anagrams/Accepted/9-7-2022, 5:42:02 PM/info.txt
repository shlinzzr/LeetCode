{"id":793760218,"question_id":49,"lang":"java","lang_name":"Java","time":"1 year, 9 months","timestamp":1662543722,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/793760218/","is_pending":"Not Pending","title":"Group Anagrams","memory":"58.8 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        \n        HashMap<String, Integer> map = new HashMap<>();\n        List<List<String>> res = new ArrayList<>();\n        \n        \n        for(String s : strs){\n            String key = genKey(s);\n            if(map.containsKey(key))\n                res.get(map.get(key)).add(s);\n            else{\n                List<String> list = new ArrayList<>();\n                list.add(s);\n                res.add(list);\n                map.put(key, res.size()-1);\n            }\n        }\n        \n        return res;\n        \n    }\n    \n    \n    private String genKey(String s){\n        int[] arr = new int[26];\n        for(char c : s.toCharArray()){\n            arr[c-'a']++;\n        }\n        \n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<arr.length; i++ ){\n            \n            while(arr[i]>0){\n                sb.append(i+'a');\n                arr[i]--;\n            }\n        }\n        \n        return sb.toString();\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}