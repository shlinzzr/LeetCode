{"id":890458657,"question_id":49,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675396687,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/890458657/","is_pending":"Not Pending","title":"Group Anagrams","memory":"45.4 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        List<List<String>> res = new ArrayList<>();\n        int len = strs.length;\n        \n        HashMap<String, List<String>> map = new HashMap<>();\n        \n        for(String s : strs){\n            \n            char[] ca = s.toCharArray();\n            Arrays.sort(ca);\n            String key = String.valueOf( ca);\n            \n            map.putIfAbsent(key, new ArrayList<>());\n            map.get(key).add(s);\n        }\n        \n        for(Map.Entry<String, List<String>> en : map.entrySet()){\n            \n            res.add(en.getValue());\n        }\n        \n        \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}