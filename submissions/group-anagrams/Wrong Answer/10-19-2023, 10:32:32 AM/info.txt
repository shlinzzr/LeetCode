{"id":1078822631,"question_id":49,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1697682752,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1078822631/","is_pending":"Not Pending","title":"Group Anagrams","memory":"N/A","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        List<List<String>> res = new ArrayList<>();\n        HashMap<String, Set<String>> map = new HashMap<>();\n\n        for(String s: strs){\n            String org = getOrg(s);\n            map.putIfAbsent(org, new HashSet<>());\n            map.get(org).add(s);\n        }\n\n\n        for(String key  : map.keySet()){\n            res.add(new ArrayList<>(map.get(key)));\n        }\n\n        return res;\n    }\n\n    private String getOrg(String s){\n        int[] arr = new int[26];\n\n        for(char ch : s.toCharArray()){\n            arr[ch-'a']++;\n        }\n\n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<26; i++){\n            \n            for(int j=0; j<arr[i]; j++)\n                sb.append((char) (i+'a'));\n        }\n\n        return sb.toString();\n    }\n}","compare_result":"111010010001111111111011111011111100110010101010001000001010000001000000000101000001110100001000010101000000111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}