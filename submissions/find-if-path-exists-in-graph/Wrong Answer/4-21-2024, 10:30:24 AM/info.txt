{"id":1237768766,"question_id":2121,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713666624,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1237768766/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"N/A","code":"class Solution {\n    \n    int[] parent;\n    public boolean validPath(int n, int[][] edges, int source, int destination) {\n        parent= new int[n];\n        \n        for(int i=0; i<n ;i++){\n            parent[i] =i ;\n        }\n        \n        for(int[] e : edges){\n            union(e[0], e[1]);\n        }\n        \n        return parent[source] == parent[destination];\n    }\n    \n    \n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n    \n    private void union(int a, int b){\n        a = find(a);\n        b = find(b);\n        \n        if(a==b) return;\n        \n        if(a<b){\n            parent[b] = a;\n        }\n        else \n            parent[a] = b;\n    }\n}","compare_result":"111111101001111111111010010011","title_slug":"find-if-path-exists-in-graph","has_notes":false,"flag_type":1}