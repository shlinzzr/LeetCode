{"id":1030133440,"question_id":68,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692849018,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1030133440/","is_pending":"Not Pending","title":"Text Justification","memory":"41.4 MB","code":"class Solution {\n    public List<String> fullJustify(String[] words, int maxWidth) {\n        List<String> res = new ArrayList<>();\n        \n        \n        int len = words.length;\n        \n        List<List<String>> lines = new ArrayList<>();\n        int st = 0;\n        while(st<len){\n            \n            int wLen = 0;\n            \n            List<String> list = new ArrayList<>();\n            for(int i=st; i<len; i++){\n                if(wLen!=0)\n                    wLen++;\n                wLen += words[i].length();\n                list.add(words[i]);\n                if(i+1<len && wLen+words[i+1].length()+1 >maxWidth){\n                    st = i+1;\n                    break;\n                }\n                st = i+1;\n            }\n            lines.add(list);\n            \n            System.out.println(lines);\n            \n        }\n        \n        \n        for(int i=0; i<lines.size()-1; i++){\n            List<String> list = lines.get(i);\n            \n            int wLen = 0;\n            for(String w: list)\n                wLen+=w.length();\n            \n            int space = maxWidth-wLen;\n            int slot = list.size()-1;\n            StringBuilder sb = new StringBuilder();\n            \n            if(slot==0){\n                sb.append(list.get(0));\n                appendSpace(sb, space);\n                \n            }else{\n                for(String w: list){\n                    if(!sb.isEmpty()){\n                        appendSpace(sb, space/slot);\n\n                        if(space%slot>0){\n                            appendSpace(sb, 1);\n                            space--;\n                        }\n                    }\n                    sb.append(w);\n                }\n            }\n            \n            res.add(sb.toString());\n        }\n        \n        \n        // the last row\n        List<String> last = lines.get(lines.size()-1);\n        StringBuilder sb = new StringBuilder();\n        for(String w : last){\n            if(!sb.isEmpty()){\n                sb.append(\" \");\n            }\n            sb.append(w);\n        }\n        \n        int space = maxWidth-sb.length();\n        appendSpace(sb, space);\n        res.add(sb.toString());\n        \n        \n        return res;\n        \n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n    private void appendSpace(StringBuilder sb, int cnt){\n        for(int i=0; i<cnt; i++){\n            sb.append(\" \");\n        }\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"text-justification","has_notes":false,"flag_type":1}