{"id":955039766,"question_id":68,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684751423,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/955039766/","is_pending":"Not Pending","title":"Text Justification","memory":"41.8 MB","code":"class Solution {\n    \n    //https://www.youtube.com/watch?v=6D7YFoQ4t0w\n    \n    public List<String> fullJustify(String[] words, int maxWidth) {\n        List<String> rets = new ArrayList<>();\n        \n        int len = words.length;\n        \n        int idx = 0;\n        \n        for (int i=0; i<words.length; i++)\n        {\n            int j = i, count = 0;\n            while (j<words.length && count <= maxWidth)\n            {\n                if (count==0)\n                    count += words[j].length();\n                else\n                    count += 1 + words[j].length();\n                j++;\n            }\n            j--;// recover j \n            if (count > maxWidth)// recover count\n            {\n                count -= 1 + words[j].length();\n                j--;\n            }\n            \n            \n            \n            if (j==words.length-1) // the last line\n            {\n                String temp=\"\";\n                for (int k=i; k<=j; k++)\n                    temp += words[k]+\" \";\n                \n                // temp.pop_back();\n                temp = temp.substring(0, temp.length()-1);\n                temp += addspace(maxWidth - temp.length());\n                \n                rets.add(temp);\n            }                \n            else\n            {\n                rets.add(printline(words, i, j, maxWidth));\n            }\n                \n            i = j;                        \n        }\n        return rets;\n    }\n    \n    private String printline(String[] words, int a, int b, int maxWidth)\n    {\n        if (a==b)\n        {\n            return words[a] + addspace(maxWidth-words[a].length());\n        }\n        \n        int total = 0;\n        for (int i=a; i<=b; i++) total += words[i].length();\n        int space = (maxWidth - total)/Math.max(1, b-a);\n        int extra = maxWidth - total - space * (b-a);\n        \n        String ret=\"\";\n        for (int i=a; i<a+extra; i++)    \n            ret += words[i] + addspace(space+1);        \n        for (int i=a+extra; i<b; i++)        \n            ret += words[i] + addspace(space);\n        \n        ret+=words[b];              \n        return ret;        \n    }\n    \n    private String addspace(int k)\n    {\n        String ret=\"\";\n        for (int i=0; i<k; i++)\n            ret+=\" \";\n        return ret;\n    }\n        \n        \n        \n}","compare_result":"111111111111111111111111111","title_slug":"text-justification","has_notes":false,"flag_type":1}