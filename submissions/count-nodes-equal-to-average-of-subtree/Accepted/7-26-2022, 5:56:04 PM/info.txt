{"id":757112976,"question_id":2347,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1658829364,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/757112976/","is_pending":"Not Pending","title":"Count Nodes Equal to Average of Subtree","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    int res=0;\n    \n    public int averageOfSubtree(TreeNode root) {\n        \n        runTree(root);\n        return res;\n    }\n    \n    private int[] runTree(TreeNode node){\n        \n        if(node==null){\n            return new int[]{0,0};\n        }\n        \n        int[] left = runTree(node.left);\n        int[] right = runTree(node.right);\n        \n        int sum = left[0] + right[0] + node.val;\n        int cnt = left[1] + right[1] + 1;\n        \n        if(sum/cnt==node.val){\n            res ++;\n        }\n        \n        return new int[]{sum , cnt};\n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-nodes-equal-to-average-of-subtree","has_notes":false,"flag_type":1}