{"id":952575045,"question_id":1798,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684396300,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/952575045/","is_pending":"Not Pending","title":"Max Number of K-Sum Pairs","memory":"N/A","code":"class Solution {\n    public int maxOperations(int[] nums, int k) {\n        int len = nums.length;\n        Arrays.sort(nums);\n        \n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        for(int n: nums){\n            map.put(n, map.getOrDefault(n, 0) +1);\n        }\n        \n        \n        int cnt=0;\n        \n        for(int i=0; i<len/2; i++){\n            \n            int n = nums[i];\n            int t = k-n;\n            \n            // System.out.println(i + \" \" + nums[i]);\n            \n            if(map.containsKey(t) && map.containsKey(n)){\n                cnt+=1;\n                \n                if(map.get(t)==1)\n                    map.remove(t);\n                else\n                    map.put(t, map.get(t)-1);\n                \n                if(map.get(n)==1)\n                    map.remove(n);\n                else\n                    map.put(n, map.get(n)-1);\n                \n                \n            }\n        }\n        \n        return cnt;\n        \n        \n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"111000000000000000000000000000000000000000000000000","title_slug":"max-number-of-k-sum-pairs","has_notes":false,"flag_type":1}