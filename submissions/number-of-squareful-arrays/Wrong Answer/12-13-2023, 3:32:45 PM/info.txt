{"id":1118650942,"question_id":1038,"lang":"java","lang_name":"Java","time":"6 months","timestamp":1702452765,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1118650942/","is_pending":"Not Pending","title":"Number of Squareful Arrays","memory":"N/A","code":"class Solution {\n    public int numSquarefulPerms(int[] nums) {\n        Arrays.sort(nums);\n        int len = nums.length;\n        Set<List<Integer>> list = new HashSet<>();\n        helper(nums, list, new ArrayList<>(), new boolean[len]);\n        return list.size();\n    }\n\n    private void helper(int[] nums, Set<List<Integer>> list, List<Integer> curr, boolean[] seen){\n        if(curr.size()==nums.length){\n            list.add(new ArrayList<>(curr));\n            return;\n        }\n\n        for(int i=0; i<nums.length; i++){\n\n            //剪枝\n            if(seen[i] || (i>0) && nums[i]==nums[i-1] && !seen[i-1])\n                continue;\n\n            if(seen[i]==false && (curr.isEmpty() || isSquare( curr.get(curr.size()-1)+nums[i]))){\n                seen[i]=true;\n                curr.add(nums[i]);\n                helper(nums, list, curr, seen);\n                curr.remove(curr.size()-1);\n                seen[i]=false;\n            }\n        }\n    }\n\n\n    private boolean isSquare(long n){\n        return Math.sqrt(n)*Math.sqrt(n)==n;\n    }\n}","compare_result":"1111111111111111111111111111111111111101100000000001110000000010100100000111","title_slug":"number-of-squareful-arrays","has_notes":false,"flag_type":1}