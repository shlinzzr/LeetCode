{"id":1054124353,"question_id":302,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695178994,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1054124353/","is_pending":"Not Pending","title":"Smallest Rectangle Enclosing Black Pixels","memory":"44.7 MB","code":"class Solution {\n    public int minArea(char[][] image, int x, int y) {\n        int h = image.length;\n        int w = image[0].length;\n        \n        int up=h, down=0, left=w, right=0;\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(image[i][j]=='1'){\n                    up = Math.min(up, i);\n                    down = Math.max(down, i);\n                    left = Math.min(left, j);\n                    right = Math.max(right, j);\n                }\n\n            }\n       }\n       System.out.println(down + \" \" + up + \" \" + left + \" \" + right);\n\n        return (down-up+1) * (right-left+1);\n\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-rectangle-enclosing-black-pixels","has_notes":false,"flag_type":1}