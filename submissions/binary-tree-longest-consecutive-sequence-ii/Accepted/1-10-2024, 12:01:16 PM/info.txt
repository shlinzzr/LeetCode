{"id":1142041194,"question_id":549,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704859276,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1142041194/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence II","memory":"45.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    Map<TreeNode, List<TreeNode>> map = new HashMap<>();\n\n    public int longestConsecutive(TreeNode root) {\n\n        buildMap(null, root);\n\n        int max = 0 ;\n        for(TreeNode node : map.keySet()){\n            HashSet<TreeNode> seen = new HashSet<>();\n            Queue<TreeNode> q = new LinkedList<>();\n            q.offer(node);\n            seen.add(node);\n            int cnt = 0;\n            while(!q.isEmpty()){\n                int siz = q.size();\n                while(siz-->0){\n                    TreeNode p = q.poll();\n                    for(TreeNode next : map.get(p)){\n\n                        if(!seen.contains(next) && next.val == p.val+1){\n                            seen.add(next);\n                            q.offer(next);\n                        }\n                    }\n                }\n                cnt++;\n               \n            }\n\n            max = Math.max(max, cnt);\n        }\n\n        return max;\n        \n    }\n\n    private void buildMap(TreeNode parent, TreeNode curr){\n\n        if(curr==null) return;\n\n        map.putIfAbsent(curr, new ArrayList<>());\n\n        if(curr.left!=null) map.get(curr).add(curr.left);\n        if(curr.right!=null) map.get(curr).add(curr.right);\n        if(parent!=null) map.get(curr).add(parent);\n\n        buildMap(curr, curr.left);\n        buildMap(curr, curr.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence-ii","has_notes":false,"flag_type":1}