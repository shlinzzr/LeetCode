{"id":876055319,"question_id":199,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673434114,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/876055319/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n        helper(res, root);\n        return res;\n    }\n    \n    private void helper(List<Integer> res , TreeNode root){\n        \n        if(root==null)\n            return;\n        \n        res.add(root.val);\n        \n        if(root.right!=null){\n            helper(res, root.right);    \n        }else{\n            helper(res, root.left);    \n        }\n    }\n}\n","compare_result":"111111001110110111110110100111111111111111101111000111110010110111111111111101111111011111110111001101101110111011111000101100101011111010111110010110011110111101111111101011011110110110111011111111111001100100100101","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}