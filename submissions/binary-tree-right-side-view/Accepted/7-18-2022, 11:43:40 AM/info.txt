{"id":749916679,"question_id":199,"lang":"java","lang_name":"Java","time":"1 year, 11 months","timestamp":1658115820,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/749916679/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"42.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        \n        List<Integer> res = new ArrayList<>();\n        helper(root, res, 0);\n        return res;\n        \n        \n        \n    }\n    \n    private void helper(TreeNode node, List<Integer> res, int currDepth){\n        \n        if(node==null)\n            return;\n        \n        if(res.size() == currDepth){\n            res.add(node.val);\n        }\n        \n        helper(node.right, res, currDepth+1);\n        helper(node.left, res, currDepth+1);\n        \n        return;\n        \n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}