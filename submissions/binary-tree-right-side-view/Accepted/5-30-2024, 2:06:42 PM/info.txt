{"id":1272077388,"question_id":199,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717049202,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1272077388/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"41.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n\n        List<Integer> res = new ArrayList<>();\n\n        helper(root, res, 1);\n\n        return res;\n        \n    }\n\n    private void helper(TreeNode node, List<Integer> res, int lv){\n\n        if(node==null) return;\n\n        if(res.size()<lv){\n            res.add(node.val);\n        }\n\n        helper(node.right, res, lv+1);\n        helper(node.left, res, lv+1);\n\n\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}