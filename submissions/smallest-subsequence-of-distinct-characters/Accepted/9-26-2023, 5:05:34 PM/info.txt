{"id":1059515550,"question_id":1159,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1695719134,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1059515550/","is_pending":"Not Pending","title":"Smallest Subsequence of Distinct Characters","memory":"40.5 MB","code":"class Solution {\n    public String smallestSubsequence(String s) {\n        int len = s.length();\n\n        if(len==0) return s;\n\n        int[] lastOccur = new int[26];\n\n        for(int i=0; i<len; i++){\n            lastOccur[s.charAt(i)-'a'] =i;\n        }\n\n        StringBuilder sb = new StringBuilder();\n        boolean[] seen = new boolean[26];\n\n\n        for(int i=0; i<len ; i++){\n            char ch = s.charAt(i);\n\n            if(seen[ch-'a']) continue;\n\n\n            while(sb.length()>0 && sb.charAt(sb.length()-1)>ch && lastOccur[sb.charAt(sb.length()-1)-'a']>i){\n                seen[sb.charAt(sb.length()-1)-'a']=false;\n                sb.deleteCharAt(sb.length()-1);\n            }\n\n            sb.append(ch);\n            seen[ch-'a']=true;\n        }\n\n        return sb.toString();\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"smallest-subsequence-of-distinct-characters","has_notes":false,"flag_type":1}