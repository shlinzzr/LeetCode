{"id":938827222,"question_id":1984,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682321796,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/938827222/","is_pending":"Not Pending","title":"Maximum Distance Between a Pair of Values","memory":"N/A","code":"class Solution {\n//     public int maxDistance(int[] nums1, int[] nums2) {\n//         int len1= nums1.length;\n//         int len2= nums2.length;\n        \n//         // i<=j, nums1[i]<=nums2[j]\n        \n//         for(int i=0; i<len1; i++){\n            \n//             for(int j=len2-1; j>=0; j--){\n                \n//                 int val = isValid(nums1, nums2, i, j);\n                \n//                 if(val!=-1){\n//                     return val;\n                    \n//                 }else if(val>0){\n                    \n//                 }\n//             }\n//         }\n//     }\n    \n    public int maxDistance(int[] A, int[] B) {\n        int res = 0, i = 0, n = A.length, m = B.length;\n        for (int j = 0; j < m; ++j) {\n            while (i < n && A[i] > B[j])\n                i++;\n            \n            System.out.println(\"A[\" + i  + \"]=\" + A[i]  + \" B[\"+ j + \"]=\" + B[j]);\n            System.out.println(\"i<=j=\" + (i<=j) + \" A[i]<=B[j]=\" +  (A[i]<=B[j]));\n            System.out.println();\n            \n            if (i == n) break;\n            res = Math.max(res, j - i);\n        }\n        return res;\n    }\n    \n    \n//     private int  isValid(int[] nums1, int[] nums2, int i , int j){\n        \n//         if(i>j)\n//             return -1;\n        \n//         if(nums1[i]>nums2[j])\n//             return -1;\n        \n//         return j-i;\n        \n//     }\n}\n","compare_result":"10000000000000000000000000000000","title_slug":"maximum-distance-between-a-pair-of-values","has_notes":false,"flag_type":1}