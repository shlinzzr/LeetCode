{"id":1239560519,"question_id":1254,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1713844453,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1239560519/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"47.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int sum = 0;\n    int max = 0;\n    public int deepestLeavesSum(TreeNode root) {\n        helper(root, 0);\n        return  sum ;\n    }\n    \n    private void helper(TreeNode node, int lv){\n        \n        if(node==null) return ;\n        \n        if(node.left==null && node.right==null){\n            if(lv==max){\n                sum+=node.val;\n            }else if(lv>max){\n                sum = node.val;\n                max = lv;\n            }\n        }\n        \n        helper(node.left, lv+1);\n        helper(node.right, lv+1);\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"flag_type":1}