{"id":1158839888,"question_id":3279,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1706413564,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1158839888/","is_pending":"Not Pending","title":"Alice and Bob Playing Flower Game","memory":"N/A","code":"class Solution {\n    public long flowerGame(int n, int m) {\n        \n        \n        if((n+m)%2==0) return 0;\n        \n        long cnt = 0;\n        \n        \n        int N = m+n;\n        int K = (m+n+1)/2;\n        \n        \n        return getCnt(n,m); \n    }\n    HashMap<String, Long> map = new HashMap<>();\n    private long getCnt(int n, int m){\n        \n        if(n<=0 || m<=0) return 0L;\n        if(n==1 || m==1) return 1L;\n        \n        if(map.containsKey(n+\"_\"+m))\n            return map.get(n+\"_\"+m);\n        \n        \n        long val =  1+getCnt(n, m-2)+getCnt(n-1, m-1)+getCnt(n-2, m);\n        map.put(n+\"_\"+m, val);\n        return val;\n    }\n        \n//         long \n        \n    \n\n//     C = factorial(N) / (factorial(M) * factorial(N - M));\n\n//     private long factorial(int n)\n//     {\n//         if(n == 1)\n//             return 1;\n//         else\n//             return n * factorial(n - 1) ;\n//     }\n}","compare_result":"110000000000001000011000001010010001000001000101010100010000110101110110010011000000000100100100001011001000000100000000000000000010000000010110000110000100000000000001001110000000101110010111000111111000110000011001000100110000001100110100001110111010000100000001011000000100000000101100001010000100010001010000010001001010000000000001010000000111011000101000001011000000100000100101001100001001000000110010101000001000010010010000000000100010000001100010010010110110010100000000000000000111000011110100000000000000000000000000000000000","title_slug":"alice-and-bob-playing-flower-game","has_notes":false,"flag_type":1}