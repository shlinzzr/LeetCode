{"id":1120209303,"question_id":3106,"lang":"java","lang_name":"Java","time":"6 months","timestamp":1702630421,"status":10,"status_display":"Accepted","runtime":"255 ms","url":"/submissions/detail/1120209303/","is_pending":"Not Pending","title":"Length of the Longest Subsequence That Sums to Target","memory":"54.9 MB","code":"class Solution {\n    public int lengthOfLongestSubsequence(List<Integer> nums, int target) {\n        int siz = nums.size();\n\n        int[][] dp = new int[siz+1][target+1]; //看過i個數字後 能夠sum up to target 的longest subseq.length\n        for(int[] d : dp){\n            Arrays.fill(d, -1);// init : all case is inValid\n        } \n\n        for(int i=0; i<siz; i++){\n            dp[i][0]=0;  // 不管看過幾個數字 組成target==0的 longest subseq.length==0\n        }\n\n\n        // O(NK)\n        for(int i=1; i<=siz; i++){ //i : 看過幾個數字\n            for(int j=1; j<=target; j++){ // j : to sumup to\n\n                dp[i][j]=dp[i-1][j];\n                // 第i個數: nums.get(i-1)\n                if(j-nums.get(i-1)>=0 && dp[i-1][j-nums.get(i-1)]!=-1){ // 如果現在第i個數比我要sum的j小 而且以前有成功過\n                    dp[i][j] = Math.max(dp[i][j], 1 + dp[i-1][j-nums.get(i-1)]); // 長度就+1\n                }\n            }\n        }\n\n        return dp[siz][target]==0 ? -1 : dp[siz][target];\n\n    }\n}","compare_resulttitle_slug":"length-of-the-longest-subsequence-that-sums-to-target","has_notes":false,"flag_type":1}