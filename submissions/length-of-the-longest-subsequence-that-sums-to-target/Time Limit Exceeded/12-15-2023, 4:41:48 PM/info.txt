{"id":1120202351,"question_id":3106,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702629708,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1120202351/","is_pending":"Not Pending","title":"Length of the Longest Subsequence That Sums to Target","memory":"N/A","code":"class Solution {\n    int max = 0;\n    public int lengthOfLongestSubsequence(List<Integer> nums, int target) {\n        \n        helper(nums, 0, target, 0);\n        \n        return max==0 ? -1 : max;\n    }\n    \n    private void helper(List<Integer> nums, int idx, int target, int len){\n        if(target==0){\n            max = Math.max(max, len);\n            return;\n        }\n        if(target<0) return;\n        \n        for(int i=idx; i<nums.size(); i++){\n            if(nums.get(i)<=target){\n                helper(nums, i+1, target-nums.get(i), len+1);\n            }\n        }\n    }\n}","compare_resulttitle_slug":"length-of-the-longest-subsequence-that-sums-to-target","has_notes":false,"flag_type":1}