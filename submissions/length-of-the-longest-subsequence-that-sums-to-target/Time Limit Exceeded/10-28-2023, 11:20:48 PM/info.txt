{"id":1086127857,"question_id":3106,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698506448,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1086127857/","is_pending":"Not Pending","title":"Length of the Longest Subsequence That Sums to Target","memory":"N/A","code":"class Solution {\n    int max = -1;\n    public int lengthOfLongestSubsequence(List<Integer> nums, int target) {\n        Collections.sort(nums);\n        \n//         int[][] dp = new int[nums.size()+1][target]; // 用i個數字達成target 的最長長度\n//         // Arrays.fill(dp, -1);\n//         for(int i=1; i<=nums.size(); i++){\n//             int n = nums.get(i-1);\n//             if(dp[i-1][])\n//             if(n<target){\n//                 dp[i][]\n//             }\n//         }\n        \n        \n        helper(nums, new ArrayList<>(), target, 0);\n        \n        \n        return max;\n        \n        \n    }\n    \n    // TLE\n    private void helper(List<Integer> nums, List<Integer> curr, int target, int st){\n        if(target<0)\n            return ;\n        \n        if(target==0){\n            max = Math.max(max, curr.size());\n            // System.out.println(curr);\n            return;\n        }\n        \n        for(int i=st; i<nums.size(); i++){\n            if(nums.get(i)>target)\n                return;\n            \n            curr.add(nums.get(i));\n            helper(nums, curr, target-nums.get(i), i+1);\n            curr.remove(curr.size()-1);\n            \n        }\n    }\n}","compare_resulttitle_slug":"length-of-the-longest-subsequence-that-sums-to-target","has_notes":false,"flag_type":1}