{"id":1271986788,"question_id":236,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1717041341,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1271986788/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n\n        if(root==null || p==null || q==null) return null;\n        if(root.val==p.val || root.val==q.val) return root;\n\n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n\n        if(left!=null && right!=null) return root;\n\n        return left!=null ? left : right;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}