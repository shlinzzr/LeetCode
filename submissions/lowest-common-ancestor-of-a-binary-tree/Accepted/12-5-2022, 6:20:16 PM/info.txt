{"id":854957923,"question_id":236,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670235616,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/854957923/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"47 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        \n        //https://www.youtube.com/watch?v=13m9ZCB8gjw\n        \n        if(root==p || root==q || root==null)\n            return root;\n        \n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n        \n        if(left!=null && right!=null)\n            return root;\n        \n        if(left==null && right==null)\n            return null;\n        \n         return left == null ? right : left;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}