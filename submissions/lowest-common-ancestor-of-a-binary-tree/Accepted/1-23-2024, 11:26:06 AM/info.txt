{"id":1154190149,"question_id":236,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705980366,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1154190149/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"44.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        \n        if(root==p || root==q || root==null)\n            return root;\n        \n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n        \n        if(left!=null && right!=null) \n            return root;\n        else if(left==null && right!=null){\n            return right;\n        }else\n            return left;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}