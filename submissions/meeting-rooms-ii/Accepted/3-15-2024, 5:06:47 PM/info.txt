{"id":1204256995,"question_id":253,"lang":"java","lang_name":"Java","time":"2 months, 4 weeks","timestamp":1710493607,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1204256995/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"45.7 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n\n\n        int len = intervals.length;\n\n        Arrays.sort(intervals, (a,b)-> (a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]));\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b)->a[1]-b[1]);\n        pq.offer(intervals[0]);\n        int max = 1;\n\n        for(int i=1;  i<len; i++){\n\n            int[] cur = intervals[i];\n\n            while(!pq.isEmpty() && pq.peek()[1]<=cur[0]){\n                pq.poll();\n            }\n\n            pq.offer(cur);\n            max = Math.max(pq.size(), max);\n        }\n\n        return max;\n\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}