{"id":956353929,"question_id":253,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684921268,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/956353929/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"44.5 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        Arrays.sort(intervals, (a,b) -> a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> a[1]-b[1]\n        );\n        \n        int len = intervals.length;\n        int res = 1;\n        \n        \n        for(int i=0; i<len; i++){\n            \n            int[] curr = intervals[i];\n            \n            while(!pq.isEmpty() && pq.peek()[1]<=curr[0]){\n                pq.poll();\n            }\n            \n            pq.offer(curr);\n            \n            res = Math.max(res, pq.size());\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}