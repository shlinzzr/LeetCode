{"id":866681671,"question_id":253,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672196259,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/866681671/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"41.8 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        int max = 0;\n        int cnt = 1;\n        \n        if(intervals.length==1)\n            return 1;\n        \n        Arrays.sort(intervals, (a, b) -> a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a, b) -> a[1]-b[1]\n        );\n        \n        pq.add(intervals[0]);\n        \n        for(int i=1; i<intervals.length; i++){\n            \n            int[] next = intervals[i];\n            \n            if(next[0]>=pq.peek()[1]){\n                pq.poll();\n            }\n            pq.add(next);\n            \n        }\n        \n        return pq.size();\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}