{"id":1114047596,"question_id":253,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701919854,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1114047596/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"44.8 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        int len = intervals.length;\n        \n        Arrays.sort(intervals, (a,b)-> a[0]-b[0]);\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>( //st, ed\n            (a,b)-> a[1]-b[1]\n        );\n\n        int max= 1;\n        for(int i=0; i<len; i++){\n            int[] m = intervals[i];\n\n            while(!pq.isEmpty() && pq.peek()[1]<=m[0]){\n                pq.poll();\n            }\n\n            pq.offer(m);\n\n            max = Math.max(max, pq.size());\n\n        }\n\n        return max;\n    \n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}