{"id":1150310055,"question_id":253,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705632992,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1150310055/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"46.6 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        int len = intervals.length;\n        \n        Arrays.sort(intervals, (a,b)-> a[0]-b[0]);\n        \n        int max=0;\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b)-> a[1]-b[1]\n        );\n        \n        for(int i=0; i<len; i++){\n            int[] cur = intervals[i];\n            pq.offer(cur);\n            \n            if(pq.peek()[1]<=cur[0]){\n                pq.poll();\n            }\n            \n            max = Math.max(max, pq.size());\n        }\n        \n        return max;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}