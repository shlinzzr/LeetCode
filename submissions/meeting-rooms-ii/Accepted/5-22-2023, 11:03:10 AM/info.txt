{"id":954832246,"question_id":253,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684724590,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/954832246/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"44.7 MB","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        int max = 0;\n        int len = intervals.length;\n        \n        Arrays.sort(intervals, (a,b)->a[0]!=b[0]? a[0]-b[0] : a[1]-b[1]);\n        \n        \n        PriorityQueue<int[] > pq = new PriorityQueue<>(\n         (a,b) -> a[1]!=b[1] ? a[1]-b[1] : a[0]-b[0]\n        );\n        \n        //[[0,30],\n        \n        //[5,10],[15,20]]\n        \n        for(int[] curr : intervals){\n            \n            while(!pq.isEmpty() && curr[0] >= pq.peek()[1]){\n                pq.poll();\n            }\n            \n            pq.offer(curr);\n            \n            max = Math.max(max, pq.size());\n        }\n            \n        return max;        \n            \n            \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}