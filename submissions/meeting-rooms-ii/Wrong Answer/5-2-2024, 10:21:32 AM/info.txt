{"id":1247005901,"question_id":253,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714616492,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1247005901/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n\n        int len = intervals.length;\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b)-> (a[1]-b[1])\n        );\n\n        Arrays.sort(intervals, (a,b)->a[0]-b[0]);\n\n        int max = 0;\n        for(int i=0; i<len; i++){\n            int[] cur = intervals[i];\n            while(!pq.isEmpty() && pq.peek()[1]<cur[0])\n                pq.poll();\n\n            pq.offer(cur);\n            max = Math.max(max, pq.size());\n        }\n\n        return max;\n        \n    }\n}","compare_result":"1111111111100011111111111011101111011111010111010101111111111111111111111111000","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}