{"id":866675029,"question_id":253,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672195107,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866675029/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        int max = 0;\n        int cnt = 1;\n        \n        if(intervals.length==1)\n            return 1;\n        \n        Arrays.sort(intervals, (a, b) -> a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n\n        \n        \n        \n        int[] curr = intervals[0];\n        for(int i=1; i<intervals.length; i++){\n            \n            int[] next = intervals[i];\n            \n            if(next[0]<curr[0]){\n                cnt++;\n               \n                \n            }else if (next[0]<curr[1]){\n                cnt=2;\n                \n            }else{\n                cnt=1;\n                 \n            }\n            \n             max = Math.max(max, cnt);\n                \n            \n            curr[0] = Math.min(curr[1], next[1]);\n            curr[1] = Math.max(curr[1], next[1]);\n            \n        }\n        return max;\n        \n    }\n}","compare_result":"111111111111111111111111111111101101111101111110101111100111001000010110000011","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}