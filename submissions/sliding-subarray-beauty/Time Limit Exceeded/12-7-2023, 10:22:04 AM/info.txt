{"id":1114017811,"question_id":2751,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701915724,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1114017811/","is_pending":"Not Pending","title":"Sliding Subarray Beauty","memory":"N/A","code":"class Solution {\n    public int[] getSubarrayBeauty(int[] nums, int k, int x) {\n        int len = nums.length;\n\n        int[] res = new int[len-k+1];\n\n        PriorityQueue<Integer> pq = new PriorityQueue<>(\n          (a,b) -> a-b\n        );\n\n        // TreeMap<Integer, Integer> map = new TreeMap<>();\n\n        int st =0;\n        for(int ed=0; ed<len; ed++){\n            // map.put(nums[ed], map.getOrDefault(nums[ed], 0)+1);\n            pq.offer(nums[ed]);\n            if(ed<k-1) continue;\n\n            List<Integer> list = new ArrayList<>(pq);\n            Collections.sort(list);\n            // System.out.println(list);\n\n            if(list.size()>=x && list.get(x-1)<0)\n              res[st]= list.get(x-1);\n\n            pq.remove(nums[st]);\n            st++;\n\n\n        }\n\n        return res;\n\n    }\n}","compare_resulttitle_slug":"sliding-subarray-beauty","has_notes":false,"flag_type":1}