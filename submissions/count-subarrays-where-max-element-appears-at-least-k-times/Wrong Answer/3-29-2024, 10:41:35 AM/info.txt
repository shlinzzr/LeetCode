{"id":1216903284,"question_id":3213,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1711680095,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1216903284/","is_pending":"Not Pending","title":"Count Subarrays Where Max Element Appears at Least K Times","memory":"N/A","code":"class Solution {\n    public long countSubarrays(int[] nums, int k) {\n\n        long res = 0;\n        int len = nums.length;\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n\n        int ed= 0;\n        for(int st = 0; st<len; st++){\n\n            while(ed<len && (map.isEmpty() || map.get(map.lastKey())<k)){\n                map.put(nums[ed], map.getOrDefault(nums[ed],0)+1);\n                ed++;\n            }\n\n            if(map.get(map.lastKey())>=k){\n                res+=len-ed+1;\n            }\n\n            map.put(nums[st], map.get(nums[st])-1);\n        }\n\n        return res;\n    }\n}","compare_resulttitle_slug":"count-subarrays-where-max-element-appears-at-least-k-times","has_notes":false,"flag_type":1}