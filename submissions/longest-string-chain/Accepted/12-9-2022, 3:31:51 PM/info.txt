{"id":857023205,"question_id":1129,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670571111,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/857023205/","is_pending":"Not Pending","title":"Longest String Chain","memory":"66.9 MB","code":"class Solution {\n    public int longestStrChain(String[] words) {\n        \n        if(words == null || words.length == 0) \n            return 0;\n        \n        int res = 0;\n        Arrays.sort(words, (a,b)-> a.length()-b.length());  // Sort the words based on their lengths\n        HashMap<String, Integer> map = new HashMap();       //Stores each word and length of its max chain.\n\n        for(String w : words) {                             //From shortest word to longest word\n            map.put(w, 1);                                  //Each word is atleast 1 chain long\n            for(int i=0; i<w.length(); i++) {               //Form next word removing 1 char each time for each w\n                StringBuilder sb = new StringBuilder(w);\n                String next = sb.deleteCharAt(i).toString();\n                if(map.containsKey(next) && map.get(next)+1 > map.get(w))\n                    map.put(w, map.get(next)+1);            //If the new chain is longer, update the map\n            }\n            res = Math.max(res, map.get(w));                //Store max length of all chains\n        }\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain","has_notes":false,"flag_type":1}