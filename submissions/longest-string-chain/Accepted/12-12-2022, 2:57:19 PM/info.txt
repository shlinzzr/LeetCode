{"id":858494539,"question_id":1129,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670828239,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/858494539/","is_pending":"Not Pending","title":"Longest String Chain","memory":"42.3 MB","code":"class Solution {\n    public int longestStrChain(String[] words) {\n        \n        Arrays.sort(words, (a,b)->a.length()-b.length());\n        \n        HashMap<String, Integer> map = new HashMap<>();\n        \n        \n        int len = words.length;\n        int res = 0;\n//         int dp = new int[len+1];\n//         Arrays.fill(dp,1);\n//         dp[0]=0;\n//         dp[1]=1;\n        \n        \n        for(String w : words){\n            \n            map.put(w, 1);\n            \n            \n            \n            for(int j=0; j<w.length(); j++){\n                \n                StringBuilder sb = new StringBuilder(w);\n                String next = sb.deleteCharAt(j).toString();\n                if(map.containsKey(next) && map.get(next)+1 > map.get(w))\n                    map.put(w, map.get(next)+1);        \n                \n            }\n            \n             res = Math.max(res, map.get(w));       \n        }\n        \n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain","has_notes":false,"flag_type":1}