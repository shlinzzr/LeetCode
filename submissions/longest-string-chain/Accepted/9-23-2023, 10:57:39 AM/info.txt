{"id":1056759355,"question_id":1129,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1695437859,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/1056759355/","is_pending":"Not Pending","title":"Longest String Chain","memory":"43.8 MB","code":"class Solution {\n    public int longestStrChain(String[] words) {\n        \n        Arrays.sort(words, (a,b)-> a.length()-b.length());        \n        \n        int len = words.length;\n        \n        HashMap<String, Integer>  map = new HashMap<>();\n        \n        int res = 0;\n        \n        for(String w : words){\n            map.put(w, 1);\n            \n            for(int i=0; i<w.length();i++){\n                \n                StringBuilder sb = new StringBuilder(w);\n                String next = sb.deleteCharAt(i).toString();\n                if(map.containsKey(next)&&map.get(next)+1>map.get(w)){\n                    map.put(w, map.get(next)+1);\n                }\n                \n            }\n            \n            res = Math.max(res, map.get(w));\n            \n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain","has_notes":false,"flag_type":1}