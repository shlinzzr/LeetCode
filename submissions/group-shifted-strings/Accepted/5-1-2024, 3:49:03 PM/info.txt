{"id":1246350608,"question_id":249,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714549743,"status":10,"status_display":"Accepted","runtime":"283 ms","url":"/submissions/detail/1246350608/","is_pending":"Not Pending","title":"Group Shifted Strings","memory":"45.1 MB","code":"class Solution {\n    public List<List<String>> groupStrings(String[] strs) {\n        \n        Map<String, List<String>> map = new HashMap<>();\n        \n        int len = strs.length;\n        \n        for(int i=0; i<len; i++){\n            String w = strs[i];\n            String org = getOrg(w.toCharArray());\n            \n            map.putIfAbsent(org, new ArrayList<>());\n            map.get(org).add(w);\n        }\n        \n        List<List<String>> res = new ArrayList<>();\n        \n        for(List<String> list : map.values()){\n            res.add(list);\n        }\n        \n        return res;\n        \n        \n    }\n    \n    private String getOrg(char[] arr) {\n        \n        while(arr[0]!='a'){\n            \n            for(int i=0; i<arr.length; i++){\n                int idx = arr[i]-'a';\n                idx = (idx + 27)%26;\n                arr[i] = (char) (idx+'a');\n                \n                System.out.println(idx);\n            }\n            \n        }\n        \n        return new String(arr);\n    }\n    \n}","compare_result":"1111111111111111111111111","title_slug":"group-shifted-strings","has_notes":false,"flag_type":1}