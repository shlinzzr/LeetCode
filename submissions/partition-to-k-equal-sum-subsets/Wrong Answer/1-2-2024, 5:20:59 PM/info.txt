{"id":1134484877,"question_id":698,"lang":"java","lang_name":"Java","time":"5Â months, 1Â week","timestamp":1704187259,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1134484877/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"N/A","code":"class Solution {\n    int cnt =0 ;\n    public boolean canPartitionKSubsets(int[] nums, int k) {\n        int len = nums.length;\n\n        int sum = 0 ;\n        for(int n : nums){\n            sum+=n;\n        }\n\n        if(sum%k!=0) return false;\n        int target = sum/4;\n        dfs(nums, 0, target);\n\n        return cnt>=4;\n    }\n\n    private void dfs(int[] nums, int state, int target){\n        if(target<0) return;\n        if(target==0){\n            cnt++;\n            return ;\n        }\n\n        for(int i=0; i<nums.length; i++){\n            if( (state & (1<<i))==0){\n                dfs(nums, state|(1<<i), target-nums[i]);\n            }\n        }\n    }\n}","compare_result":"1111111111111101011111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-to-k-equal-sum-subsets","has_notes":false,"flag_type":1}