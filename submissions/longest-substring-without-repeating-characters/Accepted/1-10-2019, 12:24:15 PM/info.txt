{"id":200262077,"question_id":3,"lang":"java","lang_name":"Java","time":"5 years, 5 months","timestamp":1547094255,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/200262077/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"24.6 MB","code":"// class Solution {\n//     public int lengthOfLongestSubstring(String s) {\n//         Character c = null;\n//         List<Character> ac = new ArrayList<Character>();\n//         int max = 0, start_idx = 0;\n        \n//         for(int i=0; i<s.length(); i++){\n            \n//             for(int j=i; j<s.length(); j++){\n//                 c = s.charAt(j);\n//                 System.out.println(c);\n                \n//                 //if(c.equals(\"\")) continue;\n                \n//                 /*\n//                   The size of an array can't be modified. \n//                   A better solution would be to use an ArrayList which can grow as you need it. \n//                 */\n                \n//                 if(!ac.contains(c)){\n//                     ac.add(c);\n                    \n//                 }else{\n                   \n//                     ac.clear();\n//                     break;\n//                 }\n//                 max = Math.max(max, ac.size());\n//             }\n            \n//         }\n \n      \n        \n//         return max;\n//     }\n \n// }\n\nclass Solution {\n\npublic int lengthOfLongestSubstring(String s) {\n    int i = 0, j = 0, max = 0;\n    Set<Character> set = new HashSet<>();\n    \n    while (j < s.length()) {\n        if (!set.contains(s.charAt(j))) {\n            set.add(s.charAt(j++));\n            max = Math.max(max, set.size());\n        } else {\n            set.remove(s.charAt(i++));\n        }\n    }\n    \n    return max;\n}\n}","compare_resulttitle_slug":"longest-substring-without-repeating-characters","has_notes":false,"flag_type":1}