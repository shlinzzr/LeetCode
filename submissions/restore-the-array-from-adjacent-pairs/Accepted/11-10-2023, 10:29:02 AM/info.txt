{"id":1095630873,"question_id":1866,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1699583342,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/1095630873/","is_pending":"Not Pending","title":"Restore the Array From Adjacent Pairs","memory":"85.6 MB","code":"class Solution {\n    public int[] restoreArray(int[][] adj) {\n        int len = adj.length;\n        HashMap<Integer, List<Integer>> g = new HashMap<>();\n\n        for(int[] a: adj){\n            g.putIfAbsent(a[0],  new ArrayList<>());\n            g.putIfAbsent(a[1],  new ArrayList<>());\n            g.get(a[0]).add(a[1]);\n            g.get(a[1]).add(a[0]);\n        }\n\n        Set<Integer> seen = new HashSet<>();\n        Queue<Integer> q = new LinkedList<>();\n        List<Integer> list = new ArrayList<>();\n\n        for(int k: g.keySet()){\n            if(g.get(k).size()==1){\n                q.offer(k);\n                seen.add(k);\n                list.add(k);\n                break;\n            }\n        }\n\n        while(!q.isEmpty()){\n\n            int p = q.poll();\n            for(int nxt : g.get(p)){\n                if(!seen.contains(nxt)){\n                    list.add(nxt);\n                    q.offer(nxt);\n                    seen.add(nxt);\n                }\n            }\n        }\n\n        int[] res = new int[list.size()];\n        for(int i=0; i<list.size(); i++){\n            res[i] = list.get(i);\n        }\n\n        return res;\n\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"restore-the-array-from-adjacent-pairs","has_notes":false,"flag_type":1}