{"id":1033869417,"question_id":465,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693208746,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1033869417/","is_pending":"Not Pending","title":"Optimal Account Balancing","memory":"39.8 MB","code":"class Solution {\n    public int minTransfers(int[][] trans) {\n        \n        \n        // happygirlzt https://www.youtube.com/watch?v=HHKJPtsOGwk \n        \n        int len = trans.length;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        \n        for(int i=0; i<len; i++){\n            int f = trans[i][0];\n            int t = trans[i][1];\n            int a = trans[i][2];\n            \n            map.put(f, map.getOrDefault(f, 0)-a);\n            map.put(t, map.getOrDefault(t, 0)+a);\n        }\n        \n        \n        List<Integer> list = new ArrayList<>();\n        for(Map.Entry<Integer, Integer> en : map.entrySet()){\n            if(en.getValue()!=0)\n                list.add(en.getValue());\n        }\n        \n        return  dfs(0, list); // backtracking\n        \n    }\n    \n    \n    private int dfs(int idx, List<Integer> list){\n        if(idx==list.size())\n            return 0;\n        \n        int cur = list.get(idx);\n        if(cur==0)\n            return dfs(idx+1, list);\n        \n        int min = Integer.MAX_VALUE;\n        for(int i=idx+1; i<list.size(); i++){\n            \n            int next = list.get(i); // original\n            if(next*cur<0){ //當balance互相為負才做事\n                list.set(i, cur+next);\n                min = Math.min(min , 1+dfs(idx+1, list));\n                list.set(i, next); // recover to org\n                \n                if(cur+next==0) break;\n            }\n        }\n        return min;\n    }\n    \n    \n    \n}","compare_result":"111111111111111111111111111111111111","title_slug":"optimal-account-balancing","has_notes":false,"flag_type":1}