{"id":1048913880,"question_id":332,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694659934,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1048913880/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"N/A","code":"class Solution {\n\n\n    int ticketsCnt=0;\n    List<String> res = new ArrayList<>();\n    public List<String> findItinerary(List<List<String>> tickets) {\n\n        ticketsCnt = tickets.size();\n       \n\n        HashMap<String, List<String>> map = new HashMap<>();\n        HashMap<String, Integer> deg = new HashMap<>();\n\n        List<String> maxList = new ArrayList<>();\n        int maxDeg = 0;\n\n        \n\n        for(List<String> list : tickets){\n\n            String a = list.get(0);\n            String b = list.get(1);\n            map.putIfAbsent(a, new ArrayList<>());\n            map.get(a).add(b);\n\n            deg.put(a, deg.getOrDefault(a,0)+1);\n\n            if(deg.get(a)>=maxDeg){\n                if(deg.get(a)>maxDeg){\n                    maxDeg = deg.get(a);\n                    maxList = new ArrayList<>();\n                }\n                maxList.add(a);\n            }\n\n            deg.put(b, deg.getOrDefault(b,0)-1);\n        } \n\n        for(String key : map.keySet()){\n            Collections.sort(map.get(key));\n        }\n\n        for(String st : maxList){\n            List<String> curr =new ArrayList<>();\n            curr.add(st);\n            dfs(map, st, new HashSet<>(), curr);\n            if(!res.isEmpty())\n                return res;\n        }\n\n        return res;\n\n    }\n\n    private void dfs(HashMap<String, List<String>> map, String st, HashSet<String> seen, List<String> curr ){\n\n\n\n        if(curr.size()==ticketsCnt+1){\n            res = new ArrayList<>(curr);\n            return;\n        }\n\n\n       \n        for(String next : map.getOrDefault(st, new ArrayList<>())){\n\n            if(!seen.contains(st+\"_\"+next)){\n                seen.add(st+\"_\"+next);\n                curr.add(next);\n                dfs(map, next, seen, curr);\n                if(!res.isEmpty())\n                    return;\n\n                curr.remove(curr.size()-1);\n                seen.remove(st+\"_\"+next);\n            }\n        }\n    }\n}","compare_result":"11111111000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reconstruct-itinerary","has_notes":false,"flag_type":1}