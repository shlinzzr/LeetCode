{"id":1048941986,"question_id":332,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694663108,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1048941986/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"44.1 MB","code":"class Solution {\n    public List<String> findItinerary(List<List<String>> tickets) {\n        Map<String, PriorityQueue<String>> graph = new HashMap<>();\n        \n        for (List<String> ticket : tickets) {\n            graph.putIfAbsent(ticket.get(0), new PriorityQueue<>());\n            graph.get(ticket.get(0)).add(ticket.get(1));\n        }\n        \n        LinkedList<String> res = new LinkedList<>();\n        \n        dfs(\"JFK\", graph, res);\n        \n        return res;\n    }\n    \n    private void dfs(String curr, Map<String, PriorityQueue<String>> graph, LinkedList<String> res) {\n        PriorityQueue<String> nextq = graph.get(curr);\n        while (nextq != null && !nextq.isEmpty()) {\n            dfs(nextq.poll(), graph, res);\n        }\n        res.addFirst(curr);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary","has_notes":false,"flag_type":1}