{"id":1048921980,"question_id":332,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694660865,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1048921980/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"44.7 MB","code":"class Solution {\n    public List<String> findItinerary(List<List<String>> tickets) {\n        Map<String, PriorityQueue<String>> graph = new HashMap<>();\n        \n        for (List<String> ticket : tickets) {\n            graph.putIfAbsent(ticket.get(0), new PriorityQueue<>());\n            graph.get(ticket.get(0)).add(ticket.get(1));\n        }\n        \n        LinkedList<String> itinerary = new LinkedList<>();\n        \n        dfs(\"JFK\", graph, itinerary);\n        \n        return itinerary;\n    }\n    \n    private void dfs(String airport, Map<String, PriorityQueue<String>> graph, LinkedList<String> itinerary) {\n        PriorityQueue<String> nextAirports = graph.get(airport);\n        while (nextAirports != null && !nextAirports.isEmpty()) {\n            dfs(nextAirports.poll(), graph, itinerary);\n        }\n        itinerary.addFirst(airport);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary","has_notes":false,"flag_type":1}