{"id":943138305,"question_id":2592,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1683020216,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/943138305/","is_pending":"Not Pending","title":"Minimum Total Cost to Make Arrays Unequal","memory":"62.4 MB","code":"class Solution {\n    public long minimumTotalCost(int[] nums1, int[] nums2) {\n        int n = nums1.length;\n        HashMap<Integer, Integer>  count = new HashMap<>();\n        \n        int total = 0;\n        long ret = 0;\n        for (int i=0; i<n; i++)\n        {\n            if (nums1[i]==nums2[i])\n            {\n                \n                count.put(nums1[i], count.getOrDefault(nums1[i], 0)+1);\n                total++;\n                ret += i;\n            }                \n        }\n        \n        int maxCount = 0;        \n        \n        for(Map.Entry<Integer, Integer> en : count.entrySet()){\n            maxCount = Math.max(maxCount, en.getValue());        \n        }\n        \n        int maxVal=0;\n       for(Map.Entry<Integer, Integer> en : count.entrySet()){\n            if (en.getValue()==maxCount)\n                maxVal = en.getKey();\n       }\n               \n        if (maxCount <= total-maxCount)\n            return ret;\n\n        int extra = maxCount - (total - maxCount);\n        for (int i=0; i<n; i++)\n        {\n            if (extra==0) break;\n            if (nums1[i]==nums2[i]) continue;\n            if (nums1[i]==maxVal || nums2[i]==maxVal) continue;            \n            extra--;\n            ret += i;\n        }\n\n        if (extra==0)\n            return ret;\n        else\n            return -1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-total-cost-to-make-arrays-unequal","has_notes":false,"flag_type":1}