{"id":698001586,"question_id":120,"lang":"java","lang_name":"Java","time":"2 years, 1 month","timestamp":1652348975,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/698001586/","is_pending":"Not Pending","title":"Triangle","memory":"41.8 MB","code":"class Solution {\npublic int minimumTotal(List<List<Integer>> triangle) {\n\tint rowNum = triangle.size();\n\tint[] dp = new int[rowNum];\n\tfor (int i = 0; i < triangle.get(rowNum - 1).size(); i++) {\n\t\tdp[i] = triangle.get(rowNum - 1).get(i);\n\t}\n\tfor (int row = rowNum - 2; row >= 0; row--) {// for each layer\n\t\tfor (int col = 0; col <= row; col++) {\n\t\t\tdp[col] = Math.min(dp[col], dp[col + 1])\n\t\t\t\t\t+ triangle.get(row).get(col);\n\t\t}\n\t}\n\treturn dp[0];\n}\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}