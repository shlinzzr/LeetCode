{"id":843112153,"question_id":120,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668409293,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/843112153/","is_pending":"Not Pending","title":"Triangle","memory":"44.4 MB","code":"class Solution {\n    \n    int min = Integer.MAX_VALUE;\n    \n//     public int minimumTotal(List<List<Integer>> triangle) {\n// \tint rowNum = triangle.size();\n// \tint[] dp = new int[rowNum];\n// \tfor (int i = 0; i < triangle.get(rowNum - 1).size(); i++) {\n// \t\tdp[i] = triangle.get(rowNum - 1).get(i);\n// \t}\n// \tfor (int row = rowNum - 2; row >= 0; row--) {// for each layer\n// \t\tfor (int col = 0; col <= row; col++) {\n// \t\t\tdp[col] = Math.min(dp[col], dp[col + 1]) + triangle.get(row).get(col);\n// \t\t}\n// \t}\n    \n    \n// \treturn dp[0];\n// }\n    \n    \n    public int minimumTotal(List<List<Integer>> triangle) {\n        \n        int len = triangle.size();\n        \n        int[] dp = new int[len];\n        \n        // initialize\n        for(int j=0;j<len; j++){\n            dp[j] = triangle.get(len-1).get(j);\n        }    \n        \n        \n        for(int i=len-2; i>=0; i--){\n            \n            for(int j=0; j<=i; j++){\n                dp[j] = Math.min(dp[j],dp[j+1]) + triangle.get(i).get(j);\n            }\n        }\n        \n        return dp[0];\n        \n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}