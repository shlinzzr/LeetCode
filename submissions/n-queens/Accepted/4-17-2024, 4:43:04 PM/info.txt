{"id":1234713908,"question_id":51,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713343384,"status":10,"status_display":"Accepted","runtime":"2835 ms","url":"/submissions/detail/1234713908/","is_pending":"Not Pending","title":"N-Queens","memory":"44.8 MB","code":"class Solution {\n    public List<List<String>> solveNQueens(int n) {\n        List<List<String>> res = new ArrayList<>();\n\n        char[][] arr = new char[n][n];\n\n        boolean[] rowUsed = new boolean[n];\n        boolean[] colUsed = new boolean[n];\n        for(int i=0; i<n; i++){\n            Arrays.fill(arr[i], '.');\n        }\n\n        dfs(arr, res, n, rowUsed, colUsed);\n\n        return res;\n    }\n\n    private void dfs(char[][] arr, List<List<String>> res, int n, boolean[] rowUsed, boolean[] colUsed){\n        if(n==0){\n            List<String> list = new ArrayList<>();\n            for(int i=0; i<arr.length; i++){\n                list.add(new String(arr[i]));\n            }\n            res.add(list);\n            return;\n        }\n\n\n        for(int i=0; i<arr.length; i++){\n            if(rowUsed[i]) continue;\n            \n            for(int j=0; j<n; j++){\n                if(colUsed[j]) continue;\n\n                if(!isValid(arr, i, j)) continue;\n                \n                rowUsed[i] = true;\n                colUsed[j] = true;\n\n                arr[i][j] = 'Q';\n                dfs(arr, res, n-1, rowUsed, colUsed);\n                arr[i][j] = '.';\n                rowUsed[i] = false;\n                colUsed[j] = false;\n\n            }\n            \n        }\n    }\n\n     /*\n\n     [\n        [\"...Q\"\n        ,\"Q...\"\n        ,\"..Q.\"\n        ,\".Q..\"]\n\n       [[\".Q..\"\n        ,\"...Q\"\n        ,\"Q...\"\n        ,\"..Q.\"],\n\n        [\"Q...\"\n        ,\"...Q\"\n        ,\".Q..\"\n        ,\"..Q.\"]\n     */   \n\n\n\n\n\n    private boolean isValid(char[][] arr, int r, int c){\n        int n = arr.length;\n        // // // check left, \n        // String s = curr.get(r);\n        // for(int j=0; j<s.length(); j++){\n        //     if(s.charAt(j)=='Q')\n        //         return false;\n        // }\n\n        // // check up.\n\n        // for(int i=0; i<curr.size(); i++){\n        //     String s = new String(arr[i])\n        //     if(s.charAt(c)=='Q')\n        //         return false;\n        // }\n\n        // check left up,\n        for(int i=r-1, j=c-1; i>=0 && j>=0; i--, j--){\n            char ch = arr[i][j];\n            if(ch=='Q') return false;\n        }\n\n        // check right up\n        for(int i=r-1, j=c+1; i>=0 && j<n; i--, j++){\n            char ch = arr[i][j];\n            if(ch=='Q') return false;\n        }\n\n         // check left down,\n        for(int i=r+1, j=c+1; i<n && j<n; i++, j++){\n            char ch = arr[i][j];\n            if(ch=='Q') return false;\n        }\n\n        // check right down,\n        for(int i=r+1, j=c-1; i<n && j>=0; i++, j--){\n            char ch = arr[i][j];\n            if(ch=='Q') return false;\n        }\n\n        return true;\n\n    }\n}","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}