{"id":1234737590,"question_id":51,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713345663,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1234737590/","is_pending":"Not Pending","title":"N-Queens","memory":"44.4 MB","code":"class Solution {\n    public List<List<String>> solveNQueens(int n) {\n        List<List<String>> res = new ArrayList<>();\n\n        char[][] arr = new char[n][n];\n        for(int i=0; i<n; i++){\n            Arrays.fill(arr[i], '.');\n        }\n\n        dfs(arr, 0, res);\n\n        return res;\n\n    }\n\n    private void dfs(char[][] arr, int r, List<List<String>> res){\n        if(r==arr.length){\n            List<String> list = new ArrayList<>();\n            for(int i=0; i<arr.length; i++){\n                list.add(new String(arr[i]));\n            }\n            res.add(list);\n            return;\n        }\n\n        for(int j=0; j<arr.length; j++){\n            if(isValid(arr, r, j)){\n                arr[r][j] = 'Q';\n                // System.out.println();\n                // for(int k=0; k<arr.length; k++){\n                //     System.out.println(new String(arr[k]));\n                // }\n                dfs(arr, r+1, res);\n                arr[r][j] = '.';   \n            }\n        }\n    }\n\n    private boolean isValid(char[][] arr, int r, int c){\n        int n = arr.length;\n        for(int i=0; i<r; i++){\n            if(arr[i][c]=='Q') return false;\n        }   \n\n        // check top-left\n        for(int i=r-1, j=c-1; i>=0&&j>=0; i--, j--){\n            if(arr[i][j]=='Q') return false;   \n        }\n\n        // check top-right\n        for(int i=r-1,j=c+1; i>=0&&j<n; i--,j++){\n            if(arr[i][j]=='Q') return false;\n        }\n\n        return true;\n\n\n    }\n\n}","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}