{"id":1275851559,"question_id":51,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1717382155,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1275851559/","is_pending":"Not Pending","title":"N-Queens","memory":"44.6 MB","code":"class Solution {\n    public List<List<String>> solveNQueens(int n) {\n\n        List<List<String>> res = new ArrayList<>();\n\n        char[][] arr = new char[n][n];\n        for(int i=0; i<n; i++){\n            Arrays.fill(arr[i], '.');\n        }\n\n\n        dfs(arr, 0, res);\n\n        return res;\n    } \n\n    private void dfs(char[][] arr, int r, List<List<String>> res){\n        int n = arr.length;\n\n        if(r==n){\n            List<String> list = new ArrayList<>();\n            for(int i=0; i<n; i++){\n                String s = new String(arr[i]);\n                list.add(s);\n            }\n            res.add(list);\n            return;\n        }\n\n        for(int j=0; j<n; j++){\n            if(isValid(arr, r, j)){\n                arr[r][j] = 'Q';\n                dfs(arr, r+1, res);\n                arr[r][j] = '.';\n            }\n        }\n    }\n\n    private boolean isValid(char[][] arr, int r, int c){\n\n        int n = arr.length;\n        for(int k=0; k<n; k++){\n            if(arr[r][k]=='Q') return false;\n            if(arr[k][c]=='Q') return false;\n        }\n\n        for(int i=r, j=c; i<n&&j<n; i++,j++){\n            if(arr[i][j]=='Q') return false;\n        }\n\n        for(int i=r, j=c; i>=0&&j>=0; i--,j--){\n            if(arr[i][j]=='Q') return false;\n        }\n\n        for(int i=r, j=c; i>=0&&j<n; i--,j++){\n            if(arr[i][j]=='Q') return false;\n        }\n        for(int i=r, j=c; i<n&&j>=0; i++,j--){\n            if(arr[i][j]=='Q') return false;\n        }\n        return true;\n\n    }\n}","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}