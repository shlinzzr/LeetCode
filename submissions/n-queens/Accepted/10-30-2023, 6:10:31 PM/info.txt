{"id":1087460369,"question_id":51,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698660631,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1087460369/","is_pending":"Not Pending","title":"N-Queens","memory":"44 MB","code":"class Solution {\n    public List<List<String>> solveNQueens(int n) {\n        List<List<String>> res = new ArrayList<>();\n        char[][] mat = new char[n][n];\n        for(char[] m : mat){\n            Arrays.fill(m, '.');\n        }\n        \n\n        helper(res, mat, 0, n);\n\n        return res;\n    }\n\n    private void helper(List<List<String>>res , char[][] mat , int i, int n){\n        if(i==n){\n            List<String> list = new ArrayList<>();\n            for(char[] m : mat){\n                list.add(new String(m));\n            }\n            \n            res.add(list);\n            return;\n        }\n\n        for(int j=0; j<n; j++){\n\n            if(isValid(mat, i, j)){\n                mat[i][j] = 'Q';\n                helper(res, mat, i+1, n);\n                mat[i][j]= '.';\n            }\n        }\n    }\n\n    private boolean isValid(char[][] mat, int r, int c ){\n\n        // check vertical\n        for(int i=0; i<r; i++){\n            if(mat[i][c]=='Q')\n                return false;\n        }\n\n        //check horizontal\n        for(int j=0; j<c; j++){\n            if(mat[r][j]=='Q')\n                return false;\n        }\n\n        int k=1;\n        // check top-left\n        while(r-k>=0 && c-k>=0){\n            if(mat[r-k][c-k]=='Q')\n                return false;\n            k++;\n        }\n\n        //check top-right\n        k=1;\n        while(r-k>=0 && c+k<mat.length){\n            if(mat[r-k][c+k]=='Q')\n                return false;\n            k++;\n        }\n\n        return true;\n\n\n\n    }\n}","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}