{"id":1236369915,"question_id":61,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713510379,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1236369915/","is_pending":"Not Pending","title":"Rotate List","memory":"42.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n\n        if(k==0 || head==null) return head;\n\n\n        ListNode curr = head;\n        int cnt = 0;\n        while(curr!=null){\n            curr=curr.next;\n            cnt++;\n        }\n\n        int len = cnt;\n        k = k%len;\n        if(k==0) return head;\n        k = len-k;\n\n        //\n        curr = head;\n        cnt = 0;    \n        ListNode prev= new ListNode();\n\n        while(cnt<k){\n            prev= curr;\n            curr = curr.next;\n            cnt++;\n        }\n        prev.next = null;\n        ListNode res=curr;\n        while(curr!=null){\n            prev=curr;\n            curr= curr.next;   \n        }\n        prev.next=head;\n        return res;\n\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}