{"id":893955854,"question_id":61,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675850665,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/893955854/","is_pending":"Not Pending","title":"Rotate List","memory":"41.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        \n        int len = 0;\n        ListNode curr=head;\n        while(curr!=null){\n            len++;\n            curr=curr.next;\n        }\n        \n        if(len==0)\n            return null;\n        \n        k=k%len;\n        \n        if(len==1 || k==0)\n            return head;\n        \n        \n        \n        k=len-k-1;\n        curr=head;\n        for(int i=0; i<k; i++){\n            curr=curr.next;\n        }\n        ListNode newHead = curr.next;\n        curr.next=null;\n        \n        ListNode prev= null;\n        curr=newHead;\n        while(curr!=null){\n            prev= curr;\n            curr=curr.next;\n        }\n        \n        if(prev!=null)\n            prev.next=head;\n        \n        \n        return newHead;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}