{"id":880476108,"question_id":61,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1674036526,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/880476108/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        \n        if(k==0)\n            return head;\n        \n        if(head==null)\n            return null;\n        \n        ListNode curr = head;\n        int len = 0;\n        while(curr!=null){\n            len++;\n            curr=curr.next;\n        }\n        \n        if(len==1)\n            return head;\n        \n        k = k%len;\n        int step =len-k;\n        curr=head;\n        ListNode prev = null;\n        while(step>0){\n            prev=curr;\n            curr=curr.next;\n            step--;\n        }\n        \n        prev.next=null;\n        ListNode newHead = curr;\n        \n        while(curr!=null){\n            prev=curr;\n            curr=curr.next;\n        }\n        prev.next = head;\n        \n        return newHead;\n        \n        \n    }\n}","compare_result":"111111111011111101111111011110110111111110110111111110111111111111111111111111111111111111111111011101111111011101101111111101111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}