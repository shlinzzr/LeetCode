{"id":938833932,"question_id":2616,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682322951,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/938833932/","is_pending":"Not Pending","title":"Maximal Score After Applying K Operations","memory":"N/A","code":"class Solution {\n    public long maxKelements(int[] nums, int k) {\n        Arrays.sort(nums);\n        \n        int len = nums.length;\n        \n        int score=0;\n        int idx=len-1;\n        \n        \n        PriorityQueue<Integer> pq = new PriorityQueue<>(\n            (a,b)-> Integer.compare(b,a)\n        );\n        for(int n: nums){\n            pq.offer(n);\n        }\n        \n        \n        while(k>0){\n            \n            int val = pq.poll();\n            score+=val;\n            \n            val = (int) Math.ceil(nums[idx]/3);\n            \n            pq.offer(val);\n            k--;\n        }\n        \n        return score;\n        \n    }\n}","compare_result":"101101000100000100000000000000000010010","title_slug":"maximal-score-after-applying-k-operations","has_notes":false,"flag_type":1}