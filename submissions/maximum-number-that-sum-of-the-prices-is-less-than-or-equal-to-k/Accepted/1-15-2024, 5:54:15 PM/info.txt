{"id":1146751373,"question_id":3240,"lang":"java","lang_name":"Java","time":"4 months, 4 weeks","timestamp":1705312455,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1146751373/","is_pending":"Not Pending","title":"Maximum Number That Sum of the Prices Is Less Than or Equal to K","memory":"40.6 MB","code":"class Solution {\n    private long getCurrSum(long num, int x) {\n        long count = 0;\n        for (int b = x - 1; b < 60; b += x) {\n\t\t\t// This gives the count of full cycles of bits in the binary representation of numbers from 1 to num.\n            long fullCycles = num / (1L << (b + 1)); \n\t\t\t//  count of set bits at the current position, given by (1L << b).\n            count += fullCycles * (1L << b); \n\t\t\t // Calculate the remaining bits after the full cycles \n            long remaining = num % (1L << (b + 1));\n\t\t\t // This part ensures that only the relevant remaining bits are considered, and any excess bits are ignored.\n            count += Math.max(0, remaining - (1L << b));\n        }\n        return count;\n    }\n\t\n    public long findMaximumNumber(long k, int x) {\n        long st = 1, ed= (long) 1e15, result = 0;\n        while (st <= ed) {\n            long mid = st + (ed - st) / 2;\n            if (getCurrSum(mid + 1, x) <= k) {\n                result = mid;\n                st = mid + 1;\n            } else {\n                ed = mid - 1;\n            }\n        }\n        return result;\n    }\n}","compare_resulttitle_slug":"maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k","has_notes":false,"flag_type":1}