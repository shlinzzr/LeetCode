{"id":925198232,"question_id":301,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680239905,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/925198232/","is_pending":"Not Pending","title":"Remove Invalid Parentheses","memory":"43.6 MB","code":"class Solution {\n    \n    int maxLen = 0;\n    \n    public List<String> removeInvalidParentheses(String s) {\n        \n        int st = 0;\n        int remove =0;\n        for(char ch : s.toCharArray()){\n            \n            if(ch=='(')\n                st++;\n            else if(ch==')')\n                st--;\n            \n            if(st<0){\n                remove++;\n                st=0;\n            }\n        }\n        \n        remove+=st;\n        maxLen = s.length()-remove;\n        \n        List<String> res = new ArrayList<>();\n        dfs(s, 0, \"\", res, 0);\n        return res;\n    }\n    \n    private void dfs(String s, int i, String curr, List<String> res, int st){\n        \n        if(st<0) return;\n        if(curr.length()>maxLen) return;\n        if(i==s.length()){\n            if(st==0 && curr.length()==maxLen){\n                res.add(curr);\n            }\n            return;\n        }\n        \n        if(s.charAt(i)!='(' && s.charAt(i)!=')')\n            dfs(s, i+1, curr+s.substring(i, i+1), res, st);\n        else{\n            \n            dfs(s, i+1, curr+s.substring(i, i+1), res, st+(s.charAt(i)=='('? 1: -1));\n            if(curr.isEmpty() || s.charAt(i)!=curr.charAt(curr.length()-1))\n                dfs(s, i+1, curr, res, st);\n                \n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-invalid-parentheses","has_notes":false,"flag_type":1}