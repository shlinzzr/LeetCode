{"id":1120220789,"question_id":403,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702631630,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1120220789/","is_pending":"Not Pending","title":"Frog Jump","memory":"N/A","code":"class Solution {\n\n    TreeSet<Integer> set = new TreeSet<>();\n    public boolean canCross(int[] stones) {\n        int len = stones.length;\n\n        for(int s : stones){\n            set.add(s);\n        }\n\n        return helper(stones, 0, 1);\n    }\n\n    private boolean helper(int[] stones, int idx, int k){\n        int pos = idx+k;\n\n        if(pos==set.last())\n            return true;\n\n        if(pos>set.last())\n            return false;\n\n        \n        if(k-1>0 && set.contains(pos+k-1)){\n            if(helper(stones, pos, k-1))\n                return true;\n        }\n\n        if(set.contains(pos+k)){\n            if(helper(stones, pos, k))\n                return true;\n        }\n\n        if(set.contains(pos+k+1)){\n            if(helper(stones, pos, k+1))\n                return true;\n        }\n\n        return false;\n    }\n}","compare_result":"111101111111111100000000000000000000000000000000000000","title_slug":"frog-jump","has_notes":false,"flag_type":1}