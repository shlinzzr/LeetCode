{"id":1059532981,"question_id":403,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1695721031,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1059532981/","is_pending":"Not Pending","title":"Frog Jump","memory":"48.1 MB","code":"class Solution {\n\n    Set<Integer> set = new HashSet<>();\n    Set<String> failed = new HashSet<>();\n\n    public boolean canCross(int[] stones) {\n        \n        for(int stone : stones){\n            set.add(stone);\n        }\n        return helper(stones, 0, 0);\n    }\n    private boolean helper(int[] stones, int pos, int k){\n        int len = stones.length;\n\n        if(pos == stones[len-1] ) return true;\n        if(!set.contains(pos)) return false;\n        if(failed.contains(pos+\"_\"+k)) return false;\n\n\n        if(k-1>0 && helper(stones, pos+k-1, k-1))//不往回走\n            return true;\n        if(k>0 && helper(stones, pos+k, k)) //不原地踏步\n            return true;\n        if(helper(stones, pos+k+1, k+1))\n            return true;\n        \n        failed.add(pos+\"_\"+k);\n        return false;        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"frog-jump","has_notes":false,"flag_type":1}