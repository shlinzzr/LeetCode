{"id":1150490555,"question_id":348,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705648643,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1150490555/","is_pending":"Not Pending","title":"Design Tic-Tac-Toe","memory":"45.5 MB","code":"public class TicTacToe {\n    private int[] rows;\n    private int[] cols;\n    private int diagonal;\n    private int antiDiagonal;\n\n    /** Initialize your data structure here. */\n    public TicTacToe(int n) {\n        rows = new int[n];\n        cols = new int[n];\n    }\n\n    /** Player {player} makes a move at ({row}, {col}).\n        @param row The row of the board.\n        @param col The column of the board.\n        @param player The player, can be either 1 or 2.\n        @return The current winning condition, can be either:\n                0: No one wins.\n                1: Player 1 wins.\n                2: Player 2 wins. */\n    public int move(int row, int col, int player) {\n        int toAdd = player == 1 ? 1 : -1;\n\n        rows[row] += toAdd;\n        cols[col] += toAdd;\n        if (row == col)\n        {\n            diagonal += toAdd;\n        }\n\n        if (col == (rows.length - row - 1))\n        {\n            antiDiagonal += toAdd;\n        }\n\n        int size = rows.length;\n        if (Math.abs(rows[row]) == size ||\n            Math.abs(cols[col]) == size ||\n            Math.abs(diagonal) == size  ||\n            Math.abs(antiDiagonal) == size)\n        {\n            return player;\n        }\n\n        return 0;\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"design-tic-tac-toe","has_notes":false,"flag_type":1}