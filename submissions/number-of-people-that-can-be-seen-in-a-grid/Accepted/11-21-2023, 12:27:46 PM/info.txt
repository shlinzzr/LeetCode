{"id":1103176560,"question_id":2425,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1700540866,"status":10,"status_display":"Accepted","runtime":"62 ms","url":"/submissions/detail/1103176560/","is_pending":"Not Pending","title":"Number of People That Can Be Seen in a Grid","memory":"62.1 MB","code":"class Solution {\n    public int[][] seePeople(int[][] heights) {\n        int m = heights.length, n = heights[0].length;\n        int[][] ans = new int[m][n];\n        for (int j = 0; j < n; j++){ // DOWN\n            Stack<Integer> stack = new Stack<>();\n            for (int i = m - 1; i >= 0; i--){\n                while(!stack.isEmpty() && heights[i][j] > stack.peek()){\n                    ans[i][j]++;\n                    stack.pop();\n                }\n                if (!stack.isEmpty()){\n                    ans[i][j]++;\n                }\n                if (stack.isEmpty() || heights[i][j] != stack.peek()){\n                    stack.push(heights[i][j]);\n                }\n            }\n        }\n\n        for (int i = 0; i < m; i++){ // RIGHT\n            Deque<Integer> stack = new ArrayDeque<>();\n            for (int j = n - 1; j >= 0; j--){\n                while(!stack.isEmpty() && heights[i][j] > stack.peek()){\n                    ans[i][j]++;\n                    stack.pop();\n                }\n                if (!stack.isEmpty()){\n                    ans[i][j]++;\n                }\n                if (stack.isEmpty() || heights[i][j] != stack.peek()){\n                    stack.push(heights[i][j]);\n                }\n            }\n        }\n\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-people-that-can-be-seen-in-a-grid","has_notes":false,"flag_type":1}