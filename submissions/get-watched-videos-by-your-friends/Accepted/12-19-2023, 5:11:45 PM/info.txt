{"id":1123279867,"question_id":1436,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1702977105,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1123279867/","is_pending":"Not Pending","title":"Get Watched Videos by Your Friends","memory":"44.6 MB","code":"class Solution {\n    public List<String> watchedVideosByFriends(List<List<String>> wv, int[][] F, int id, int level) {\n\n        HashMap<String, Integer> fmap = new HashMap<>();\n\n        HashSet<Integer> seen = new HashSet<>();\n        Queue<Integer> q = new LinkedList<>();\n\n\n        q.offer(id);\n        seen.add(id);\n\n         while(!q.isEmpty() && level-->=0){\n            fmap = new HashMap<>();\n            int siz = q.size();\n            for(int i=0; i<siz; i++){\n\n                int p = q.poll();\n                for(String vid : wv.get(p)){\n                    fmap.put(vid, fmap.getOrDefault(vid, 0)+1);\n                }\n\n                for(int next : F[p]){\n                    if(!seen.contains(next)){\n                        seen.add(next);\n                        q.offer(next);\n                    }\n                        \n                }\n\n            }\n        }\n\n        PriorityQueue<Map.Entry<String, Integer>> pq = new PriorityQueue<>(\n            (a,b) -> a.getValue()==b.getValue() ? a.getKey().compareTo(b.getKey()) : a.getValue()-b.getValue()\n        );\n\n        pq.addAll(fmap.entrySet());\n        List<String> res =new ArrayList<>();\n\n\n        while(!pq.isEmpty())\n            res.add(pq.poll().getKey());\n\n\n        return res;\n\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"get-watched-videos-by-your-friends","has_notes":false,"flag_type":1}