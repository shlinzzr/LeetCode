{"id":809477227,"question_id":211,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664246164,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/809477227/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"N/A","code":"class WordDictionary {\n\n    // use pattern match => TLE\n    \n    HashSet<String> set ;\n    public WordDictionary() {\n        set = new HashSet<>();\n    }\n    \n    public void addWord(String word) {\n        set.add(word);\n    }\n    \n    public boolean search(String word) {\n        \n        for(String s : set){\n            if(isMatch(s, word))\n                return true;\n        }        \n        return false;\n    }\n    \n    \n    private boolean isMatch(String word, String pattern){\n        int i=0, j=0;\n        while(i<word.length()){\n            \n            if(j<pattern.length() &&( word.charAt(i)==pattern.charAt(j) || pattern.charAt(j)=='.')){\n                i++;\n                j++;\n            }else{\n                return false;\n            }\n        }\n        \n        if(j<pattern.length())\n            return false;\n               \n        return true;\n    }\n}\n\n/**\n * Your WordDictionary object will be instantiated and called as such:\n * WordDictionary obj = new WordDictionary();\n * obj.addWord(word);\n * boolean param_2 = obj.search(word);\n */","compare_result":"11111111111111100000000000000","title_slug":"design-add-and-search-words-data-structure","has_notes":false,"flag_type":1}