{"id":971797287,"question_id":163,"lang":"java","lang_name":"Java","time":"12Â months","timestamp":1686824297,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/971797287/","is_pending":"Not Pending","title":"Missing Ranges","memory":"41.1 MB","code":"class Solution {\n    public List<List<Integer>> findMissingRanges(int[] nums, int lower, int upper) {\n        int len = nums.length;\n        \n        \n        TreeSet<Integer> set = new TreeSet<>();\n        for(int n: nums){\n            set.add(n);\n        }\n        \n        set.add(lower-1);\n        set.add(upper+1);\n        \n        List<List<Integer>> res = new ArrayList<>();\n        \n        \n        for(int i=lower; i<=upper; i++){\n            \n            if(set.contains(i)){\n                continue;\n            }\n            \n            \n            int st = set.floor(i)+1;\n            \n            int ed = set.ceiling(i)-1;\n            \n            res.add(Arrays.asList(st, ed));\n            \n            i=ed;\n            \n        }\n        \n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"missing-ranges","has_notes":false,"flag_type":1}