{"id":1276089497,"question_id":163,"lang":"java","lang_name":"Java","time":"1Â week, 2Â days","timestamp":1717400314,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1276089497/","is_pending":"Not Pending","title":"Missing Ranges","memory":"41.3 MB","code":"class Solution {\n    public List<List<Integer>> findMissingRanges(int[] nums, int lower, int upper) {\n\n        int len = nums.length;\n\n        List<List<Integer>> res= new ArrayList<>();\n        if(len==0) {\n            List<Integer> list = new ArrayList<>();\n            list.add(lower);\n            list.add(upper);\n            res.add(list);\n            return res;\n        }\n\n        if(nums[0]!=lower) {\n            List<Integer> list = new ArrayList<>();\n            list.add(lower);\n            list.add(nums[0]-1);\n            res.add(list);\n        }\n\n        for(int i=0; i<len-1; i++){\n\n            int curr = nums[i];\n            int next = nums[i+1];\n\n            if(curr+1==next) continue;\n\n            int left=curr+1;\n            int right = next-1;\n            List<Integer> list = new ArrayList<>();\n            list.add(left);\n            list.add(right);\n            res.add(list);\n        }\n\n        if(nums[len-1]!=upper){\n            List<Integer> list = new ArrayList<>();\n            list.add(nums[len-1]+1);\n            list.add(upper);\n            res.add(list);\n        }\n\n        return res;\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"missing-ranges","has_notes":false,"flag_type":1}