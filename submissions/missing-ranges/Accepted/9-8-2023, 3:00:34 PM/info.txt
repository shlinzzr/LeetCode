{"id":1043691994,"question_id":163,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1694156434,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1043691994/","is_pending":"Not Pending","title":"Missing Ranges","memory":"40.9 MB","code":"class Solution {\n    public List<List<Integer>> findMissingRanges(int[] nums, int lower, int upper) {\n        List<List<Integer>> res = new ArrayList<>();\n                \n        int len = nums.length;\n        \n        TreeSet<Integer> set = new TreeSet<>();\n\n        set.add(lower-1);\n        set.add(upper+1);\n        for(int i=0; i<len; i++){\n            set.add(nums[i]);\n        }\n        \n        for(int i=lower; i<=upper; i++){\n            \n            if(set.contains(i))\n                continue;\n            \n            int f = set.floor(i);\n            int c = set.ceiling(i);\n            \n            List<Integer> list =new ArrayList<>();    \n            list.add(f+1);\n            list.add(c-1);\n            res.add(list);\n            \n            i = c;\n            \n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"missing-ranges","has_notes":false,"flag_type":1}