{"id":1239517874,"question_id":163,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713839606,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1239517874/","is_pending":"Not Pending","title":"Missing Ranges","memory":"41.6 MB","code":"class Solution {\n    public List<List<Integer>> findMissingRanges(int[] nums, int lower, int upper) {\n         List<List<Integer>> res = new ArrayList<>();\n        \n        int len = nums.length;\n        if(len==0){\n            List<Integer> sub = new ArrayList<>();\n            sub.add(lower);\n            sub.add(upper);\n            res.add(sub);\n            return res;\n        }\n        \n        if(lower<nums[0]){\n            List<Integer> sub = new ArrayList<>();\n            sub.add(lower);\n            sub.add(nums[0]-1);\n            res.add(sub);\n        }\n        \n        for(int i=0; i<len-1; i++){\n            \n            int st = nums[i];\n            int ed = nums[i+1];\n            \n            if(st+1==ed) continue;\n            \n            \n            List<Integer> sub = new ArrayList<>();\n            sub.add(st+1);\n            sub.add(ed-1);\n            res.add(sub);\n        }\n        \n        if(upper > nums[len-1]){\n            List<Integer> sub = new ArrayList<>();\n            sub.add(nums[len-1]+1);\n            sub.add(upper);\n            res.add(sub);\n        }\n        \n        return res;\n        \n    }\n    \n    // [-2 -1]\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"missing-ranges","has_notes":false,"flag_type":1}