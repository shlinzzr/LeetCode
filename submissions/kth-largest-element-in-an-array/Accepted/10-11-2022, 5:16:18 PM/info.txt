{"id":820018475,"question_id":215,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665479778,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/820018475/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"69 MB","code":"public class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        int start = 0, end = nums.length - 1, index = nums.length - k;\n        while (start < end) {\n            int pivot = partion(nums, start, end);\n            if (pivot < index) start = pivot + 1; \n            else if (pivot > index) end = pivot - 1;\n            else return nums[pivot];\n        }\n        return nums[start];\n    }\n    \n    private int partion(int[] nums, int start, int end) {\n        int pivot = start, temp;\n        while (start <= end) {\n            while (start <= end && nums[start] <= nums[pivot]) start++;\n            while (start <= end && nums[end] > nums[pivot]) end--;\n            if (start > end) break;\n            temp = nums[start];\n            nums[start] = nums[end];\n            nums[end] = temp;\n        }\n        temp = nums[end];\n        nums[end] = nums[pivot];\n        nums[pivot] = temp;\n        return end;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array","has_notes":false,"flag_type":1}