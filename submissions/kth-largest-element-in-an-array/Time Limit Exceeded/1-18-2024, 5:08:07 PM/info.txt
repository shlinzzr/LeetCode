{"id":1149611102,"question_id":215,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705568887,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1149611102/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"N/A","code":"class Solution {\n    \n    public int findKthLargest(int[] nums, int k) {\n        int len = nums.length;\n        quickselect(nums, 0, len-1, len-k);\n        \n        return nums[len-k];\n    }\n    \n    private void quickselect(int[] nums, int left, int right, int k){\n        \n        if(left>=right) return;\n        \n        int pivotIdx = partition(nums, left, right-1, right);\n        swap(nums, pivotIdx, right);\n        \n        if(k==pivotIdx) return;\n        else if(k<pivotIdx){\n            quickselect(nums, left, pivotIdx-1, k);\n        }else {\n            quickselect(nums, pivotIdx+1, right, k);\n        }\n            \n    }\n    \n    private int partition(int[] nums, int left, int right, int pivot){\n        while(left<=right){\n            if(nums[left]>nums[pivot]){\n                swap(nums, left, right);\n                right--;\n            }else\n                left++;\n        }\n        return left;\n    }\n    \n    private void swap(int[] nums, int a, int b){\n        int t = nums[a];\n        nums[a] = nums[b];\n        nums[b] = t;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array","has_notes":false,"flag_type":1}