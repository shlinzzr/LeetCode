{"id":1113477685,"question_id":2012,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701850515,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1113477685/","is_pending":"Not Pending","title":"Process Tasks Using Servers","memory":"N/A","code":"class Solution {\n    public int[] assignTasks(int[] servers, int[] tasks) {\n        int m = servers.length;\n        int n = tasks.length;\n\n        int[] ans = new int[n];\n\n        PriorityQueue<int[]> freeServer = new PriorityQueue<>( //idx, weight[idx]\n            (a,b)-> a[1]==b[1] ? a[0]-b[0] : a[1]-b[1]\n        );\n\n        PriorityQueue<int[]> running = new PriorityQueue<>( //idx, weight[idx], finishTime\n              (a,b)-> a[2]==b[2] ? a[0]-b[0] : a[2]-b[2]\n        );\n\n        for(int i=0; i<m; i++){\n            freeServer.offer(new int[]{i, servers[i]});\n        }\n\n        Queue<Integer> q= new LinkedList<>();\n        for(int j=0; j<n; j++){\n\n            while(!running.isEmpty() && running.peek()[2]==j){\n                int[] s = running.poll();\n                freeServer.offer(new int[]{s[0], s[1]});\n            }\n\n            int t= tasks[j];\n            q.offer(t);\n\n            while(!q.isEmpty() && !freeServer.isEmpty()){\n                t = q.poll();\n                int[] s = freeServer.poll();\n\n                ans[j] = s[0];\n                running.offer(new int[]{s[0], s[1], j+t});\n            }\n        }\n        \n\n        return ans;\n\n        \n\n    }\n}","compare_result":"110110101111110100111111111010110111","title_slug":"process-tasks-using-servers","has_notes":false,"flag_type":1}