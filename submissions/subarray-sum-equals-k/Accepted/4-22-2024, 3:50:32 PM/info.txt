{"id":1238858427,"question_id":560,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713772232,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1238858427/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"46.5 MB","code":"class Solution {\n    public int subarraySum(int[] nums, int k) {\n\n        int len = nums.length;\n        int res = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, 1);\n        int presum = 0 ;\n        // int[] presum = new int[len];\n        for(int i=0; i<len; i++){\n            // presum[i] = i==0 ? nums[i] : nums[i] + presum[i-1];\n            presum = i==0 ? nums[i] : presum + nums[i];\n\n            if(map.containsKey(presum-k)){\n                res+= map.get(presum-k);\n            }\n\n            map.put(presum, map.getOrDefault(presum,0) +1);\n        }\n\n        return res;\n            \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k","has_notes":false,"flag_type":1}