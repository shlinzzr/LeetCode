{"id":998984007,"question_id":1753,"lang":"java","lang_name":"Java","time":"10 months, 4 weeks","timestamp":1689825269,"status":10,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/998984007/","is_pending":"Not Pending","title":"Path With Minimum Effort","memory":"44.1 MB","code":"class Solution {\n    public int minimumEffortPath(int[][] heights) {\n        int h = heights.length;\n        int w = heights[0].length;\n        \n        if(h==1 && w==1)\n            return 0;\n        \n        \n        int st=0, ed=Integer.MAX_VALUE;\n        \n        while(st<ed){\n            \n            int mid = st + (ed-st)/2;\n            \n            if(isOk(heights, mid)){\n                ed = mid;\n            }else{\n                st= mid+1;\n            }\n        }\n        \n        return st;\n        \n        \n    }\n    \n    \n    private boolean isOk(int[][] grid, int effort){\n        \n        \n          \n        // System.out.println(\"isOk \" + effort + \" \");\n            \n        \n        \n        int h = grid.length;\n        int w = grid[0].length;\n        \n     \n        \n        boolean[][] bool = new boolean[h][w];\n        \n        Queue<int[]> q = new LinkedList<>();\n        \n        int[][] dirs = new int[][]{{0,1}, {1,0}, {0,-1}, {-1,0}};\n        \n        q.offer(new int[]{0,0});\n        bool[0][0]=true;\n        \n        while(!q.isEmpty()){\n            \n            int[] p = q.poll();\n            // System.out.println(p[0] + \" \" + p[1] );\n            \n            for(int[] d: dirs){\n                \n                int r = d[0]+p[0];\n                int c = d[1]+p[1];\n        \n                if(r<0 || c<0 || r>=h || c>=w || bool[r][c] || Math.abs(grid[r][c]-grid[p[0]][p[1]])>effort)\n                    continue;\n                \n                \n                if(r==h-1 && c==w-1)\n                    return true;\n                \n                bool[r][c] = true;\n                q.offer(new int[]{r,c});\n            }            \n        }\n          \n         // System.out.println(\"isOk \" + effort + \" false\");\n            \n        return false;        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-with-minimum-effort","has_notes":false,"flag_type":1}