{"id":841288500,"question_id":131,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668160273,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/841288500/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"136.4 MB","code":"class Solution {\n    public List<List<String>> partition(String s) {\n        List<List<String>> res = new ArrayList<>();\n        \n        int len = s.length();\n        \n        helper(s, res, new ArrayList<>(), 0, len);\n        \n        return res;\n       \n        \n    }\n    \n    \n    private void helper(String s, List<List<String>> res, List<String> curr, int cnt, int len){\n        \n        if(cnt==len){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n        \n        \n        for(int i=1; i<=s.length(); i++){\n            String prefix = s.substring(0, i);\n            \n            // System.out.println(prefix);\n            \n            if(isPalindrome(prefix)){\n                curr.add(prefix);\n                helper(s.substring(i), res , curr, cnt+i, len);\n                curr.remove(curr.size()-1);    \n            }\n        }\n    }\n    \n    \n    private boolean isPalindrome(String s){\n        \n        int len = s.length();\n        for(int i=0; i<len/2; i++){\n            if(s.charAt(i)!=s.charAt(len-1-i))\n                return false;\n        }\n        \n        return true;\n        \n    }\n    \n}","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}