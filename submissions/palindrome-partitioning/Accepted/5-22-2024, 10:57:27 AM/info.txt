{"id":1264500816,"question_id":131,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716346647,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1264500816/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"56.7 MB","code":"class Solution {\n    public List<List<String>> partition(String s) {\n        List<List<String>> res= new ArrayList<>();\n\n        int len = s.length();\n\n        helper(s, res,  new ArrayList<>());\n\n        return res;\n    }\n\n\n    private void helper(String s, List<List<String>> res, List<String> curr){\n\n        if(s.isEmpty()){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n\n        for(int ed=1; ed<=s.length(); ed++){\n            String prefix = s.substring(0, ed);\n            if(ispal(prefix)){\n                curr.add(prefix);\n                helper(s.substring(ed), res, curr);\n                curr.remove(curr.size()-1);\n            }\n        }\n\n    }\n\n\n\n\n    private boolean ispal (String s){\n        int st=0, ed=s.length()-1;\n\n        while(st<ed){\n            if(s.charAt(st)!=s.charAt(ed))\n                return false;\n            st++;\n            ed--;\n        }\n\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}