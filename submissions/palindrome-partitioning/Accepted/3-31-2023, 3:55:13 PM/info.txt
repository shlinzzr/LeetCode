{"id":925260210,"question_id":131,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680249313,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/925260210/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"54.8 MB","code":"class Solution {\n    public List<List<String>> partition(String s) {\n        List<List<String>> res = new ArrayList<>();\n        \n        helper(s, new ArrayList<>(), res, 0, s.length());\n        \n        return res;\n    }\n    \n    private void helper(String s, List<String> curr, List<List<String>> res, int idx, int len){\n        \n        if(idx==len){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n        \n        for(int i=1; i<=s.length(); i++){\n            \n            String prefix = s.substring(0, i);\n            \n            if(isPal(prefix)){\n                curr.add(prefix);\n                helper(s.substring(i), curr, res, idx+i, len);\n                curr.remove(curr.size()-1);\n            }\n        }\n    }\n    \n    private boolean isPal(String s){\n        int st=0, ed=s.length()-1;\n        while(st<ed){\n            if(s.charAt(st)!=s.charAt(ed))\n                return false;\n            st++;\n            ed--;\n        }\n        \n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}