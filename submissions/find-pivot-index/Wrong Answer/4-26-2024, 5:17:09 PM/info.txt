{"id":1242360740,"question_id":724,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714123029,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1242360740/","is_pending":"Not Pending","title":"Find Pivot Index","memory":"N/A","code":"class Solution {\n    public int pivotIndex(int[] nums) {\n        \n        int len = nums.length;\n        \n        int[] presum = new int[len];\n        \n//         x x x x x x \n//             i\n            \n//         int left =presum [i];\n//         int right = presum [len-1] - presum[i];\n//         find idx i that satisfied left==right\n        // [1,7,3,6,5,6]\n        // presum [1 8 11 17 22 28]\n        //                 m\n        // left = 11, right=17\n         \n        for(int i=0; i<len; i++){\n            presum[i] = i==0 ? nums[0] : presum[i-1]+nums[i];\n        }\n        \n        if(presum[len-1]%2==1) return -1;\n        \n        \n        // x [x x x x x] ==0\n        if(presum[len-1]-presum[0]==0) return 0;\n        \n        // [x x x x x ] x\n        if(presum[len-1]==0) return len-1;\n        \n        \n        int st =1, ed = len-2;\n        while(st<ed){ //0, 1\n            \n            int mid = st+(ed-st)/2; // 0\n            \n            int left = presum[mid-1];\n            int right = presum[len-1]- presum[mid];\n            \n            if(left==right){\n                return mid;\n            }else if(left<right){\n                st = mid+1; \n            }else{\n                ed = mid-1;\n            }\n            \n        }\n        \n        int left = presum[st-1];\n        int right = presum[len-1]- presum[st];\n        \n        return left==right ? st : -1;\n    }\n}","compare_resulttitle_slug":"find-pivot-index","has_notes":false,"flag_type":1}