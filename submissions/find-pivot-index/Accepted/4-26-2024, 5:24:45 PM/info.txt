{"id":1242365205,"question_id":724,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714123485,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1242365205/","is_pending":"Not Pending","title":"Find Pivot Index","memory":"45.8 MB","code":"class Solution {\n    public int pivotIndex(int[] nums) {\n        \n        int len = nums.length;\n        \n        int[] presum = new int[len];\n        if(len==1) return 0;\n//         x x x x x x \n//             i\n            \n//         int left =presum [i];\n//         int right = presum [len-1] - presum[i];\n//         find idx i that satisfied left==right\n        // [1,7,3,6,5,6]\n        // presum [1 8 11 17 22 28]\n        //                 m\n        // left = 11, right=17\n         \n        for(int i=0; i<len; i++){\n            presum[i] = i==0 ? nums[0] : presum[i-1]+nums[i];\n        }\n        \n        \n        int[] sufsum = new int[len];\n        \n        for(int i=len-1; i>=0; i--){\n            sufsum[i] = i==len-1 ? nums[i] : sufsum[i+1] + nums[i];   \n        }\n        \n        for(int i=0; i<len; i++){\n            \n            if(i==0 && sufsum[i+1]==0) return 0;\n            if(i==len-1 && presum[len-2]==0) return len-1;\n            \n            if(i==0 || i==len-1) continue;\n            if(presum[i-1]==sufsum[i+1]) return i;\n            \n        }\n        return -1;\n        \n//         // x [x x x x x] ==0\n//         if(presum[len-1]-presum[0]==0) return 0;\n        \n//         // [x x x x x ] x\n//         if(presum[len-2]==0) return len-1;\n        \n        \n//         int st =1, ed = len-2;\n//         while(st<ed){ //0, 1\n            \n//             int mid = st+(ed-st)/2; // 0\n            \n//             int left = presum[mid-1];\n//             int right = presum[len-1]- presum[mid];\n            \n//             if(left==right){\n//                 return mid;\n//             }else if(left<right){\n//                 st = mid+1; \n//             }else{\n//                 ed = mid-1;\n//             }\n            \n//         }\n//         System.out.println(st);\n//         int left = presum[st-1];\n//         int right = presum[len-1]- presum[st];\n        \n//         return left==right ? st : -1;\n    }\n}","compare_resulttitle_slug":"find-pivot-index","has_notes":false,"flag_type":1}