{"id":1227504198,"question_id":1257,"lang":"java","lang_name":"Java","time":"2 months","timestamp":1712655714,"status":10,"status_display":"Accepted","runtime":"182 ms","url":"/submissions/detail/1227504198/","is_pending":"Not Pending","title":"Rank Transform of a Matrix","memory":"71.2 MB","code":"class Solution {\n\n    int[] parent;\n\n    Map<Integer, List<int[]>> map =new TreeMap<>(); // val, {y,x};\n    public int[][] matrixRankTransform(int[][] matrix) {\n        int h = matrix.length;\n        int w = matrix[0].length;\n\n        int[][] res = new int[h][w];\n\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                map.putIfAbsent(matrix[i][j], new ArrayList<>());\n                map.get(matrix[i][j]).add(new int[]{i, j});\n            }\n        }\n\n\n        int[] rowMin = new int[h];\n        int[] colMin = new int[w];\n\n         for(Integer key : map.keySet()){\n\n            List<int[]> list = map.get(key);\n            int siz = list.size();\n            \n            // init parent\n            parent = new int[siz];\n            for(int i = 0; i < siz; i++)\n                parent[i] = i;\n            \n            \n            HashMap<Integer, List<Integer>> yMap = new HashMap<>(); // y, List< yx > , 所有包含y row的座標群\n            HashMap<Integer, List<Integer>> xMap = new HashMap<>(); // x, List< yx > , 所有包含x col的座標群\n            for(int i = 0; i < siz; i++){\n                int[] yx = list.get(i); // 這個val的所有xy座標\n                int y = yx[0];\n                int x = yx[1];\n                \n                yMap.putIfAbsent(y, new ArrayList<>());\n                yMap.get(y).add(i);\n                xMap.putIfAbsent(x, new ArrayList<>());\n                xMap.get(x).add(i);\n            }\n\n            // 把所有的x,y座標分別拿出來, union到該root座標idx\n\n            // union by y-axis\n            for(Integer yKey : yMap.keySet()){\n                List<Integer> yList = yMap.get(yKey); // 所有包含y row的座標群\n                for(int i = 1; i < yList.size(); i++){\n                    union(yList.get(0), yList.get(i)); \n                }\n            }\n            \n            // union by x-axis\n            for(Integer xKey : xMap.keySet()){\n                List<Integer> xList = xMap.get(xKey);\n                for(int i = 1; i < xList.size(); i++){\n                    union(xList.get(0), xList.get(i));\n                }\n            }\n            \n            HashMap<Integer, List<int[]>> group = new HashMap<>();\n            for(int i = 0; i < siz; i++){\n                int grp = find(i);\n                if(group.get(grp) == null)\n                    group.put(grp, new ArrayList<>());\n                group.get(grp).add(list.get(i));\n            }\n            \n            \n            // SET ANSWER FOR EACH GROUP\n            for(Integer grpKey : group.keySet()){\n                int max = 1;\n                List<int[]> sublist = group.get(grpKey);\n                \n                // FIND MAX-RANK FOR THIS GROUP\n                for(int[] yx : sublist){\n                   int y = yx[0];\n                   int x = yx[1];\n                \n                    max = Math.max(max, Math.max(rowMin[y], colMin[x]));\n                }\n            \n                // UPDATE ANSWER = MAX-RANK AND SET NEW MIN-RANK FOR ROW/COL = MAX-RANK+1\n                for(int[] yx : sublist){\n                    int y = yx[0];\n                    int x = yx[1];\n                    res[y][x] = max;\n                    rowMin[y] = max+1;\n                    colMin[x] = max+1;\n                }     \n            }\n        }\n        return res;\n    }\n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n\n    private void union (int a , int b){\n        a = find(a);\n        b = find(b);\n        if(a<b){\n            parent[b] = a;\n        }else{\n            parent[a] = b;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"rank-transform-of-a-matrix","has_notes":false,"flag_type":1}