{"id":916700755,"question_id":642,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1679033948,"status":10,"status_display":"Accepted","runtime":"190 ms","url":"/submissions/detail/916700755/","is_pending":"Not Pending","title":"Design Search Autocomplete System","memory":"51.2 MB","code":"class AutocompleteSystem {\n\n    class TrieNode{\n        TrieNode[] arr;\n        boolean isWord;\n        String val;\n        int freq = 0;\n        \n        public TrieNode(){\n            arr = new TrieNode[28]; //0-25=a~z, 26=' ', 27='#'\n            isWord=false;\n        }\n    }\n    \n    TrieNode root;\n    String prefix=\"\";\n    \n    public AutocompleteSystem(String[] sentences, int[] times) {\n        \n        root = new TrieNode();\n        \n        for(int i=0; i<sentences.length; i++){\n            \n            String sen = sentences[i];\n            TrieNode node = root;\n            for(char ch : sen.toCharArray()){\n                \n                int idx = ch==' ' ? 26 : (ch=='#'? 27 : ch-'a');\n                if(node.arr[idx]==null){\n                    node.arr[idx]=new TrieNode();\n                }\n                \n                node=node.arr[idx];\n            }\n            node.freq = times[i];\n            node.isWord=true;\n            node.val=sen;\n        }\n    }\n    \n    private void addSen(String sen){\n        TrieNode node = root;\n        for(char ch : sen.toCharArray()){\n            int idx = ch==' ' ? 26 : (ch=='#'? 27 : ch-'a');\n            if(node.arr[idx]==null){\n                node.arr[idx]=new TrieNode();\n            }\n\n            node=node.arr[idx];\n        }\n        node.freq +=1;\n        node.isWord=true;\n        node.val=sen;\n    }\n    \n    \n    public List<String> input(char c) {\n        if(c=='#'){\n            addSen(prefix);\n            prefix=\"\";\n            return new ArrayList<>();\n        }\n            \n        prefix += c;\n        \n        PriorityQueue<TrieNode> pq = new PriorityQueue<>(\n            (a,b) -> a.freq==b.freq ? b.val.compareTo(a.val) : a.freq-b.freq\n        );\n        \n        TrieNode node = root;\n        for(int i=0; i<prefix.length(); i++){\n            char ch = prefix.charAt(i);\n            int idx = ch==' ' ? 26 : (ch=='#'? 27 : ch-'a');\n            if(node.arr[idx]==null){\n                return new ArrayList<>();\n            }\n            node = node.arr[idx];\n        }\n            \n        getSub(node, pq);\n        \n        List<String> res = new ArrayList<>();\n        while(!pq.isEmpty()){\n            res.add(0, pq.poll().val);\n        }\n        \n        return res;\n    }\n    \n    \n    private void getSub(TrieNode node, PriorityQueue<TrieNode> pq){\n        \n        if(node.isWord){\n            pq.offer(node);\n        }\n        \n        if(pq.size()>3){\n            pq.poll();\n        }\n        \n        for(int idx=0; idx<28; idx++){\n            if(node.arr[idx]!=null){\n                getSub(node.arr[idx], pq);\n            }\n        }        \n        \n    }\n}\n\n/*\n[\"AutocompleteSystem\",    [[\"i love you\",\"island\",\"iroman\",\"i love leetcode\"],[5,3,2,2]]\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\",\n\"input\"]\n[,[\"i\"],[\" \"],[\"a\"],[\"#\"],[\"i\"],[\" \"],[\"a\"],[\"#\"],[\"i\"],[\" \"],[\"a\"],[\"#\"]]\n\n\nexpected\n[null,\n[\"i love you\",\"island\",\"i love leetcode\"],    prefix= 'i'\n[\"i love you\",\"i love leetcode\"],             prefix= 'i '\n[],                                           prefix= 'i a'\n[],                                       add prefix= 'i a'  ## end\n[\"i love you\",\"island\",\"i love leetcode\"],    prefix= 'i'\n[\"i love you\",\"i love leetcode\",\"i a\"],       prefix= 'i '\n[\"i a\"],                                      prefix= 'i a'\n[],\n[\"i love you\",\"island\",\"i a\"],\n[\"i love you\",\"i a\",\"i love leetcode\"],\n[\"i a\"],\n[]]\n\n\noutput \n[null,\n[\"i love you\",\"island\",\"i love leetcode\"],\n[\"i love you\",\"i love leetcode\"],\n[],\n[],\n[\"i love you\",\"island\",\"i love leetcode\"],\n[\"i love you\",\"i love leetcode\",\"i a\"],\n[\"i a\",\"i a\"],\n[],\n[\"i love you\",\"island\",\"i a\"],\n[\"i love you\",\"i a\",\"i love leetcode\"],\n[\"i a\",\"i a\"],\n[]]\n\n\n\n\n\n/**\n * Your AutocompleteSystem object will be instantiated and called as such:\n * AutocompleteSystem obj = new AutocompleteSystem(sentences, times);\n * List<String> param_1 = obj.input(c);\n */","compare_result":"1111111111111111111111111111111111111111111","title_slug":"design-search-autocomplete-system","has_notes":false,"flag_type":1}