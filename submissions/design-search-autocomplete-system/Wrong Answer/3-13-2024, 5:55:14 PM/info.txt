{"id":1202404989,"question_id":642,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710323714,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1202404989/","is_pending":"Not Pending","title":"Design Search Autocomplete System","memory":"N/A","code":"class AutocompleteSystem {\n    \n    TrieNode root;\n    StringBuilder sb;\n    \n    class Tuple{\n        String s;\n        int f;\n        public Tuple(String s, int f){\n            this.s = s;\n            this.f = f;\n        }\n    }\n    \n    class TrieNode{\n        boolean isWord;\n        TrieNode[] arr;\n        List<String> candidate;\n        public TrieNode(){\n            arr = new TrieNode[27];\n            candidate = new ArrayList<>();\n        }\n        \n        public void add(String s){\n            TrieNode curr = root;\n            for(char ch : s.toCharArray()){\n                int idx = (ch==' ') ? 26 : (ch-'a');\n                if(curr.arr[idx]==null){\n                    curr.arr[idx] = new TrieNode();\n                }\n\n                curr = curr.arr[idx];\n                curr.candidate.add(s);\n            }\n            \n            curr.isWord = true;\n        }\n        \n        public List<String> startsWith(String s){\n            TrieNode curr = root;\n            for(char ch : s.toCharArray()){\n                int idx = ch==' ' ? 26 : (ch-'a');\n                if(curr.arr[idx]==null){\n                    return new ArrayList<>();\n                }\n                curr = curr.arr[idx];\n            }\n            \n            return getTop3(curr.candidate);\n        }\n        \n        private List<String> getTop3(List<String> input){\n            \n            List<Tuple> list = new ArrayList<>();\n            for(String in : input){\n                Tuple t = new Tuple(in, map.get(in));\n                list.add(t);\n            }\n            \n            Collections.sort(list, (a,b)->b.f==a.f ? a.s.compareTo(b.s) : b.f-a.f);\n            \n            List<String> res = new ArrayList<>();\n            for(int i=0; i<Math.min(list.size(), 3); i++){\n                res.add(list.get(i).s);\n            }\n            \n            return res;\n            \n            \n            \n            \n            \n        }\n    }\n    \n    \n    \n    Map<String, Integer> map;\n\n    public AutocompleteSystem(String[] sentences, int[] times) {\n        sb = new StringBuilder();\n        map = new HashMap<>();\n        int len = times.length;\n        \n        root = new TrieNode();\n        for(int i=0; i<len ;i++){\n            String s = sentences[i];\n            root.add(s);\n            \n            map.put(s, times[i]);\n        }\n    }\n    \n    public List<String> input(char c) {\n        \n        if(c=='#'){\n             sb = new StringBuilder();\n            return new ArrayList<>();\n        }\n        \n        sb.append(c);\n        TrieNode curr = root;\n        return curr.startsWith(sb.toString());\n    }\n}\n\n/**\n * Your AutocompleteSystem object will be instantiated and called as such:\n * AutocompleteSystem obj = new AutocompleteSystem(sentences, times);\n * List<String> param_1 = obj.input(c);\n */","compare_result":"1000000000000000000000000000000000000000000","title_slug":"design-search-autocomplete-system","has_notes":false,"flag_type":1}