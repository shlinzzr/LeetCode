{"id":860445523,"question_id":155,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671156670,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/860445523/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\n\n    Node head;\n    \n    public MinStack() {\n        \n    }\n    \n    public void push(int val) {\n        \n        if(head==null){\n            head = new Node(val, null, val);\n        }else{\n            head = new Node(val, head, Math.min(val, head.val));\n        }\n        \n    }\n    \n    public void pop() {\n        head=head.next;\n    }\n    \n    public int top() {\n        return head.val;\n    }\n    \n    public int getMin() {\n        return head.min;\n    }\n    \n    class Node{\n        \n        int val;\n        int min;\n        Node next;\n            \n        public Node(int val, Node next, int min){\n            this.val=val;\n            this.next = next;\n            this.min = min;\n            \n        }\n        \n        \n    }\n    \n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack obj = new MinStack();\n * obj.push(val);\n * obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.getMin();\n */","compare_result":"1110111111100000010111011111111","title_slug":"min-stack","has_notes":false,"flag_type":1}