{"id":1276237916,"question_id":1499,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1717411274,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1276237916/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"N/A","code":"class Solution {\n\n    class Engineer{\n        int s;\n        int e;\n\n        public Engineer(int s, int e){\n            this.s=s;\n            this.e=e;\n        }\n    }\n\n\n    public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {\n\n        List<Engineer> list = new ArrayList<>();\n        for(int i=0; i<n; i++){\n            list.add(new Engineer(speed[i], efficiency[i]));\n        }\n\n        PriorityQueue<Engineer> pq = new PriorityQueue<>(\n            (a,b) -> a.s-b.s\n        );\n\n        Collections.sort(list, (a,b)-> b.e-a.e);\n        int sum = 0 ;\n        int max = 0;\n        for(int i=0; i<n; i++){\n\n            Engineer eng = list.get(i);\n            sum += eng.s;\n\n            pq.offer(eng);\n            while(pq.size()>k){\n                sum-= pq.poll().s;\n            }\n\n            max = Math.max(max, sum*eng.e);\n        }\n        \n        return max;\n        \n    }\n}","compare_result":"1111111111111111111111100000000000000000000000000000110","title_slug":"maximum-performance-of-a-team","has_notes":false,"flag_type":1}