{"id":1088998429,"question_id":1499,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698830536,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/1088998429/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"56.4 MB","code":"class Solution {\n\n    class Engineer {\n        int sp;\n        int ef;\n        int idx;\n        public Engineer(int idx, int sp, int ef){\n            this.idx = idx;\n            this.sp = sp;\n            this.ef = ef;\n        }\n    }\n\n    public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {    \n\n        Engineer[] arr = new Engineer[n];\n        for(int i=0; i<n; i++){\n            arr[i] = new Engineer(i, speed[i], efficiency[i]);\n        }\n\n        Arrays.sort(arr, (a,b)-> b.ef-a.ef);\n\n        PriorityQueue<Engineer> pq = new PriorityQueue<>(\n            (a,b) -> a.sp - b.sp\n        );\n\n        int M = (int) 1e9+7;\n\n        long sum = 0,  max=0;\n        for(int i=0; i<n; i++){\n            pq.offer(arr[i]);\n            sum += arr[i].sp;\n\n            max = Math.max(max, arr[i].ef*sum);\n\n            if(pq.size()==k){\n                sum-=pq.poll().sp;\n            }\n        }\n\n        return (int) (max%M);\n    \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-performance-of-a-team","has_notes":false,"flag_type":1}