{"id":1229295252,"question_id":448,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712826122,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1229295252/","is_pending":"Not Pending","title":"Find All Numbers Disappeared in an Array","memory":"53.5 MB","code":"class Solution {\n    public List<Integer> findDisappearedNumbers(int[] nums) {\n        List<Integer> res = new ArrayList<>();\n        \n        int len = nums.length;\n        \n        \n        // \n        \n        for(int i=0; i<len; i++){\n            \n            int val = nums[i]; \n            // val should be at the nums[val-1]\n            // i.e. nums[i] should be i+1\n            \n            \n            \n            while(nums[i]-1>=0 && nums[i]-1<len && nums[nums[i]-1] != nums[i] ){\n                swap(nums, i , nums[i]-1);\n            }\n            \n//             if(nums[i]!=i+1){\n//                 res.add(i+1);\n//             }\n             \n            \n        }\n        \n        for(int i=0; i<len; i++){\n            if(nums[i]!=i+1)\n                res.add(i+1);\n        }\n        \n        \n        return res;\n        \n        \n    }\n    \n    // 4,3,2,7,8,2,3,1\n    // 7 3 2 4 8 2 3 1\n    // 3 3 2 4 8 2 7 1\n    // 2 3 3 4 8 2 7 1\n    // 3 2 3 4 8 2 7 1\n        \n    \n    \n    \n    private void swap (int[] nums ,int a, int b){\n        \n        int t = nums[a];\n        nums[a] = nums[b];\n        nums[b] = t;\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"find-all-numbers-disappeared-in-an-array","has_notes":false,"flag_type":1}