{"id":955650508,"question_id":109,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684828998,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/955650508/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n        if(head==null )\n            return null;\n        \n        if(head.next==null){\n            return new TreeNode(head.val);\n        }\n        \n        ListNode fast = head;\n        ListNode slow = head;\n        \n        ListNode prev = null;\n        while(fast!=null && fast.next!=null){\n            fast = fast.next.next;\n            prev = slow;\n            slow = slow.next;\n        }\n        if(prev!=null)\n            prev.next = null;\n        \n        ListNode leftHead = reverse(head);\n        fast = leftHead;\n        \n        TreeNode root = new TreeNode(slow.val);\n        \n        TreeNode curr = root;\n        while(fast!=null){\n            curr.left = new TreeNode(fast.val);\n            curr = curr.left;\n            fast=fast.next;\n        }\n        \n        \n        \n        \n        \n        slow=slow.next;\n        curr = root;\n        while(slow!=null){\n            \n            TreeNode next = new TreeNode(slow.val);\n            slow = slow.next;\n            \n            curr.right = next;\n            curr = curr.right;\n        }\n        \n        return root;\n        \n    }\n    \n    private ListNode reverse(ListNode head){\n        \n        ListNode curr = head;\n        ListNode prev = null;\n        \n        while(curr!=null){\n            \n            ListNode next = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = next;\n            \n        }\n        \n        \n        return prev;\n    }\n    \n}","compare_result":"11111100000000000000000000000000","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false,"flag_type":1}