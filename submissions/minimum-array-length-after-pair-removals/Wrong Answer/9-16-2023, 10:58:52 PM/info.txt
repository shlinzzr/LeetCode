{"id":1050957452,"question_id":3081,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694876332,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1050957452/","is_pending":"Not Pending","title":"Minimum Array Length After Pair Removals","memory":"N/A","code":"class Solution {\n    public int minLengthAfterRemovals(List<Integer> nums) {\n        int len = nums.size();\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for(int n : nums){\n            map.put(n, map.getOrDefault(n,0)+1);\n        }\n        \n        PriorityQueue<Map.Entry<Integer, Integer>> pq = new PriorityQueue<>(\n            (a,b)-> b.getValue()-a.getValue()\n        );\n        pq.addAll(map.entrySet());\n        \n        \n        while(pq.size()>=2){\n            Map.Entry<Integer, Integer> en1 = pq.poll();\n            Map.Entry<Integer, Integer> en2 = pq.poll();\n            \n            if(en1.getValue()==en2.getValue()){\n                continue;\n            }else if(en1.getValue()>en2.getValue()){\n                en1.setValue(en1.getValue()-en2.getValue());\n                pq.offer(en1);\n                \n            }else if(en2.getValue()>en1.getValue()){\n                en2.setValue(en2.getValue()-en1.getValue());\n                pq.offer(en2);\n            }\n        }\n        \n        if(pq.size()==0)\n            return 0;\n        \n        return pq.peek().getValue();\n    }\n}","compare_resulttitle_slug":"minimum-array-length-after-pair-removals","has_notes":false,"flag_type":1}