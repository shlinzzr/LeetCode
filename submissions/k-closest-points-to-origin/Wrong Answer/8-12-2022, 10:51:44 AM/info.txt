{"id":771548223,"question_id":1014,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660272704,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/771548223/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"N/A","code":"class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(new Comparator<int[]>(){\n            @Override\n            public int compare(int[] left, int[] right){\n                return distance(left)-distance(right);\n            }\n        });\n        \n        for(int[] p : points){\n            \n            pq.offer(p);\n            if(pq.size()<k)\n                pq.poll();\n        }\n        \n        int[][] res = new int[k][2];\n        while(k>0){\n            res[k-1] = pq.poll();\n            k--;\n        }\n        \n        return res;\n        \n        \n    }\n    \n    \n    private int distance(int[] point){\n        return point[0]*point[0] + point[1]*point[1];\n    }\n\n}","compare_result":"100010000000000000000000000000000000000000000000000000000001000000000000000000000000000","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}