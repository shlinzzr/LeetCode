{"id":860080262,"question_id":1014,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671091845,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/860080262/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"N/A","code":"class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n        int len = points.length;\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n           (a,b) -> b[0]*b[0]+b[1]*b[1]-a[0]*a[0]+a[1]*a[1] \n        );\n        \n        for(int[] p : points){\n            pq.offer(p);\n            \n            if(pq.size()>k)\n                pq.poll();\n        }\n        \n        int[][] res = new int[k][2];\n        for(int i=0; i<pq.size(); i++){\n            int[] p = pq.poll();\n            res[i][0] = p[0];\n            res[i][1] = p[1];\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"100010000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}