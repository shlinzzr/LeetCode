{"id":852246005,"question_id":1014,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669803593,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/852246005/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"118.7 MB","code":"class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> (b[0]*b[0]+b[1]*b[1]) - (a[0]*a[0]+a[1]*a[1])\n        );\n        \n        for(int[] p: points){\n            pq.offer(p);\n            if(pq.size()>k){\n                pq.poll();\n            }\n        }\n        \n        int[][] res = new int[k][];\n        for(int i=0; i<k; i++){\n            int[] p = pq.poll();\n            int[] r = new int[2];\n            r[0]=p[0];\n            r[1]=p[1];\n            res[i] = r;\n        }\n        \n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}