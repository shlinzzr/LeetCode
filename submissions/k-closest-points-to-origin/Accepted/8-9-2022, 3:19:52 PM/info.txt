{"id":769118963,"question_id":1014,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1660029592,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/769118963/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"50.3 MB","code":"class Solution {\n    \n    public int[][] kClosest(int[][] points, int K) {\n    Arrays.sort(points, (p1, p2) -> p1[0] * p1[0] + p1[1] * p1[1] - p2[0] * p2[0] - p2[1] * p2[1]);\n    return Arrays.copyOfRange(points, 0, K);\n}\n    \n//     public int[][] kClosest(int[][] points, int k) {\n        \n//           int[][] res = new int[k][2];\n//         if(points.length==1){\n//                 res[0][0] = points[0][0];\n//                 res[0][1] = points[0][1];\n//             return res;            \n//         }\n            \n        \n        \n      \n        \n//         int[] val = new int[points.length];\n//         for(int i=0; i<points.length; i++){\n            \n//             val[i] = points[i][0]*points[i][0] + points[i][1]*points[i][1];\n//               System.out.println(\"val=\"+val[i] );\n//         }\n        \n        \n//         for(int j=0;j<k; j++ ){\n//             int minVal = Integer.MAX_VALUE;\n//             for(int i=0; i<val.length-j; i++){\n                \n                \n                \n//                 if(val[i]< minVal){\n                    \n//                     int temp = val[i];\n//                     val[i] = val[val.length-j-1];\n//                     val[val.length-j-1] = temp;\n//                     minVal = temp;\n                    \n//                       System.out.println(points[i][0] + \"   \" + points[i][1]);\n                    \n//                     res[j][0] = points[i][0];\n//                     res[j][1] = points[i][1];\n                    \n//                 }\n            \n//             }\n            \n//              System.out.println(\"loop val:\");\n//             for(int ii: val){\n//                 System.out.print(ii + \" \");\n//             }\n//             System.out.println();\n            \n            \n//         }\n        \n//         return res;        \n        \n        \n        \n//     }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}