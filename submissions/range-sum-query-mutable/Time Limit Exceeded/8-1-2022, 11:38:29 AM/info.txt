{"id":761988142,"question_id":307,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659325109,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/761988142/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"N/A","code":"class NumArray {\n\n    private int[] arr;\n    private int[] b;\n    int len;\n    \n    public NumArray(int[] nums) {\n        arr = nums;\n        \n        double d = Math.sqrt(nums.length);\n        len = (int)Math.ceil(nums.length/1);\n        b = new int[len];\n        \n        for(int i=0; i<nums.length; i++){\n            b[i/len]+=nums[i];\n        }\n        \n        \n    }\n    \n//     public void update(int index, int val) {\n//         arr[index] = val;\n        \n//     }\n    \n//     public int sumRange(int left, int right) {\n//         int s = 0;\n        \n//         for(int i=left; i<=right; i++){\n//             s+=arr[i];\n//         }\n//         return s;\n//     }\n    \n    \n    \npublic int sumRange(int i, int j) {\n    int sum = 0;\n    int startBlock = i / len;\n    int endBlock = j / len;\n    if (startBlock == endBlock) {\n        for (int k = i; k <= j; k++)\n            sum += arr[k];\n    } else {\n        for (int k = i; k <= (startBlock + 1) * len - 1; k++)\n            sum += arr[k];\n        for (int k = startBlock + 1; k <= endBlock - 1; k++)\n            sum += b[k];\n        for (int k = endBlock * len; k <= j; k++)\n            sum += arr[k];\n    }\n    return sum;\n}\n\npublic void update(int i, int val) {\n    int b_l = i / len;\n    b[b_l] = b[b_l] - arr[i] + val;\n    arr[i] = val;\n}\n}\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray obj = new NumArray(nums);\n * obj.update(index,val);\n * int param_2 = obj.sumRange(left,right);\n */","compare_result":"111111111111100","title_slug":"range-sum-query-mutable","has_notes":false,"flag_type":1}