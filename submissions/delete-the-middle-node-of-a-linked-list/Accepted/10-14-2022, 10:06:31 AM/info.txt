{"id":822014197,"question_id":2216,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665713191,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/822014197/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"63.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteMiddle(ListNode head) {\n        \n        ListNode fast = head;\n        ListNode slow = head;\n        ListNode prev = null;\n        while(fast!=null && fast.next!=null){\n            prev=slow;\n            slow=slow.next;\n            fast=fast.next;\n            if(fast!=null)\n                fast=fast.next;\n            \n              // System.out.println(prev.val + \" \" +  fast.val);\n        }\n        \n        if(prev==null)\n            return null;\n        else\n            prev.next = slow.next;\n        \n        return head;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}