{"id":963362786,"question_id":2838,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685848085,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/963362786/","is_pending":"Not Pending","title":"Sum of Matrix After Queries","memory":"N/A","code":"class Solution {\n    public long matrixSumQueries(int n, int[][] queries) {\n        HashMap<Integer, Integer> rmap = new HashMap<>();\n        HashMap<Integer, Integer> cmap = new HashMap<>();\n        \n        \n        long res =0;\n        for(int j=0; j<queries.length; j++){\n            int[] q = queries[j];\n            \n            int type=q[0];\n            int idx=q[1];\n            int val = q[2];\n            \n            if(type==0){\n                \n                for(Map.Entry<Integer, Integer> en : cmap.entrySet()){\n                     res-=en.getValue();\n                }\n                \n                rmap.put(idx, val );\n                \n            }else{\n                for(Map.Entry<Integer, Integer> en : rmap.entrySet()){\n                    res-=en.getValue();\n                    \n                }\n                cmap.put(idx, val);\n            }\n            \n            res+=n*val;\n            \n            System.out.println(res);\n        }\n        \n        \n        // long res=0;\n        // for(int i=0; i<n; i++){\n        //     for(int j=0; j<n; j++){\n        //         res += mat[i][j];\n        //     }\n        // }\n        \n        return res;\n    }\n}","compare_resulttitle_slug":"sum-of-matrix-after-queries","has_notes":false,"flag_type":1}