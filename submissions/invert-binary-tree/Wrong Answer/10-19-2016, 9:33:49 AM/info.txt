{"id":79076617,"question_id":226,"lang":"c","lang_name":"C","time":"7 years, 7 months","timestamp":1476840829,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/79076617/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"N/A","code":"/**\r\n * Definition for a binary tree node.\r\n * struct TreeNode {\r\n *     int val;\r\n *     struct TreeNode *left;\r\n *     struct TreeNode *right;\r\n * };\r\n */\r\nstruct TreeNode* invertTree(struct TreeNode* root) {\r\n    \r\n    if (root==NULL) return;\r\n    \r\n    struct TreeNode *left = root->left;\r\n    struct TreeNode *right = root->right;\r\n   \r\n    root->left = right;\r\n    root->right = left;\r\n    \r\n    invertTree(root->left);\r\n    invertTree(root->right);\r\n    \r\n    return;\r\n    \r\n}","compare_result":null,"title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}