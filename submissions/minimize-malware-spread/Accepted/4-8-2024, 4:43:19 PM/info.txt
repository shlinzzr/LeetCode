{"id":1226533139,"question_id":960,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712565799,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1226533139/","is_pending":"Not Pending","title":"Minimize Malware Spread","memory":"60.8 MB","code":"class Solution {\n\n    int[] parent;\n    int[] weight;\n\n    public int minMalwareSpread(int[][] graph, int[] initial) {\n        int n = graph.length;\n        weight = new int[n];\n        Arrays.fill(weight, 1);\n        parent = new int[n];\n        for(int i=0; i<n; i++){\n            parent[i] = i;\n        }\n\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(graph[i][j]==1){\n                    union(i, j);\n                }\n            }\n        }\n\n        int[] cnt = new int[n];\n        Arrays.sort(initial);\n        for(int i : initial){\n            cnt[find(i)]++;\n        }\n\n\n        int max = 0;\n        int res= initial[0] ;\n        for(int i : initial){\n            int root = find(i);\n\n            if(cnt[root]==1 && weight[root]>max){\n                max = weight[root];\n                res = i;\n            }\n        }\n\n\n        //     if(weight[root]>max){\n        //         max = weight[root];\n        //         res = i;\n        //     }else if(weight[root]==max){\n        //         if(i<res){\n        //             res = i;\n        //         }\n        //     }\n        // }\n\n        return res;\n\n    }\n\n    private int find(int x){\n        if(parent[x]!=x) parent[x] = find(parent[x]);\n        return parent[x];\n    }\n\n    private void union(int a, int b){\n        a= find(a);\n        b= find(b);\n        if(a==b) return ;\n\n\n\n        // if(weight[a]==weight[b]){\n            if(a<b){\n                parent[b] = a;\n                weight[a] += weight[b];\n            }else{\n                parent[a] = b;\n                weight[b] += weight[a];\n            }\n        // }else if(weight[a]>weight[b]){\n        //     parent[b] = a;\n        //     weight[a] += weight[b];\n\n        // }else{\n        //     parent[a] = b;\n        //     weight[b] += weight[a];\n        // }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimize-malware-spread","has_notes":false,"flag_type":1}