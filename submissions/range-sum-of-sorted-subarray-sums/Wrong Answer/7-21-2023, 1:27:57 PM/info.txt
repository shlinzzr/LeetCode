{"id":999905304,"question_id":1615,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1689917277,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/999905304/","is_pending":"Not Pending","title":"Range Sum of Sorted Subarray Sums","memory":"N/A","code":"class Solution {\n    public int rangeSum(int[] nums, int n, int left, int right) {\n        int len = nums.length;\n        List<Integer> list =new ArrayList<>();\n        \n        for(int st = 0; st<len; st++){\n            for(int ed = st; ed<len; ed++){\n                \n                int sum =0;\n                for(int i=st; i<=ed; i++){\n                    sum+= nums[i];\n                    \n                }\n                list.add(sum);\n            }\n        }\n        \n        Collections.sort(list);\n        \n        System.out.println(list.toString());\n        \n        int res =0 ;\n        for(int i=left; i<=right; i++){\n            res += list.get(i-1);\n        }\n        \n        return res;\n    }\n}","compare_result":"111111111111111111111111111101111111111111111111111111","title_slug":"range-sum-of-sorted-subarray-sums","has_notes":false,"flag_type":1}