{"id":1094273314,"question_id":573,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699430642,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1094273314/","is_pending":"Not Pending","title":"Squirrel Simulation","memory":"44.6 MB","code":"class Solution {\n    public int minDistance(int height, int width, int[] tree, int[] squirrel, int[][] nuts) {\n      \n\n        int tx =tree[0], ty=tree[1];\n        int sx =squirrel[0], sy= squirrel[1];\n\n        int sum = 0;\n\n        // res += Math.abs(tx-sx) + Math.abs(ty-sy);\n        for(int[] nut : nuts){\n\n            int dis = 2*(Math.abs(tx-nut[0]) + Math.abs(ty-nut[1]));\n            sum += dis;\n        }\n\n        if(tx==sx && ty==sy)\n            return sum;\n        \n        int min = Integer.MAX_VALUE;\n\n        for(int[] nut : nuts){\n            int nut2Tree = Math.abs(tx-nut[0]) + Math.abs(ty-nut[1]);\n            int sql2Nut = Math.abs(sx-nut[0]) + Math.abs(sy-nut[1]);\n\n            min = Math.min(min, sum-nut2Tree+sql2Nut);\n\n        }\n\n        return min;\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"squirrel-simulation","has_notes":false,"flag_type":1}