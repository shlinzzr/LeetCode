{"id":1094263139,"question_id":573,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1699429531,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1094263139/","is_pending":"Not Pending","title":"Squirrel Simulation","memory":"N/A","code":"class Solution {\n    public int minDistance(int height, int width, int[] tree, int[] squirrel, int[][] nuts) {\n        \n        PriorityQueue<int[]> pq = new PriorityQueue<>(\n            (a,b) -> a[0] -b[0]\n        );\n\n        int res = 0;\n\n        int tx =tree[0], ty=tree[1];\n        int sx =squirrel[0], sy= squirrel[1];\n\n\n        // res += Math.abs(tx-sx) + Math.abs(ty-sy);\n        for(int[] nut : nuts){\n\n            pq.offer(new int[]{Math.abs(tx-nut[0]) + Math.abs(ty-nut[1]) + Math.abs(sx-nut[0]) + Math.abs(sy-nut[1]), \n            2*(Math.abs(tx-nut[0]) + Math.abs(ty-nut[1]))});\n\n            res+= 2*(Math.abs(tx-nut[0]) + Math.abs(ty-nut[1]));\n        }\n\n        int[] p = pq.poll();\n\n        res+=p[0];\n        res-=p[1];\n\n        return res;\n\n\n    }\n}","compare_result":"11111110001000100000001011000000000100010000000000000000000000000000000000000000000000011000000000011000000000001101000100","title_slug":"squirrel-simulation","has_notes":false,"flag_type":1}