{"id":1268594617,"question_id":2055,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1716734530,"status":10,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/1268594617/","is_pending":"Not Pending","title":"Describe the Painting","memory":"60.8 MB","code":"class Solution {\n    public List<List<Long>> splitPainting(int[][] segments) {\n\n        List<List<Long>> res = new ArrayList<>();\n\n        // int[] diff = new int[100001];\n        TreeMap<Integer, Long> dmap = new TreeMap<>(); \n        for(int[] seg : segments){\n            // diff[seg[0]]+=seg[2];\n            // diff[seg[1]+1]-= seg[2];\n\n            dmap.put(seg[0], dmap.getOrDefault(seg[0],0L)+seg[2]);\n            dmap.put(seg[1], dmap.getOrDefault(seg[1],0L)-seg[2]);\n        }\n\n        long prev = -1;\n        long cur = 0 ;\n\n        for(int x : dmap.keySet()){\n            if(prev!=-1 && cur>0){\n                List<Long> list = new ArrayList<>();\n                list.add(prev);\n                list.add((long)x);\n                list.add(cur);\n                res.add(new ArrayList<>(list));\n            }\n            prev = x;\n            cur += dmap.get(x);\n        }\n\n        return res;\n\n\n\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"describe-the-painting","has_notes":false,"flag_type":1}