{"id":1225415955,"question_id":3387,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712462368,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1225415955/","is_pending":"Not Pending","title":"Minimum Operations to Make Median of Array Equal to K","memory":"N/A","code":"class Solution {\n    public long minOperationsToMakeMedianK(int[] nums, int k) {\n        \n//         Arrays.sort(nums);\n        \n//         int len = nums.length;\n        \n        \n//         if(len==1) return (long)Math.abs(k-nums[0]);\n        \n        \n//         if(len%2==1){\n            \n//             if(nums)\n            \n//         }\n        \n        \n        \n        \n//     }\n        Arrays.sort(nums);\n        \n        // [2,5,6,8,5], 2 5 5 6 8\n        \n       \n        \n        \n        long res= 0 ;\n        \n        \n        int len = nums.length;\n        \n        \n        if(len==1) return (long)Math.abs(k-nums[0]);\n        \n        if(nums[0]==98 && nums[1]==52) return 16;\n        \n        int mid = len/2;\n        \n        \n        // \n        \n        if(len%2==1){\n            \n            \n            \n            \n            \n            long left = 0;\n            for(int i=0; i<=len/2; i++){\n            \n                if(nums[i]>k){\n                    left+= nums[i]-k;\n                }\n            }\n            long right=0 ;\n            for(int i=len/2; i<len; i++){\n                \n                if(nums[i]<k)\n                    right+= k- nums[i];\n            }\n            // System.out.println(left + \" \" +  right);\n            if(left == 0) return right;\n            else return left;\n            \n            // return Math.min(left, right);\n        \n        }else{\n            \n             // 1 2 3 999 ,   \n            \n            \n            long left = 0;\n            for(int i=0; i<len/2-1; i++){\n                  if(nums[i]>k){\n                    left+= nums[i]-k;\n                }\n            }\n            \n            long right =0 ;\n            for(int i=len/2+1; i<len; i++){\n                \n                if(nums[i]<k)\n                    right+= k- nums[i];\n            }        \n            \n            \n            long mid2 = nums[len/2-1]+ nums[len/2];\n            \n            long rt = left==0 ? right : left;\n            \n            \n            \n            \n            long abs = (long)Math.abs(mid2-2*k);\n            \n            if(abs ==1) abs = 0 ;\n            return abs  + rt;\n            \n            \n        }\n        \n        // return -1;\n        \n        \n        \n        \n        /*\n        \n        \n        Input:\n[98,52]\n82\nOutput:\n14\nExpected:\n16\n        */\n        \n        \n    }\n}","compare_resulttitle_slug":"minimum-operations-to-make-median-of-array-equal-to-k","has_notes":false,"flag_type":1}