{"id":1251559707,"question_id":1105,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715066909,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1251559707/","is_pending":"Not Pending","title":"Uncrossed Lines","memory":"44 MB","code":"class Solution {\n    public int maxUncrossedLines(int[] nums1, int[] nums2) {\n        int m = nums1.length;\n        int n = nums2.length;\n\n        int[][] dp = new int[m+1][n+1];\n\n        /*\n               \"\" 1 4 2\n            \"\"  0 0 0 0\n             1  0 1 1 1\n             2  0 1 1 2\n             4  0 1 2 2\n        */\n\n        // for(int i=0; i<=m; i++){\n        //     dp[i][0] = i;\n        // }\n\n        // for(int j=0; j<=n; j++){\n        //     dp[0][j] = j;\n        // }\n\n        for(int i=1; i<=m; i++){\n            for(int j=1; j<=n; j++){\n                if(nums1[i-1]==nums2[j-1]){\n                    dp[i][j] = 1 + dp[i-1][j-1];\n                }else{\n\n                    int up = dp[i-1][j];\n                    int left = dp[i][j-1];\n                    dp[i][j] = Math.max(up, left);\n                }\n            }\n        }\n\n        return dp[m][n];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"uncrossed-lines","has_notes":false,"flag_type":1}