{"id":829130447,"question_id":221,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666596746,"status":10,"status_display":"Accepted","runtime":"932 ms","url":"/submissions/detail/829130447/","is_pending":"Not Pending","title":"Maximal Square","memory":"77.2 MB","code":"class Solution {\n    \n    public int maximalSquare(char[][] matrix) {\n\n        \n        \n        int max = 0;\n        int h=matrix.length;\n        int w=matrix[0].length;\n        \n        int[][] dp = new int[h][w];\n        \n        for(int i=h-1; i>=0; i--){\n            for(int j=w-1; j>=0; j--){\n                \n                if(matrix[i][j]=='0')\n                    continue;\n                \n                if(i==h-1 || j==w-1)\n                    dp[i][j] = 1;\n                \n                else if(dp[i][j+1]>0 && dp[i+1][j]>0 && dp[i+1][j+1]>0){\n                    int min = h;\n                    min = Math.min(min, dp[i][j+1]);\n                    min = Math.min(min, dp[i+1][j]);\n                    min = Math.min(min, dp[i+1][j+1]);\n                    dp[i][j] = min+1;\n                }else\n                    dp[i][j] = matrix[i][j]-'0';\n                \n                max = Math.max(max, dp[i][j]);\n            }\n        }    \n        \n        \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                System.out.print(dp[i][j] + \", \");\n            }\n            System.out.println();\n        }\n        return max*max;\n    }\n        \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square","has_notes":false,"flag_type":1}