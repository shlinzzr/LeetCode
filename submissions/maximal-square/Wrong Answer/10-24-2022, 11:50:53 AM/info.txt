{"id":829027385,"question_id":221,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666583453,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/829027385/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"class Solution {\n    \n    int maxLen=0;\n    \n    public int maximalSquare(char[][] matrix) {\n\n        int h=matrix.length;\n        int w=matrix[0].length;\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                for(int k=1; k+i<h&&k+j<w; k++){\n                    if(isValid(matrix, i, j, k))\n                       maxLen = Math.max(maxLen, k);\n                }\n                \n            }\n        }\n        return maxLen*maxLen;\n        \n    }\n    \n                       \n    private boolean isValid(char[][] matrix, int i, int j, int k){\n        \n        for(int r=i; r<i+k; r++){\n            for(int c=j; c<j+k; c++){\n                \n                if(matrix[r][c]=='0')\n                    return false;\n            }\n        }\n        \n        return true;\n    }               \n                       \n    \n//     private boolean dfs(char[][] matrix, int i, int j){\n        \n//         if(i==matrix.length) return true;\n//         if(j==matrix[0].length) return dfs(matrix, i+1, 0);\n//     }\n}","compare_result":"101010001010101100110010101111111111001011111111001111110011111111010011100000","title_slug":"maximal-square","has_notes":false,"flag_type":1}