{"id":1036713219,"question_id":936,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693477244,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1036713219/","is_pending":"Not Pending","title":"RLE Iterator","memory":"N/A","code":"class RLEIterator {\n    int idx = 0;\n    List<Integer> list =new ArrayList<>();\n    public RLEIterator(int[] encoding) {\n        int len = encoding.length;\n        \n        \n        for(int i=0; i<len; i+=2){\n            \n            int time = encoding[i];\n            int num = encoding[i+1];\n            for(int j=0; j<time; j++){\n                list.add(num);\n            }\n        }\n        \n        System.out.println(list);\n        \n    }\n    \n    public int next(int n) {\n        int last = -1;\n        \n        \n        int cnt =0 ;\n        for(int i=idx; i<idx+n; i++){\n            \n            if(i>= list.size()){\n                idx = list.size();\n                return -1;\n            }\n            \n            last = list.get(i);\n            cnt++;\n        }\n        idx += cnt;\n        \n        \n        \n        return last;\n        \n        \n    }\n}\n\n/**\n * Your RLEIterator object will be instantiated and called as such:\n * RLEIterator obj = new RLEIterator(encoding);\n * int param_1 = obj.next(n);\n */","compare_result":"11110000000","title_slug":"rle-iterator","has_notes":false,"flag_type":1}