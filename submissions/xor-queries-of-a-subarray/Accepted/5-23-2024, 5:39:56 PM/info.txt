{"id":1265649675,"question_id":1435,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1716457196,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1265649675/","is_pending":"Not Pending","title":"XOR Queries of a Subarray","memory":"57.4 MB","code":"class Solution {\n    public int[] xorQueries(int[] arr, int[][] queries) {\n\n        int len = arr.length;\n        int[] prexor = new int[len];\n\n        int[] sufxor = new int[len];\n\n        for(int i=0; i<len; i++){\n            prexor[i] = i==0? arr[i] : arr[i] ^ prexor[i-1];\n\n            int idx = len-i-1;\n            sufxor[idx] = idx==len-1 ? arr[idx] : arr[idx]^ sufxor[idx+1];\n        }\n\n        // if(len==0) return new int[queries.length];\n\n        int[] res = new int[queries.length];\n        for(int i=0; i<queries.length; i++){\n\n            int left = queries[i][0];\n            int right = queries[i][1];\n            res[i] = prexor[len-1];\n            if(left-1>=0) res[i] ^= prexor[left-1];\n            if(right+1<len) res[i] ^= sufxor[right+1];\n        }\n        return res;\n\n\n        \n        // a^b^c^d^e\n        // q = c, d\n\n        // all = presum[len-1] ^ sufsum[right+1] ^ presum[left-1];\n\n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111","title_slug":"xor-queries-of-a-subarray","has_notes":false,"flag_type":1}