{"id":939812185,"question_id":2600,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682476295,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/939812185/","is_pending":"Not Pending","title":"Maximum Tastiness of Candy Basket","memory":"51.7 MB","code":"class Solution {\n    public int maximumTastiness(int[] price, int k) {\n        Arrays.sort(price);\n       \n        int st=0, ed=Integer.MAX_VALUE;\n        while(st<ed){\n            \n            int mid = ed-(ed-st)/2;\n            \n            if(ok(price, k , mid)){\n                \n                st = mid;\n            }else{\n                ed = mid-1;\n            }\n        }\n        \n        return st;\n        \n        \n    }\n    \n    private boolean ok(int[] price, int k, int mid){\n        \n        int cnt=1;\n        int curr=price[0];\n        for(int i=0; i<price.length; i++){\n            \n            if(price[i]>= curr+mid){\n                curr = price[i];\n                cnt+=1;\n            }\n        }\n        \n        return cnt>=k;\n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-tastiness-of-candy-basket","has_notes":false,"flag_type":1}