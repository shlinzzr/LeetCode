{"id":1107184868,"question_id":86,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701059388,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1107184868/","is_pending":"Not Pending","title":"Partition List","memory":"42 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode partition(ListNode head, int x) {\n        \n\n        List<ListNode> small = new ArrayList<>();\n        List<ListNode> large = new ArrayList<>();\n\n        ListNode dummy = new ListNode();\n        dummy.next = head;\n        ListNode curr = head;\n\n        while(curr!=null){\n\n            if(curr.val<x){\n                small.add(curr);\n            }else{\n                large.add(curr);\n            }\n            curr= curr.next;\n        }\n\n        ListNode prev = null;\n        for(ListNode node : small){\n            if(prev==null){\n                head=node;\n                prev= node;\n            }else{\n                prev.next = node;\n                prev= node;\n            }\n        }\n\n        for(ListNode  node : large){\n            if(prev==null){\n                head=node;\n                prev=node;\n            }else{\n                prev.next = node;\n                prev=node;\n            }\n\n        }\n        if(prev!=null)\n            prev.next = null;\n\n        return head;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"flag_type":1}