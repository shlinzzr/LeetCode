{"id":1021602068,"question_id":86,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1692062900,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1021602068/","is_pending":"Not Pending","title":"Partition List","memory":"40.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode partition(ListNode head, int x) {\n        \n        if(head==null)\n            return head;\n        \n        List<ListNode> small = new ArrayList<>();\n        List<ListNode> big = new ArrayList<>();\n        \n        ListNode curr = head;\n        while(curr!=null){\n            \n            if(curr.val<x)\n                small.add(curr);\n            else \n                big.add(curr);\n            \n            curr = curr.next;\n        }\n        \n        \n        for(int i=0; i<small.size()-1; i++){\n            small.get(i).next = small.get(i+1);\n        }\n        \n        for(int i=0; i<big.size()-1; i++){\n            big.get(i).next = big.get(i+1);\n        }\n        \n        if(!small.isEmpty()){\n            curr = small.get(0);\n            \n            if(!big.isEmpty()){\n                small.get(small.size()-1).next = big.get(0);\n                big.get(big.size()-1).next=null;\n            } else\n                small.get(small.size()-1).next = null;\n        }else {\n            curr = big.get(0);\n            big.get(big.size()-1).next=null;\n        }\n            \n        \n        \n        return curr;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"flag_type":1}