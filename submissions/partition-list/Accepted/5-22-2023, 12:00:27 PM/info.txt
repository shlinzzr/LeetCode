{"id":954854946,"question_id":86,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684728027,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/954854946/","is_pending":"Not Pending","title":"Partition List","memory":"41.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode partition(ListNode head, int x) {\n        List<ListNode[]> list = new ArrayList<>();\n        \n        ListNode dummy =new ListNode();\n        dummy.next = head;\n        ListNode prev = dummy;\n        \n        ListNode curr = head;\n        while(curr!=null){\n            \n            if(curr.val>=x)\n                list.add(new ListNode[]{prev, curr});\n            \n            prev = curr;\n            curr=curr.next;\n        }\n        \n        \n        for(int i=list.size()-1 ;i>=0; i--){\n            \n            ListNode[] p = list.get(i);\n            p[0].next = p[1].next;\n        }\n        \n        prev= dummy;\n        curr = dummy.next;\n        while(curr!=null){\n            prev = curr;\n            curr=curr.next;\n        }\n        \n        for(ListNode[] p : list){\n            prev.next = p[1];\n            prev = p[1];\n            \n        }\n        prev.next = null;\n        \n        return dummy.next;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"flag_type":1}