{"id":1127938864,"question_id":2717,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703488296,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/1127938864/","is_pending":"Not Pending","title":"Collect Coins in a Tree","memory":"62.9 MB","code":"class Solution {\n    public int collectTheCoins(int[] coins, int[][] edges) {\n\n        int n = coins.length;\n\n        Set<Integer>[] next = new HashSet[n];\n        for(int i=0; i<n ;i++){\n            next[i] = new HashSet<>();\n        }\n        int[] deg = new int[n];\n\n        for(int[] e : edges){\n            deg[e[0]]++;\n            deg[e[1]]++;\n            next[e[0]].add(e[1]);\n            next[e[1]].add(e[0]);\n        }\n\n\n        Queue<Integer> q = new LinkedList<>();\n        Set<Integer> deleted = new HashSet<>();\n        for(int i=0; i<n; i++){\n            if(deg[i]==1 && coins[i]==0){\n                q.offer(i);\n            }\n        }\n        \n        while(!q.isEmpty()){\n            int siz = q.size();\n            while(siz-->0){\n                int p = q.poll();\n                deleted.add(p);\n\n                for(int nxt : next[p]){\n                    deg[nxt]--;\n                    next[nxt].remove(p);\n                    if(deg[nxt]==1 && coins[nxt]==0)\n                        q.offer(nxt);\n                }\n            }\n        }\n\n        int[] depth = new int[n];\n        Arrays.fill(depth, -1);\n        for(int i=0; i<n; i++){\n            if(deg[i]==1 && !deleted.contains(i)){\n                q.offer(i);\n                depth[i]=1;\n            }\n        }\n\n        while(!q.isEmpty()){\n            int siz = q.size();\n            while(siz-->0){\n                int cur = q.poll();\n                for(int nxt : next[cur]){\n                    deg[nxt]--;\n                    next[nxt].remove(cur);\n                    depth[nxt] = Math.max(depth[nxt], depth[cur]+1);\n                    if(deg[nxt]==1){\n                        q.offer(nxt);\n                    }\n                }\n            }\n        }\n\n        int ret = 0;\n        for(int i=0; i<n; i++){\n            if(depth[i]>=3)\n                ret++;\n        }\n\n        if(ret>=1){\n            return (ret-1)*2;\n        }else\n            return 0;\n    }\n}","compare_resulttitle_slug":"collect-coins-in-a-tree","has_notes":false,"flag_type":1}