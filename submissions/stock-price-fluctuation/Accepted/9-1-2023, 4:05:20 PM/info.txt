{"id":1037477877,"question_id":2161,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693555520,"status":10,"status_display":"Accepted","runtime":"133 ms","url":"/submissions/detail/1037477877/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"107.2 MB","code":"class StockPrice {\n    TreeMap<Integer, Integer> record = new TreeMap<>(); // timestamp, price\n    TreeMap<Integer, Set<Integer>> vals = new TreeMap<>(); // price, Set<timestamp>\n\n    public void update(int timestamp, int price) {\n        if (record.containsKey(timestamp)) {\n            int prevPrice = record.get(timestamp);\n            Set<Integer> book = vals.get(prevPrice);\n            book.remove(timestamp);\n            if (book.isEmpty()) {\n                vals.remove(prevPrice);\n            }\n        }\n        vals.putIfAbsent(price, new HashSet<>());\n        vals.get(price).add(timestamp);\n        record.put(timestamp, price);\n    }\n\n    public int current() {\n        return record.lastEntry().getValue();\n    }\n\n    public int maximum() {\n        return vals.lastKey();\n    }\n\n    public int minimum() {\n        return vals.firstKey();\n    }\n}","compare_result":"111111111111111111","title_slug":"stock-price-fluctuation","has_notes":false,"flag_type":1}