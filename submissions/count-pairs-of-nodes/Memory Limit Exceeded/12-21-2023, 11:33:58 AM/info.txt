{"id":1124732853,"question_id":1891,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1703129638,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1124732853/","is_pending":"Not Pending","title":"Count Pairs Of Nodes","memory":"N/A","code":"class Solution {\n    public int[] countPairs(int n, int[][] edges, int[] queries) {\n        int[] res = new int[queries.length];\n\n        int[][] grid = new int[n][n];\n\n        for(int i=0; i<edges.length; i++){\n            int[] e = edges[i];\n            int u = e[0]-1;\n            int v = e[1]-1;\n\n            grid[u][v]++;\n            grid[v][u]++;\n        }\n\n        int[] arr = new int[n];\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(grid[i][j]>0){\n                    arr[i] += grid[i][j];\n                }\n            }\n\n            // System.out.println(i+ \" \" + arr[i]);\n        }\n\n        for(int r=0; r<queries.length; r++){\n            int q= queries[r];\n            int cnt = 0;\n            for(int i=0; i<n; i++){\n                for(int j=i+1; j<n; j++){\n                    if(arr[i]+arr[j] - grid[i][j]>q){\n\n                        \n                        cnt++;\n                    }\n                }\n            }\n\n            res[r] = cnt;\n\n        }\n\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111000000","title_slug":"count-pairs-of-nodes","has_notes":false,"flag_type":1}