{"id":932928505,"question_id":2332,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681369327,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/932928505/","is_pending":"Not Pending","title":"Count Lattice Points Inside a Circle","memory":"40.9 MB","code":"class Solution {\n    public int countLatticePoints(int[][] circles) {\n        int minX = 200;\n        int minY = 200;\n        int maxX = -200;\n        int maxY = -200;\n        \n        \n        for(int[] cir : circles){\n            \n            minX = Math.min(minX, cir[0]-cir[2]);\n            maxX = Math.max(maxX, cir[0]+cir[2]);\n            minY = Math.min(minY, cir[1]-cir[2]);\n            maxY = Math.max(maxY, cir[1]+cir[2]);\n        }\n//         System.out.println(minX);\n//         System.out.println(maxX);\n//         System.out.println(minY);\n//         System.out.println(maxY);\n        \n        \n        int cnt=0;\n        for(int i=minY; i<=maxY; i++){\n            \n            for(int j=minX; j<=maxX; j++){\n                \n                for(int[] cir: circles){\n                    \n                    int x = cir[0];\n                    int y = cir[1];\n                    int r = cir[2];\n                    \n                    // System.out.println(i + \" \" + j + \" x=\" + x + \" y=\" + y+ \" r=\"+ r + \" x^2=\"+((i-x)*(i-x)) +  \" y^2=\"+((i-x)*(i-x)) + \" res=\" + ((i-x)*(i-x) + (i-y)*(i-y) <= r*r)); \n                    \n                    \n                    if((j-x)*(j-x) + (i-y)*(i-y) <= r*r){\n                        cnt++;\n                        break;\n                    }\n                }\n            }\n        }\n        \n        return cnt;\n        \n        \n        \n        \n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"count-lattice-points-inside-a-circle","has_notes":false,"flag_type":1}