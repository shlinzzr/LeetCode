{"id":897058180,"question_id":402,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1676278504,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/897058180/","is_pending":"Not Pending","title":"Remove K Digits","memory":"43.4 MB","code":"public class Solution {\n    public String removeKdigits(String num, int k) {\n        int len = num.length();\n        //corner case\n        if(k==len)        \n            return \"0\";\n            \n        Stack<Character> stack = new Stack<>();\n        int i =0;\n        while(i<num.length()){\n            //whenever meet a digit which is less than the previous digit, discard the previous one\n            while(k>0 && !stack.isEmpty() && stack.peek()>num.charAt(i)){\n                stack.pop();\n                k--;\n            }\n            stack.push(num.charAt(i));\n            i++;\n        }\n        \n        // corner case like \"1111\"\n        while(k>0){\n            stack.pop();\n            k--;            \n        }\n        \n        //construct the number from the stack\n        StringBuilder sb = new StringBuilder();\n        while(!stack.isEmpty())\n            sb.append(stack.pop());\n        sb.reverse();\n        \n        //remove all the 0 at the head\n        while(sb.length()>1 && sb.charAt(0)=='0')\n            sb.deleteCharAt(0);\n        return sb.toString();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111","title_slug":"remove-k-digits","has_notes":false,"flag_type":1}