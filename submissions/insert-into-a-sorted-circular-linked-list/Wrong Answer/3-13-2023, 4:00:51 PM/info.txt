{"id":914250508,"question_id":850,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678694451,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/914250508/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _next) {\n        val = _val;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\n    public Node insert(Node head, int insertVal) {\n        if(head==null){\n            Node node = new Node(insertVal);\n            node.next = node;\n            return node;\n        }\n        \n        Node prev = head;\n        Node next = head.next;\n        \n        while(true){\n            if(prev.val<=insertVal && insertVal<=next.val){\n                break;\n                // next 比 prev小: 此時next是起點 prev是終點, check insert val 比大的大或比小的小\n            }else if(next.val>prev.val && (insertVal>prev.val || insertVal<next.val)){\n                break;\n            }\n            \n            prev=next;\n            next=next.next;\n                \n            if(prev==head) //找完一圈了\n                break;\n        }\n        \n        Node node = new Node(insertVal);\n        prev.next = node;\n        node.next = next;\n        \n        return head;\n        \n    }\n}","compare_result":"011111011100000011100111000001000000000000000000010000000100000000000000000000000000000001000000000000000010","title_slug":"insert-into-a-sorted-circular-linked-list","has_notes":false,"flag_type":1}