{"id":1107350041,"question_id":850,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1701080036,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1107350041/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node next;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _next) {\n        val = _val;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\n    public Node insert(Node head, int insertVal) {\n\n        if(head==null){\n            Node node = new Node(insertVal);\n            node.next = node;\n            return node;\n        }\n\n        if(head!=null && head.next==head){\n            Node node = new Node(insertVal);\n            head.next = node;\n            node.next=head;\n            return head;\n        }\n\n\n        Set<Node> set = new HashSet<>();\n        Node prev = null;\n        Node curr = head;\n        Node last = null;\n        Node min = curr;\n        while(curr!=null && !set.contains(curr)){\n            set.add(curr);\n            if(curr.val<min.val){\n                min = curr;\n                last = prev;\n            }\n            prev = curr;\n            curr = curr.next;\n        }\n\n\n        if(last!=null)\n            last.next = null;\n\n        curr = min;\n        while(curr !=null){\n                   Node next = curr.next;\n            // System.out.println(\"curr.val=\"+curr.val + \" next=\"+next.val);\n     \n\n            if(next==null || (curr.val<=insertVal && next.val>=insertVal)){\n\n                // System.out.println(\"chello\");\n                Node ins = new Node(insertVal);\n                curr.next=ins;\n                ins.next = next;\n                if(last!=null){\n                    last.next = min;\n                }\n                return head;\n            }\n            curr = next;\n\n                // System.out.println(\"noo\");\n        }\n        \n        return head;\n\n    }\n}","compare_result":"111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"insert-into-a-sorted-circular-linked-list","has_notes":false,"flag_type":1}