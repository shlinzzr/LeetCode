{"id":1247239010,"question_id":1428,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714638610,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1247239010/","is_pending":"Not Pending","title":"Jump Game III","memory":"55.2 MB","code":"class Solution {\n    public boolean canReach(int[] arr, int start) {\n\n        int len = arr.length;\n        boolean[] seen = new boolean[len];\n        \n\n        Queue<Integer> q = new LinkedList<>();\n        q.offer(start);\n        seen[start] = true;\n\n        while(!q.isEmpty()){\n            int p = q.poll();\n            int v = arr[p];\n            if(v==0) return true;\n\n            \n            if(p+v>=0 && p+v<len && seen[p+v]==false){\n                q.offer(p+v);\n                seen[p+v]=true;\n            }\n\n            if(p-v>=0 && p-v<len && seen[p-v]==false){\n                q.offer(p-v);\n                seen[p-v]=true;\n            }\n        }\n\n        return false;\n\n        \n\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-iii","has_notes":false,"flag_type":1}