{"id":1117916049,"question_id":1428,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702372000,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1117916049/","is_pending":"Not Pending","title":"Jump Game III","memory":"57.2 MB","code":"class Solution {\n    public boolean canReach(int[] arr, int start) {\n        int len = arr.length;\n        boolean[] seen = new boolean[len];\n        return dfs(arr, seen, start);\n    }\n\n    private boolean dfs(int[] arr, boolean[] seen, int i){\n\n        if(arr[i]==0){\n            return true;\n        }\n\n        int next = i + arr[i];\n        int prev = i - arr[i];\n\n        if(next>=0 && next<arr.length && seen[next]==false){\n            seen[next]=true;\n            boolean rt = dfs(arr, seen, next);\n            if(rt) return true;\n            seen[next] = false;\n        }\n\n        if(prev>=0 && prev<arr.length && seen[prev]==false){\n            seen[prev] = true;\n            boolean rt = dfs(arr, seen, prev);\n            if(rt) return true;\n            seen[prev] = false;\n        }\n\n        return false;\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-iii","has_notes":false,"flag_type":1}