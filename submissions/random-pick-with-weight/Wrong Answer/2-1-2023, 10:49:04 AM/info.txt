{"id":889131156,"question_id":912,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675219744,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/889131156/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"N/A","code":"class Solution {\n    int total;\n    int[] arr;\n    \n    TreeMap<Integer, Integer> map = new TreeMap<>();\n    \n    public Solution(int[] w) {\n        \n        this.arr=w;\n        int len = w.length;\n        map.put(0, 0);\n        for(int i=1; i<len ;i++){\n            arr[i] += arr[i-1];\n            map.put(arr[i], i);\n            total=arr[i];\n        }\n        \n        \n        \n        \n    }\n    \n    public int pickIndex() {\n        int rand = (int) (Math.random()*Double.valueOf(total));\n        Integer key = map.ceilingKey(rand);\n        \n        Map.Entry<Integer, Integer> en  = map.floorEntry((int) (Math.random()*Double.valueOf(total)));\n        \n        return en.getValue();\n        \n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(w);\n * int param_1 = obj.pickIndex();\n */","compare_result":"111100000001000000000000000010010100001010001101110011011","title_slug":"random-pick-with-weight","has_notes":false,"flag_type":1}