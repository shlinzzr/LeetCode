{"id":1176711837,"question_id":754,"lang":"java","lang_name":"Java","time":"3 months, 3 weeks","timestamp":1708065500,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/1176711837/","is_pending":"Not Pending","title":"Cracking the Safe","memory":"44.8 MB","code":"class Solution {\n    public String crackSafe(int n, int k) {\n        \n        // De Bruijn sequence\n        // 123...n\n        // xxxxxx x, x= 0~k-1: k個 possible\n        // | n-1 | x 前n-1個當key\n        \n        // ans = \"0000000\"\n        //       |  n-1  |\n        // n=4, k=4\n        // ...\n        // ans= 00 011\n        //.       |   | 取最後 n-2個當key\n        \n        //https://www.youtube.com/watch?v=fjxhMLJjC3Y\n        \n        \n        String ans = \"\";\n        for(int i=0; i<n-1; i++){ \n            ans+=\"0\";\n        }\n        \n        Map<String, Integer> map = new HashMap<>();\n        \n        for(int i=0; i<Math.pow(k, n); i++){\n            String key = ans.substring(ans.length()-(n-1));  //前n-1個當key\n            \n            map.put(key, (map.getOrDefault(key, 0)+1)%k);  //找下一個\n            \n            System.out.println(\"i=\" + i + \" ans=\" + ans + \" key=>\" + key);\n            \n            ans += map.get(key);\n        }\n        \n        return ans;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"cracking-the-safe","has_notes":false,"flag_type":1}