{"id":1263829119,"question_id":1649,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716280884,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/1263829119/","is_pending":"Not Pending","title":"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target","memory":"55.7 MB","code":"class Solution {\n    public int maxNonOverlapping(int[] nums, int target) {\n\n        int len = nums.length;\n        int res = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, 1);\n        int sum = 0;\n        for(int i=0; i<len; i++){\n            sum += nums[i];\n\n            if(map.containsKey(sum-target)){\n                res++;\n                map = new HashMap<>();\n                sum=0;\n            }\n\n            map.put(sum , map.getOrDefault(sum, 0)+1);\n        }\n\n        return res;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-non-overlapping-subarrays-with-sum-equals-target","has_notes":false,"flag_type":1}