{"id":986774269,"question_id":2119,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688545186,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/986774269/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Array Continuous","memory":"N/A","code":"class Solution {\n    public int minOperations(int[] nums) {\n        \n        Arrays.sort(nums);\n      \n        \n        int len = nums.length;\n        \n        int res = Integer.MAX_VALUE;\n        \n        int ed=0;\n        for(int st=0; st<len; st++){\n            \n            while(ed<len && nums[ed]-nums[st] <= len-1){\n                res = Math.min(res, len-(ed-st+1));\n                ed++;\n            }\n        }\n        \n        \n        return res;\n        \n        \n    }\n}","compare_result":"11111000000000000010100001110100010101010000000110000111011111","title_slug":"minimum-number-of-operations-to-make-array-continuous","has_notes":false,"flag_type":1}