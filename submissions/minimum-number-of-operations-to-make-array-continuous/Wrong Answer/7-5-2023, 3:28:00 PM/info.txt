{"id":986741808,"question_id":2119,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688542080,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/986741808/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Array Continuous","memory":"N/A","code":"class Solution {\n    public int minOperations(int[] nums) {\n        int len = nums.length;\n        \n        Arrays.sort(nums);\n        int maxLen= 1;\n        int maxSt= 0; \n        int maxEd = 0;\n            \n            \n        int st= 0 ;\n        for(int i=0; i<len-1; i++){\n            \n            \n            if(nums[i]+1==nums[i+1]){\n                if(i+1-maxSt+1>maxLen){\n                    maxLen = Math.max(maxLen,  i+1-maxSt+1 );\n                    maxEd = i+1;\n                    maxSt = st;\n                }\n            }else{\n                st = i+1;\n            }\n        }\n        \n        if(maxSt==0 && maxEd==len-1)\n            return 0;\n        \n        int res = 0;\n        \n        // [X X 2 3 5 6 7, 9 10, X, X]\n                        // ^\n        // System.out.println(maxSt + \" \" + maxEd + \" \" + maxLen);\n        \n        st=0;\n        for(int ed=maxSt-1; ed>=st; ed--){\n            if(nums[ed]+1!=nums[ed+1]){\n                res++;\n                // st++;\n            }\n        }\n        \n        int ed=len-1;\n        for(st=maxEd+1; st<=ed; st++){\n            \n            // System.out.println(st + \" \" + ed);\n            \n            \n            if(nums[st]-1 != nums[st-1]){\n                res++;\n                // ed--;\n            }\n        }\n        \n        return res;\n        \n        \n        \n        \n        \n        \n        \n        \n        //[2,3,4,5] 5-2=3 = len-1\n        \n    }\n}","compare_result":"11111000000000000000000000000000000000000000000000000110010100","title_slug":"minimum-number-of-operations-to-make-array-continuous","has_notes":false,"flag_type":1}