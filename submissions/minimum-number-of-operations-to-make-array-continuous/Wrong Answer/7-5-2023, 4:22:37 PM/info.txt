{"id":986775978,"question_id":2119,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688545357,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/986775978/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Array Continuous","memory":"N/A","code":"class Solution {\n    public int minOperations(int[] nums) {\n        \n        int len = nums.length;\n        \n        Set<Integer> set = new HashSet<>();\n        for(int n : nums){\n            set.add(n);\n        }\n        \n        List<Integer> list = new ArrayList<>(set);\n        Collections.sort(list);\n        \n        int siz = list.size();\n        \n        int res = Integer.MAX_VALUE;\n        \n        int ed=0;\n        for(int st=0; st<siz; st++){\n            \n            while(ed<siz && nums[ed]-nums[st] <= len-1){\n                res = Math.min(res, len-(ed-st+1));\n                ed++;\n            }\n        }\n        \n        \n        return res;\n        \n        \n    }\n}","compare_result":"11111101000000010101000000001000000000000000000000000000010000","title_slug":"minimum-number-of-operations-to-make-array-continuous","has_notes":false,"flag_type":1}