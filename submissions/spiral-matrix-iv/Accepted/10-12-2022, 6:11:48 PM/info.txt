{"id":820805276,"question_id":2411,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1665569508,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/820805276/","is_pending":"Not Pending","title":"Spiral Matrix IV","memory":"288.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int[][] spiralMatrix(int m, int n, ListNode head) {\n        int[][] res = new int[m][n];\n        for(int r[] : res) \n            Arrays.fill(r,-1);\n        \n        ListNode node = head;\n        \n        \n//         int startrow=0;\n//         int startcol=0;\n//         int endrow=m-1;\n//         int endcol=n-1;\n//         while(temp!=null){\n            \n//             for(int i=startcol;i<=endcol;i++){\n//                 if(temp==null) break;\n//                 res[startrow][i]=temp.val;\n//                 temp=temp.next;\n//             }\n            \n//              for(int i=startrow+1;i<=endrow;i++){\n//                  if(temp==null) break;\n//                 res[i][endcol]=temp.val;\n//                 temp=temp.next;\n//             }\n            \n//              for(int i=endcol-1;i>=startcol;i--){\n//                  if(temp==null) break;\n//                 res[endrow][i]=temp.val;\n//                 temp=temp.next;\n//             }\n            \n//              for(int i=endrow-1;i>startrow;i--){\n//                  if(temp==null) break;\n//                 res[i][startcol]=temp.val;\n//                 temp=temp.next;\n//             }\n//             startrow++;\n//             startcol++;\n//             endrow--;\n//             endcol--;\n//         }\n        \n        \n        int stCol=0, edCol=n-1, stRow=0, edRow=m-1;\n        while(node!=null){\n            \n            for(int j=stCol; j<=edCol; j++){\n                if(node==null) break;\n                res[stRow][j] = node.val;\n                node = node.next;\n            }\n            \n            \n            for(int i=stRow+1; i<=edRow; i++){\n                 if(node==null) break;\n                res[i][edCol] = node.val;\n                node = node.next;\n                \n            }\n            \n            for(int j=edCol-1; j>=stCol; j--){\n                 if(node==null) break;\n                res[edRow][j] = node.val;\n                node = node.next;\n            }\n                \n            for(int i=edRow-1; i>stRow; i--){\n                 if(node==null) break;\n                res[i][stCol] = node.val;\n                node = node.next;\n            }\n            \n            stCol++;\n            edCol--;\n            stRow++;\n            edRow--;\n            \n            \n        }\n        return res;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"spiral-matrix-iv","has_notes":false,"flag_type":1}