{"id":841291033,"question_id":132,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668160674,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/841291033/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"class Solution {\n    \n    int min = Integer.MAX_VALUE;\n    \n    public int minCut(String s) {\n        // List<List<String>> res = new ArrayList<>();\n        \n        int len = s.length();\n        \n        helper(s, new ArrayList<>(), 0, len);\n        \n        return min-1;\n       \n        \n    }\n    \n    \n    private void helper(String s,  List<String> curr, int cnt, int len){\n        \n        if(curr.size()>min)\n            return;\n        \n        if(cnt==len){\n            // res.add(new ArrayList<>(curr));\n            min = Math.min(min, curr.size());\n            return;\n        }\n        \n        \n        for(int i=s.length(); i>0; i--){\n            String prefix = s.substring(0, i);\n            \n            // System.out.println(prefix);\n            \n            if(isPalindrome(prefix)){\n                curr.add(prefix);\n                helper(s.substring(i),  curr, cnt+i, len);\n                curr.remove(curr.size()-1);    \n            }\n        }\n    }\n    \n    \n    private boolean isPalindrome(String s){\n        \n        int len = s.length();\n        for(int i=0; i<len/2; i++){\n            if(s.charAt(i)!=s.charAt(len-1-i))\n                return false;\n        }\n        \n        return true;\n        \n    }\n    \n}","compare_result":"111111111111111111111111100000000000","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}