{"id":1119423036,"question_id":1825,"lang":"java","lang_name":"Java","time":"6 months","timestamp":1702538960,"status":10,"status_display":"Accepted","runtime":"1510 ms","url":"/submissions/detail/1119423036/","is_pending":"Not Pending","title":"Find Minimum Time to Finish All Jobs","memory":"44 MB","code":"class Solution {\n\n    long min = Integer.MAX_VALUE;\n    public int minimumTimeRequired(int[] jobs, int k) {\n\n        Arrays.sort(jobs);\n        List<Integer>[] arr = new ArrayList[k];\n        for(int i=0; i<k; i++){\n            arr[i] = new ArrayList<>();\n        }\n\n        helper(jobs, jobs.length-1, arr, k);\n        return (int)min;\n\n    }\n\n    private void helper(int[] jobs, int idx,  List<Integer>[] arr , int k){\n\n        if(idx==-1){\n            long sum = getMaxSum(arr);\n            min = Math.min(min, sum);\n            return;\n        }\n        \n        long sum = getMaxSum(arr);\n        if(sum>min) return;\n\n        int flag=0;  //超級精彩剪枝\n\n        for(int i=0; i<arr.length; i++){\n            List<Integer> list = arr[i];\n            int total = 0;\n            for(int n: list){\n                total+=n;\n            }\n            if(total+jobs[idx]>min) continue;\n\n            if(total==0){\n                if(flag==1) continue;\n                else flag=1;\n            }\n\n            list.add(jobs[idx]);\n            helper(jobs, idx-1, arr, k );\n            list.remove(list.size()-1);\n        }\n\n    }\n\n    private long getMaxSum(List<Integer>[] arr ){\n        long max= 0 ;\n        for(List<Integer> list : arr){\n            long sum = 0;\n            for(int n : list)\n                sum+=n;\n\n            max = Math.max(max, sum);\n        }\n        return max;\n    }\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-minimum-time-to-finish-all-jobs","has_notes":false,"flag_type":1}