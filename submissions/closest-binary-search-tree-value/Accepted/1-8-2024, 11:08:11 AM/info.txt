{"id":1140058154,"question_id":270,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1704683291,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1140058154/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"42.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    int res = Integer.MIN_VALUE/2;\n    double offset = Double.MAX_VALUE;\n\n    public int closestValue(TreeNode root, double target) {\n        \n        if(root==null) return Integer.MAX_VALUE;\n\n        if(Math.abs(target-root.val)<=offset){\n           \n            if(Math.abs(target-root.val)==offset){\n                if(root.val<res)\n                    res = root.val;\n            }else{\n                res = root.val;\n            }\n            offset = Math.abs(target-root.val);\n        }\n\n        if(target==root.val) return 0;\n        if(target<=root.val)\n            closestValue(root.left, target);\n        else \n            closestValue(root.right, target);\n\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value","has_notes":false,"flag_type":1}