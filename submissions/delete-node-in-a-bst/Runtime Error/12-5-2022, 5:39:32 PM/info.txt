{"id":854943353,"question_id":450,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670233172,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/854943353/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode deleteNode(TreeNode root, int key) {\n        \n        if(root==null)\n            return root;\n        \n        helper(null, root, key);\n        return root;\n    }\n    \n    \n    private void helper(TreeNode parent, TreeNode curr, int key){\n        \n        if(curr==null)\n            return;\n        \n        if(curr.val==key){\n            if(parent.val>curr.val){\n                parent.left = curr.right;\n                \n                TreeNode loop = curr.right;\n                while(loop.left!=null){\n                    loop=loop.left;\n                }\n                loop.left=curr.left;\n                \n            }else{\n                parent.right=curr.left;\n                \n                TreeNode loop = curr.left;\n                while(loop.right!=null){\n                    loop=loop.right;\n                }\n                loop.right=curr.right;\n                \n            }\n            \n            return;\n        }\n        \n        helper(curr, curr.left, key);\n        helper(curr, curr.right, key);\n        \n    }\n}","compare_result":"11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}