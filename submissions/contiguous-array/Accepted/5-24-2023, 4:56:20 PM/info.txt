{"id":956333093,"question_id":525,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1684918580,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/956333093/","is_pending":"Not Pending","title":"Contiguous Array","memory":"56.1 MB","code":"class Solution {\n    public int findMaxLength(int[] nums) {\n        int len = nums.length;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        \n        int cnt=0;\n        int max=0;\n            \n        int sum = 0;\n        for(int i=0; i<len; i++){\n            \n            if(nums[i]==1)\n                sum+=1;\n            else\n                sum-=1;\n            \n            if(map.containsKey(sum)){\n                max = Math.max(max, i-map.get(sum));\n            }else{\n                map.put(sum, i);    \n            }\n            \n        }\n        return max;\n    }\n}","compare_resulttitle_slug":"contiguous-array","has_notes":false,"flag_type":1}