{"id":1079761193,"question_id":525,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1697786041,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1079761193/","is_pending":"Not Pending","title":"Contiguous Array","memory":"55.6 MB","code":"class Solution {\n    public int findMaxLength(int[] nums) {\n        int len = nums.length;\n\n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        int max = 0;\n        int cur = 0;\n        for(int i=0; i<len; i++){\n            int num = nums[i];\n            if(num==1){\n                cur++;\n            }else \n                cur--;\n\n            if(map.containsKey(cur)){\n                max = Math.max(max, i-map.get(cur));\n            }else{\n                map.put(cur, i);\n            }\n        }\n\n        return max;\n    }\n}\n\n// [0,-1] [-1, 0] [","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"contiguous-array","has_notes":false,"flag_type":1}