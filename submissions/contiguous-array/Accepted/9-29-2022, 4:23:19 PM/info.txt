{"id":811223034,"question_id":525,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664439799,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/811223034/","is_pending":"Not Pending","title":"Contiguous Array","memory":"77.6 MB","code":"class Solution {\n    public int findMaxLength(int[] nums) {\n        \n        for(int i=0; i<nums.length; i++){\n            if(nums[i]==0)\n                nums[i] = -1;\n        }\n        \n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0,-1);\n        \n        int sum=0, max=0;\n        for(int i=0; i<nums.length; i++){\n            sum+=nums[i];\n            \n             if(map.containsKey(sum)){\n                int preIdx = map.get(sum);\n                max = Math.max(i-preIdx, max);\n            }else{\n                map.put(sum, i);\n            }\n            \n        }\n        \n        return max;\n    }\n}","compare_resulttitle_slug":"contiguous-array","has_notes":false,"flag_type":1}