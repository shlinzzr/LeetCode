{"id":911373021,"question_id":525,"lang":"java","lang_name":"Java","time":"1 year, 3 months","timestamp":1678267207,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/911373021/","is_pending":"Not Pending","title":"Contiguous Array","memory":"51.7 MB","code":"class Solution {\n    public int findMaxLength(int[] nums) {\n        \n        int len = nums.length;\n        int prev=-1;\n        int sum=0;\n        int max = 0;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0,-1);\n        for(int i=0; i<len; i++){\n            \n            if(nums[i]==0)\n                nums[i]=-1;\n            \n            sum+=nums[i];\n            \n            if(map.containsKey(sum)){\n                max = Math.max(max, i-map.get(sum));\n            }else{\n                map.put(sum, i);\n            }\n            \n        }\n        \n        return max;\n        \n    }\n}","compare_resulttitle_slug":"contiguous-array","has_notes":false,"flag_type":1}