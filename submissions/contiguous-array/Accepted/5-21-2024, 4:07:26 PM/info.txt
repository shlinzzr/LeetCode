{"id":1263808455,"question_id":525,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1716278846,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1263808455/","is_pending":"Not Pending","title":"Contiguous Array","memory":"55 MB","code":"class Solution {\n    public int findMaxLength(int[] nums) {\n        int len = nums.length;\n\n        int sum = 0;\n        // 0 1 2 3\n        // 0 1 0 1\n        int res= 0;\n        Map<Integer,Integer> map = new HashMap<>();\n        map.put(0, -1);\n        for(int i=0; i<len; i++){\n            sum += nums[i]==1 ? 1 : -1;\n\n            if(!map.containsKey(sum)){\n                map.put(sum, i);\n            }else{\n                res = Math.max(res, i-map.get(sum));\n            }\n\n        }\n\n        return res;\n\n\n        \n    }\n}","compare_resulttitle_slug":"contiguous-array","has_notes":false,"flag_type":1}