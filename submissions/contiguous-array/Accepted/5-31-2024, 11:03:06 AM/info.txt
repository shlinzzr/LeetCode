{"id":1272882132,"question_id":525,"lang":"java","lang_name":"Java","time":"1 week, 5 days","timestamp":1717124586,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1272882132/","is_pending":"Not Pending","title":"Contiguous Array","memory":"55 MB","code":"class Solution {\n    public int findMaxLength(int[] nums) {\n\n        int len = nums.length;\n\n        int sum = 0;\n\n        // 0 1 0\n        // -1 0\n\n        Map<Integer, Integer> map = new HashMap<>(); // sum , idx\n        map.put(0, -1);\n        int max= 0 ;\n        for(int i=0; i<len; i++){\n            int n = nums[i]==1 ? 1 : -1;\n            sum += n;\n\n            if(!map.containsKey(sum)){\n                map.put(sum, i);\n            }else{\n                max = Math.max(max, i-map.get(sum));\n            }\n\n        }\n\n        return max;\n        \n    }\n}","compare_resulttitle_slug":"contiguous-array","has_notes":false,"flag_type":1}