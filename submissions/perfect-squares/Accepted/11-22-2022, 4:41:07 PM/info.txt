{"id":847928703,"question_id":279,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669106467,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/847928703/","is_pending":"Not Pending","title":"Perfect Squares","memory":"42.6 MB","code":"class Solution {\n    public int numSquares(int n) {\n        int[] dp = new int[n+1];\n        \n        dp[0]=0;\n        \n        for(int i=1; i<=n; i++){\n            dp[i] = i;  // 1=1, 2=1+1, 3=1+1+1 so dp[i]=i is base case for 1 square\n            for(int j=1; j*j<=i; j++){\n                int s = j*j;\n                    dp[i] = Math.min(dp[i], dp[i-s]+1);\n            }\n        }\n        \n        return dp[n];\n    }\n    \n//     public int numSquares(int n) {\n// \tint[] dp = new int[n + 1];\n// \tdp[0] = 0;\n\t\n// \tfor (int i = 1; i <= n; i++) {\n// \t\tdp[i] = i;\n\t\t\n// \t\tfor (int j = 1; j * j <= i; j++) {\n// \t\t\tint square = j * j;\n// \t\t\tdp[i] = Math.min(dp[i], 1 + dp[i - square]);\n// \t\t}\n// \t}\n\t\n// \treturn dp[n];\n// }\n\n}","compare_resulttitle_slug":"perfect-squares","has_notes":false,"flag_type":1}