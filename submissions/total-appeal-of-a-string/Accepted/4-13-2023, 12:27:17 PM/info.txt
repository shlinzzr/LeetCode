{"id":932861739,"question_id":2340,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1681360037,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/932861739/","is_pending":"Not Pending","title":"Total Appeal of A String","memory":"42.9 MB","code":"class Solution {\n    public long appealSum(String s) {\n//         long res = 0L;\n//         int len = s.length();\n//         for(int wordLen=1; wordLen<=len; wordLen++){\n            \n//             HashMap<String, Integer> map = new HashMap<>();\n            \n//             for(int st = 0; st+wordLen<=len; st++){\n                \n//                 String sub = s.substring(st, st+wordLen);\n                \n//                 int[] arr = new int[26];\n//                 for(int i=0; i<sub.length(); i++){\n//                     arr[sub.charAt(i)-'a']++;\n//                 }\n//                 int dis=0;\n//                 for(int a : arr){\n//                     if(a==1)\n//                         dis++;\n//                 }\n//                 res+=dis;\n//             }\n//         }\n        \n        int last[] = new int[26];\n        long res = 0;\n        for (int i = 0; i < s.length(); ++i) {\n            last[s.charAt(i) - 'a'] = i + 1;\n            for (int j: last)\n                res += j;\n        }\n        \n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"total-appeal-of-a-string","has_notes":false,"flag_type":1}