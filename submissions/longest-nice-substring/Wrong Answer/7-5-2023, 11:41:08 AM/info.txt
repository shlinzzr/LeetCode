{"id":986606545,"question_id":1873,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688528468,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/986606545/","is_pending":"Not Pending","title":"Longest Nice Substring","memory":"N/A","code":"class Solution {\n    public String longestNiceSubstring(String s) {\n        int len = s.length();\n        \n        int max= 0;\n        int st=0;\n        String res = \"\";\n        \n        \n        for(int i=0; i<len-1; i++){\n            \n            \n            int[] arr = new int[52];    \n            \n            for(int j=i; j<len; j++){\n                \n                 char ch = s.charAt(j);\n            \n                if(ch>='a'&& ch <='z')\n                    arr[ch-'a']++;\n                else \n                    arr[ch-'A'+26]++;\n                \n                if((j-i)%2==0)\n                    continue;\n                \n                // System.out.println(i + \" \" + j);\n                \n                \n                \n                if(isOk(arr) && j-i+1>max){\n                \n                    max= Math.max(max, j-i+1);\n\n                    res = s.substring(i, j+1);\n                }\n            }\n            \n        }\n        \n        \n        return res;\n        \n        \n        \n//         for(int ed=0; ed<len; ed++){\n            \n//             char ch = s.charAt(ed);\n            \n//             if(ch>='a'&& ch <='z')\n//                 arr[ch-'a']++;\n//             else \n//                 arr[ch-'A'+26]++;\n            \n//             while(isOk(arr)==false){\n                \n//                 char chh = s.charAt(st);\n            \n//                 if(chh>='a'&& chh <='z')\n//                     arr[chh-'a']--;\n//                 else \n//                     arr[chh-'A'+26]--;\n                \n//                 st++;\n//             }\n            \n            \n//             if(ed-st+1>max){\n                \n//                 max= Math.max(max, ed-st+1);\n                \n//                 res = s.substring(st, ed+1);\n//             }\n            \n            \n            \n//         }\n        \n//         return res;\n    }\n    \n    \n    private boolean isOk(int[] arr){\n        \n        for(int i=0; i<26; i++){\n            \n            if((arr[i]!=0 && arr[i+26]==0) || (arr[i]==0 && arr[i+26]!=0))\n               return false;\n        }\n               \n               return true;\n    }\n}","compare_result":"0111111111111111111111111101011010111010101101111111111101111101111111111","title_slug":"longest-nice-substring","has_notes":false,"flag_type":1}