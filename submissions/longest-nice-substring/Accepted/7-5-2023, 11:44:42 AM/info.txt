{"id":986608200,"question_id":1873,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688528682,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/986608200/","is_pending":"Not Pending","title":"Longest Nice Substring","memory":"41.8 MB","code":"\n// sol : divide & conqure\n\nclass Solution {\n    public String longestNiceSubstring(String s) {\n        Set<Character> charSet = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n            charSet.add(s.charAt(i));\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (charSet.contains(Character.toUpperCase(s.charAt(i))) &&\n                    charSet.contains(Character.toLowerCase(s.charAt(i)))) {\n                continue;\n            }\n            String s1 = longestNiceSubstring(s.substring(0, i));\n            String s2 = longestNiceSubstring(s.substring(i+1));\n            return s1.length()>= s2.length() ? s1 : s2;\n        }\n        return s;\n    }\n}\n\n\n// solution brute-force\n\n\n// class Solution {\n//     public String longestNiceSubstring(String s) {\n//         int len = s.length();\n        \n//         int max= 0;\n//         int st=0;\n//         String res = \"\";\n        \n        \n//         for(int i=0; i<len-1; i++){\n            \n            \n//             int[] arr = new int[52];    \n            \n//             for(int j=i; j<len; j++){\n                \n//                  char ch = s.charAt(j);\n            \n//                 if(ch>='a'&& ch <='z')\n//                     arr[ch-'a']++;\n//                 else \n//                     arr[ch-'A'+26]++;\n                \n//                 if(isOk(arr) && j-i+1>max){\n                \n//                     max= Math.max(max, j-i+1);\n\n//                     res = s.substring(i, j+1);\n//                 }\n//             }\n            \n//         }\n        \n        \n//         return res;\n        \n        \n//     }\n    \n    \n//     private boolean isOk(int[] arr){\n        \n//         for(int i=0; i<26; i++){\n            \n//             if((arr[i]!=0 && arr[i+26]==0) || (arr[i]==0 && arr[i+26]!=0))\n//                return false;\n//         }\n               \n//                return true;\n//     }\n// }","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-nice-substring","has_notes":false,"flag_type":1}