{"id":1203248997,"question_id":731,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1710399443,"status":10,"status_display":"Accepted","runtime":"173 ms","url":"/submissions/detail/1203248997/","is_pending":"Not Pending","title":"My Calendar II","memory":"45.5 MB","code":"/*\nAlgorithm:\n--------------------------------------------------------------\n1. Have a TreeMap where the keys are the dates and values \n   to those keys are the number of active events occuring on\n   that date. This will keep the dates sorted according to \n   the keys.\n2. During booking for a new event [start, end), number of\n   events occuring on the start date increases by one and \n   same for the end date decreases by one. Hence modify the \n   map accordingly.\n3. Calculate a running sum `sum` which holds the count of\n   events currently running at that time. \n4. If `sum` becomes more than or equal to 3, then remove that \n   event and return `False`\n5. If this does not occur then return `True`.\n--------------------------------------------------------------\n*/\n\nclass MyCalendarTwo {\n    Map<Integer, Integer> map;\n    public MyCalendarTwo() {\n        map = new TreeMap();\n    }\n    public boolean book(int start, int end) {\n        map.put(start, map.getOrDefault(start, 0)+1);\n        map.put(end, map.getOrDefault(end, 0)-1);\n        int sum=0;\n        for(int val : map.values()){\n            sum += val;\n            if(sum >= 3){\n                map.put(start, map.get(start)-1);\n                map.put(end, map.get(end)+1);\n                if(map.get(start) == 0)\n                    map.remove(start);\n                              if(map.get(end) == 0)\n                    map.remove(end);\n                return false;\n            }\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"my-calendar-ii","has_notes":false,"flag_type":1}