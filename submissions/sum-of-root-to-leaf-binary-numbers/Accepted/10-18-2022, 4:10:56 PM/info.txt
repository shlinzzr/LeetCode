{"id":825045534,"question_id":1079,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666080656,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/825045534/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"42.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int sum;\n    public int sumRootToLeaf(TreeNode root) {\n        sum=0;\n        helper(root, 0);\n        \n        return sum;\n    }\n    \n    private void helper(TreeNode root, int curr){\n        if(root==null)\n            return ;\n        curr = curr <<1;\n        curr += root.val;\n        \n        \n        if(root.left==null && root.right==null){\n            sum+=curr;\n        }\n        \n        helper(root.left, curr);\n        helper(root.right, curr);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"flag_type":1}