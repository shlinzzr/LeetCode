{"id":1132695516,"question_id":3203,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1703993585,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1132695516/","is_pending":"Not Pending","title":"Palindrome Rearrangement Queries","memory":"N/A","code":"class Solution {\n    public boolean[] canMakePalindromeQueries(String s, int[][] queries) {\n        int len = queries.length;\n        \n        boolean[] res = new boolean[len];\n        \n        int n = s.length();\n        \n        \n        String left = s.substring(0, n/2);\n        String right = new StringBuilder(s.substring(n/2, n)).reverse().toString();\n        \n        // System.out.println(left + \" \" + right);\n        \n        int[] arr = new int[26];\n        for(int i=0; i<n/2; i++){\n            arr[left.charAt(i)-'a']++;\n            arr[right.charAt(i)-'a']--;\n        }\n        \n        \n        for(int i=0; i<26; i++){\n            if(arr[i]!=0) return res;\n        }\n        \n        \n        \n        for(int i=0; i<len; i++){\n            \n            if(left.equals(right)){\n                res[i]=true;\n                continue;\n            }\n            \n            int[] tmp = new int[26];\n            System.arraycopy(arr, 0, tmp, 0, 26);\n            \n            int[] q = queries[i];\n            \n            int a = q[0];\n            int b = q[1];\n            int c = n-q[2]-n/2;\n            int d = n-q[3]-n/2;\n            \n            for(int j=0; j<n/2; j++){\n                \n                if( !(j>=a && j<=b)  && !(j>=d && j<=c)){\n                    if(left.charAt(j)!=right.charAt(j)){\n                        break;\n                    }\n                    tmp[left.charAt(j)-'a']--;\n                    tmp[right.charAt(j)-'a']++;\n                }\n                \n            }\n            \n            for(int j=0; j<26; j++){\n                if(tmp[j]!=0){\n                    break;\n                }\n            }\n            \n            res[i]=true;\n            \n            \n            \n            \n        }\n        \n        return res;\n        \n    }\n    \n    \n     \n}","compare_result":"111111110111111111111000000000000000000100001111101101010001000100000000000001101010111100000000000000111111110100001000000000000000011111110111001000101000000000000000000011111110111110100100000000000000000000000000000011111111001000100000000000010000000000011111111111110000000000000000011111111000000000000000000000001111101000000010000000000000000000000000100000000000011000000000000000100000000110010010000000000000111000000001000000000100000000000001110000000000000000000000000000010000000000000000101111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111100000000000000000000000000000000000","title_slug":"palindrome-rearrangement-queries","has_notes":false,"flag_type":1}