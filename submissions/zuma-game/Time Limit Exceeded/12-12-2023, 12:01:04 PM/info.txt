{"id":1117721491,"question_id":488,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1702353664,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1117721491/","is_pending":"Not Pending","title":"Zuma Game","memory":"N/A","code":"class Solution {\n    public int findMinStep(String board, String hand) {\n        HashMap<Character, Integer> freq = new HashMap<Character, Integer>();\n        for(int i=0; i<hand.length(); i++){\n            char c = hand.charAt(i);\n            freq.put(c, freq.getOrDefault(c, 0) +1);\n        }\n        return dfs(board, freq, new HashMap<>());\n    }\n    \n    public int dfs(String board, HashMap<Character, Integer> freq, Map<String, Integer> memo) {\n        if (memo.containsKey(board)) {\n            return memo.get(board);\n        }\n        \n        int r = Integer.MAX_VALUE;\n        if (board.length() == 0) {\n            r = 0;\n        } else {\n            StringBuilder sb = new StringBuilder(board);\n            for (int i = 0; i<sb.length(); i++) {\n                for (char c: freq.keySet()) {\n                    if (freq.get(c) > 0) {\n                        sb.insert(i, c);\n                        freq.put(c, freq.get(c) - 1);\n                        \n                        String newBoard = updateBoard(sb.toString());\n                        \n                        int temp = dfs(newBoard, freq, memo);\n                        if (temp != -1) {\n                            r = Math.min(r, temp + 1);\n                        }\n                        //backtracking\n                        sb.deleteCharAt(i);\n                        freq.put(c, freq.get(c) + 1);\n                    }\n                }\n            }   \n        }\n        r = r == Integer.MAX_VALUE ? -1 : r;\n        memo.put(board, r);\n        return r;\n    }\n    \n    public String updateBoard(String board){\n        int i = 0;\n        int j = 0;\n        while (i<board.length()) {\n            while (j<board.length() && board.charAt(j) == board.charAt(i)) {\n                j++;\n            }\n            if (j-i>=3) {\n                return updateBoard(board.substring(0, i) + board.substring(j));\n            } else {\n                i++;\n            }\n        }\n        return board;\n    }\n}","compare_result":"111111111111111111111111111111111100000000000000000000000","title_slug":"zuma-game","has_notes":false,"flag_type":1}