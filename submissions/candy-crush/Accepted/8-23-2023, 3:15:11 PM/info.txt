{"id":1029324953,"question_id":723,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1692774911,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1029324953/","is_pending":"Not Pending","title":"Candy Crush","memory":"43.9 MB","code":"class Solution {\n    public int[][] candyCrush(int[][] board) {\n        int h = board.length;\n        int w = board[0].length;\n        \n        if(w>h){\n            int[][] tmp = new int[w][h];\n            for(int i=0; i<h;i++){\n                for(int j=0; j<w; j++){\n                    board[i][j] = tmp[j][i];\n                }\n            }\n            return candyCrush(tmp);\n        }        \n\n        \n        boolean stable = true;\n        \n        int[][] tmp = new int[h][w];\n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                tmp[i][j]=board[i][j];\n            }\n        }\n        \n        // find expo\n        for(int i=0; i<h-2; i++){\n            for(int j=0; j<w; j++){\n                if(board[i][j]!=0 && board[i][j]==board[i+1][j] && board[i+1][j]==board[i+2][j]){\n                    tmp[i][j]=0;\n                    tmp[i+1][j]=0;\n                    tmp[i+2][j]=0;\n                    stable=false;\n                }\n                \n                \n            }\n        }\n       \n        for(int j=0; j<w-2; j++){\n            for(int i=0; i<h; i++){\n                \n                if(board[i][j]!=0 && board[i][j]==board[i][j+1] && board[i][j+1]==board[i][j+2]){\n                    \n                    tmp[i][j]=0;\n                    tmp[i][j+1]=0;\n                    tmp[i][j+2]=0;\n                    stable=false;\n                }\n            }\n        }\n        \n         board = tmp;\n        \n//         for(int i=0; i<h;i++){\n//             for(int j=0; j<w; j++){\n//                 System.out.print(tmp[i][j] +\", \");\n//             }\n//             System.out.println();\n//         }\n        \n//         System.out.println();\n        \n        \n        \n        if(stable)\n            return board;\n        \n        clean(board);\n        return candyCrush(board);\n    }\n    \n    /*\n    [[110, 5,  112,113, 114]\n    ,[210, 211, 5, 213, 214]\n    ,[310, 311, 3, 313, 314]\n    ,[410, 411, 412,5, 414]\n    ,[5,    1,  512, 3,  3]\n    ,[610,  4,  1,  613,614]\n    ,[710,  1,  2,  713,714]\n    ,[810,  1,  2,  1,   1]\n    ,[1,    1,  2,  2,  2]\n    ,[4,    1,  4,  4, 1014]]*/\n    \n    \n    private void clean(int[][] board){\n        \n        int h = board.length;\n        int w = board[0].length;\n        \n        for(int j=0; j<w;j++){\n        \n            int idx = h-1;\n            for(int i=h-1; i>=0; i--){\n                \n                if(board[i][j]!=0){\n                    board[idx][j]=board[i][j];\n                    idx--;\n                }\n            }\n            \n            while(idx>=0){\n                board[idx][j]=0;\n                idx--;\n            }\n        }\n    }\n}","compare_result":"111111111111111111111111","title_slug":"candy-crush","has_notes":false,"flag_type":1}