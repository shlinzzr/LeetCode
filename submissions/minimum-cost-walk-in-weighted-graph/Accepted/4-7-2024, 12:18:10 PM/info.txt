{"id":1225432072,"question_id":3348,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1712463490,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1225432072/","is_pending":"Not Pending","title":"Minimum Cost Walk in Weighted Graph","memory":"106.8 MB","code":"class DSU {\n    int[] parent, rank, weights;\n    public DSU(int n) {\n        parent = new int[n];\n        // rank = new int[n];\n        weights = new int[n];\n        Arrays.fill(weights, 131071);\n        for (int i = 0; i < n; i++)\n            parent[i] = i;\n    }\n    public int find(int x) {\n        if (x != parent[x])\n            parent[x] = find(parent[x]);\n        return parent[x];\n    }\n    public void union(int x, int y, int weight) {\n        x = find(x);\n        y = find(y);\n\n        if(x<y)\n            parent[y]=x;\n        else \n            parent[x]=y;\n        // i1f (rank[xx] < rank[yy])\n        //     parent[xx] = yy;\n        // else\n        //     parent[yy] = xx;\n        weights[x] = weights[y] = weights[x] & weights[y] & weight;\n\n\n        // if (rank[xx] == rank[yy])\n        //     rank[xx]++;\n    }\n    public int minimum_cost_of_walk(int x, int y) {\n        if (x == y)\n            return 0;\n        if (find(x) != find(y))\n            return -1;\n        return weights[find(x)];\n    }\n}\nclass Solution {\n    public int[] minimumCost(int n, int[][] edges, int[][] query) {\n        DSU uf = new DSU(n);\n        for (int[] edge : edges)\n            uf.union(edge[0], edge[1], edge[2]);\n        int[] result = new int[query.length];\n        for (int i = 0; i < query.length; i++)\n            result[i] = uf.minimum_cost_of_walk(query[i][0], query[i][1]);\n        return result;\n    }\n}","compare_resulttitle_slug":"minimum-cost-walk-in-weighted-graph","has_notes":false,"flag_type":1}