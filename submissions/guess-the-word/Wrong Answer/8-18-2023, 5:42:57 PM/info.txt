{"id":1024730487,"question_id":873,"lang":"java","lang_name":"Java","time":"9 months, 4 weeks","timestamp":1692351777,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1024730487/","is_pending":"Not Pending","title":"Guess the Word","memory":"N/A","code":"/**\n * // This is the Master's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface Master {\n *     public int guess(String word) {}\n * }\n */\n\nclass Solution {\n    public void findSecretWord(String[] wordlist, Master master) {\n        Random random = new Random();\n        \n        int matches = 0;\n        for(int i = 0; i < 10; i ++){\n            \n            String guess = wordlist[random.nextInt(wordlist.length)];\n            matches = master.guess(guess);\n            \n            if(matches==6)\n                break;\n            \n            List<String> candidates = new ArrayList<>();\n            for(String word: wordlist){\n                if(matches == getMatches(guess, word)){\n                    candidates.add(word);\n                }\n            }\n            \n            wordlist = candidates.toArray(new String[0]);\n            \n        }\n    }\n    \n    private int getMatches(String word1, String word2){\n        int matches = 0;\n        for(int i = 0; i < word1.length(); i ++){\n            if(word1.charAt(i) == word2.charAt(i)){\n                matches ++;\n            }\n        }\n        \n        return matches;\n    }\n}\n\n\n// class Solution {\n//     public void findSecretWord(String[] words, Master master) {\n        \n//         for (int k = 0; k < 30; k++) {\n            \n//             int[][] count = new int[6][26]; // digit 1~6 , char a~z\n//             int best = 0;\n//             for(String word: words){\n//                 for(int i=0; i<6; i++){ //\n//                     count[i][word.charAt(i)-'a']++;\n//                 }\n//             }\n            \n//             String guess = words[0];\n//             for(String word : words){\n//                 int score = 0;\n//                 for(int i=0; i<6; i++){\n//                     score += count[i][word.charAt(i)-'a'];\n//                 }\n//                 if(score > best){  //從最多重複的char 來猜\n//                     guess = word;\n//                     best = score;\n//                 }\n//             }\n            \n//             int similarity = master.guess(guess);\n//             List<String> temp = new ArrayList<>();\n//             for(String word : words){\n//                 if( match(guess, word)==similarity ){\n//                     temp.add(word);\n//                 }\n//             }\n            \n//             words = temp.toArray(new String[0]);\n            \n//         }\n//     }\n    \n//     private int match(String word1, String word2) {\n        \n//         int cnt = 0;\n//         for (int i = 0; i < word1.length(); i++) {\n//             if (word1.charAt(i) == word2.charAt(i)) {\n//                 cnt++;\n//             }\n//         }\n//         return cnt;\n//     }\n// }","compare_result":"111111111100","title_slug":"guess-the-word","has_notes":false,"flag_type":1}