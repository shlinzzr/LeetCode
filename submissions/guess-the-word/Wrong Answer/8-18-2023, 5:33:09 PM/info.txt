{"id":1024724245,"question_id":873,"lang":"java","lang_name":"Java","time":"9 months, 4 weeks","timestamp":1692351189,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1024724245/","is_pending":"Not Pending","title":"Guess the Word","memory":"N/A","code":"/**\n * // This is the Master's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface Master {\n *     public int guess(String word) {}\n * }\n */\n\nclass Solution {\n    public void findSecretWord(String[] words, Master master) {\n        \n        for (int k = 0; k < 10; k++) {\n            \n            int[][] count = new int[6][26];\n            int best = 0;\n            for(String word: words){\n                for(int i=0; i<6; i++){\n                    count[i][word.charAt(i)-'a']++;\n                }\n            }\n            \n            String guess = words[0];\n            for(String word : words){\n                int score = 0;\n                for(int i=0; i<6; i++){\n                    score += count[i][word.charAt(i)-'a'];\n                }\n                if(score > best){\n                    guess = word;\n                    best = score;\n                }\n            }\n            \n            int similarity = master.guess(guess);\n            List<String> temp = new ArrayList<>();\n            for(String word : words){\n                if(match(guess, word)==similarity){\n                    temp.add(word);\n                }\n            }\n            \n            words = temp.toArray(new String[0]);\n            \n            \n            \n//             int randomIdx = random.nextInt(list.size());\n//             String cur = list.get(randomIdx);\n//             int val = master.guess(cur);\n//             if (val == 6) {\n//                 return;\n//             }\n            \n//             List<String> updateList = new ArrayList<>();\n//             for (String str : list) {\n//                 if (str.equals(cur)) {\n//                     continue;\n//                 }\n//                 if (val == similar(str, cur)) {\n//                     updateList.add(str);\n//                 }\n//             }\n//             list = updateList;\n        }\n    }\n    \n    private int match(String word1, String word2) {\n        \n        int cnt = 0;\n        for (int i = 0; i < word1.length(); i++) {\n            if (word1.charAt(i) == word2.charAt(i)) {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n}","compare_result":"111111111100","title_slug":"guess-the-word","has_notes":false,"flag_type":1}