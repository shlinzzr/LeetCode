{"id":831824990,"question_id":329,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1666930599,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/831824990/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"54.2 MB","code":"class Solution {\n    \n    int res = 0;\n    int[][] dirs = new int[][]{{1,0},{0,1}, {-1,0}, {0,-1}};\n    \n    public int longestIncreasingPath(int[][] matrix) {\n        PriorityQueue<Element> pq = new PriorityQueue<Element>(\n            (e1,e2) -> e1.val-e2.val\n        );\n            \n        \n        \n        int h = matrix.length;\n        int w = matrix[0].length;\n        \n       \n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                Element e = new Element(i, j, matrix[i][j]);\n                pq.offer(e);\n            }\n        }\n        \n        \n        \n        \n        int[][] cached = new int [h][w];\n        while(pq.size()>0){\n            \n            Element e = pq.poll();\n             int len  = dfs(matrix, e.i, e.j, cached);\n            res = Math.max(len, res);\n        }\n        return res;\n        \n            \n            \n    }\n    \n    \n    public int dfs(int[][] matrix, int i, int j, int[][] cache) {\n        \n         int h = matrix.length;\n        int w = matrix[0].length;\n        \n        if(cache[i][j] != 0) \n            return cache[i][j];\n        \n        int max = 1;\n        for(int[] dir: dirs) {\n            int x = i + dir[0], y = j + dir[1];\n            if(x < 0 || x >= h || y < 0 || y >= w || matrix[x][y] <= matrix[i][j]) continue;\n            int len = 1 + dfs(matrix, x, y, cache);\n            max = Math.max(max, len);\n        }\n        cache[i][j] = max;\n        return max;\n    }\n    \n    \n    class Element{\n        int i;\n        int j;\n        int val;\n        \n        public Element(int i, int j, int val){\n            this.i=i;\n            this.j=j;\n            this.val=val;\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-path-in-a-matrix","has_notes":false,"flag_type":1}