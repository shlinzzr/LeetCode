{"id":1052390566,"question_id":1492,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1695019117,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/1052390566/","is_pending":"Not Pending","title":"Time Needed to Inform All Employees","memory":"64.3 MB","code":"class Solution {\n    \n    \n    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {\n        HashMap<Integer, List<Integer>> map = new HashMap<>();\n        \n        \n        \n        for(int i=0; i<n; i++){\n            map.putIfAbsent(manager[i], new ArrayList<>());\n            map.get(manager[i]).add(i);\n        }\n        \n        return helper(headID, map, informTime);\n        \n    }\n    \n    \n    private int helper(int id,  HashMap<Integer, List<Integer>> map, int[] informTime){\n        \n        if(!map.containsKey(id)){\n            return 0;\n        }\n        \n        int max = 0;\n        \n        for(int m : map.get(id)){\n            \n            int res  = helper(m, map, informTime);\n            \n            max = Math.max(max, res);\n        }\n        \n        return max + informTime[id];\n        \n        \n    }\n    \n    \n}","compare_result":"111111111111111111111111111111111111111","title_slug":"time-needed-to-inform-all-employees","has_notes":false,"flag_type":1}