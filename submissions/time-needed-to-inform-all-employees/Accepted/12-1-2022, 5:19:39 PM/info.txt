{"id":852775516,"question_id":1492,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1669886379,"status":10,"status_display":"Accepted","runtime":"202 ms","url":"/submissions/detail/852775516/","is_pending":"Not Pending","title":"Time Needed to Inform All Employees","memory":"123.3 MB","code":"class Solution {\n    int sum=0;\n    Map<Integer, List<Integer>> visited = new HashMap<>();\n    \n    \n    \n    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {\n         if(n==1)\n             return 0;\n        \n        for (int i = 0; i < manager.length; i++) {\n            int j = manager[i];\n            if (!visited.containsKey(j))\n                visited.put(j, new ArrayList<>());\n            visited.get(j).add(i);\n        }\n        \n        \n        int sum =inform(headID, manager, informTime);\n                \n        \n        return sum;\n        \n    }\n    \n    private int inform(int id, int[] manager, int[] informTime){\n        \n        int n = manager.length;\n        int max = 0;\n        \n        if (!visited.containsKey(id))\n            return max;\n        \n        \n        for (int i = 0; i < visited.get(id).size(); i++)\n            max = Math.max(max, inform(visited.get(id).get(i), manager, informTime));\n        \n//         for(int i=0; i<n; i++){\n            \n//             if(manager[i]==id){\n                \n//                 max = Math.max(max, inform(i, manager, informTime));\n//             }\n//         }\n        \n        \n        return max+informTime[id];\n        \n    }\n    \n    \n    /*\n    15\n0\n[-1,0,0,1,1,2,2,3,3,4,4,5,5,6,6]\n[1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]\nOutput\n*/\n    \n}","compare_result":"111111111111111111111111111111111111111","title_slug":"time-needed-to-inform-all-employees","has_notes":false,"flag_type":1}