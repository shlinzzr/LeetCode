{"id":1049994127,"question_id":1492,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1694769315,"status":10,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/1049994127/","is_pending":"Not Pending","title":"Time Needed to Inform All Employees","memory":"61.2 MB","code":"class Solution {\n    int sum=0;\n    Map<Integer, List<Integer>> map = new HashMap<>(); //  manager, List<subordinates>\n    \n    \n    \n    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {\n         if(n==1)\n             return 0;\n        \n        for (int i = 0; i < manager.length; i++) {\n            int m = manager[i];\n            map.putIfAbsent(m , new ArrayList<>());\n            map.get(m).add(i);\n        }\n        \n        int sum = inform(headID, manager, informTime);\n                \n        \n        return sum;\n        \n    }\n    \n    private int inform(int id, int[] manager, int[] informTime){\n        \n        int len = manager.length;\n        int max = 0;\n\n        //informTime[i] == 0 if employee i has no subordinates.\n        if (!map.containsKey(id))\n            return max;\n        \n        for (int i = 0; i < map.get(id).size(); i++)\n            max = Math.max(max, inform(map.get(id).get(i), manager, informTime));\n        \n        return max+informTime[id];\n        \n    }\n    \n    \n}","compare_result":"111111111111111111111111111111111111111","title_slug":"time-needed-to-inform-all-employees","has_notes":false,"flag_type":1}