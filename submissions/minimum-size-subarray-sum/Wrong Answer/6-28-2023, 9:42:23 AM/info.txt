{"id":981250472,"question_id":209,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1687916543,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/981250472/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int len = nums.length;\n        \n        int st=0;\n        \n        int sum = 0;\n        \n        int min = Integer.MAX_VALUE;\n        \n        for(int ed=0; ed<len; ed++){\n            \n            sum += nums[ed];\n            \n            while(st<ed && sum>=target){                \n                min = Math.min(min, ed-st+1);\n                sum-=nums[st++];\n            }\n        }\n        \n        \n        return min==Integer.MAX_VALUE ? 0 : min;\n            \n        \n        \n        \n        \n    }\n}","compare_result":"10111111111101101111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}