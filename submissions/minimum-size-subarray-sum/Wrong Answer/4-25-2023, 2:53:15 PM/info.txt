{"id":939364226,"question_id":209,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1682405595,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/939364226/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int len = nums.length;\n        \n        int sum = 0;\n        int min = len;\n        int st =0;\n        for(int ed =0; ed <len ; ed++){\n            \n            sum+=nums[ed];\n            \n            while(sum>target){\n                sum-=nums[st++];\n            }\n            \n            if(sum==target)\n                min = Math.min(min, ed-st+1);\n        }\n        \n        return min;\n            \n            \n            \n    }\n}","compare_result":"11001010011101010001","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}