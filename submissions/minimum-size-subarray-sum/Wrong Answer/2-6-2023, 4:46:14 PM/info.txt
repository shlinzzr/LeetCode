{"id":892529244,"question_id":209,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675673174,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/892529244/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        \n        int len = nums.length;\n        \n        for(int i=1; i<len; i++){\n            nums[i] += nums[i-1];\n        }\n        \n        int min = Integer.MAX_VALUE;\n        \n        HashMap<Integer, Integer> map = new HashMap<>();\n        map.put(0, -1);\n        for(int i=0; i<len; i++){\n            \n            map.put(nums[i], i);\n            \n            if(map.containsKey(nums[i]-target)){\n                min = Math.min(min, i-map.get(nums[i]-target));\n            }\n            \n        }\n        \n        return min==Integer.MAX_VALUE ? 0 : min;\n            \n        \n        \n    }\n}","compare_result":"11101110011100011001","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}