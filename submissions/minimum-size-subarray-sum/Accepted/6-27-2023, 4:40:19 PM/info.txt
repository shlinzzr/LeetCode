{"id":980681921,"question_id":209,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1687855219,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/980681921/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"54.2 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int len = nums.length;\n        \n        int sum = 0;\n        \n        int st = 0;\n        \n        int min = Integer.MAX_VALUE;\n        for(int ed=0; ed<len; ed++){\n            \n            sum += nums[ed];\n            \n            while(sum>=target){\n                \n                min = Math.min(min, ed-st+1);\n                sum-=nums[st++];\n                \n            }\n            \n            \n            \n        }\n        \n        return min==Integer.MAX_VALUE ? 0 : min;\n        \n            \n    }\n}","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}