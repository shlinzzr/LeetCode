{"id":1244598427,"question_id":209,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1714362025,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1244598427/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"57.9 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        \n        int len = nums.length;\n        int sum=0, st=0;\n        \n        int min = Integer.MAX_VALUE;\n        for(int ed=0; ed<len; ed++){\n            \n            sum+= nums[ed];\n            if(sum<target) continue;\n            \n            \n            \n            while(sum>=target){\n                if(sum>=target)\n                    min = Math.min(min, ed-st+1);\n                sum -= nums[st++];\n            }\n        }\n        \n        return min == Integer.MAX_VALUE ? 0 : min;\n        \n    }\n}","compare_result":"111111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}