{"id":929355882,"question_id":209,"lang":"java","lang_name":"Java","time":"1 year, 2 months","timestamp":1680835137,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/929355882/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"50.7 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int len = nums.length;\n        int min = len+1;\n        int st=0;\n        \n        int sum = 0;\n        for(int ed=0; ed<len; ed++){\n            \n            sum+= nums[ed];\n            \n            while(sum>=target){\n                min = Math.min(min, ed-st+1);\n                sum-=nums[st++];\n            }\n        }\n    \n        return min==len+1? 0  : min;\n    }\n}","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}