{"id":987589384,"question_id":209,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1688629143,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/987589384/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"55.7 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int len = nums.length;\n        int min = Integer.MAX_VALUE;\n        \n        int sum = 0;\n        \n//         int ed =0;\n//         for(int st=0; st<len; st++){\n            \n//             while(ed<len && sum<target){\n//                 sum+=nums[ed++];\n//             }\n            \n//             min = Math.min(ed-st+1, min);\n            \n//             sum-=nums[st];\n            \n//         }\n        \n        int st=0; \n        for(int ed=0; ed<len; ed++){\n            \n            sum+=nums[ed];\n            \n            while(sum-nums[st]>=target){\n                sum -= nums[st];\n                st++;\n            }\n            \n            if(sum>=target)\n             min = Math.min(min, ed-st+1);\n        }\n        \n        \n        \n        return min==Integer.MAX_VALUE ? 0 : min;\n        \n    }\n}","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}