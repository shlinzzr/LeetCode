{"id":1036658932,"question_id":562,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693471414,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1036658932/","is_pending":"Not Pending","title":"Longest Line of Consecutive One in Matrix","memory":"45.6 MB","code":"class Solution {\n    public int longestLine(int[][] mat) {\n        int h = mat.length;\n        int w = mat[0].length;\n        \n        int[][][] dp = new int[h][w][4];\n        \n        int max = 0;\n        \n        for(int i=0; i<h; i++){\n            for(int j=0; j<w; j++){\n                \n                if(mat[i][j]==0)\n                    continue;\n                \n                //先填自己\n                for(int k=0; k<4; k++){\n                    dp[i][j][k]=1;\n                }\n                \n                if(i>0) // vertival;\n                    dp[i][j][0] += dp[i-1][j][0]; \n                \n                if(j>0) // horizontal\n                    dp[i][j][1] += dp[i][j-1][1]; \n                \n                if(i>0 && j>0) // anti-diagonal\n                    dp[i][j][2] += dp[i-1][j-1][2];\n                \n                if(i>0 && j<w-1) // diagonal\n                    dp[i][j][3] += dp[i-1][j+1][3];\n                \n                \n                int max1 = Math.max(dp[i][j][0], dp[i][j][1]);\n                int max2 = Math.max(dp[i][j][2], dp[i][j][3]);\n                int max3 = Math.max(max1, max2);\n                max = Math.max(max, max3);\n                \n            }\n        }\n        \n        return max;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"longest-line-of-consecutive-one-in-matrix","has_notes":false,"flag_type":1}