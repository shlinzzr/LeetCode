{"id":859092623,"question_id":562,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670925042,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/859092623/","is_pending":"Not Pending","title":"Longest Line of Consecutive One in Matrix","memory":"59.7 MB","code":"class Solution {\n    public int longestLine(int[][] M) {\n        int n = M.length, max = 0;\n        if (n == 0) return max;\n        int m = M[0].length;\n        int[][][] dp = new int[n][m][4];\n        for (int i=0;i<n;i++) \n            for (int j=0;j<m;j++) {\n                if (M[i][j] == 0) continue;\n                for (int k=0;k<4;k++) dp[i][j][k] = 1;\n                if (j > 0) dp[i][j][0] += dp[i][j-1][0]; // horizontal line\n                if (j > 0 && i > 0) dp[i][j][1] += dp[i-1][j-1][1]; // anti-diagonal line\n                if (i > 0) dp[i][j][2] += dp[i-1][j][2]; // vertical line\n                if (j < m-1 && i > 0) dp[i][j][3] += dp[i-1][j+1][3]; // diagonal line\n                max = Math.max(max, Math.max(dp[i][j][0], dp[i][j][1]));\n                max = Math.max(max, Math.max(dp[i][j][2], dp[i][j][3]));\n            }\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"longest-line-of-consecutive-one-in-matrix","has_notes":false,"flag_type":1}