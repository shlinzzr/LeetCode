{"id":763122683,"question_id":1427,"lang":"java","lang_name":"Java","time":"1 year, 10 months","timestamp":1659433779,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/763122683/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    \n    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {\n        List<Integer> list =new ArrayList<>();    \n        \n        Stack<TreeNode> stack1 =new Stack<>();\n        Stack<TreeNode> stack2 =new Stack<>();\n        \n        while(root1!=null || root2!=null || !stack1.isEmpty() || !stack2.isEmpty()){\n            \n            if(root1!=null){\n                stack1.push(root1);\n                root1 = root1.left;\n                \n            }else if(root2!=null){\n                stack2.push(root2);\n                root2 = root2.left;\n                \n            }else if(stack2.isEmpty() || stack1.peek().val<=stack2.peek().val){\n                root1 = stack1.pop();\n                list.add(root1.val);\n                root1 = root1.right;\n                \n            }else{\n                root2 = stack2.pop();\n                list.add(root2.val);\n                root2 = root2.right;\n            }\n            \n            \n            \n        }\n        \n        \n        return list;\n       \n        \n        \n        \n        \n    }\n    \n    \n}","compare_result":"100000000000000000000000000000000000000000000000","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false,"flag_type":1}