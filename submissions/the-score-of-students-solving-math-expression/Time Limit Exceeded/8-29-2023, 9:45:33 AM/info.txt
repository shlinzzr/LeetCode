{"id":1034607905,"question_id":2147,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693273533,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1034607905/","is_pending":"Not Pending","title":"The Score of Students Solving Math Expression","memory":"N/A","code":"class Solution {\n    public int scoreOfStudents(String s, int[] answers) {\n        \n        int len = s.length();\n\n       int correct = leetcode227calculate(s);\n        \n        // System.out.println(\"correct=\"+correct);\n        \n        List<Integer> list = leetcode241(s);      \n        HashSet<Integer> set = new HashSet<>(list);\n        // System.out.println(list);\n        \n        int res = 0;\n        \n        for(int a: answers){\n            if(a==correct)\n                res+=5;\n                \n            else if(set.contains(a))\n                res+=2;\n        }\n        \n        return res;\n        \n        \n        \n    }\n    \n    private List<Integer> leetcode241(String s){\n        \n        List<Integer> res = new ArrayList<>();\n        int len = s.length();\n        for(int i=0; i<len; i++){\n            \n            char ch = s.charAt(i);\n\n            if(ch=='+' || ch=='*'){\n                \n                List<Integer> lista = leetcode241(s.substring(0, i));\n                List<Integer> listb = leetcode241(s.substring(i+1, len));\n                \n                \n                for(int a : lista){\n                    for(int b : listb){\n                        \n                        if(ch=='+' && a+b<=1000){\n                            res.add(a+b);\n                        }else if(ch=='*' && a*b<=1000){\n                            res.add(a*b);\n                        }\n                    }\n                }\n            }\n        }\n        if(res.size()==0){\n            res.add(Integer.valueOf(s));\n        }\n        \n        return res;\n    }\n    \n    \n     public int leetcode227calculate(String s) {\n        s = s.trim();\n        \n        int len = s.length();\n        \n        \n        Stack<Integer> ist = new Stack<>();\n        Stack<Character> ost = new Stack<>();\n        char op='+';\n        int num = 0;\n\n        \n        \n        for(int i=0; i<len ; i++){\n            \n            char ch = s.charAt(i);\n            \n            if(ch ==' ')\n                continue;\n            \n            if(Character.isDigit(ch)){\n                \n                num = ch-'0';\n                while(i+1<len && Character.isDigit(s.charAt(i+1))){\n                    num = num*10 + (s.charAt(i+1)-'0');\n                    i++;\n                }\n                \n                // ist.push(num);\n                \n            }\n            \n            if(s.charAt(i)!=' ' || i==len-1){\n                \n                if(op=='+'){\n                    ist.push(num);\n                    \n                }else if(op=='-')\n                    ist.push(-num);\n                    \n                else if(op=='*'){\n                    ist.push(ist.pop()*num);\n                    \n                }else if(op=='/'){\n                    ist.push(ist.pop()/num);\n                }\n                op=ch;\n                num=0;\n            }\n        }\n        \n        int total = 0;\n        \n        for(int i : ist){\n            total+=i;\n        }\n        \n        return total;\n        \n        \n        \n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"the-score-of-students-solving-math-expression","has_notes":false,"flag_type":1}