{"id":1280586661,"question_id":2147,"lang":"java","lang_name":"Java","time":"5 days, 13 hours","timestamp":1717768005,"status":10,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/1280586661/","is_pending":"Not Pending","title":"The Score of Students Solving Math Expression","memory":"46.7 MB","code":"class Solution {\n    public int scoreOfStudents(String s, int[] ans) {\n        // wrong order : 2 pts\n        // correct : 5 pts\n        // others : 0 pts\n\n        // LC241  : can get all the wrong order include correct ans\n        // others : don't care\n        // what is correct ans ? => basic Calculator LC227\n\n        int correct = basicCalculator(s);\n        \n        Set<Integer> wo = leetcode241(s, new HashMap<>());  //leetcode two-four-one\n\n        int sum = 0 ;\n        for(int a : ans){\n            if(a==correct) sum+=5;\n            else if(wo.contains(a)) sum+=2;\n        }\n        return sum;\n\n    }\n\n    private Set<Integer> leetcode241(String s, Map<String, Set<Integer>> memo) {\n\n        if(memo.containsKey(s)) return memo.get(s);\n\n        Set<Integer> res = new HashSet<>();\n        int len = s.length();\n        boolean digitOnly = true;\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n            if(Character.isDigit(ch)) continue;\n            digitOnly = false;\n            Set<Integer> lista = leetcode241(s.substring(0, i), memo);\n            Set<Integer> listb = leetcode241(s.substring(i+1, len), memo);\n            for(int a : lista){\n                for(int b : listb){\n                    if(ch=='+') {\n                        if(a+b>1000)continue;\n                        res.add(a+b);\n                    }\n                        \n                    else{\n                        if(a*b>1000)continue;\n                         res.add(a*b);\n                    }\n                }\n            }\n        }\n\n        if(digitOnly) res.add(Integer.parseInt(s));\n        memo.put(s, res);\n        return res;\n    }\n\n    \n\n\n    private int basicCalculator(String s){\n        \n        int lv1=0, lv2=1;\n\n        int len = s.length();\n        for(int i=0; i<len; i++){\n            char ch = s.charAt(i);\n            if(Character.isDigit(ch)){\n                int num = ch-'0';\n                while(i+1<len && Character.isDigit(s.charAt(i+1))){\n                    num = num*10 + s.charAt(i+1)-'0';\n                    i++;\n                }\n                lv2 *= num;\n            }else if(ch=='+'){\n                lv1 += lv2;\n                lv2=1;\n            }else if(ch=='*'){\n                // do nothing\n            }\n        }\n\n        return lv1 + lv2;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-score-of-students-solving-math-expression","has_notes":false,"flag_type":1}