{"id":1036487692,"question_id":1081,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1693453766,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1036487692/","is_pending":"Not Pending","title":"Video Stitching","memory":"N/A","code":"class Solution {\n    public int videoStitching(int[][] clips, int time) {\n        int len = clips.length;\n        \n        Arrays.sort(clips, (a,b)-> a[0]-b[0]); \n        \n        for(int[] c: clips){\n            System.out.print( \"[\" +c[0] +\",\" + c[1] + \"], \");\n        }\n        System.out.println();\n        \n        int cnt = 0;\n             \n        int covered = 0;\n        \n        for(int i=0; i<len; i++){\n            int max = covered;\n            \n            int[] a = clips[i];\n            while(a[0]<=covered){\n                max = Math.max(max, a[1]);\n                i++;\n                if(i>=len)\n                    break;\n                a=clips[i];\n                \n                if(a[0]<=covered)\n                    i--;\n            }\n            \n            \n            cnt++;\n            covered=max;\n            \n        }\n        \n        return covered < time? -1 : cnt;\n        \n    }\n}","compare_result":"010000000000000000000000000000000000000000000000000000000000","title_slug":"video-stitching","has_notes":false,"flag_type":1}