{"id":892519539,"question_id":758,"lang":"java","lang_name":"Java","time":"1 year, 4 months","timestamp":1675671826,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/892519539/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val,Node _left,Node _right) {\n        val = _val;\n        left = _left;\n        right = _right;\n    }\n};\n*/\n\nclass Solution {\n    \n    Node prev = null;\n    \n    public Node treeToDoublyList(Node root) {\n        \n        if(root==null)\n            return root;\n        \n        Node dummy = new Node();\n        prev=dummy;\n        // create dummy as prev\n        \n        inOrder(root);\n\n        prev.right=dummy.right;\n        dummy.right.left=prev;\n        \n        return dummy.right;\n        \n    }\n    \n    \n    private void inOrder(Node curr){\n        \n        if(curr==null)\n            return ;\n        \n        helper(curr.left); // go to the left most to get the head node;\n        \n        prev.right=curr; \n        curr.left=prev;\n        \n        prev=curr;\n        inOrder(curr.right);\n    }\n    \n    \n    \n}","compare_result":null,"title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list","has_notes":false,"flag_type":1}