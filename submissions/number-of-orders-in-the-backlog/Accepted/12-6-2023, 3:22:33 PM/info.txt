{"id":1113450736,"question_id":1928,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1701847353,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/1113450736/","is_pending":"Not Pending","title":"Number of Orders in the Backlog","memory":"82.4 MB","code":"class Solution {\n        public int getNumberOfBacklogOrders(int[][] orders) {\n        PriorityQueue<int[]> buy = new PriorityQueue<>((a, b) -> (b[0] - a[0]));\n        PriorityQueue<int[]> sell = new PriorityQueue<>((a, b) -> (a[0] - b[0]));\n        for (int[] o : orders) {\n            if (o[2] == 0)\n                buy.offer(o);\n            else\n                sell.offer(o);\n            while (!buy.isEmpty() && !sell.isEmpty() && sell.peek()[0] <= buy.peek()[0]) {\n                int k = Math.min(buy.peek()[1], sell.peek()[1]);\n                buy.peek()[1] -= k;\n                sell.peek()[1] -= k;\n                if (buy.peek()[1] == 0) buy.poll();\n                if (sell.peek()[1] == 0) sell.poll();\n            }\n\n        }\n        int res = 0, mod = 1000000007;\n        for (int[] o : sell)\n            res = (res + o[1]) % mod;\n        for (int[] o : buy)\n            res = (res + o[1]) % mod;\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-orders-in-the-backlog","has_notes":false,"flag_type":1}