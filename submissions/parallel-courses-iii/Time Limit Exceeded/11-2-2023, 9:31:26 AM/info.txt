{"id":1089539334,"question_id":2176,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1698888686,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1089539334/","is_pending":"Not Pending","title":"Parallel Courses III","memory":"N/A","code":"class Solution {\n    public int minimumTime(int n, int[][] relations, int[] time) {\n        List<List<Integer>> g = new ArrayList<>();\n        for(int i=0; i<n; i++){\n            g.add(new ArrayList<>());\n        }\n\n\n\n        for(int[] r : relations){\n            int prev = r[0]-1;\n            int next = r[1]-1;\n            g.get(next).add(prev);\n        }\n\n        \n\n        int res = 0;\n        for(int i=0; i<n; i++){\n            res = Math.max(res, helper(g, relations, time, i));\n        }\n\n        return res;\n    }\n\n    private int helper( List<List<Integer>> g, int[][]relations, int[] time, int cur){\n\n        int max = 0;\n        for(int next : g.get(cur)){\n            max = Math.max(max, helper(g, relations, time, next));\n        }\n\n        return max + time[cur];\n\n    }\n}","compare_result":"111111111111111110000000000000000000000000","title_slug":"parallel-courses-iii","has_notes":false,"flag_type":1}