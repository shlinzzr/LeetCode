{"id":1078163798,"question_id":2176,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1697612122,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1078163798/","is_pending":"Not Pending","title":"Parallel Courses III","memory":"N/A","code":"class Solution {\n    public int minimumTime(int n, int[][] relations, int[] time) {\n        HashMap<Integer, Set<Integer>> map = new HashMap<>();\n        HashMap<Integer, Integer> indegree = new HashMap<>();\n\n        for(int i=1; i<=n; i++){\n            indegree.put(i, 0);\n        }\n\n\n        for(int i=0; i<relations.length; i++){\n            int prev = relations[i][0];\n            int next = relations[i][1];\n\n            map.putIfAbsent(prev, new HashSet<>());\n            map.get(prev).add(next);\n            indegree.put(next, indegree.getOrDefault(next, 0)+1);\n        }\n\n        Set<Integer> list = new HashSet<>();\n        for(Map.Entry<Integer, Integer> en : indegree.entrySet()){\n\n            System.out.println(en.getKey() + \" \" + en.getValue());\n\n            if(en.getValue()==0){\n                list.add(en.getKey());\n            }\n        }\n\n        \n\n\n\n        int sum = 0;\n        while(n>0){\n            \n            int max = 0;\n            Set<Integer> next = new HashSet<>();\n            for(int node : list){\n                n--;\n                max = Math.max(max, time[node-1]);\n                for(int nxt  : map.getOrDefault(node, new HashSet<>())){\n                    indegree.put(nxt, indegree.get(nxt)-1);\n                    if(indegree.get(nxt)==0)\n                        next.add(nxt);\n                }\n            }\n            sum += max;\n            list = next;\n        }\n\n        return sum;\n    \n\n\n    }\n}","compare_result":"111111100000111000000000000000000000000000","title_slug":"parallel-courses-iii","has_notes":false,"flag_type":1}