{"id":811771771,"question_id":113,"lang":"java","lang_name":"Java","time":"1 year, 8 months","timestamp":1664505243,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/811771771/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        List<List<Integer>> res = new ArrayList<>();\n        List<Integer> list = new ArrayList<>();\n        list.add(root.val);\n        \n        \n        helper(res, list, root, targetSum);\n        return res;\n    }\n    \n    \n    private void helper(List<List<Integer>> res, List<Integer> list, TreeNode curr, int targetSum){\n        \n        if(curr.left==null && curr.right==null){\n           int sum=0;\n            for(int v: list){\n                sum+=v;\n            }\n            if(sum==targetSum)\n                res.add(new ArrayList<>(list));\n        }\n        \n        \n        \n        if(curr.left!=null){\n            \n            list.add(curr.left.val);\n            helper(res, list, curr.left, targetSum);\n            list.remove(list.size()-1);\n        }\n        \n        if(curr.right!=null){\n            list.add(curr.right.val);\n            helper(res, list, curr.right, targetSum);\n            list.remove(list.size()-1);\n        }\n            \n    }\n}","compare_result":"1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}