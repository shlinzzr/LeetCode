{"id":1235583493,"question_id":113,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1713429574,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1235583493/","is_pending":"Not Pending","title":"Path Sum II","memory":"44.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n\n        List<List<Integer>> res= new ArrayList<>();\n        helper(root, targetSum, res, new ArrayList<>());\n        return res;\n        \n    }\n\n    private void helper(TreeNode node, int targetSum, List<List<Integer>> res, List<Integer> curr){\n        if(node==null) return;\n\n        if(node.left==null && node.right==null && targetSum == node.val){\n            curr.add(node.val);\n            res.add(new ArrayList<>(curr));\n\n            curr.remove(curr.size()-1);\n            return;\n        }\n\n        int val = node.val;\n        curr.add(val);\n        helper(node.left, targetSum-node.val, res, curr);\n        helper(node.right, targetSum-node.val, res, curr);\n        curr.remove(curr.size()-1);\n\n    }     \n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}