{"id":854938346,"question_id":113,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1670232339,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/854938346/","is_pending":"Not Pending","title":"Path Sum II","memory":"43.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        if(root==null)\n            return res;\n            \n        List<Integer> list =new ArrayList<>();\n        list.add(root.val);\n        \n        helper(res, list, root, targetSum, root.val);\n        \n        return res;\n    }\n    \n    \n    private void helper(List<List<Integer>> res, List<Integer> list, TreeNode root, int targetSum, int curr){\n        \n        if(root==null)\n            return;\n        \n        if(curr==targetSum && root.left==null && root.right==null){\n            res.add(new ArrayList<>(list));\n        }\n        \n        if(root.left!=null){\n            list.add(root.left.val);\n            helper(res, list, root.left, targetSum, curr+root.left.val);\n            list.remove(list.size()-1);\n        }\n        \n        if(root.right!=null ){\n            list.add(root.right.val);\n            helper(res, list, root.right, targetSum, curr+root.right.val);\n            list.remove(list.size()-1);\n        }\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}