{"id":1078969718,"question_id":113,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1697697429,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1078969718/","is_pending":"Not Pending","title":"Path Sum II","memory":"43.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        List<List<Integer>> res = new ArrayList<>();\n\n        if(root==null)\n            return res;\n\n        helper(res, new ArrayList<>(), root, targetSum);\n\n        return res;\n    }\n\n    private void helper(List<List<Integer>> res, List<Integer> cur, TreeNode node, int target){\n\n        if(node==null)\n            return;\n\n\n        \n        cur.add(node.val);\n\n        if(node.left==null && node.right==null && target-node.val==0){\n            res.add(new ArrayList<>(cur));\n        }\n\n        if(node.left!=null){\n            helper(res, cur, node.left, target-node.val);\n        }\n\n        if(node.right!=null){\n            helper(res, cur, node.right, target-node.val);\n        }\n\n        cur.remove(cur.size()-1);\n\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}