{"id":964283498,"question_id":113,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1685959242,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/964283498/","is_pending":"Not Pending","title":"Path Sum II","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        \n        List<List<Integer>> res = new ArrayList<>();\n        \n        if(root==null)\n            return res;\n        \n        List<Integer> curr = new ArrayList<>();\n        \n        helper(root, curr, res, targetSum);\n        \n        return res;\n    }\n    \n    private void helper(TreeNode root, List<Integer> curr, List<List<Integer>> res, int target){\n        \n        if(root==null)\n            return;\n        \n        curr.add(root.val);\n        target-=root.val;\n        \n        if(root.left==null && root.right==null && target==0){\n            res.add(new ArrayList<>(curr));\n        }\n        \n        if(root.left!=null){\n            helper(root.left, curr, res, target);    \n        }\n        \n        if(root.right!=null){\n            helper(root.right, curr, res, target);    \n        }\n        \n        target+=root.val;\n        curr.remove(curr.size()-1);\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}