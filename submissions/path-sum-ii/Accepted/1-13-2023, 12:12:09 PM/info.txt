{"id":877198574,"question_id":113,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673583129,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/877198574/","is_pending":"Not Pending","title":"Path Sum II","memory":"43.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        if(root==null)\n            return res;\n        \n        helper(res, root, targetSum, new ArrayList<>());\n        return res;\n    }\n    \n    private void helper(List<List<Integer>> res, TreeNode curr, int targetSum, List<Integer> list){\n        \n        if(curr.left==null && curr.right==null){\n            int sum=0;\n            for(int i : list)\n                sum+=i;\n            System.out.println(curr.val + \" \" + sum);\n            if(curr.val+ sum==targetSum){\n                list.add(curr.val);\n                res.add(new ArrayList<>(list)); \n                list.remove(list.size()-1);\n            }\n        }\n        \n        list.add(curr.val);\n        \n        if(curr.left!=null){\n            helper(res, curr.left, targetSum, list);\n        }\n        if(curr.right!=null){\n            helper(res, curr.right, targetSum, list);\n        }\n        \n        list.remove(list.size()-1);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}