{"id":843026442,"question_id":46,"lang":"java","lang_name":"Java","time":"1 year, 7 months","timestamp":1668397894,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/843026442/","is_pending":"Not Pending","title":"Permutations","memory":"44.9 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> res= new ArrayList<>();\n        boolean[] visited = new boolean[nums.length];\n        helper(nums, res, new ArrayList<>(), visited);\n        return res;\n    }\n    \n    private void helper(int[] nums, List<List<Integer>> res, \n                        List<Integer> curr, boolean[] visited){\n        \n        if(curr.size()==nums.length){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n        \n        for(int i=0;i<nums.length; i++){\n            if(visited[i]==false){\n                visited[i]=true;\n                curr.add(nums[i]);\n                helper(nums, res, curr, visited);\n                curr.remove(curr.size()-1);\n                visited[i]=false;\n            }\n        }\n        \n        \n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}