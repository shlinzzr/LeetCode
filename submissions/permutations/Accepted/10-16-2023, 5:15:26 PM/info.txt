{"id":1076539116,"question_id":46,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1697447726,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1076539116/","is_pending":"Not Pending","title":"Permutations","memory":"43.8 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        int len = nums.length;\n\n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(nums, res, new ArrayList<>(), new boolean[len]);\n\n        return res;\n    }\n\n    private void helper(int[] nums, List<List<Integer>> res, List<Integer> curr, boolean[] seen){\n\n        if(curr.size()==nums.length){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n\n        for(int i=0; i<nums.length; i++){\n            if(!seen[i]){\n                seen[i]=true;\n                curr.add(nums[i]);\n                helper(nums, res, curr, seen);\n                seen[i]=false;\n                curr.remove(curr.size()-1);\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}