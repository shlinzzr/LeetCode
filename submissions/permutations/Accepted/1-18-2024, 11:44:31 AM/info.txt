{"id":1149375630,"question_id":46,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1705549471,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1149375630/","is_pending":"Not Pending","title":"Permutations","memory":"44.6 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        \n        helper(nums, new HashSet<>(), new ArrayList<>(), res);\n        \n        return res;\n    }\n    \n    private void helper(int[] nums, Set<Integer> seen, List<Integer> curr, List<List<Integer>> res){\n        \n        if(curr.size()==nums.length){\n            res.add( new ArrayList<>(curr));\n            return;\n        }\n        \n        for(int i=0; i<nums.length; i++){\n            if(seen.contains(nums[i]))\n                continue;\n            curr.add(nums[i]);\n            seen.add(nums[i]);\n            helper(nums, seen, curr, res);\n            curr.remove(curr.size()-1);\n            seen.remove(nums[i]);\n        }\n        \n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}