{"id":1247114202,"question_id":46,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1714627156,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1247114202/","is_pending":"Not Pending","title":"Permutations","memory":"44.6 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>>  res= new ArrayList<>();\n        int len = nums.length;\n        boolean[] seen = new boolean[len];\n        helper(nums, new ArrayList<>(), seen, res);\n        return res;\n    }\n\n    private void helper(int[] nums, List<Integer> curr, boolean[]seen, List<List<Integer>>  res){\n\n        if(curr.size() == nums.length){\n            res.add(new ArrayList<>(curr));\n            return;\n        }\n\n        for(int i=0; i<nums.length; i++){\n\n            if(seen[i]) continue;\n            seen[i] = true;\n            curr.add(nums[i]);\n            helper(nums, curr, seen, res);\n            curr.remove(curr.size()-1);\n            seen[i] = false;\n        }\n\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}