{"id":705371405,"question_id":46,"lang":"java","lang_name":"Java","time":"2Â years","timestamp":1653298604,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/705371405/","is_pending":"Not Pending","title":"Permutations","memory":"44.7 MB","code":"class Solution {\n    \n    List<List<Integer>> res = new ArrayList<>();\n    List<Integer> temp = new ArrayList<>();\n    \n    public List<List<Integer>> permute(int[] nums) {\n             \n        dfs(nums, 0);\n        return res;\n        \n    }\n    \n    private void dfs(int[] nums, int len){\n        \n        if( temp.size() == nums.length ){\n            res.add(new ArrayList<>(temp));\n        }\n                     \n        for(int i=0; i<nums.length; i++){\n            \n            if(!temp.contains(nums[i])) {\n                temp.add(nums[i]);\n                dfs(nums, len+1);\n                temp.remove(temp.size()-1);\n             \n            }\n            \n        }\n        \n        \n        \n    }\n}\n","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}